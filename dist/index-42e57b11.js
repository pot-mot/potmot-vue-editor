import { ref as Le, reactive as Qr, computed as vn, defineComponent as Bo, onMounted as yn, onBeforeUnmount as da, openBlock as qe, createElementBlock as Ge, Fragment as mr, renderList as bn, unref as it, normalizeStyle as ji, toDisplayString as Xe, watch as Ar, nextTick as Ut, createElementVNode as Ne, normalizeClass as vs, withModifiers as hr, withDirectives as Ir, createCommentVNode as Ci, vShow as Un, vModelText as ys, createVNode as q0, isRef as xs, createTextVNode as b1, pushScopeId as v1, popScopeId as y1 } from "vue";
const Yi = () => "ontouchstart" in document, _s = {
  mounted(e) {
    Yi() ? e.addEventListener("touchstart", (t) => {
      if (t.target != e)
        return;
      t.preventDefault();
      const r = e.offsetLeft, n = e.offsetTop, i = t.touches[0].clientX, a = t.touches[0].clientY, s = (l) => {
        const u = l.touches[0].clientX, d = l.touches[0].clientY, p = u - i + r, b = d - a + n;
        e.style.top = b + "px", e.style.left = p + "px";
      }, o = () => {
        document.removeEventListener("touchmove", s), document.removeEventListener("touchend", o);
      };
      document.addEventListener("touchmove", s), document.addEventListener("touchend", o);
    }) : e.onmousedown = (t) => {
      if (t.target != e)
        return;
      t.preventDefault();
      const r = e.offsetLeft, n = e.offsetTop, i = t.clientX, a = t.clientY, s = (l) => {
        const u = l.clientX, d = l.clientY, p = u - i + r, b = d - a + n;
        e.style.top = b + "px", e.style.left = p + "px";
      }, o = () => {
        document.removeEventListener("mousemove", s), document.removeEventListener("mouseup", o);
      };
      document.addEventListener("mousemove", s), document.addEventListener("mouseup", o);
    };
  }
}, Yr = (e, t, r) => e > r ? r : e < t ? t : e, Vr = (e, t, r, n = r) => t.slice(0, r) + e + t.slice(n), x1 = (e) => {
  const t = /* @__PURE__ */ new Map();
  for (let r = 0; r < e.length; r++)
    for (let n = 0; n < e[r].arguments.length; n++)
      t.set(e[r].arguments[n].name, e[r].arguments[n].getRef());
  return t;
}, Dc = ["javascript", "typescript", "css", "css-extras", "html", "less", "sass", "scss", "svg", "icon", "markup", "http", "uri", "url", "c", "cpp", "cmake", "objc", "rust", "go", "php", "phpdoc", "perl", "java", "javadoc", "groovy", "kotlin", "kt", "kts", "scala", "latex", "tex", "matlab", "sql", "graphql", "mongodb", "erlang", "lua", "python", "py", "django", "jinja2", "csharp", "dotnet", "cobol", "makefile", "json", "json5", "jsonp", "xml", "yaml", "yml", "ini", "toml", "bash", "shell", "batch", "docker", "dockerfile", "git", "vim", "dns-zone", "log", "qml", "scheme", "swift"].sort(), Fc = /* @__PURE__ */ (/* @__PURE__ */ new Map()).set("流程图", {
  name: "graph",
  example: `graph TD;
    A-->B;
    A-->C;
    B-->D;
    C-->D;`
}).set("时序图", {
  name: "sequenceDiagram",
  example: `sequenceDiagram
    participant Alice
    participant Bob
    Alice->>John: Hello John, how are you?
    loop Healthcheck
        John->>John: Fight against hypochondria
    end
    Note right of John: Rational thoughts <br/>prevail!
    John-->>Alice: Great!
    John->>Bob: How about you?
    Bob-->>John: Jolly good!`
}).set("甘特图", {
  name: "gantt",
  example: `gantt
dateFormat  YYYY-MM-DD
title Adding GANTT diagram to mermaid
excludes weekdays 2014-01-10

section A section
Completed task            :done,    des1, 2014-01-06,2014-01-08
Active task               :active,  des2, 2014-01-09, 3d
Future task               :         des3, after des2, 5d
Future task2               :         des4, after des3, 5d`
}).set("类图", {
  name: "classDiagram",
  example: `classDiagram
	Class01 <|-- AveryLongClass : Cool
	Class03 *-- Class04
	Class05 o-- Class06
	Class07 .. Class08
	Class09 --> C2 : Where am i?
	Class09 --* C3
	Class09 --|> Class07
	Class07 : equals()
	Class07 : Object[] elementData
	Class01 : size()
	Class01 : int chimp
	Class01 : int gorilla
	Class08 <--> C2: Cool label`
}).set("Git 图", {
  name: "gitGraph",
  example: `gitGraph
   commit
   commit
   branch develop
   checkout develop
   commit
   commit
   checkout main
   merge develop
   commit
   commit`
}).set("实体关系图", {
  name: "erDiagram",
  example: `erDiagram
    CUSTOMER ||--o{ ORDER : places
    ORDER ||--|{ LINE-ITEM : contains
    CUSTOMER }|..|{ DELIVERY-ADDRESS : uses`
}).set("旅程图", {
  name: "journey",
  example: `journey
    title My working day
    section Go to work
      Make tea: 5: Me
      Go upstairs: 3: Me
      Do work: 1: Me, Cat
    section Go home
      Go downstairs: 5: Me
      Sit down: 5: Me`
}).set("状态图", {
  name: "stateDiagram-v2",
  example: `stateDiagram-v2
[*] --> Still
Still --> [*]
Still --> Moving
Moving --> Still
Moving --> Crash
Crash --> [*]`
}).set("饼图", {
  name: "pie",
  example: `pie
"Dogs" : 386
"Cats" : 85
"Rats" : 15`
}), G0 = Array.from(Fc.keys()), _1 = [{
  key: "#",
  ctrl: !0,
  label: "标题",
  insert: (e) => {
    let t = e.get("titleLevel").value, r = e.get("titleMinimumThreshold").value;
    r = Yr(r, 1, 6), t = Yr(t, 1, r);
    let n = "";
    for (let i = 0; i < t; i++)
      n += "#";
    return t < r && e.get("titleLevel").value++, {
      before: n + " ",
      after: ""
    };
  },
  arguments: [{
    name: "titleLevel",
    label: "级别",
    type: "number",
    getRef: () => Le(1),
    inputLength: 1
  }, {
    name: "titleMinimumThreshold",
    label: "最小级别",
    type: "number",
    getRef: () => Le(4),
    inputLength: 1
  }],
  replace: !0,
  reject: !0,
  prevent: !0
}, {
  key: "|",
  ctrl: !0,
  label: "表格",
  insert: (e) => {
    let t = e.get("tableHeight").value, r = e.get("tableWidth").value, n = "|", i = "|", a = "  ";
    t = Yr(t, 1, 99), r = Yr(r, 1, 99);
    for (let o = 0; o < r; o++)
      n += a + "|", i += "----|";
    n += `
`, i += `
`;
    let s = n.slice(2) + i;
    for (let o = 0; o < t; o++)
      s += n;
    return {
      before: "| ",
      after: s
    };
  },
  arguments: [{
    name: "tableHeight",
    label: "高度",
    type: "number",
    getRef: () => Le(3),
    inputLength: 2
  }, {
    name: "tableWidth",
    label: "宽度",
    type: "number",
    getRef: () => Le(2),
    inputLength: 2
  }],
  reject: !0,
  prevent: !0
}, {
  key: "1",
  label: "有序列表",
  insert: (e) => {
    let t = e.get("orderedListLength").value, r = e.get("orderedListStart").value;
    t = Yr(t, 1, 99), r = Yr(r, 0, 9999);
    let n = `
`;
    for (let i = 0; i < t - 1; i++)
      n += i + r + 1 + `. 
`;
    return {
      before: r + ". ",
      after: " " + n
    };
  },
  arguments: [{
    name: "orderedListLength",
    label: "项数",
    type: "number",
    getRef: () => Le(3),
    inputLength: 2
  }, {
    name: "orderedListStart",
    label: "首项",
    type: "number",
    getRef: () => Le(1),
    inputLength: 4
  }],
  reject: !0,
  prevent: !0
}, {
  key: "-",
  label: "无序列表",
  insert: (e) => {
    let t = e.get("unorderedListLength").value;
    t = Yr(t, 1, 99);
    let r = "";
    for (let n = 0; n < t - 1; n++)
      r += `
- `;
    return {
      before: "- ",
      after: " " + r + `
`
    };
  },
  arguments: [{
    name: "unorderedListLength",
    label: "项数",
    type: "number",
    getRef: () => Le(3),
    inputLength: 2
  }],
  reject: !0,
  prevent: !0
}, {
  key: "@",
  ctrl: !0,
  label: "链接",
  insert: (e) => {
    const t = e.get("linkLabel").value, r = e.get("linkUrl").value;
    return t.length > 0 && r.length > 0 ? {
      before: "[" + t + "](" + r + ")",
      after: ""
    } : {
      before: "[" + t + "](" + r,
      after: ")"
    };
  },
  arguments: [{
    name: "linkLabel",
    label: "标题",
    type: "string",
    getRef: () => Le("")
  }, {
    name: "linkUrl",
    label: "URL",
    type: "string",
    getRef: () => Le(""),
    styleWidth: "12em"
  }],
  reject: !0,
  prevent: !0
}, {
  label: "图片",
  insert: (e) => {
    const t = e.get("pictureName").value, r = e.get("pictureUrl").value;
    return t.length > 0 && r.length > 0 ? {
      before: "![" + t + "](" + r + ")",
      after: ""
    } : {
      before: "![" + t + "](" + r,
      after: ")"
    };
  },
  arguments: [{
    name: "pictureName",
    label: "名称",
    type: "string",
    getRef: () => Le("")
  }, {
    name: "pictureUrl",
    label: "URL",
    type: "string",
    getRef: () => Le(""),
    styleWidth: "12em"
  }],
  reject: !0,
  prevent: !0
}], w1 = [{
  key: "Enter",
  ctrl: !0,
  label: "换行",
  insert: () => ({
    before: "<br>",
    after: ""
  }),
  arguments: [],
  reject: !0,
  prevent: !0
}, {
  key: ["`", "~"],
  ctrl: !0,
  label: "代码块",
  insert: (e) => ({
    before: "```" + e.get("codeLanguage").value + `
`,
    after: "\n```"
  }),
  arguments: [{
    name: "codeLanguage",
    label: "语言",
    options: Dc,
    getRef: () => Le("")
  }],
  reject: !0,
  prevent: !0
}, {
  key: ["`", "~"],
  alt: !0,
  label: "mermaid图",
  insert: (e) => {
    let t = e.get("mermaidTypeName").value, r = e.get("mermaidExample").value, n = Fc.get(t);
    return {
      before: "```mermaid\n" + (r == "生成" ? n.example : n.name) + `
`,
      after: "\n```"
    };
  },
  arguments: [{
    name: "mermaidTypeName",
    label: "图类型",
    options: G0,
    getRef: () => {
      let e = G0[0];
      return Le(e);
    }
  }, {
    name: "mermaidExample",
    label: "示例",
    options: ["", "生成"],
    getRef: () => Le("")
  }]
}, {
  label: "数学算式",
  key: "$",
  ctrl: !0,
  insert: () => ({
    before: `$$
`,
    after: `
$$`
  }),
  arguments: [],
  reject: !0,
  prevent: !0
}, {
  key: ":",
  ctrl: !0,
  label: "折叠块",
  insert: (e) => {
    const t = e.get("detailIsSummary").value;
    return {
      before: ":::" + (e.get("detailIsOpen").value == "展开" ? "+" : "") + t + `
`,
      after: `
:::`
    };
  },
  arguments: [{
    name: "detailIsSummary",
    label: "标识",
    type: "string",
    getRef: () => Le(""),
    styleWidth: "6em"
  }, {
    name: "detailIsOpen",
    label: "默认状态",
    getRef: () => Le("收起"),
    options: ["收起", "展开"]
  }],
  keepSelect: !0,
  reject: !0,
  prevent: !0
}, {
  ctrl: !0,
  key: "!",
  label: "标亮",
  insert: (e) => {
    const t = e.get("warningColor").value;
    return t == "red" ? {
      before: "!",
      after: "!"
    } : {
      before: "!(" + t + ")",
      after: "!"
    };
  },
  arguments: [{
    name: "warningColor",
    label: "颜色",
    type: "string",
    getRef: () => Le("red"),
    styleWidth: "4em"
  }],
  reject: !0,
  prevent: !0
}], S1 = (e = 200, t = () => {
}, r = () => {
}, n = () => {
}, i = () => {
}, a = () => ({
  text: "",
  scrollTop: 0,
  start: 0,
  end: 0
})) => {
  const s = Qr({
    // 历史记录相关
    stack: [],
    stackTop: 0
  }), o = (m = a()) => {
    r(p.value, s), s.stackTop >= e && s.stack.splice(0, e / 2), s.stackTop++, s.stack[s.stackTop] = m, t(p.value, s), s.stackTop < s.stack.length && s.stack.splice(s.stackTop + 1);
  }, l = () => {
    s.stackTop > 0 ? (r(p.value, s), s.stackTop--, t(p.value, s)) : n();
  }, u = l, d = () => {
    s.stackTop < s.stack.length - 1 ? (r(p.value, s), s.stackTop++, t(p.value, s)) : i();
  }, p = vn({
    get() {
      return s.stack[s.stackTop];
    },
    set(m) {
      r(s.stack[s.stackTop], s), s.stack[s.stackTop] = m, t(s.stack[s.stackTop], s);
    }
  });
  return {
    historyData: s,
    redo: d,
    undo: u,
    push: o,
    pop: l,
    clear: () => {
      s.stack = [], s.stackTop = -1;
    },
    top: p
  };
}, ws = (e, t) => {
  if (e.ctrl != null && e.ctrl != t.ctrlKey || e.alt != null && e.alt != t.altKey || e.shift != null && e.shift != t.shiftKey)
    return !1;
  if (e.key instanceof Array) {
    for (const r of e.key)
      if (r == t.key)
        return !0;
  } else if (e.key != null && e.key == t.key)
    return !0;
  return !1;
}, k1 = {
  class: "outline"
}, T1 = ["onClick"], C1 = {
  name: "MarkdownOutline"
}, E1 = /* @__PURE__ */ Bo({
  ...C1,
  props: {
    target: {
      type: HTMLElement,
      required: !1,
      default: document.documentElement
    },
    policy: {
      type: String,
      required: !1,
      default: "offset"
    },
    click: {
      type: Function,
      required: !1
    },
    intervalTime: {
      type: Number,
      required: !1,
      default: 50
    },
    style: {
      type: Function,
      required: !1,
      default: (e) => "padding-left: " + (e - 0.5) + "em;"
    }
  },
  setup(e) {
    const t = e, r = vn(() => {
      let o = 7;
      for (const l of a.value)
        l.level < o && (o = l.level);
      return o;
    });
    function n(o) {
      const l = [], u = /<h([1-6]) id="(.*?)">(.*?)</g;
      let d;
      for (; d = u.exec(o); )
        l.push({
          level: Number.parseInt(d[1]),
          id: d[2],
          text: d[3]
        });
      return l;
    }
    let i = 0;
    yn(() => {
      i = setInterval(() => {
        a.value = n(t.target.innerHTML);
      }, t.intervalTime);
    }), da(() => {
      clearInterval(i);
    });
    let a = Le([]);
    const s = (o) => {
      var l;
      if (t.click && t.click(o), !!t.target) {
        if (t.policy == "anchor")
          (l = t.target.querySelector("#" + o)) == null || l.scrollIntoView();
        else if (t.policy == "offset") {
          const u = t.target.querySelector("#" + o);
          t.target.scrollTop = u.offsetTop - t.target.offsetTop;
        }
      }
    };
    return (o, l) => (qe(), Ge("ul", k1, [(qe(!0), Ge(mr, null, bn(it(a), (u) => (qe(), Ge("li", {
      key: u.id,
      style: ji(t.style(u.level - it(r))),
      onClick: (d) => s(u.id)
    }, Xe(u.text), 13, T1))), 128))]));
  }
});
const $c = (e, t) => {
  const r = e.__vccOpts || e;
  for (const [n, i] of t)
    r[n] = i;
  return r;
}, zc = /* @__PURE__ */ $c(E1, [["__scopeId", "data-v-ab1d47ef"]]);
function Pc() {
  return {
    async: !1,
    baseUrl: null,
    breaks: !1,
    extensions: null,
    gfm: !0,
    headerIds: !0,
    headerPrefix: "",
    highlight: null,
    langPrefix: "language-",
    mangle: !0,
    pedantic: !1,
    renderer: null,
    sanitize: !1,
    sanitizer: null,
    silent: !1,
    smartypants: !1,
    tokenizer: null,
    walkTokens: null,
    xhtml: !1
  };
}
let Nn = Pc();
function A1(e) {
  Nn = e;
}
const Uc = /[&<>"']/, I1 = new RegExp(Uc.source, "g"), Hc = /[<>"']|&(?!(#\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\w+);)/, R1 = new RegExp(Hc.source, "g"), L1 = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#39;"
}, W0 = (e) => L1[e];
function at(e, t) {
  if (t) {
    if (Uc.test(e))
      return e.replace(I1, W0);
  } else if (Hc.test(e))
    return e.replace(R1, W0);
  return e;
}
const O1 = /&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/ig;
function qc(e) {
  return e.replace(O1, (t, r) => (r = r.toLowerCase(), r === "colon" ? ":" : r.charAt(0) === "#" ? r.charAt(1) === "x" ? String.fromCharCode(parseInt(r.substring(2), 16)) : String.fromCharCode(+r.substring(1)) : ""));
}
const N1 = /(^|[^\[])\^/g;
function De(e, t) {
  e = typeof e == "string" ? e : e.source, t = t || "";
  const r = {
    replace: (n, i) => (i = i.source || i, i = i.replace(N1, "$1"), e = e.replace(n, i), r),
    getRegex: () => new RegExp(e, t)
  };
  return r;
}
const M1 = /[^\w:]/g, B1 = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;
function j0(e, t, r) {
  if (e) {
    let n;
    try {
      n = decodeURIComponent(qc(r)).replace(M1, "").toLowerCase();
    } catch {
      return null;
    }
    if (n.indexOf("javascript:") === 0 || n.indexOf("vbscript:") === 0 || n.indexOf("data:") === 0)
      return null;
  }
  t && !B1.test(r) && (r = z1(t, r));
  try {
    r = encodeURI(r).replace(/%25/g, "%");
  } catch {
    return null;
  }
  return r;
}
const Ei = {}, D1 = /^[^:]+:\/*[^/]*$/, F1 = /^([^:]+:)[\s\S]*$/, $1 = /^([^:]+:\/*[^/]*)[\s\S]*$/;
function z1(e, t) {
  Ei[" " + e] || (D1.test(e) ? Ei[" " + e] = e + "/" : Ei[" " + e] = Vi(e, "/", !0)), e = Ei[" " + e];
  const r = e.indexOf(":") === -1;
  return t.substring(0, 2) === "//" ? r ? t : e.replace(F1, "$1") + t : t.charAt(0) === "/" ? r ? t : e.replace($1, "$1") + t : e + t;
}
const pa = { exec: function() {
} };
function Vt(e) {
  let t = 1, r, n;
  for (; t < arguments.length; t++) {
    r = arguments[t];
    for (n in r)
      Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
  }
  return e;
}
function Y0(e, t) {
  const r = e.replace(/\|/g, (a, s, o) => {
    let l = !1, u = s;
    for (; --u >= 0 && o[u] === "\\"; )
      l = !l;
    return l ? "|" : " |";
  }), n = r.split(/ \|/);
  let i = 0;
  if (n[0].trim() || n.shift(), n.length > 0 && !n[n.length - 1].trim() && n.pop(), n.length > t)
    n.splice(t);
  else
    for (; n.length < t; )
      n.push("");
  for (; i < n.length; i++)
    n[i] = n[i].trim().replace(/\\\|/g, "|");
  return n;
}
function Vi(e, t, r) {
  const n = e.length;
  if (n === 0)
    return "";
  let i = 0;
  for (; i < n; ) {
    const a = e.charAt(n - i - 1);
    if (a === t && !r)
      i++;
    else if (a !== t && r)
      i++;
    else
      break;
  }
  return e.slice(0, n - i);
}
function P1(e, t) {
  if (e.indexOf(t[1]) === -1)
    return -1;
  const r = e.length;
  let n = 0, i = 0;
  for (; i < r; i++)
    if (e[i] === "\\")
      i++;
    else if (e[i] === t[0])
      n++;
    else if (e[i] === t[1] && (n--, n < 0))
      return i;
  return -1;
}
function Gc(e) {
  e && e.sanitize && !e.silent && console.warn("marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options");
}
function V0(e, t) {
  if (t < 1)
    return "";
  let r = "";
  for (; t > 1; )
    t & 1 && (r += e), t >>= 1, e += e;
  return r + e;
}
function X0(e, t, r, n) {
  const i = t.href, a = t.title ? at(t.title) : null, s = e[1].replace(/\\([\[\]])/g, "$1");
  if (e[0].charAt(0) !== "!") {
    n.state.inLink = !0;
    const o = {
      type: "link",
      raw: r,
      href: i,
      title: a,
      text: s,
      tokens: n.inlineTokens(s)
    };
    return n.state.inLink = !1, o;
  }
  return {
    type: "image",
    raw: r,
    href: i,
    title: a,
    text: at(s)
  };
}
function U1(e, t) {
  const r = e.match(/^(\s+)(?:```)/);
  if (r === null)
    return t;
  const n = r[1];
  return t.split(`
`).map((i) => {
    const a = i.match(/^\s+/);
    if (a === null)
      return i;
    const [s] = a;
    return s.length >= n.length ? i.slice(n.length) : i;
  }).join(`
`);
}
class Do {
  constructor(t) {
    this.options = t || Nn;
  }
  space(t) {
    const r = this.rules.block.newline.exec(t);
    if (r && r[0].length > 0)
      return {
        type: "space",
        raw: r[0]
      };
  }
  code(t) {
    const r = this.rules.block.code.exec(t);
    if (r) {
      const n = r[0].replace(/^ {1,4}/gm, "");
      return {
        type: "code",
        raw: r[0],
        codeBlockStyle: "indented",
        text: this.options.pedantic ? n : Vi(n, `
`)
      };
    }
  }
  fences(t) {
    const r = this.rules.block.fences.exec(t);
    if (r) {
      const n = r[0], i = U1(n, r[3] || "");
      return {
        type: "code",
        raw: n,
        lang: r[2] ? r[2].trim().replace(this.rules.inline._escapes, "$1") : r[2],
        text: i
      };
    }
  }
  heading(t) {
    const r = this.rules.block.heading.exec(t);
    if (r) {
      let n = r[2].trim();
      if (/#$/.test(n)) {
        const i = Vi(n, "#");
        (this.options.pedantic || !i || / $/.test(i)) && (n = i.trim());
      }
      return {
        type: "heading",
        raw: r[0],
        depth: r[1].length,
        text: n,
        tokens: this.lexer.inline(n)
      };
    }
  }
  hr(t) {
    const r = this.rules.block.hr.exec(t);
    if (r)
      return {
        type: "hr",
        raw: r[0]
      };
  }
  blockquote(t) {
    const r = this.rules.block.blockquote.exec(t);
    if (r) {
      const n = r[0].replace(/^ *>[ \t]?/gm, ""), i = this.lexer.state.top;
      this.lexer.state.top = !0;
      const a = this.lexer.blockTokens(n);
      return this.lexer.state.top = i, {
        type: "blockquote",
        raw: r[0],
        tokens: a,
        text: n
      };
    }
  }
  list(t) {
    let r = this.rules.block.list.exec(t);
    if (r) {
      let n, i, a, s, o, l, u, d, p, b, m, _, k = r[1].trim();
      const L = k.length > 1, A = {
        type: "list",
        raw: "",
        ordered: L,
        start: L ? +k.slice(0, -1) : "",
        loose: !1,
        items: []
      };
      k = L ? `\\d{1,9}\\${k.slice(-1)}` : `\\${k}`, this.options.pedantic && (k = L ? k : "[*+-]");
      const v = new RegExp(`^( {0,3}${k})((?:[	 ][^\\n]*)?(?:\\n|$))`);
      for (; t && (_ = !1, !(!(r = v.exec(t)) || this.rules.block.hr.test(t))); ) {
        if (n = r[0], t = t.substring(n.length), d = r[2].split(`
`, 1)[0].replace(/^\t+/, (C) => " ".repeat(3 * C.length)), p = t.split(`
`, 1)[0], this.options.pedantic ? (s = 2, m = d.trimLeft()) : (s = r[2].search(/[^ ]/), s = s > 4 ? 1 : s, m = d.slice(s), s += r[1].length), l = !1, !d && /^ *$/.test(p) && (n += p + `
`, t = t.substring(p.length + 1), _ = !0), !_) {
          const C = new RegExp(`^ {0,${Math.min(3, s - 1)}}(?:[*+-]|\\d{1,9}[.)])((?:[ 	][^\\n]*)?(?:\\n|$))`), I = new RegExp(`^ {0,${Math.min(3, s - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)`), R = new RegExp(`^ {0,${Math.min(3, s - 1)}}(?:\`\`\`|~~~)`), N = new RegExp(`^ {0,${Math.min(3, s - 1)}}#`);
          for (; t && (b = t.split(`
`, 1)[0], p = b, this.options.pedantic && (p = p.replace(/^ {1,4}(?=( {4})*[^ ])/g, "  ")), !(R.test(p) || N.test(p) || C.test(p) || I.test(t))); ) {
            if (p.search(/[^ ]/) >= s || !p.trim())
              m += `
` + p.slice(s);
            else {
              if (l || d.search(/[^ ]/) >= 4 || R.test(d) || N.test(d) || I.test(d))
                break;
              m += `
` + p;
            }
            !l && !p.trim() && (l = !0), n += b + `
`, t = t.substring(b.length + 1), d = p.slice(s);
          }
        }
        A.loose || (u ? A.loose = !0 : /\n *\n *$/.test(n) && (u = !0)), this.options.gfm && (i = /^\[[ xX]\] /.exec(m), i && (a = i[0] !== "[ ] ", m = m.replace(/^\[[ xX]\] +/, ""))), A.items.push({
          type: "list_item",
          raw: n,
          task: !!i,
          checked: a,
          loose: !1,
          text: m
        }), A.raw += n;
      }
      A.items[A.items.length - 1].raw = n.trimRight(), A.items[A.items.length - 1].text = m.trimRight(), A.raw = A.raw.trimRight();
      const S = A.items.length;
      for (o = 0; o < S; o++)
        if (this.lexer.state.top = !1, A.items[o].tokens = this.lexer.blockTokens(A.items[o].text, []), !A.loose) {
          const C = A.items[o].tokens.filter((R) => R.type === "space"), I = C.length > 0 && C.some((R) => /\n.*\n/.test(R.raw));
          A.loose = I;
        }
      if (A.loose)
        for (o = 0; o < S; o++)
          A.items[o].loose = !0;
      return A;
    }
  }
  html(t) {
    const r = this.rules.block.html.exec(t);
    if (r) {
      const n = {
        type: "html",
        raw: r[0],
        pre: !this.options.sanitizer && (r[1] === "pre" || r[1] === "script" || r[1] === "style"),
        text: r[0]
      };
      if (this.options.sanitize) {
        const i = this.options.sanitizer ? this.options.sanitizer(r[0]) : at(r[0]);
        n.type = "paragraph", n.text = i, n.tokens = this.lexer.inline(i);
      }
      return n;
    }
  }
  def(t) {
    const r = this.rules.block.def.exec(t);
    if (r) {
      const n = r[1].toLowerCase().replace(/\s+/g, " "), i = r[2] ? r[2].replace(/^<(.*)>$/, "$1").replace(this.rules.inline._escapes, "$1") : "", a = r[3] ? r[3].substring(1, r[3].length - 1).replace(this.rules.inline._escapes, "$1") : r[3];
      return {
        type: "def",
        tag: n,
        raw: r[0],
        href: i,
        title: a
      };
    }
  }
  table(t) {
    const r = this.rules.block.table.exec(t);
    if (r) {
      const n = {
        type: "table",
        header: Y0(r[1]).map((i) => ({ text: i })),
        align: r[2].replace(/^ *|\| *$/g, "").split(/ *\| */),
        rows: r[3] && r[3].trim() ? r[3].replace(/\n[ \t]*$/, "").split(`
`) : []
      };
      if (n.header.length === n.align.length) {
        n.raw = r[0];
        let i = n.align.length, a, s, o, l;
        for (a = 0; a < i; a++)
          /^ *-+: *$/.test(n.align[a]) ? n.align[a] = "right" : /^ *:-+: *$/.test(n.align[a]) ? n.align[a] = "center" : /^ *:-+ *$/.test(n.align[a]) ? n.align[a] = "left" : n.align[a] = null;
        for (i = n.rows.length, a = 0; a < i; a++)
          n.rows[a] = Y0(n.rows[a], n.header.length).map((u) => ({ text: u }));
        for (i = n.header.length, s = 0; s < i; s++)
          n.header[s].tokens = this.lexer.inline(n.header[s].text);
        for (i = n.rows.length, s = 0; s < i; s++)
          for (l = n.rows[s], o = 0; o < l.length; o++)
            l[o].tokens = this.lexer.inline(l[o].text);
        return n;
      }
    }
  }
  lheading(t) {
    const r = this.rules.block.lheading.exec(t);
    if (r)
      return {
        type: "heading",
        raw: r[0],
        depth: r[2].charAt(0) === "=" ? 1 : 2,
        text: r[1],
        tokens: this.lexer.inline(r[1])
      };
  }
  paragraph(t) {
    const r = this.rules.block.paragraph.exec(t);
    if (r) {
      const n = r[1].charAt(r[1].length - 1) === `
` ? r[1].slice(0, -1) : r[1];
      return {
        type: "paragraph",
        raw: r[0],
        text: n,
        tokens: this.lexer.inline(n)
      };
    }
  }
  text(t) {
    const r = this.rules.block.text.exec(t);
    if (r)
      return {
        type: "text",
        raw: r[0],
        text: r[0],
        tokens: this.lexer.inline(r[0])
      };
  }
  escape(t) {
    const r = this.rules.inline.escape.exec(t);
    if (r)
      return {
        type: "escape",
        raw: r[0],
        text: at(r[1])
      };
  }
  tag(t) {
    const r = this.rules.inline.tag.exec(t);
    if (r)
      return !this.lexer.state.inLink && /^<a /i.test(r[0]) ? this.lexer.state.inLink = !0 : this.lexer.state.inLink && /^<\/a>/i.test(r[0]) && (this.lexer.state.inLink = !1), !this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\s|>)/i.test(r[0]) ? this.lexer.state.inRawBlock = !0 : this.lexer.state.inRawBlock && /^<\/(pre|code|kbd|script)(\s|>)/i.test(r[0]) && (this.lexer.state.inRawBlock = !1), {
        type: this.options.sanitize ? "text" : "html",
        raw: r[0],
        inLink: this.lexer.state.inLink,
        inRawBlock: this.lexer.state.inRawBlock,
        text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(r[0]) : at(r[0]) : r[0]
      };
  }
  link(t) {
    const r = this.rules.inline.link.exec(t);
    if (r) {
      const n = r[2].trim();
      if (!this.options.pedantic && /^</.test(n)) {
        if (!/>$/.test(n))
          return;
        const s = Vi(n.slice(0, -1), "\\");
        if ((n.length - s.length) % 2 === 0)
          return;
      } else {
        const s = P1(r[2], "()");
        if (s > -1) {
          const l = (r[0].indexOf("!") === 0 ? 5 : 4) + r[1].length + s;
          r[2] = r[2].substring(0, s), r[0] = r[0].substring(0, l).trim(), r[3] = "";
        }
      }
      let i = r[2], a = "";
      if (this.options.pedantic) {
        const s = /^([^'"]*[^\s])\s+(['"])(.*)\2/.exec(i);
        s && (i = s[1], a = s[3]);
      } else
        a = r[3] ? r[3].slice(1, -1) : "";
      return i = i.trim(), /^</.test(i) && (this.options.pedantic && !/>$/.test(n) ? i = i.slice(1) : i = i.slice(1, -1)), X0(r, {
        href: i && i.replace(this.rules.inline._escapes, "$1"),
        title: a && a.replace(this.rules.inline._escapes, "$1")
      }, r[0], this.lexer);
    }
  }
  reflink(t, r) {
    let n;
    if ((n = this.rules.inline.reflink.exec(t)) || (n = this.rules.inline.nolink.exec(t))) {
      let i = (n[2] || n[1]).replace(/\s+/g, " ");
      if (i = r[i.toLowerCase()], !i) {
        const a = n[0].charAt(0);
        return {
          type: "text",
          raw: a,
          text: a
        };
      }
      return X0(n, i, n[0], this.lexer);
    }
  }
  emStrong(t, r, n = "") {
    let i = this.rules.inline.emStrong.lDelim.exec(t);
    if (!i || i[3] && n.match(/[\p{L}\p{N}]/u))
      return;
    const a = i[1] || i[2] || "";
    if (!a || a && (n === "" || this.rules.inline.punctuation.exec(n))) {
      const s = i[0].length - 1;
      let o, l, u = s, d = 0;
      const p = i[0][0] === "*" ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;
      for (p.lastIndex = 0, r = r.slice(-1 * t.length + s); (i = p.exec(r)) != null; ) {
        if (o = i[1] || i[2] || i[3] || i[4] || i[5] || i[6], !o)
          continue;
        if (l = o.length, i[3] || i[4]) {
          u += l;
          continue;
        } else if ((i[5] || i[6]) && s % 3 && !((s + l) % 3)) {
          d += l;
          continue;
        }
        if (u -= l, u > 0)
          continue;
        l = Math.min(l, l + u + d);
        const b = t.slice(0, s + i.index + (i[0].length - o.length) + l);
        if (Math.min(s, l) % 2) {
          const _ = b.slice(1, -1);
          return {
            type: "em",
            raw: b,
            text: _,
            tokens: this.lexer.inlineTokens(_)
          };
        }
        const m = b.slice(2, -2);
        return {
          type: "strong",
          raw: b,
          text: m,
          tokens: this.lexer.inlineTokens(m)
        };
      }
    }
  }
  codespan(t) {
    const r = this.rules.inline.code.exec(t);
    if (r) {
      let n = r[2].replace(/\n/g, " ");
      const i = /[^ ]/.test(n), a = /^ /.test(n) && / $/.test(n);
      return i && a && (n = n.substring(1, n.length - 1)), n = at(n, !0), {
        type: "codespan",
        raw: r[0],
        text: n
      };
    }
  }
  br(t) {
    const r = this.rules.inline.br.exec(t);
    if (r)
      return {
        type: "br",
        raw: r[0]
      };
  }
  del(t) {
    const r = this.rules.inline.del.exec(t);
    if (r)
      return {
        type: "del",
        raw: r[0],
        text: r[2],
        tokens: this.lexer.inlineTokens(r[2])
      };
  }
  autolink(t, r) {
    const n = this.rules.inline.autolink.exec(t);
    if (n) {
      let i, a;
      return n[2] === "@" ? (i = at(this.options.mangle ? r(n[1]) : n[1]), a = "mailto:" + i) : (i = at(n[1]), a = i), {
        type: "link",
        raw: n[0],
        text: i,
        href: a,
        tokens: [
          {
            type: "text",
            raw: i,
            text: i
          }
        ]
      };
    }
  }
  url(t, r) {
    let n;
    if (n = this.rules.inline.url.exec(t)) {
      let i, a;
      if (n[2] === "@")
        i = at(this.options.mangle ? r(n[0]) : n[0]), a = "mailto:" + i;
      else {
        let s;
        do
          s = n[0], n[0] = this.rules.inline._backpedal.exec(n[0])[0];
        while (s !== n[0]);
        i = at(n[0]), n[1] === "www." ? a = "http://" + n[0] : a = n[0];
      }
      return {
        type: "link",
        raw: n[0],
        text: i,
        href: a,
        tokens: [
          {
            type: "text",
            raw: i,
            text: i
          }
        ]
      };
    }
  }
  inlineText(t, r) {
    const n = this.rules.inline.text.exec(t);
    if (n) {
      let i;
      return this.lexer.state.inRawBlock ? i = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(n[0]) : at(n[0]) : n[0] : i = at(this.options.smartypants ? r(n[0]) : n[0]), {
        type: "text",
        raw: n[0],
        text: i
      };
    }
  }
}
const de = {
  newline: /^(?: *(?:\n|$))+/,
  code: /^( {4}[^\n]+(?:\n(?: *(?:\n|$))*)?)+/,
  fences: /^ {0,3}(`{3,}(?=[^`\n]*\n)|~{3,})([^\n]*)\n(?:|([\s\S]*?)\n)(?: {0,3}\1[~`]* *(?=\n|$)|$)/,
  hr: /^ {0,3}((?:-[\t ]*){3,}|(?:_[ \t]*){3,}|(?:\*[ \t]*){3,})(?:\n+|$)/,
  heading: /^ {0,3}(#{1,6})(?=\s|$)(.*)(?:\n+|$)/,
  blockquote: /^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/,
  list: /^( {0,3}bull)([ \t][^\n]+?)?(?:\n|$)/,
  html: "^ {0,3}(?:<(script|pre|style|textarea)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?(?:\\?>\\n*|$)|<![A-Z][\\s\\S]*?(?:>\\n*|$)|<!\\[CDATA\\[[\\s\\S]*?(?:\\]\\]>\\n*|$)|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:(?:\\n *)+\\n|$)|<(?!script|pre|style|textarea)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$)|</(?!script|pre|style|textarea)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$))",
  def: /^ {0,3}\[(label)\]: *(?:\n *)?([^<\s][^\s]*|<.*?>)(?:(?: +(?:\n *)?| *\n *)(title))? *(?:\n+|$)/,
  table: pa,
  lheading: /^((?:.|\n(?!\n))+?)\n {0,3}(=+|-+) *(?:\n+|$)/,
  // regex template, placeholders will be replaced according to different paragraph
  // interruption rules of commonmark and the original markdown spec:
  _paragraph: /^([^\n]+(?:\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\n)[^\n]+)*)/,
  text: /^[^\n]+/
};
de._label = /(?!\s*\])(?:\\.|[^\[\]\\])+/;
de._title = /(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/;
de.def = De(de.def).replace("label", de._label).replace("title", de._title).getRegex();
de.bullet = /(?:[*+-]|\d{1,9}[.)])/;
de.listItemStart = De(/^( *)(bull) */).replace("bull", de.bullet).getRegex();
de.list = De(de.list).replace(/bull/g, de.bullet).replace("hr", "\\n+(?=\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$))").replace("def", "\\n+(?=" + de.def.source + ")").getRegex();
de._tag = "address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul";
de._comment = /<!--(?!-?>)[\s\S]*?(?:-->|$)/;
de.html = De(de.html, "i").replace("comment", de._comment).replace("tag", de._tag).replace("attribute", / +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex();
de.paragraph = De(de._paragraph).replace("hr", de.hr).replace("heading", " {0,3}#{1,6} ").replace("|lheading", "").replace("|table", "").replace("blockquote", " {0,3}>").replace("fences", " {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list", " {0,3}(?:[*+-]|1[.)]) ").replace("html", "</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag", de._tag).getRegex();
de.blockquote = De(de.blockquote).replace("paragraph", de.paragraph).getRegex();
de.normal = Vt({}, de);
de.gfm = Vt({}, de.normal, {
  table: "^ *([^\\n ].*\\|.*)\\n {0,3}(?:\\| *)?(:?-+:? *(?:\\| *:?-+:? *)*)(?:\\| *)?(?:\\n((?:(?! *\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)"
  // Cells
});
de.gfm.table = De(de.gfm.table).replace("hr", de.hr).replace("heading", " {0,3}#{1,6} ").replace("blockquote", " {0,3}>").replace("code", " {4}[^\\n]").replace("fences", " {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list", " {0,3}(?:[*+-]|1[.)]) ").replace("html", "</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag", de._tag).getRegex();
de.gfm.paragraph = De(de._paragraph).replace("hr", de.hr).replace("heading", " {0,3}#{1,6} ").replace("|lheading", "").replace("table", de.gfm.table).replace("blockquote", " {0,3}>").replace("fences", " {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list", " {0,3}(?:[*+-]|1[.)]) ").replace("html", "</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag", de._tag).getRegex();
de.pedantic = Vt({}, de.normal, {
  html: De(
    `^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:"[^"]*"|'[^']*'|\\s[^'"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))`
  ).replace("comment", de._comment).replace(/tag/g, "(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b").getRegex(),
  def: /^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/,
  heading: /^(#{1,6})(.*)(?:\n+|$)/,
  fences: pa,
  // fences not supported
  lheading: /^(.+?)\n {0,3}(=+|-+) *(?:\n+|$)/,
  paragraph: De(de.normal._paragraph).replace("hr", de.hr).replace("heading", ` *#{1,6} *[^
]`).replace("lheading", de.lheading).replace("blockquote", " {0,3}>").replace("|fences", "").replace("|list", "").replace("|html", "").getRegex()
});
const ne = {
  escape: /^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,
  autolink: /^<(scheme:[^\s\x00-\x1f<>]*|email)>/,
  url: pa,
  tag: "^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>",
  // CDATA section
  link: /^!?\[(label)\]\(\s*(href)(?:\s+(title))?\s*\)/,
  reflink: /^!?\[(label)\]\[(ref)\]/,
  nolink: /^!?\[(ref)\](?:\[\])?/,
  reflinkSearch: "reflink|nolink(?!\\()",
  emStrong: {
    lDelim: /^(?:\*+(?:([punct_])|[^\s*]))|^_+(?:([punct*])|([^\s_]))/,
    //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.
    //          () Skip orphan inside strong                                      () Consume to delim     (1) #***                (2) a***#, a***                             (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a
    rDelimAst: /^(?:[^_*\\]|\\.)*?\_\_(?:[^_*\\]|\\.)*?\*(?:[^_*\\]|\\.)*?(?=\_\_)|(?:[^*\\]|\\.)+(?=[^*])|[punct_](\*+)(?=[\s]|$)|(?:[^punct*_\s\\]|\\.)(\*+)(?=[punct_\s]|$)|[punct_\s](\*+)(?=[^punct*_\s])|[\s](\*+)(?=[punct_])|[punct_](\*+)(?=[punct_])|(?:[^punct*_\s\\]|\\.)(\*+)(?=[^punct*_\s])/,
    rDelimUnd: /^(?:[^_*\\]|\\.)*?\*\*(?:[^_*\\]|\\.)*?\_(?:[^_*\\]|\\.)*?(?=\*\*)|(?:[^_\\]|\\.)+(?=[^_])|[punct*](\_+)(?=[\s]|$)|(?:[^punct*_\s\\]|\\.)(\_+)(?=[punct*\s]|$)|[punct*\s](\_+)(?=[^punct*_\s])|[\s](\_+)(?=[punct*])|[punct*](\_+)(?=[punct*])/
    // ^- Not allowed for _
  },
  code: /^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/,
  br: /^( {2,}|\\)\n(?!\s*$)/,
  del: pa,
  text: /^(`+|[^`])(?:(?= {2,}\n)|[\s\S]*?(?:(?=[\\<!\[`*_]|\b_|$)|[^ ](?= {2,}\n)))/,
  punctuation: /^([\spunctuation])/
};
ne._punctuation = "!\"#$%&'()+\\-.,/:;<=>?@\\[\\]`^{|}~";
ne.punctuation = De(ne.punctuation).replace(/punctuation/g, ne._punctuation).getRegex();
ne.blockSkip = /\[[^\]]*?\]\([^\)]*?\)|`[^`]*?`|<[^>]*?>/g;
ne.escapedEmSt = /(?:^|[^\\])(?:\\\\)*\\[*_]/g;
ne._comment = De(de._comment).replace("(?:-->|$)", "-->").getRegex();
ne.emStrong.lDelim = De(ne.emStrong.lDelim).replace(/punct/g, ne._punctuation).getRegex();
ne.emStrong.rDelimAst = De(ne.emStrong.rDelimAst, "g").replace(/punct/g, ne._punctuation).getRegex();
ne.emStrong.rDelimUnd = De(ne.emStrong.rDelimUnd, "g").replace(/punct/g, ne._punctuation).getRegex();
ne._escapes = /\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/g;
ne._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;
ne._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;
ne.autolink = De(ne.autolink).replace("scheme", ne._scheme).replace("email", ne._email).getRegex();
ne._attribute = /\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/;
ne.tag = De(ne.tag).replace("comment", ne._comment).replace("attribute", ne._attribute).getRegex();
ne._label = /(?:\[(?:\\.|[^\[\]\\])*\]|\\.|`[^`]*`|[^\[\]\\`])*?/;
ne._href = /<(?:\\.|[^\n<>\\])+>|[^\s\x00-\x1f]*/;
ne._title = /"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/;
ne.link = De(ne.link).replace("label", ne._label).replace("href", ne._href).replace("title", ne._title).getRegex();
ne.reflink = De(ne.reflink).replace("label", ne._label).replace("ref", de._label).getRegex();
ne.nolink = De(ne.nolink).replace("ref", de._label).getRegex();
ne.reflinkSearch = De(ne.reflinkSearch, "g").replace("reflink", ne.reflink).replace("nolink", ne.nolink).getRegex();
ne.normal = Vt({}, ne);
ne.pedantic = Vt({}, ne.normal, {
  strong: {
    start: /^__|\*\*/,
    middle: /^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,
    endAst: /\*\*(?!\*)/g,
    endUnd: /__(?!_)/g
  },
  em: {
    start: /^_|\*/,
    middle: /^()\*(?=\S)([\s\S]*?\S)\*(?!\*)|^_(?=\S)([\s\S]*?\S)_(?!_)/,
    endAst: /\*(?!\*)/g,
    endUnd: /_(?!_)/g
  },
  link: De(/^!?\[(label)\]\((.*?)\)/).replace("label", ne._label).getRegex(),
  reflink: De(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace("label", ne._label).getRegex()
});
ne.gfm = Vt({}, ne.normal, {
  escape: De(ne.escape).replace("])", "~|])").getRegex(),
  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,
  url: /^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/,
  _backpedal: /(?:[^?!.,:;*_'"~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'"~)]+(?!$))+/,
  del: /^(~~?)(?=[^\s~])([\s\S]*?[^\s~])\1(?=[^~]|$)/,
  text: /^([`~]+|[^`~])(?:(?= {2,}\n)|(?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)|[\s\S]*?(?:(?=[\\<!\[`*~_]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)))/
});
ne.gfm.url = De(ne.gfm.url, "i").replace("email", ne.gfm._extended_email).getRegex();
ne.breaks = Vt({}, ne.gfm, {
  br: De(ne.br).replace("{2,}", "*").getRegex(),
  text: De(ne.gfm.text).replace("\\b_", "\\b_| {2,}\\n").replace(/\{2,\}/g, "*").getRegex()
});
function H1(e) {
  return e.replace(/---/g, "—").replace(/--/g, "–").replace(/(^|[-\u2014/(\[{"\s])'/g, "$1‘").replace(/'/g, "’").replace(/(^|[-\u2014/(\[{\u2018\s])"/g, "$1“").replace(/"/g, "”").replace(/\.{3}/g, "…");
}
function K0(e) {
  let t = "", r, n;
  const i = e.length;
  for (r = 0; r < i; r++)
    n = e.charCodeAt(r), Math.random() > 0.5 && (n = "x" + n.toString(16)), t += "&#" + n + ";";
  return t;
}
let kn = class eo {
  constructor(t) {
    this.tokens = [], this.tokens.links = /* @__PURE__ */ Object.create(null), this.options = t || Nn, this.options.tokenizer = this.options.tokenizer || new Do(), this.tokenizer = this.options.tokenizer, this.tokenizer.options = this.options, this.tokenizer.lexer = this, this.inlineQueue = [], this.state = {
      inLink: !1,
      inRawBlock: !1,
      top: !0
    };
    const r = {
      block: de.normal,
      inline: ne.normal
    };
    this.options.pedantic ? (r.block = de.pedantic, r.inline = ne.pedantic) : this.options.gfm && (r.block = de.gfm, this.options.breaks ? r.inline = ne.breaks : r.inline = ne.gfm), this.tokenizer.rules = r;
  }
  /**
   * Expose Rules
   */
  static get rules() {
    return {
      block: de,
      inline: ne
    };
  }
  /**
   * Static Lex Method
   */
  static lex(t, r) {
    return new eo(r).lex(t);
  }
  /**
   * Static Lex Inline Method
   */
  static lexInline(t, r) {
    return new eo(r).inlineTokens(t);
  }
  /**
   * Preprocessing
   */
  lex(t) {
    t = t.replace(/\r\n|\r/g, `
`), this.blockTokens(t, this.tokens);
    let r;
    for (; r = this.inlineQueue.shift(); )
      this.inlineTokens(r.src, r.tokens);
    return this.tokens;
  }
  /**
   * Lexing
   */
  blockTokens(t, r = []) {
    this.options.pedantic ? t = t.replace(/\t/g, "    ").replace(/^ +$/gm, "") : t = t.replace(/^( *)(\t+)/gm, (o, l, u) => l + "    ".repeat(u.length));
    let n, i, a, s;
    for (; t; )
      if (!(this.options.extensions && this.options.extensions.block && this.options.extensions.block.some((o) => (n = o.call({ lexer: this }, t, r)) ? (t = t.substring(n.raw.length), r.push(n), !0) : !1))) {
        if (n = this.tokenizer.space(t)) {
          t = t.substring(n.raw.length), n.raw.length === 1 && r.length > 0 ? r[r.length - 1].raw += `
` : r.push(n);
          continue;
        }
        if (n = this.tokenizer.code(t)) {
          t = t.substring(n.raw.length), i = r[r.length - 1], i && (i.type === "paragraph" || i.type === "text") ? (i.raw += `
` + n.raw, i.text += `
` + n.text, this.inlineQueue[this.inlineQueue.length - 1].src = i.text) : r.push(n);
          continue;
        }
        if (n = this.tokenizer.fences(t)) {
          t = t.substring(n.raw.length), r.push(n);
          continue;
        }
        if (n = this.tokenizer.heading(t)) {
          t = t.substring(n.raw.length), r.push(n);
          continue;
        }
        if (n = this.tokenizer.hr(t)) {
          t = t.substring(n.raw.length), r.push(n);
          continue;
        }
        if (n = this.tokenizer.blockquote(t)) {
          t = t.substring(n.raw.length), r.push(n);
          continue;
        }
        if (n = this.tokenizer.list(t)) {
          t = t.substring(n.raw.length), r.push(n);
          continue;
        }
        if (n = this.tokenizer.html(t)) {
          t = t.substring(n.raw.length), r.push(n);
          continue;
        }
        if (n = this.tokenizer.def(t)) {
          t = t.substring(n.raw.length), i = r[r.length - 1], i && (i.type === "paragraph" || i.type === "text") ? (i.raw += `
` + n.raw, i.text += `
` + n.raw, this.inlineQueue[this.inlineQueue.length - 1].src = i.text) : this.tokens.links[n.tag] || (this.tokens.links[n.tag] = {
            href: n.href,
            title: n.title
          });
          continue;
        }
        if (n = this.tokenizer.table(t)) {
          t = t.substring(n.raw.length), r.push(n);
          continue;
        }
        if (n = this.tokenizer.lheading(t)) {
          t = t.substring(n.raw.length), r.push(n);
          continue;
        }
        if (a = t, this.options.extensions && this.options.extensions.startBlock) {
          let o = 1 / 0;
          const l = t.slice(1);
          let u;
          this.options.extensions.startBlock.forEach(function(d) {
            u = d.call({ lexer: this }, l), typeof u == "number" && u >= 0 && (o = Math.min(o, u));
          }), o < 1 / 0 && o >= 0 && (a = t.substring(0, o + 1));
        }
        if (this.state.top && (n = this.tokenizer.paragraph(a))) {
          i = r[r.length - 1], s && i.type === "paragraph" ? (i.raw += `
` + n.raw, i.text += `
` + n.text, this.inlineQueue.pop(), this.inlineQueue[this.inlineQueue.length - 1].src = i.text) : r.push(n), s = a.length !== t.length, t = t.substring(n.raw.length);
          continue;
        }
        if (n = this.tokenizer.text(t)) {
          t = t.substring(n.raw.length), i = r[r.length - 1], i && i.type === "text" ? (i.raw += `
` + n.raw, i.text += `
` + n.text, this.inlineQueue.pop(), this.inlineQueue[this.inlineQueue.length - 1].src = i.text) : r.push(n);
          continue;
        }
        if (t) {
          const o = "Infinite loop on byte: " + t.charCodeAt(0);
          if (this.options.silent) {
            console.error(o);
            break;
          } else
            throw new Error(o);
        }
      }
    return this.state.top = !0, r;
  }
  inline(t, r = []) {
    return this.inlineQueue.push({ src: t, tokens: r }), r;
  }
  /**
   * Lexing/Compiling
   */
  inlineTokens(t, r = []) {
    let n, i, a, s = t, o, l, u;
    if (this.tokens.links) {
      const d = Object.keys(this.tokens.links);
      if (d.length > 0)
        for (; (o = this.tokenizer.rules.inline.reflinkSearch.exec(s)) != null; )
          d.includes(o[0].slice(o[0].lastIndexOf("[") + 1, -1)) && (s = s.slice(0, o.index) + "[" + V0("a", o[0].length - 2) + "]" + s.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex));
    }
    for (; (o = this.tokenizer.rules.inline.blockSkip.exec(s)) != null; )
      s = s.slice(0, o.index) + "[" + V0("a", o[0].length - 2) + "]" + s.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);
    for (; (o = this.tokenizer.rules.inline.escapedEmSt.exec(s)) != null; )
      s = s.slice(0, o.index + o[0].length - 2) + "++" + s.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex), this.tokenizer.rules.inline.escapedEmSt.lastIndex--;
    for (; t; )
      if (l || (u = ""), l = !1, !(this.options.extensions && this.options.extensions.inline && this.options.extensions.inline.some((d) => (n = d.call({ lexer: this }, t, r)) ? (t = t.substring(n.raw.length), r.push(n), !0) : !1))) {
        if (n = this.tokenizer.escape(t)) {
          t = t.substring(n.raw.length), r.push(n);
          continue;
        }
        if (n = this.tokenizer.tag(t)) {
          t = t.substring(n.raw.length), i = r[r.length - 1], i && n.type === "text" && i.type === "text" ? (i.raw += n.raw, i.text += n.text) : r.push(n);
          continue;
        }
        if (n = this.tokenizer.link(t)) {
          t = t.substring(n.raw.length), r.push(n);
          continue;
        }
        if (n = this.tokenizer.reflink(t, this.tokens.links)) {
          t = t.substring(n.raw.length), i = r[r.length - 1], i && n.type === "text" && i.type === "text" ? (i.raw += n.raw, i.text += n.text) : r.push(n);
          continue;
        }
        if (n = this.tokenizer.emStrong(t, s, u)) {
          t = t.substring(n.raw.length), r.push(n);
          continue;
        }
        if (n = this.tokenizer.codespan(t)) {
          t = t.substring(n.raw.length), r.push(n);
          continue;
        }
        if (n = this.tokenizer.br(t)) {
          t = t.substring(n.raw.length), r.push(n);
          continue;
        }
        if (n = this.tokenizer.del(t)) {
          t = t.substring(n.raw.length), r.push(n);
          continue;
        }
        if (n = this.tokenizer.autolink(t, K0)) {
          t = t.substring(n.raw.length), r.push(n);
          continue;
        }
        if (!this.state.inLink && (n = this.tokenizer.url(t, K0))) {
          t = t.substring(n.raw.length), r.push(n);
          continue;
        }
        if (a = t, this.options.extensions && this.options.extensions.startInline) {
          let d = 1 / 0;
          const p = t.slice(1);
          let b;
          this.options.extensions.startInline.forEach(function(m) {
            b = m.call({ lexer: this }, p), typeof b == "number" && b >= 0 && (d = Math.min(d, b));
          }), d < 1 / 0 && d >= 0 && (a = t.substring(0, d + 1));
        }
        if (n = this.tokenizer.inlineText(a, H1)) {
          t = t.substring(n.raw.length), n.raw.slice(-1) !== "_" && (u = n.raw.slice(-1)), l = !0, i = r[r.length - 1], i && i.type === "text" ? (i.raw += n.raw, i.text += n.text) : r.push(n);
          continue;
        }
        if (t) {
          const d = "Infinite loop on byte: " + t.charCodeAt(0);
          if (this.options.silent) {
            console.error(d);
            break;
          } else
            throw new Error(d);
        }
      }
    return r;
  }
};
class Ua {
  constructor(t) {
    this.options = t || Nn;
  }
  code(t, r, n) {
    const i = (r || "").match(/\S*/)[0];
    if (this.options.highlight) {
      const a = this.options.highlight(t, i);
      a != null && a !== t && (n = !0, t = a);
    }
    return t = t.replace(/\n$/, "") + `
`, i ? '<pre><code class="' + this.options.langPrefix + at(i) + '">' + (n ? t : at(t, !0)) + `</code></pre>
` : "<pre><code>" + (n ? t : at(t, !0)) + `</code></pre>
`;
  }
  /**
   * @param {string} quote
   */
  blockquote(t) {
    return `<blockquote>
${t}</blockquote>
`;
  }
  html(t) {
    return t;
  }
  /**
   * @param {string} text
   * @param {string} level
   * @param {string} raw
   * @param {any} slugger
   */
  heading(t, r, n, i) {
    if (this.options.headerIds) {
      const a = this.options.headerPrefix + i.slug(n);
      return `<h${r} id="${a}">${t}</h${r}>
`;
    }
    return `<h${r}>${t}</h${r}>
`;
  }
  hr() {
    return this.options.xhtml ? `<hr/>
` : `<hr>
`;
  }
  list(t, r, n) {
    const i = r ? "ol" : "ul", a = r && n !== 1 ? ' start="' + n + '"' : "";
    return "<" + i + a + `>
` + t + "</" + i + `>
`;
  }
  /**
   * @param {string} text
   */
  listitem(t) {
    return `<li>${t}</li>
`;
  }
  checkbox(t) {
    return "<input " + (t ? 'checked="" ' : "") + 'disabled="" type="checkbox"' + (this.options.xhtml ? " /" : "") + "> ";
  }
  /**
   * @param {string} text
   */
  paragraph(t) {
    return `<p>${t}</p>
`;
  }
  /**
   * @param {string} header
   * @param {string} body
   */
  table(t, r) {
    return r && (r = `<tbody>${r}</tbody>`), `<table>
<thead>
` + t + `</thead>
` + r + `</table>
`;
  }
  /**
   * @param {string} content
   */
  tablerow(t) {
    return `<tr>
${t}</tr>
`;
  }
  tablecell(t, r) {
    const n = r.header ? "th" : "td";
    return (r.align ? `<${n} align="${r.align}">` : `<${n}>`) + t + `</${n}>
`;
  }
  /**
   * span level renderer
   * @param {string} text
   */
  strong(t) {
    return `<strong>${t}</strong>`;
  }
  /**
   * @param {string} text
   */
  em(t) {
    return `<em>${t}</em>`;
  }
  /**
   * @param {string} text
   */
  codespan(t) {
    return `<code>${t}</code>`;
  }
  br() {
    return this.options.xhtml ? "<br/>" : "<br>";
  }
  /**
   * @param {string} text
   */
  del(t) {
    return `<del>${t}</del>`;
  }
  /**
   * @param {string} href
   * @param {string} title
   * @param {string} text
   */
  link(t, r, n) {
    if (t = j0(this.options.sanitize, this.options.baseUrl, t), t === null)
      return n;
    let i = '<a href="' + t + '"';
    return r && (i += ' title="' + r + '"'), i += ">" + n + "</a>", i;
  }
  /**
   * @param {string} href
   * @param {string} title
   * @param {string} text
   */
  image(t, r, n) {
    if (t = j0(this.options.sanitize, this.options.baseUrl, t), t === null)
      return n;
    let i = `<img src="${t}" alt="${n}"`;
    return r && (i += ` title="${r}"`), i += this.options.xhtml ? "/>" : ">", i;
  }
  text(t) {
    return t;
  }
}
class Wc {
  // no need for block level renderers
  strong(t) {
    return t;
  }
  em(t) {
    return t;
  }
  codespan(t) {
    return t;
  }
  del(t) {
    return t;
  }
  html(t) {
    return t;
  }
  text(t) {
    return t;
  }
  link(t, r, n) {
    return "" + n;
  }
  image(t, r, n) {
    return "" + n;
  }
  br() {
    return "";
  }
}
class jc {
  constructor() {
    this.seen = {};
  }
  /**
   * @param {string} value
   */
  serialize(t) {
    return t.toLowerCase().trim().replace(/<[!\/a-z].*?>/ig, "").replace(/[\u2000-\u206F\u2E00-\u2E7F\\'!"#$%&()*+,./:;<=>?@[\]^`{|}~]/g, "").replace(/\s/g, "-");
  }
  /**
   * Finds the next safe (unique) slug to use
   * @param {string} originalSlug
   * @param {boolean} isDryRun
   */
  getNextSafeSlug(t, r) {
    let n = t, i = 0;
    if (this.seen.hasOwnProperty(n)) {
      i = this.seen[t];
      do
        i++, n = t + "-" + i;
      while (this.seen.hasOwnProperty(n));
    }
    return r || (this.seen[t] = i, this.seen[n] = 0), n;
  }
  /**
   * Convert string to unique id
   * @param {object} [options]
   * @param {boolean} [options.dryrun] Generates the next unique slug without
   * updating the internal accumulator.
   */
  slug(t, r = {}) {
    const n = this.serialize(t);
    return this.getNextSafeSlug(n, r.dryrun);
  }
}
let rn = class to {
  constructor(t) {
    this.options = t || Nn, this.options.renderer = this.options.renderer || new Ua(), this.renderer = this.options.renderer, this.renderer.options = this.options, this.textRenderer = new Wc(), this.slugger = new jc();
  }
  /**
   * Static Parse Method
   */
  static parse(t, r) {
    return new to(r).parse(t);
  }
  /**
   * Static Parse Inline Method
   */
  static parseInline(t, r) {
    return new to(r).parseInline(t);
  }
  /**
   * Parse Loop
   */
  parse(t, r = !0) {
    let n = "", i, a, s, o, l, u, d, p, b, m, _, k, L, A, v, S, C, I, R;
    const N = t.length;
    for (i = 0; i < N; i++) {
      if (m = t[i], this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[m.type] && (R = this.options.extensions.renderers[m.type].call({ parser: this }, m), R !== !1 || !["space", "hr", "heading", "code", "table", "blockquote", "list", "html", "paragraph", "text"].includes(m.type))) {
        n += R || "";
        continue;
      }
      switch (m.type) {
        case "space":
          continue;
        case "hr": {
          n += this.renderer.hr();
          continue;
        }
        case "heading": {
          n += this.renderer.heading(
            this.parseInline(m.tokens),
            m.depth,
            qc(this.parseInline(m.tokens, this.textRenderer)),
            this.slugger
          );
          continue;
        }
        case "code": {
          n += this.renderer.code(
            m.text,
            m.lang,
            m.escaped
          );
          continue;
        }
        case "table": {
          for (p = "", d = "", o = m.header.length, a = 0; a < o; a++)
            d += this.renderer.tablecell(
              this.parseInline(m.header[a].tokens),
              { header: !0, align: m.align[a] }
            );
          for (p += this.renderer.tablerow(d), b = "", o = m.rows.length, a = 0; a < o; a++) {
            for (u = m.rows[a], d = "", l = u.length, s = 0; s < l; s++)
              d += this.renderer.tablecell(
                this.parseInline(u[s].tokens),
                { header: !1, align: m.align[s] }
              );
            b += this.renderer.tablerow(d);
          }
          n += this.renderer.table(p, b);
          continue;
        }
        case "blockquote": {
          b = this.parse(m.tokens), n += this.renderer.blockquote(b);
          continue;
        }
        case "list": {
          for (_ = m.ordered, k = m.start, L = m.loose, o = m.items.length, b = "", a = 0; a < o; a++)
            v = m.items[a], S = v.checked, C = v.task, A = "", v.task && (I = this.renderer.checkbox(S), L ? v.tokens.length > 0 && v.tokens[0].type === "paragraph" ? (v.tokens[0].text = I + " " + v.tokens[0].text, v.tokens[0].tokens && v.tokens[0].tokens.length > 0 && v.tokens[0].tokens[0].type === "text" && (v.tokens[0].tokens[0].text = I + " " + v.tokens[0].tokens[0].text)) : v.tokens.unshift({
              type: "text",
              text: I
            }) : A += I), A += this.parse(v.tokens, L), b += this.renderer.listitem(A, C, S);
          n += this.renderer.list(b, _, k);
          continue;
        }
        case "html": {
          n += this.renderer.html(m.text);
          continue;
        }
        case "paragraph": {
          n += this.renderer.paragraph(this.parseInline(m.tokens));
          continue;
        }
        case "text": {
          for (b = m.tokens ? this.parseInline(m.tokens) : m.text; i + 1 < N && t[i + 1].type === "text"; )
            m = t[++i], b += `
` + (m.tokens ? this.parseInline(m.tokens) : m.text);
          n += r ? this.renderer.paragraph(b) : b;
          continue;
        }
        default: {
          const K = 'Token with "' + m.type + '" type was not found.';
          if (this.options.silent) {
            console.error(K);
            return;
          } else
            throw new Error(K);
        }
      }
    }
    return n;
  }
  /**
   * Parse Inline Tokens
   */
  parseInline(t, r) {
    r = r || this.renderer;
    let n = "", i, a, s;
    const o = t.length;
    for (i = 0; i < o; i++) {
      if (a = t[i], this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[a.type] && (s = this.options.extensions.renderers[a.type].call({ parser: this }, a), s !== !1 || !["escape", "html", "link", "image", "strong", "em", "codespan", "br", "del", "text"].includes(a.type))) {
        n += s || "";
        continue;
      }
      switch (a.type) {
        case "escape": {
          n += r.text(a.text);
          break;
        }
        case "html": {
          n += r.html(a.text);
          break;
        }
        case "link": {
          n += r.link(a.href, a.title, this.parseInline(a.tokens, r));
          break;
        }
        case "image": {
          n += r.image(a.href, a.title, a.text);
          break;
        }
        case "strong": {
          n += r.strong(this.parseInline(a.tokens, r));
          break;
        }
        case "em": {
          n += r.em(this.parseInline(a.tokens, r));
          break;
        }
        case "codespan": {
          n += r.codespan(a.text);
          break;
        }
        case "br": {
          n += r.br();
          break;
        }
        case "del": {
          n += r.del(this.parseInline(a.tokens, r));
          break;
        }
        case "text": {
          n += r.text(a.text);
          break;
        }
        default: {
          const l = 'Token with "' + a.type + '" type was not found.';
          if (this.options.silent) {
            console.error(l);
            return;
          } else
            throw new Error(l);
        }
      }
    }
    return n;
  }
};
function ue(e, t, r) {
  if (typeof e > "u" || e === null)
    throw new Error("marked(): input parameter is undefined or null");
  if (typeof e != "string")
    throw new Error("marked(): input parameter is of type " + Object.prototype.toString.call(e) + ", string expected");
  if (typeof t == "function" && (r = t, t = null), t = Vt({}, ue.defaults, t || {}), Gc(t), r) {
    const i = t.highlight;
    let a;
    try {
      a = kn.lex(e, t);
    } catch (l) {
      return r(l);
    }
    const s = function(l) {
      let u;
      if (!l)
        try {
          t.walkTokens && ue.walkTokens(a, t.walkTokens), u = rn.parse(a, t);
        } catch (d) {
          l = d;
        }
      return t.highlight = i, l ? r(l) : r(null, u);
    };
    if (!i || i.length < 3 || (delete t.highlight, !a.length))
      return s();
    let o = 0;
    ue.walkTokens(a, function(l) {
      l.type === "code" && (o++, setTimeout(() => {
        i(l.text, l.lang, function(u, d) {
          if (u)
            return s(u);
          d != null && d !== l.text && (l.text = d, l.escaped = !0), o--, o === 0 && s();
        });
      }, 0));
    }), o === 0 && s();
    return;
  }
  function n(i) {
    if (i.message += `
Please report this to https://github.com/markedjs/marked.`, t.silent)
      return "<p>An error occurred:</p><pre>" + at(i.message + "", !0) + "</pre>";
    throw i;
  }
  try {
    const i = kn.lex(e, t);
    if (t.walkTokens) {
      if (t.async)
        return Promise.all(ue.walkTokens(i, t.walkTokens)).then(() => rn.parse(i, t)).catch(n);
      ue.walkTokens(i, t.walkTokens);
    }
    return rn.parse(i, t);
  } catch (i) {
    n(i);
  }
}
ue.options = ue.setOptions = function(e) {
  return Vt(ue.defaults, e), A1(ue.defaults), ue;
};
ue.getDefaults = Pc;
ue.defaults = Nn;
ue.use = function(...e) {
  const t = ue.defaults.extensions || { renderers: {}, childTokens: {} };
  e.forEach((r) => {
    const n = Vt({}, r);
    if (n.async = ue.defaults.async || n.async, r.extensions && (r.extensions.forEach((i) => {
      if (!i.name)
        throw new Error("extension name required");
      if (i.renderer) {
        const a = t.renderers[i.name];
        a ? t.renderers[i.name] = function(...s) {
          let o = i.renderer.apply(this, s);
          return o === !1 && (o = a.apply(this, s)), o;
        } : t.renderers[i.name] = i.renderer;
      }
      if (i.tokenizer) {
        if (!i.level || i.level !== "block" && i.level !== "inline")
          throw new Error("extension level must be 'block' or 'inline'");
        t[i.level] ? t[i.level].unshift(i.tokenizer) : t[i.level] = [i.tokenizer], i.start && (i.level === "block" ? t.startBlock ? t.startBlock.push(i.start) : t.startBlock = [i.start] : i.level === "inline" && (t.startInline ? t.startInline.push(i.start) : t.startInline = [i.start]));
      }
      i.childTokens && (t.childTokens[i.name] = i.childTokens);
    }), n.extensions = t), r.renderer) {
      const i = ue.defaults.renderer || new Ua();
      for (const a in r.renderer) {
        const s = i[a];
        i[a] = (...o) => {
          let l = r.renderer[a].apply(i, o);
          return l === !1 && (l = s.apply(i, o)), l;
        };
      }
      n.renderer = i;
    }
    if (r.tokenizer) {
      const i = ue.defaults.tokenizer || new Do();
      for (const a in r.tokenizer) {
        const s = i[a];
        i[a] = (...o) => {
          let l = r.tokenizer[a].apply(i, o);
          return l === !1 && (l = s.apply(i, o)), l;
        };
      }
      n.tokenizer = i;
    }
    if (r.walkTokens) {
      const i = ue.defaults.walkTokens;
      n.walkTokens = function(a) {
        let s = [];
        return s.push(r.walkTokens.call(this, a)), i && (s = s.concat(i.call(this, a))), s;
      };
    }
    ue.setOptions(n);
  });
};
ue.walkTokens = function(e, t) {
  let r = [];
  for (const n of e)
    switch (r = r.concat(t.call(ue, n)), n.type) {
      case "table": {
        for (const i of n.header)
          r = r.concat(ue.walkTokens(i.tokens, t));
        for (const i of n.rows)
          for (const a of i)
            r = r.concat(ue.walkTokens(a.tokens, t));
        break;
      }
      case "list": {
        r = r.concat(ue.walkTokens(n.items, t));
        break;
      }
      default:
        ue.defaults.extensions && ue.defaults.extensions.childTokens && ue.defaults.extensions.childTokens[n.type] ? ue.defaults.extensions.childTokens[n.type].forEach(function(i) {
          r = r.concat(ue.walkTokens(n[i], t));
        }) : n.tokens && (r = r.concat(ue.walkTokens(n.tokens, t)));
    }
  return r;
};
ue.parseInline = function(e, t) {
  if (typeof e > "u" || e === null)
    throw new Error("marked.parseInline(): input parameter is undefined or null");
  if (typeof e != "string")
    throw new Error("marked.parseInline(): input parameter is of type " + Object.prototype.toString.call(e) + ", string expected");
  t = Vt({}, ue.defaults, t || {}), Gc(t);
  try {
    const r = kn.lexInline(e, t);
    return t.walkTokens && ue.walkTokens(r, t.walkTokens), rn.parseInline(r, t);
  } catch (r) {
    if (r.message += `
Please report this to https://github.com/markedjs/marked.`, t.silent)
      return "<p>An error occurred:</p><pre>" + at(r.message + "", !0) + "</pre>";
    throw r;
  }
};
ue.Parser = rn;
ue.parser = rn.parse;
ue.Renderer = Ua;
ue.TextRenderer = Wc;
ue.Lexer = kn;
ue.lexer = kn.lex;
ue.Tokenizer = Do;
ue.Slugger = jc;
ue.parse = ue;
ue.options;
ue.setOptions;
ue.use;
ue.walkTokens;
ue.parseInline;
rn.parse;
kn.lex;
class Ct {
  // The + prefix indicates that these fields aren't writeable
  // Lexer holding the input string.
  // Start offset, zero-based inclusive.
  // End offset, zero-based exclusive.
  constructor(t, r, n) {
    this.lexer = void 0, this.start = void 0, this.end = void 0, this.lexer = t, this.start = r, this.end = n;
  }
  /**
   * Merges two `SourceLocation`s from location providers, given they are
   * provided in order of appearance.
   * - Returns the first one's location if only the first is provided.
   * - Returns a merged range of the first and the last if both are provided
   *   and their lexers match.
   * - Otherwise, returns null.
   */
  static range(t, r) {
    return r ? !t || !t.loc || !r.loc || t.loc.lexer !== r.loc.lexer ? null : new Ct(t.loc.lexer, t.loc.start, r.loc.end) : t && t.loc;
  }
}
class Ot {
  // don't expand the token
  // used in \noexpand
  constructor(t, r) {
    this.text = void 0, this.loc = void 0, this.noexpand = void 0, this.treatAsRelax = void 0, this.text = t, this.loc = r;
  }
  /**
   * Given a pair of tokens (this and endToken), compute a `Token` encompassing
   * the whole input range enclosed by these two.
   */
  range(t, r) {
    return new Ot(r, Ct.range(this, t));
  }
}
class U {
  // Error position based on passed-in Token or ParseNode.
  constructor(t, r) {
    this.position = void 0;
    var n = "KaTeX parse error: " + t, i, a = r && r.loc;
    if (a && a.start <= a.end) {
      var s = a.lexer.input;
      i = a.start;
      var o = a.end;
      i === s.length ? n += " at end of input: " : n += " at position " + (i + 1) + ": ";
      var l = s.slice(i, o).replace(/[^]/g, "$&̲"), u;
      i > 15 ? u = "…" + s.slice(i - 15, i) : u = s.slice(0, i);
      var d;
      o + 15 < s.length ? d = s.slice(o, o + 15) + "…" : d = s.slice(o), n += u + l + d;
    }
    var p = new Error(n);
    return p.name = "ParseError", p.__proto__ = U.prototype, p.position = i, p;
  }
}
U.prototype.__proto__ = Error.prototype;
var q1 = function(t, r) {
  return t.indexOf(r) !== -1;
}, G1 = function(t, r) {
  return t === void 0 ? r : t;
}, W1 = /([A-Z])/g, j1 = function(t) {
  return t.replace(W1, "-$1").toLowerCase();
}, Y1 = {
  "&": "&amp;",
  ">": "&gt;",
  "<": "&lt;",
  '"': "&quot;",
  "'": "&#x27;"
}, V1 = /[&><"']/g;
function X1(e) {
  return String(e).replace(V1, (t) => Y1[t]);
}
var Yc = function e(t) {
  return t.type === "ordgroup" || t.type === "color" ? t.body.length === 1 ? e(t.body[0]) : t : t.type === "font" ? e(t.body) : t;
}, K1 = function(t) {
  var r = Yc(t);
  return r.type === "mathord" || r.type === "textord" || r.type === "atom";
}, Z1 = function(t) {
  if (!t)
    throw new Error("Expected non-null, but got " + String(t));
  return t;
}, J1 = function(t) {
  var r = /^\s*([^\\/#]*?)(?::|&#0*58|&#x0*3a)/i.exec(t);
  return r != null ? r[1] : "_relative";
}, me = {
  contains: q1,
  deflt: G1,
  escape: X1,
  hyphenate: j1,
  getBaseElem: Yc,
  isCharacterBox: K1,
  protocolFromUrl: J1
}, Xi = {
  displayMode: {
    type: "boolean",
    description: "Render math in display mode, which puts the math in display style (so \\int and \\sum are large, for example), and centers the math on the page on its own line.",
    cli: "-d, --display-mode"
  },
  output: {
    type: {
      enum: ["htmlAndMathml", "html", "mathml"]
    },
    description: "Determines the markup language of the output.",
    cli: "-F, --format <type>"
  },
  leqno: {
    type: "boolean",
    description: "Render display math in leqno style (left-justified tags)."
  },
  fleqn: {
    type: "boolean",
    description: "Render display math flush left."
  },
  throwOnError: {
    type: "boolean",
    default: !0,
    cli: "-t, --no-throw-on-error",
    cliDescription: "Render errors (in the color given by --error-color) instead of throwing a ParseError exception when encountering an error."
  },
  errorColor: {
    type: "string",
    default: "#cc0000",
    cli: "-c, --error-color <color>",
    cliDescription: "A color string given in the format 'rgb' or 'rrggbb' (no #). This option determines the color of errors rendered by the -t option.",
    cliProcessor: (e) => "#" + e
  },
  macros: {
    type: "object",
    cli: "-m, --macro <def>",
    cliDescription: "Define custom macro of the form '\\foo:expansion' (use multiple -m arguments for multiple macros).",
    cliDefault: [],
    cliProcessor: (e, t) => (t.push(e), t)
  },
  minRuleThickness: {
    type: "number",
    description: "Specifies a minimum thickness, in ems, for fraction lines, `\\sqrt` top lines, `{array}` vertical lines, `\\hline`, `\\hdashline`, `\\underline`, `\\overline`, and the borders of `\\fbox`, `\\boxed`, and `\\fcolorbox`.",
    processor: (e) => Math.max(0, e),
    cli: "--min-rule-thickness <size>",
    cliProcessor: parseFloat
  },
  colorIsTextColor: {
    type: "boolean",
    description: "Makes \\color behave like LaTeX's 2-argument \\textcolor, instead of LaTeX's one-argument \\color mode change.",
    cli: "-b, --color-is-text-color"
  },
  strict: {
    type: [{
      enum: ["warn", "ignore", "error"]
    }, "boolean", "function"],
    description: "Turn on strict / LaTeX faithfulness mode, which throws an error if the input uses features that are not supported by LaTeX.",
    cli: "-S, --strict",
    cliDefault: !1
  },
  trust: {
    type: ["boolean", "function"],
    description: "Trust the input, enabling all HTML features such as \\url.",
    cli: "-T, --trust"
  },
  maxSize: {
    type: "number",
    default: 1 / 0,
    description: "If non-zero, all user-specified sizes, e.g. in \\rule{500em}{500em}, will be capped to maxSize ems. Otherwise, elements and spaces can be arbitrarily large",
    processor: (e) => Math.max(0, e),
    cli: "-s, --max-size <n>",
    cliProcessor: parseInt
  },
  maxExpand: {
    type: "number",
    default: 1e3,
    description: "Limit the number of macro expansions to the specified number, to prevent e.g. infinite macro loops. If set to Infinity, the macro expander will try to fully expand as in LaTeX.",
    processor: (e) => Math.max(0, e),
    cli: "-e, --max-expand <n>",
    cliProcessor: (e) => e === "Infinity" ? 1 / 0 : parseInt(e)
  },
  globalGroup: {
    type: "boolean",
    cli: !1
  }
};
function Q1(e) {
  if (e.default)
    return e.default;
  var t = e.type, r = Array.isArray(t) ? t[0] : t;
  if (typeof r != "string")
    return r.enum[0];
  switch (r) {
    case "boolean":
      return !1;
    case "string":
      return "";
    case "number":
      return 0;
    case "object":
      return {};
  }
}
class Fo {
  constructor(t) {
    this.displayMode = void 0, this.output = void 0, this.leqno = void 0, this.fleqn = void 0, this.throwOnError = void 0, this.errorColor = void 0, this.macros = void 0, this.minRuleThickness = void 0, this.colorIsTextColor = void 0, this.strict = void 0, this.trust = void 0, this.maxSize = void 0, this.maxExpand = void 0, this.globalGroup = void 0, t = t || {};
    for (var r in Xi)
      if (Xi.hasOwnProperty(r)) {
        var n = Xi[r];
        this[r] = t[r] !== void 0 ? n.processor ? n.processor(t[r]) : t[r] : Q1(n);
      }
  }
  /**
   * Report nonstrict (non-LaTeX-compatible) input.
   * Can safely not be called if `this.strict` is false in JavaScript.
   */
  reportNonstrict(t, r, n) {
    var i = this.strict;
    if (typeof i == "function" && (i = i(t, r, n)), !(!i || i === "ignore")) {
      if (i === !0 || i === "error")
        throw new U("LaTeX-incompatible input and strict mode is set to 'error': " + (r + " [" + t + "]"), n);
      i === "warn" ? typeof console < "u" && console.warn("LaTeX-incompatible input and strict mode is set to 'warn': " + (r + " [" + t + "]")) : typeof console < "u" && console.warn("LaTeX-incompatible input and strict mode is set to " + ("unrecognized '" + i + "': " + r + " [" + t + "]"));
    }
  }
  /**
   * Check whether to apply strict (LaTeX-adhering) behavior for unusual
   * input (like `\\`).  Unlike `nonstrict`, will not throw an error;
   * instead, "error" translates to a return value of `true`, while "ignore"
   * translates to a return value of `false`.  May still print a warning:
   * "warn" prints a warning and returns `false`.
   * This is for the second category of `errorCode`s listed in the README.
   */
  useStrictBehavior(t, r, n) {
    var i = this.strict;
    if (typeof i == "function")
      try {
        i = i(t, r, n);
      } catch {
        i = "error";
      }
    return !i || i === "ignore" ? !1 : i === !0 || i === "error" ? !0 : i === "warn" ? (typeof console < "u" && console.warn("LaTeX-incompatible input and strict mode is set to 'warn': " + (r + " [" + t + "]")), !1) : (typeof console < "u" && console.warn("LaTeX-incompatible input and strict mode is set to " + ("unrecognized '" + i + "': " + r + " [" + t + "]")), !1);
  }
  /**
   * Check whether to test potentially dangerous input, and return
   * `true` (trusted) or `false` (untrusted).  The sole argument `context`
   * should be an object with `command` field specifying the relevant LaTeX
   * command (as a string starting with `\`), and any other arguments, etc.
   * If `context` has a `url` field, a `protocol` field will automatically
   * get added by this function (changing the specified object).
   */
  isTrusted(t) {
    t.url && !t.protocol && (t.protocol = me.protocolFromUrl(t.url));
    var r = typeof this.trust == "function" ? this.trust(t) : this.trust;
    return !!r;
  }
}
class Rr {
  constructor(t, r, n) {
    this.id = void 0, this.size = void 0, this.cramped = void 0, this.id = t, this.size = r, this.cramped = n;
  }
  /**
   * Get the style of a superscript given a base in the current style.
   */
  sup() {
    return Jt[ep[this.id]];
  }
  /**
   * Get the style of a subscript given a base in the current style.
   */
  sub() {
    return Jt[tp[this.id]];
  }
  /**
   * Get the style of a fraction numerator given the fraction in the current
   * style.
   */
  fracNum() {
    return Jt[rp[this.id]];
  }
  /**
   * Get the style of a fraction denominator given the fraction in the current
   * style.
   */
  fracDen() {
    return Jt[np[this.id]];
  }
  /**
   * Get the cramped version of a style (in particular, cramping a cramped style
   * doesn't change the style).
   */
  cramp() {
    return Jt[ip[this.id]];
  }
  /**
   * Get a text or display version of this style.
   */
  text() {
    return Jt[ap[this.id]];
  }
  /**
   * Return true if this style is tightly spaced (scriptstyle/scriptscriptstyle)
   */
  isTight() {
    return this.size >= 2;
  }
}
var $o = 0, fa = 1, wn = 2, vr = 3, ti = 4, Nt = 5, Tn = 6, pt = 7, Jt = [new Rr($o, 0, !1), new Rr(fa, 0, !0), new Rr(wn, 1, !1), new Rr(vr, 1, !0), new Rr(ti, 2, !1), new Rr(Nt, 2, !0), new Rr(Tn, 3, !1), new Rr(pt, 3, !0)], ep = [ti, Nt, ti, Nt, Tn, pt, Tn, pt], tp = [Nt, Nt, Nt, Nt, pt, pt, pt, pt], rp = [wn, vr, ti, Nt, Tn, pt, Tn, pt], np = [vr, vr, Nt, Nt, pt, pt, pt, pt], ip = [fa, fa, vr, vr, Nt, Nt, pt, pt], ap = [$o, fa, wn, vr, wn, vr, wn, vr], he = {
  DISPLAY: Jt[$o],
  TEXT: Jt[wn],
  SCRIPT: Jt[ti],
  SCRIPTSCRIPT: Jt[Tn]
}, ro = [{
  // Latin characters beyond the Latin-1 characters we have metrics for.
  // Needed for Czech, Hungarian and Turkish text, for example.
  name: "latin",
  blocks: [
    [256, 591],
    // Latin Extended-A and Latin Extended-B
    [768, 879]
    // Combining Diacritical marks
  ]
}, {
  // The Cyrillic script used by Russian and related languages.
  // A Cyrillic subset used to be supported as explicitly defined
  // symbols in symbols.js
  name: "cyrillic",
  blocks: [[1024, 1279]]
}, {
  // Armenian
  name: "armenian",
  blocks: [[1328, 1423]]
}, {
  // The Brahmic scripts of South and Southeast Asia
  // Devanagari (0900–097F)
  // Bengali (0980–09FF)
  // Gurmukhi (0A00–0A7F)
  // Gujarati (0A80–0AFF)
  // Oriya (0B00–0B7F)
  // Tamil (0B80–0BFF)
  // Telugu (0C00–0C7F)
  // Kannada (0C80–0CFF)
  // Malayalam (0D00–0D7F)
  // Sinhala (0D80–0DFF)
  // Thai (0E00–0E7F)
  // Lao (0E80–0EFF)
  // Tibetan (0F00–0FFF)
  // Myanmar (1000–109F)
  name: "brahmic",
  blocks: [[2304, 4255]]
}, {
  name: "georgian",
  blocks: [[4256, 4351]]
}, {
  // Chinese and Japanese.
  // The "k" in cjk is for Korean, but we've separated Korean out
  name: "cjk",
  blocks: [
    [12288, 12543],
    // CJK symbols and punctuation, Hiragana, Katakana
    [19968, 40879],
    // CJK ideograms
    [65280, 65376]
    // Fullwidth punctuation
    // TODO: add halfwidth Katakana and Romanji glyphs
  ]
}, {
  // Korean
  name: "hangul",
  blocks: [[44032, 55215]]
}];
function sp(e) {
  for (var t = 0; t < ro.length; t++)
    for (var r = ro[t], n = 0; n < r.blocks.length; n++) {
      var i = r.blocks[n];
      if (e >= i[0] && e <= i[1])
        return r.name;
    }
  return null;
}
var Ki = [];
ro.forEach((e) => e.blocks.forEach((t) => Ki.push(...t)));
function Vc(e) {
  for (var t = 0; t < Ki.length; t += 2)
    if (e >= Ki[t] && e <= Ki[t + 1])
      return !0;
  return !1;
}
var mn = 80, op = function(t, r) {
  return "M95," + (622 + t + r) + `
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l` + t / 2.075 + " -" + t + `
c5.3,-9.3,12,-14,20,-14
H400000v` + (40 + t) + `H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M` + (834 + t) + " " + r + "h400000v" + (40 + t) + "h-400000z";
}, lp = function(t, r) {
  return "M263," + (601 + t + r) + `c0.7,0,18,39.7,52,119
c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120
c340,-704.7,510.7,-1060.3,512,-1067
l` + t / 2.084 + " -" + t + `
c4.7,-7.3,11,-11,19,-11
H40000v` + (40 + t) + `H1012.3
s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232
c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1
s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26
c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z
M` + (1001 + t) + " " + r + "h400000v" + (40 + t) + "h-400000z";
}, cp = function(t, r) {
  return "M983 " + (10 + t + r) + `
l` + t / 3.13 + " -" + t + `
c4,-6.7,10,-10,18,-10 H400000v` + (40 + t) + `
H1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7
s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744
c-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30
c26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722
c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5
c53.7,-170.3,84.5,-266.8,92.5,-289.5z
M` + (1001 + t) + " " + r + "h400000v" + (40 + t) + "h-400000z";
}, up = function(t, r) {
  return "M424," + (2398 + t + r) + `
c-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514
c0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20
s-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121
s209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081
l` + t / 4.223 + " -" + t + `c4,-6.7,10,-10,18,-10 H400000
v` + (40 + t) + `H1014.6
s-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185
c-2,6,-10,9,-24,9
c-8,0,-12,-0.7,-12,-2z M` + (1001 + t) + " " + r + `
h400000v` + (40 + t) + "h-400000z";
}, hp = function(t, r) {
  return "M473," + (2713 + t + r) + `
c339.3,-1799.3,509.3,-2700,510,-2702 l` + t / 5.298 + " -" + t + `
c3.3,-7.3,9.3,-11,18,-11 H400000v` + (40 + t) + `H1017.7
s-90.5,478,-276.2,1466c-185.7,988,-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9
c-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200
c0,-1.3,-5.3,8.7,-16,30c-10.7,21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26
s76,-153,76,-153s77,-151,77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,
606zM` + (1001 + t) + " " + r + "h400000v" + (40 + t) + "H1017.7z";
}, dp = function(t) {
  var r = t / 2;
  return "M400000 " + t + " H0 L" + r + " 0 l65 45 L145 " + (t - 80) + " H400000z";
}, pp = function(t, r, n) {
  var i = n - 54 - r - t;
  return "M702 " + (t + r) + "H400000" + (40 + t) + `
H742v` + i + `l-4 4-4 4c-.667.7 -2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1
h-12l-28-84c-16.667-52-96.667 -294.333-240-727l-212 -643 -85 170
c-4-3.333-8.333-7.667-13 -13l-13-13l77-155 77-156c66 199.333 139 419.667
219 661 l218 661zM702 ` + r + "H400000v" + (40 + t) + "H742z";
}, fp = function(t, r, n) {
  r = 1e3 * r;
  var i = "";
  switch (t) {
    case "sqrtMain":
      i = op(r, mn);
      break;
    case "sqrtSize1":
      i = lp(r, mn);
      break;
    case "sqrtSize2":
      i = cp(r, mn);
      break;
    case "sqrtSize3":
      i = up(r, mn);
      break;
    case "sqrtSize4":
      i = hp(r, mn);
      break;
    case "sqrtTall":
      i = pp(r, mn, n);
  }
  return i;
}, mp = function(t, r) {
  switch (t) {
    case "⎜":
      return "M291 0 H417 V" + r + " H291z M291 0 H417 V" + r + " H291z";
    case "∣":
      return "M145 0 H188 V" + r + " H145z M145 0 H188 V" + r + " H145z";
    case "∥":
      return "M145 0 H188 V" + r + " H145z M145 0 H188 V" + r + " H145z" + ("M367 0 H410 V" + r + " H367z M367 0 H410 V" + r + " H367z");
    case "⎟":
      return "M457 0 H583 V" + r + " H457z M457 0 H583 V" + r + " H457z";
    case "⎢":
      return "M319 0 H403 V" + r + " H319z M319 0 H403 V" + r + " H319z";
    case "⎥":
      return "M263 0 H347 V" + r + " H263z M263 0 H347 V" + r + " H263z";
    case "⎪":
      return "M384 0 H504 V" + r + " H384z M384 0 H504 V" + r + " H384z";
    case "⏐":
      return "M312 0 H355 V" + r + " H312z M312 0 H355 V" + r + " H312z";
    case "‖":
      return "M257 0 H300 V" + r + " H257z M257 0 H300 V" + r + " H257z" + ("M478 0 H521 V" + r + " H478z M478 0 H521 V" + r + " H478z");
    default:
      return "";
  }
}, Z0 = {
  // The doubleleftarrow geometry is from glyph U+21D0 in the font KaTeX Main
  doubleleftarrow: `M262 157
l10-10c34-36 62.7-77 86-123 3.3-8 5-13.3 5-16 0-5.3-6.7-8-20-8-7.3
 0-12.2.5-14.5 1.5-2.3 1-4.8 4.5-7.5 10.5-49.3 97.3-121.7 169.3-217 216-28
 14-57.3 25-88 33-6.7 2-11 3.8-13 5.5-2 1.7-3 4.2-3 7.5s1 5.8 3 7.5
c2 1.7 6.3 3.5 13 5.5 68 17.3 128.2 47.8 180.5 91.5 52.3 43.7 93.8 96.2 124.5
 157.5 9.3 8 15.3 12.3 18 13h6c12-.7 18-4 18-10 0-2-1.7-7-5-15-23.3-46-52-87
-86-123l-10-10h399738v-40H218c328 0 0 0 0 0l-10-8c-26.7-20-65.7-43-117-69 2.7
-2 6-3.7 10-5 36.7-16 72.3-37.3 107-64l10-8h399782v-40z
m8 0v40h399730v-40zm0 194v40h399730v-40z`,
  // doublerightarrow is from glyph U+21D2 in font KaTeX Main
  doublerightarrow: `M399738 392l
-10 10c-34 36-62.7 77-86 123-3.3 8-5 13.3-5 16 0 5.3 6.7 8 20 8 7.3 0 12.2-.5
 14.5-1.5 2.3-1 4.8-4.5 7.5-10.5 49.3-97.3 121.7-169.3 217-216 28-14 57.3-25 88
-33 6.7-2 11-3.8 13-5.5 2-1.7 3-4.2 3-7.5s-1-5.8-3-7.5c-2-1.7-6.3-3.5-13-5.5-68
-17.3-128.2-47.8-180.5-91.5-52.3-43.7-93.8-96.2-124.5-157.5-9.3-8-15.3-12.3-18
-13h-6c-12 .7-18 4-18 10 0 2 1.7 7 5 15 23.3 46 52 87 86 123l10 10H0v40h399782
c-328 0 0 0 0 0l10 8c26.7 20 65.7 43 117 69-2.7 2-6 3.7-10 5-36.7 16-72.3 37.3
-107 64l-10 8H0v40zM0 157v40h399730v-40zm0 194v40h399730v-40z`,
  // leftarrow is from glyph U+2190 in font KaTeX Main
  leftarrow: `M400000 241H110l3-3c68.7-52.7 113.7-120
 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8
-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247
c-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208
 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3
 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202
 l-3-3h399890zM100 241v40h399900v-40z`,
  // overbrace is from glyphs U+23A9/23A8/23A7 in font KaTeX_Size4-Regular
  leftbrace: `M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117
-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7
 5-6 9-10 13-.7 1-7.3 1-20 1H6z`,
  leftbraceunder: `M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13
 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688
 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7
-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z`,
  // overgroup is from the MnSymbol package (public domain)
  leftgroup: `M400000 80
H435C64 80 168.3 229.4 21 260c-5.9 1.2-18 0-18 0-2 0-3-1-3-3v-38C76 61 257 0
 435 0h399565z`,
  leftgroupunder: `M400000 262
H435C64 262 168.3 112.6 21 82c-5.9-1.2-18 0-18 0-2 0-3 1-3 3v38c76 158 257 219
 435 219h399565z`,
  // Harpoons are from glyph U+21BD in font KaTeX Main
  leftharpoon: `M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3
-3.3 10.2-9.5 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5
-18.3 3-21-1.3-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7
-196 228-6.7 4.7-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40z`,
  leftharpoonplus: `M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3-3.3 10.2-9.5
 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5-18.3 3-21-1.3
-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7-196 228-6.7 4.7
-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40zM0 435v40h400000v-40z
m0 0v40h400000v-40z`,
  leftharpoondown: `M7 241c-4 4-6.333 8.667-7 14 0 5.333.667 9 2 11s5.333
 5.333 12 10c90.667 54 156 130 196 228 3.333 10.667 6.333 16.333 9 17 2 .667 5
 1 9 1h5c10.667 0 16.667-2 18-6 2-2.667 1-9.667-3-21-32-87.333-82.667-157.667
-152-211l-3-3h399907v-40zM93 281 H400000 v-40L7 241z`,
  leftharpoondownplus: `M7 435c-4 4-6.3 8.7-7 14 0 5.3.7 9 2 11s5.3 5.3 12
 10c90.7 54 156 130 196 228 3.3 10.7 6.3 16.3 9 17 2 .7 5 1 9 1h5c10.7 0 16.7
-2 18-6 2-2.7 1-9.7-3-21-32-87.3-82.7-157.7-152-211l-3-3h399907v-40H7zm93 0
v40h399900v-40zM0 241v40h399900v-40zm0 0v40h399900v-40z`,
  // hook is from glyph U+21A9 in font KaTeX Main
  lefthook: `M400000 281 H103s-33-11.2-61-33.5S0 197.3 0 164s14.2-61.2 42.5
-83.5C70.8 58.2 104 47 142 47 c16.7 0 25 6.7 25 20 0 12-8.7 18.7-26 20-40 3.3
-68.7 15.7-86 37-10 12-15 25.3-15 40 0 22.7 9.8 40.7 29.5 54 19.7 13.3 43.5 21
 71.5 23h399859zM103 281v-40h399897v40z`,
  leftlinesegment: `M40 281 V428 H0 V94 H40 V241 H400000 v40z
M40 281 V428 H0 V94 H40 V241 H400000 v40z`,
  leftmapsto: `M40 281 V448H0V74H40V241H400000v40z
M40 281 V448H0V74H40V241H400000v40z`,
  // tofrom is from glyph U+21C4 in font KaTeX AMS Regular
  leftToFrom: `M0 147h400000v40H0zm0 214c68 40 115.7 95.7 143 167h22c15.3 0 23
-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69-70-101l-7-8h399905v-40H95l7-8
c28.7-32 52-65.7 70-101 10.7-23.3 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 265.3
 68 321 0 361zm0-174v-40h399900v40zm100 154v40h399900v-40z`,
  longequal: `M0 50 h400000 v40H0z m0 194h40000v40H0z
M0 50 h400000 v40H0z m0 194h40000v40H0z`,
  midbrace: `M200428 334
c-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14
-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7
 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11
 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z`,
  midbraceunder: `M199572 214
c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14
 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3
 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0
-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z`,
  oiintSize1: `M512.6 71.6c272.6 0 320.3 106.8 320.3 178.2 0 70.8-47.7 177.6
-320.3 177.6S193.1 320.6 193.1 249.8c0-71.4 46.9-178.2 319.5-178.2z
m368.1 178.2c0-86.4-60.9-215.4-368.1-215.4-306.4 0-367.3 129-367.3 215.4 0 85.8
60.9 214.8 367.3 214.8 307.2 0 368.1-129 368.1-214.8z`,
  oiintSize2: `M757.8 100.1c384.7 0 451.1 137.6 451.1 230 0 91.3-66.4 228.8
-451.1 228.8-386.3 0-452.7-137.5-452.7-228.8 0-92.4 66.4-230 452.7-230z
m502.4 230c0-111.2-82.4-277.2-502.4-277.2s-504 166-504 277.2
c0 110 84 276 504 276s502.4-166 502.4-276z`,
  oiiintSize1: `M681.4 71.6c408.9 0 480.5 106.8 480.5 178.2 0 70.8-71.6 177.6
-480.5 177.6S202.1 320.6 202.1 249.8c0-71.4 70.5-178.2 479.3-178.2z
m525.8 178.2c0-86.4-86.8-215.4-525.7-215.4-437.9 0-524.7 129-524.7 215.4 0
85.8 86.8 214.8 524.7 214.8 438.9 0 525.7-129 525.7-214.8z`,
  oiiintSize2: `M1021.2 53c603.6 0 707.8 165.8 707.8 277.2 0 110-104.2 275.8
-707.8 275.8-606 0-710.2-165.8-710.2-275.8C311 218.8 415.2 53 1021.2 53z
m770.4 277.1c0-131.2-126.4-327.6-770.5-327.6S248.4 198.9 248.4 330.1
c0 130 128.8 326.4 772.7 326.4s770.5-196.4 770.5-326.4z`,
  rightarrow: `M0 241v40h399891c-47.3 35.3-84 78-110 128
-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20
 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7
 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85
-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
 151.7 139 205zm0 0v40h399900v-40z`,
  rightbrace: `M400000 542l
-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5
s-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1
c124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z`,
  rightbraceunder: `M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3
 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237
-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z`,
  rightgroup: `M0 80h399565c371 0 266.7 149.4 414 180 5.9 1.2 18 0 18 0 2 0
 3-1 3-3v-38c-76-158-257-219-435-219H0z`,
  rightgroupunder: `M0 262h399565c371 0 266.7-149.4 414-180 5.9-1.2 18 0 18
 0 2 0 3 1 3 3v38c-76 158-257 219-435 219H0z`,
  rightharpoon: `M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3
-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2
-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58
 69.2 92 94.5zm0 0v40h399900v-40z`,
  rightharpoonplus: `M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3-3.7-15.3-11
-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2-10.7 0-16.7
 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58 69.2 92 94.5z
m0 0v40h399900v-40z m100 194v40h399900v-40zm0 0v40h399900v-40z`,
  rightharpoondown: `M399747 511c0 7.3 6.7 11 20 11 8 0 13-.8 15-2.5s4.7-6.8
 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3 8.5-5.8 9.5
-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3-64.7 57-92 95
-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 241v40h399900v-40z`,
  rightharpoondownplus: `M399747 705c0 7.3 6.7 11 20 11 8 0 13-.8
 15-2.5s4.7-6.8 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3
 8.5-5.8 9.5-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3
-64.7 57-92 95-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 435v40h399900v-40z
m0-194v40h400000v-40zm0 0v40h400000v-40z`,
  righthook: `M399859 241c-764 0 0 0 0 0 40-3.3 68.7-15.7 86-37 10-12 15-25.3
 15-40 0-22.7-9.8-40.7-29.5-54-19.7-13.3-43.5-21-71.5-23-17.3-1.3-26-8-26-20 0
-13.3 8.7-20 26-20 38 0 71 11.2 99 33.5 0 0 7 5.6 21 16.7 14 11.2 21 33.5 21
 66.8s-14 61.2-42 83.5c-28 22.3-61 33.5-99 33.5L0 241z M0 281v-40h399859v40z`,
  rightlinesegment: `M399960 241 V94 h40 V428 h-40 V281 H0 v-40z
M399960 241 V94 h40 V428 h-40 V281 H0 v-40z`,
  rightToFrom: `M400000 167c-70.7-42-118-97.7-142-167h-23c-15.3 0-23 .3-23
 1 0 1.3 5.3 13.7 16 37 18 35.3 41.3 69 70 101l7 8H0v40h399905l-7 8c-28.7 32
-52 65.7-70 101-10.7 23.3-16 35.7-16 37 0 .7 7.7 1 23 1h23c24-69.3 71.3-125 142
-167z M100 147v40h399900v-40zM0 341v40h399900v-40z`,
  // twoheadleftarrow is from glyph U+219E in font KaTeX AMS Regular
  twoheadleftarrow: `M0 167c68 40
 115.7 95.7 143 167h22c15.3 0 23-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69
-70-101l-7-8h125l9 7c50.7 39.3 85 86 103 140h46c0-4.7-6.3-18.7-19-42-18-35.3
-40-67.3-66-96l-9-9h399716v-40H284l9-9c26-28.7 48-60.7 66-96 12.7-23.333 19
-37.333 19-42h-46c-18 54-52.3 100.7-103 140l-9 7H95l7-8c28.7-32 52-65.7 70-101
 10.7-23.333 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 71.3 68 127 0 167z`,
  twoheadrightarrow: `M400000 167
c-68-40-115.7-95.7-143-167h-22c-15.3 0-23 .3-23 1 0 1.3 5.3 13.7 16 37 18 35.3
 41.3 69 70 101l7 8h-125l-9-7c-50.7-39.3-85-86-103-140h-46c0 4.7 6.3 18.7 19 42
 18 35.3 40 67.3 66 96l9 9H0v40h399716l-9 9c-26 28.7-48 60.7-66 96-12.7 23.333
-19 37.333-19 42h46c18-54 52.3-100.7 103-140l9-7h125l-7 8c-28.7 32-52 65.7-70
 101-10.7 23.333-16 35.7-16 37 0 .7 7.7 1 23 1h22c27.3-71.3 75-127 143-167z`,
  // tilde1 is a modified version of a glyph from the MnSymbol package
  tilde1: `M200 55.538c-77 0-168 73.953-177 73.953-3 0-7
-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0
 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0
 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128
-68.267.847-113-73.952-191-73.952z`,
  // ditto tilde2, tilde3, & tilde4
  tilde2: `M344 55.266c-142 0-300.638 81.316-311.5 86.418
-8.01 3.762-22.5 10.91-23.5 5.562L1 120c-1-2-1-3-1-4 0-5 3-9 8-10l18.4-9C160.9
 31.9 283 0 358 0c148 0 188 122 331 122s314-97 326-97c4 0 8 2 10 7l7 21.114
c1 2.14 1 3.21 1 4.28 0 5.347-3 9.626-7 10.696l-22.3 12.622C852.6 158.372 751
 181.476 676 181.476c-149 0-189-126.21-332-126.21z`,
  tilde3: `M786 59C457 59 32 175.242 13 175.242c-6 0-10-3.457
-11-10.37L.15 138c-1-7 3-12 10-13l19.2-6.4C378.4 40.7 634.3 0 804.3 0c337 0
 411.8 157 746.8 157 328 0 754-112 773-112 5 0 10 3 11 9l1 14.075c1 8.066-.697
 16.595-6.697 17.492l-21.052 7.31c-367.9 98.146-609.15 122.696-778.15 122.696
 -338 0-409-156.573-744-156.573z`,
  tilde4: `M786 58C457 58 32 177.487 13 177.487c-6 0-10-3.345
-11-10.035L.15 143c-1-7 3-12 10-13l22-6.7C381.2 35 637.15 0 807.15 0c337 0 409
 177 744 177 328 0 754-127 773-127 5 0 10 3 11 9l1 14.794c1 7.805-3 13.38-9
 14.495l-20.7 5.574c-366.85 99.79-607.3 139.372-776.3 139.372-338 0-409
 -175.236-744-175.236z`,
  // vec is from glyph U+20D7 in font KaTeX Main
  vec: `M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`,
  // widehat1 is a modified version of a glyph from the MnSymbol package
  widehat1: `M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22
c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z`,
  // ditto widehat2, widehat3, & widehat4
  widehat2: `M1181 0h2l1171 176c6 0 10 5 10 11l-2 23c-1 6-5 10
-11 10h-1L1182 67 15 220h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z`,
  widehat3: `M1181 0h2l1171 236c6 0 10 5 10 11l-2 23c-1 6-5 10
-11 10h-1L1182 67 15 280h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z`,
  widehat4: `M1181 0h2l1171 296c6 0 10 5 10 11l-2 23c-1 6-5 10
-11 10h-1L1182 67 15 340h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z`,
  // widecheck paths are all inverted versions of widehat
  widecheck1: `M529,159h5l519,-115c5,-1,9,-5,9,-10c0,-1,-1,-2,-1,-3l-4,-22c-1,
-5,-5,-9,-11,-9h-2l-512,92l-513,-92h-2c-5,0,-9,4,-11,9l-5,22c-1,6,2,12,8,13z`,
  widecheck2: `M1181,220h2l1171,-176c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,
-11,-10h-1l-1168,153l-1167,-153h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z`,
  widecheck3: `M1181,280h2l1171,-236c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,
-11,-10h-1l-1168,213l-1167,-213h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z`,
  widecheck4: `M1181,340h2l1171,-296c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,
-11,-10h-1l-1168,273l-1167,-273h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z`,
  // The next ten paths support reaction arrows from the mhchem package.
  // Arrows for \ce{<-->} are offset from xAxis by 0.22ex, per mhchem in LaTeX
  // baraboveleftarrow is mostly from from glyph U+2190 in font KaTeX Main
  baraboveleftarrow: `M400000 620h-399890l3 -3c68.7 -52.7 113.7 -120 135 -202
c4 -14.7 6 -23 6 -25c0 -7.3 -7 -11 -21 -11c-8 0 -13.2 0.8 -15.5 2.5
c-2.3 1.7 -4.2 5.8 -5.5 12.5c-1.3 4.7 -2.7 10.3 -4 17c-12 48.7 -34.8 92 -68.5 130
s-74.2 66.3 -121.5 85c-10 4 -16 7.7 -18 11c0 8.7 6 14.3 18 17c47.3 18.7 87.8 47
121.5 85s56.5 81.3 68.5 130c0.7 2 1.3 5 2 9s1.2 6.7 1.5 8c0.3 1.3 1 3.3 2 6
s2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21 -3.7 21 -11
c0 -2 -2 -10.3 -6 -25c-20 -79.3 -65 -146.7 -135 -202l-3 -3h399890z
M100 620v40h399900v-40z M0 241v40h399900v-40zM0 241v40h399900v-40z`,
  // rightarrowabovebar is mostly from glyph U+2192, KaTeX Main
  rightarrowabovebar: `M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32
-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0
13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39
-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5
-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
151.7 139 205zm96 379h399894v40H0zm0 0h399904v40H0z`,
  // The short left harpoon has 0.5em (i.e. 500 units) kern on the left end.
  // Ref from mhchem.sty: \rlap{\raisebox{-.22ex}{$\kern0.5em
  baraboveshortleftharpoon: `M507,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11
c1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17
c2,0.7,5,1,9,1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21
c-32,-87.3,-82.7,-157.7,-152,-211c0,0,-3,-3,-3,-3l399351,0l0,-40
c-398570,0,-399437,0,-399437,0z M593 435 v40 H399500 v-40z
M0 281 v-40 H399908 v40z M0 281 v-40 H399908 v40z`,
  rightharpoonaboveshortbar: `M0,241 l0,40c399126,0,399993,0,399993,0
c4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,
-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6
c-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z
M0 241 v40 H399908 v-40z M0 475 v-40 H399500 v40z M0 475 v-40 H399500 v40z`,
  shortbaraboveleftharpoon: `M7,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11
c1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17c2,0.7,5,1,9,
1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21c-32,-87.3,-82.7,-157.7,
-152,-211c0,0,-3,-3,-3,-3l399907,0l0,-40c-399126,0,-399993,0,-399993,0z
M93 435 v40 H400000 v-40z M500 241 v40 H400000 v-40z M500 241 v40 H400000 v-40z`,
  shortrightharpoonabovebar: `M53,241l0,40c398570,0,399437,0,399437,0
c4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,
-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6
c-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z
M500 241 v40 H399408 v-40z M500 435 v40 H400000 v-40z`
}, gp = function(t, r) {
  switch (t) {
    case "lbrack":
      return "M403 1759 V84 H666 V0 H319 V1759 v" + r + ` v1759 h347 v-84
H403z M403 1759 V0 H319 V1759 v` + r + " v1759 h84z";
    case "rbrack":
      return "M347 1759 V0 H0 V84 H263 V1759 v" + r + ` v1759 H0 v84 H347z
M347 1759 V0 H263 V1759 v` + r + " v1759 h84z";
    case "vert":
      return "M145 15 v585 v" + r + ` v585 c2.667,10,9.667,15,21,15
c10,0,16.667,-5,20,-15 v-585 v` + -r + ` v-585 c-2.667,-10,-9.667,-15,-21,-15
c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v` + r + " v585 h43z";
    case "doublevert":
      return "M145 15 v585 v" + r + ` v585 c2.667,10,9.667,15,21,15
c10,0,16.667,-5,20,-15 v-585 v` + -r + ` v-585 c-2.667,-10,-9.667,-15,-21,-15
c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v` + r + ` v585 h43z
M367 15 v585 v` + r + ` v585 c2.667,10,9.667,15,21,15
c10,0,16.667,-5,20,-15 v-585 v` + -r + ` v-585 c-2.667,-10,-9.667,-15,-21,-15
c-10,0,-16.667,5,-20,15z M410 15 H367 v585 v` + r + " v585 h43z";
    case "lfloor":
      return "M319 602 V0 H403 V602 v" + r + ` v1715 h263 v84 H319z
MM319 602 V0 H403 V602 v` + r + " v1715 H319z";
    case "rfloor":
      return "M319 602 V0 H403 V602 v" + r + ` v1799 H0 v-84 H319z
MM319 602 V0 H403 V602 v` + r + " v1715 H319z";
    case "lceil":
      return "M403 1759 V84 H666 V0 H319 V1759 v" + r + ` v602 h84z
M403 1759 V0 H319 V1759 v` + r + " v602 h84z";
    case "rceil":
      return "M347 1759 V0 H0 V84 H263 V1759 v" + r + ` v602 h84z
M347 1759 V0 h-84 V1759 v` + r + " v602 h84z";
    case "lparen":
      return `M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1
c-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,
-36,557 l0,` + (r + 84) + `c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,
949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9
c0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,
-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189
l0,-` + (r + 92) + `c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,
-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z`;
    case "rparen":
      return `M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,
63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5
c11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,` + (r + 9) + `
c-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664
c-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11
c0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17
c242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558
l0,-` + (r + 144) + `c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,
-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z`;
    default:
      throw new Error("Unknown stretchy delimiter.");
  }
};
class fi {
  // HtmlDomNode
  // Never used; needed for satisfying interface.
  constructor(t) {
    this.children = void 0, this.classes = void 0, this.height = void 0, this.depth = void 0, this.maxFontSize = void 0, this.style = void 0, this.children = t, this.classes = [], this.height = 0, this.depth = 0, this.maxFontSize = 0, this.style = {};
  }
  hasClass(t) {
    return me.contains(this.classes, t);
  }
  /** Convert the fragment into a node. */
  toNode() {
    for (var t = document.createDocumentFragment(), r = 0; r < this.children.length; r++)
      t.appendChild(this.children[r].toNode());
    return t;
  }
  /** Convert the fragment into HTML markup. */
  toMarkup() {
    for (var t = "", r = 0; r < this.children.length; r++)
      t += this.children[r].toMarkup();
    return t;
  }
  /**
   * Converts the math node into a string, similar to innerText. Applies to
   * MathDomNode's only.
   */
  toText() {
    var t = (r) => r.toText();
    return this.children.map(t).join("");
  }
}
var Qt = {
  "AMS-Regular": {
    32: [0, 0, 0, 0, 0.25],
    65: [0, 0.68889, 0, 0, 0.72222],
    66: [0, 0.68889, 0, 0, 0.66667],
    67: [0, 0.68889, 0, 0, 0.72222],
    68: [0, 0.68889, 0, 0, 0.72222],
    69: [0, 0.68889, 0, 0, 0.66667],
    70: [0, 0.68889, 0, 0, 0.61111],
    71: [0, 0.68889, 0, 0, 0.77778],
    72: [0, 0.68889, 0, 0, 0.77778],
    73: [0, 0.68889, 0, 0, 0.38889],
    74: [0.16667, 0.68889, 0, 0, 0.5],
    75: [0, 0.68889, 0, 0, 0.77778],
    76: [0, 0.68889, 0, 0, 0.66667],
    77: [0, 0.68889, 0, 0, 0.94445],
    78: [0, 0.68889, 0, 0, 0.72222],
    79: [0.16667, 0.68889, 0, 0, 0.77778],
    80: [0, 0.68889, 0, 0, 0.61111],
    81: [0.16667, 0.68889, 0, 0, 0.77778],
    82: [0, 0.68889, 0, 0, 0.72222],
    83: [0, 0.68889, 0, 0, 0.55556],
    84: [0, 0.68889, 0, 0, 0.66667],
    85: [0, 0.68889, 0, 0, 0.72222],
    86: [0, 0.68889, 0, 0, 0.72222],
    87: [0, 0.68889, 0, 0, 1],
    88: [0, 0.68889, 0, 0, 0.72222],
    89: [0, 0.68889, 0, 0, 0.72222],
    90: [0, 0.68889, 0, 0, 0.66667],
    107: [0, 0.68889, 0, 0, 0.55556],
    160: [0, 0, 0, 0, 0.25],
    165: [0, 0.675, 0.025, 0, 0.75],
    174: [0.15559, 0.69224, 0, 0, 0.94666],
    240: [0, 0.68889, 0, 0, 0.55556],
    295: [0, 0.68889, 0, 0, 0.54028],
    710: [0, 0.825, 0, 0, 2.33334],
    732: [0, 0.9, 0, 0, 2.33334],
    770: [0, 0.825, 0, 0, 2.33334],
    771: [0, 0.9, 0, 0, 2.33334],
    989: [0.08167, 0.58167, 0, 0, 0.77778],
    1008: [0, 0.43056, 0.04028, 0, 0.66667],
    8245: [0, 0.54986, 0, 0, 0.275],
    8463: [0, 0.68889, 0, 0, 0.54028],
    8487: [0, 0.68889, 0, 0, 0.72222],
    8498: [0, 0.68889, 0, 0, 0.55556],
    8502: [0, 0.68889, 0, 0, 0.66667],
    8503: [0, 0.68889, 0, 0, 0.44445],
    8504: [0, 0.68889, 0, 0, 0.66667],
    8513: [0, 0.68889, 0, 0, 0.63889],
    8592: [-0.03598, 0.46402, 0, 0, 0.5],
    8594: [-0.03598, 0.46402, 0, 0, 0.5],
    8602: [-0.13313, 0.36687, 0, 0, 1],
    8603: [-0.13313, 0.36687, 0, 0, 1],
    8606: [0.01354, 0.52239, 0, 0, 1],
    8608: [0.01354, 0.52239, 0, 0, 1],
    8610: [0.01354, 0.52239, 0, 0, 1.11111],
    8611: [0.01354, 0.52239, 0, 0, 1.11111],
    8619: [0, 0.54986, 0, 0, 1],
    8620: [0, 0.54986, 0, 0, 1],
    8621: [-0.13313, 0.37788, 0, 0, 1.38889],
    8622: [-0.13313, 0.36687, 0, 0, 1],
    8624: [0, 0.69224, 0, 0, 0.5],
    8625: [0, 0.69224, 0, 0, 0.5],
    8630: [0, 0.43056, 0, 0, 1],
    8631: [0, 0.43056, 0, 0, 1],
    8634: [0.08198, 0.58198, 0, 0, 0.77778],
    8635: [0.08198, 0.58198, 0, 0, 0.77778],
    8638: [0.19444, 0.69224, 0, 0, 0.41667],
    8639: [0.19444, 0.69224, 0, 0, 0.41667],
    8642: [0.19444, 0.69224, 0, 0, 0.41667],
    8643: [0.19444, 0.69224, 0, 0, 0.41667],
    8644: [0.1808, 0.675, 0, 0, 1],
    8646: [0.1808, 0.675, 0, 0, 1],
    8647: [0.1808, 0.675, 0, 0, 1],
    8648: [0.19444, 0.69224, 0, 0, 0.83334],
    8649: [0.1808, 0.675, 0, 0, 1],
    8650: [0.19444, 0.69224, 0, 0, 0.83334],
    8651: [0.01354, 0.52239, 0, 0, 1],
    8652: [0.01354, 0.52239, 0, 0, 1],
    8653: [-0.13313, 0.36687, 0, 0, 1],
    8654: [-0.13313, 0.36687, 0, 0, 1],
    8655: [-0.13313, 0.36687, 0, 0, 1],
    8666: [0.13667, 0.63667, 0, 0, 1],
    8667: [0.13667, 0.63667, 0, 0, 1],
    8669: [-0.13313, 0.37788, 0, 0, 1],
    8672: [-0.064, 0.437, 0, 0, 1.334],
    8674: [-0.064, 0.437, 0, 0, 1.334],
    8705: [0, 0.825, 0, 0, 0.5],
    8708: [0, 0.68889, 0, 0, 0.55556],
    8709: [0.08167, 0.58167, 0, 0, 0.77778],
    8717: [0, 0.43056, 0, 0, 0.42917],
    8722: [-0.03598, 0.46402, 0, 0, 0.5],
    8724: [0.08198, 0.69224, 0, 0, 0.77778],
    8726: [0.08167, 0.58167, 0, 0, 0.77778],
    8733: [0, 0.69224, 0, 0, 0.77778],
    8736: [0, 0.69224, 0, 0, 0.72222],
    8737: [0, 0.69224, 0, 0, 0.72222],
    8738: [0.03517, 0.52239, 0, 0, 0.72222],
    8739: [0.08167, 0.58167, 0, 0, 0.22222],
    8740: [0.25142, 0.74111, 0, 0, 0.27778],
    8741: [0.08167, 0.58167, 0, 0, 0.38889],
    8742: [0.25142, 0.74111, 0, 0, 0.5],
    8756: [0, 0.69224, 0, 0, 0.66667],
    8757: [0, 0.69224, 0, 0, 0.66667],
    8764: [-0.13313, 0.36687, 0, 0, 0.77778],
    8765: [-0.13313, 0.37788, 0, 0, 0.77778],
    8769: [-0.13313, 0.36687, 0, 0, 0.77778],
    8770: [-0.03625, 0.46375, 0, 0, 0.77778],
    8774: [0.30274, 0.79383, 0, 0, 0.77778],
    8776: [-0.01688, 0.48312, 0, 0, 0.77778],
    8778: [0.08167, 0.58167, 0, 0, 0.77778],
    8782: [0.06062, 0.54986, 0, 0, 0.77778],
    8783: [0.06062, 0.54986, 0, 0, 0.77778],
    8785: [0.08198, 0.58198, 0, 0, 0.77778],
    8786: [0.08198, 0.58198, 0, 0, 0.77778],
    8787: [0.08198, 0.58198, 0, 0, 0.77778],
    8790: [0, 0.69224, 0, 0, 0.77778],
    8791: [0.22958, 0.72958, 0, 0, 0.77778],
    8796: [0.08198, 0.91667, 0, 0, 0.77778],
    8806: [0.25583, 0.75583, 0, 0, 0.77778],
    8807: [0.25583, 0.75583, 0, 0, 0.77778],
    8808: [0.25142, 0.75726, 0, 0, 0.77778],
    8809: [0.25142, 0.75726, 0, 0, 0.77778],
    8812: [0.25583, 0.75583, 0, 0, 0.5],
    8814: [0.20576, 0.70576, 0, 0, 0.77778],
    8815: [0.20576, 0.70576, 0, 0, 0.77778],
    8816: [0.30274, 0.79383, 0, 0, 0.77778],
    8817: [0.30274, 0.79383, 0, 0, 0.77778],
    8818: [0.22958, 0.72958, 0, 0, 0.77778],
    8819: [0.22958, 0.72958, 0, 0, 0.77778],
    8822: [0.1808, 0.675, 0, 0, 0.77778],
    8823: [0.1808, 0.675, 0, 0, 0.77778],
    8828: [0.13667, 0.63667, 0, 0, 0.77778],
    8829: [0.13667, 0.63667, 0, 0, 0.77778],
    8830: [0.22958, 0.72958, 0, 0, 0.77778],
    8831: [0.22958, 0.72958, 0, 0, 0.77778],
    8832: [0.20576, 0.70576, 0, 0, 0.77778],
    8833: [0.20576, 0.70576, 0, 0, 0.77778],
    8840: [0.30274, 0.79383, 0, 0, 0.77778],
    8841: [0.30274, 0.79383, 0, 0, 0.77778],
    8842: [0.13597, 0.63597, 0, 0, 0.77778],
    8843: [0.13597, 0.63597, 0, 0, 0.77778],
    8847: [0.03517, 0.54986, 0, 0, 0.77778],
    8848: [0.03517, 0.54986, 0, 0, 0.77778],
    8858: [0.08198, 0.58198, 0, 0, 0.77778],
    8859: [0.08198, 0.58198, 0, 0, 0.77778],
    8861: [0.08198, 0.58198, 0, 0, 0.77778],
    8862: [0, 0.675, 0, 0, 0.77778],
    8863: [0, 0.675, 0, 0, 0.77778],
    8864: [0, 0.675, 0, 0, 0.77778],
    8865: [0, 0.675, 0, 0, 0.77778],
    8872: [0, 0.69224, 0, 0, 0.61111],
    8873: [0, 0.69224, 0, 0, 0.72222],
    8874: [0, 0.69224, 0, 0, 0.88889],
    8876: [0, 0.68889, 0, 0, 0.61111],
    8877: [0, 0.68889, 0, 0, 0.61111],
    8878: [0, 0.68889, 0, 0, 0.72222],
    8879: [0, 0.68889, 0, 0, 0.72222],
    8882: [0.03517, 0.54986, 0, 0, 0.77778],
    8883: [0.03517, 0.54986, 0, 0, 0.77778],
    8884: [0.13667, 0.63667, 0, 0, 0.77778],
    8885: [0.13667, 0.63667, 0, 0, 0.77778],
    8888: [0, 0.54986, 0, 0, 1.11111],
    8890: [0.19444, 0.43056, 0, 0, 0.55556],
    8891: [0.19444, 0.69224, 0, 0, 0.61111],
    8892: [0.19444, 0.69224, 0, 0, 0.61111],
    8901: [0, 0.54986, 0, 0, 0.27778],
    8903: [0.08167, 0.58167, 0, 0, 0.77778],
    8905: [0.08167, 0.58167, 0, 0, 0.77778],
    8906: [0.08167, 0.58167, 0, 0, 0.77778],
    8907: [0, 0.69224, 0, 0, 0.77778],
    8908: [0, 0.69224, 0, 0, 0.77778],
    8909: [-0.03598, 0.46402, 0, 0, 0.77778],
    8910: [0, 0.54986, 0, 0, 0.76042],
    8911: [0, 0.54986, 0, 0, 0.76042],
    8912: [0.03517, 0.54986, 0, 0, 0.77778],
    8913: [0.03517, 0.54986, 0, 0, 0.77778],
    8914: [0, 0.54986, 0, 0, 0.66667],
    8915: [0, 0.54986, 0, 0, 0.66667],
    8916: [0, 0.69224, 0, 0, 0.66667],
    8918: [0.0391, 0.5391, 0, 0, 0.77778],
    8919: [0.0391, 0.5391, 0, 0, 0.77778],
    8920: [0.03517, 0.54986, 0, 0, 1.33334],
    8921: [0.03517, 0.54986, 0, 0, 1.33334],
    8922: [0.38569, 0.88569, 0, 0, 0.77778],
    8923: [0.38569, 0.88569, 0, 0, 0.77778],
    8926: [0.13667, 0.63667, 0, 0, 0.77778],
    8927: [0.13667, 0.63667, 0, 0, 0.77778],
    8928: [0.30274, 0.79383, 0, 0, 0.77778],
    8929: [0.30274, 0.79383, 0, 0, 0.77778],
    8934: [0.23222, 0.74111, 0, 0, 0.77778],
    8935: [0.23222, 0.74111, 0, 0, 0.77778],
    8936: [0.23222, 0.74111, 0, 0, 0.77778],
    8937: [0.23222, 0.74111, 0, 0, 0.77778],
    8938: [0.20576, 0.70576, 0, 0, 0.77778],
    8939: [0.20576, 0.70576, 0, 0, 0.77778],
    8940: [0.30274, 0.79383, 0, 0, 0.77778],
    8941: [0.30274, 0.79383, 0, 0, 0.77778],
    8994: [0.19444, 0.69224, 0, 0, 0.77778],
    8995: [0.19444, 0.69224, 0, 0, 0.77778],
    9416: [0.15559, 0.69224, 0, 0, 0.90222],
    9484: [0, 0.69224, 0, 0, 0.5],
    9488: [0, 0.69224, 0, 0, 0.5],
    9492: [0, 0.37788, 0, 0, 0.5],
    9496: [0, 0.37788, 0, 0, 0.5],
    9585: [0.19444, 0.68889, 0, 0, 0.88889],
    9586: [0.19444, 0.74111, 0, 0, 0.88889],
    9632: [0, 0.675, 0, 0, 0.77778],
    9633: [0, 0.675, 0, 0, 0.77778],
    9650: [0, 0.54986, 0, 0, 0.72222],
    9651: [0, 0.54986, 0, 0, 0.72222],
    9654: [0.03517, 0.54986, 0, 0, 0.77778],
    9660: [0, 0.54986, 0, 0, 0.72222],
    9661: [0, 0.54986, 0, 0, 0.72222],
    9664: [0.03517, 0.54986, 0, 0, 0.77778],
    9674: [0.11111, 0.69224, 0, 0, 0.66667],
    9733: [0.19444, 0.69224, 0, 0, 0.94445],
    10003: [0, 0.69224, 0, 0, 0.83334],
    10016: [0, 0.69224, 0, 0, 0.83334],
    10731: [0.11111, 0.69224, 0, 0, 0.66667],
    10846: [0.19444, 0.75583, 0, 0, 0.61111],
    10877: [0.13667, 0.63667, 0, 0, 0.77778],
    10878: [0.13667, 0.63667, 0, 0, 0.77778],
    10885: [0.25583, 0.75583, 0, 0, 0.77778],
    10886: [0.25583, 0.75583, 0, 0, 0.77778],
    10887: [0.13597, 0.63597, 0, 0, 0.77778],
    10888: [0.13597, 0.63597, 0, 0, 0.77778],
    10889: [0.26167, 0.75726, 0, 0, 0.77778],
    10890: [0.26167, 0.75726, 0, 0, 0.77778],
    10891: [0.48256, 0.98256, 0, 0, 0.77778],
    10892: [0.48256, 0.98256, 0, 0, 0.77778],
    10901: [0.13667, 0.63667, 0, 0, 0.77778],
    10902: [0.13667, 0.63667, 0, 0, 0.77778],
    10933: [0.25142, 0.75726, 0, 0, 0.77778],
    10934: [0.25142, 0.75726, 0, 0, 0.77778],
    10935: [0.26167, 0.75726, 0, 0, 0.77778],
    10936: [0.26167, 0.75726, 0, 0, 0.77778],
    10937: [0.26167, 0.75726, 0, 0, 0.77778],
    10938: [0.26167, 0.75726, 0, 0, 0.77778],
    10949: [0.25583, 0.75583, 0, 0, 0.77778],
    10950: [0.25583, 0.75583, 0, 0, 0.77778],
    10955: [0.28481, 0.79383, 0, 0, 0.77778],
    10956: [0.28481, 0.79383, 0, 0, 0.77778],
    57350: [0.08167, 0.58167, 0, 0, 0.22222],
    57351: [0.08167, 0.58167, 0, 0, 0.38889],
    57352: [0.08167, 0.58167, 0, 0, 0.77778],
    57353: [0, 0.43056, 0.04028, 0, 0.66667],
    57356: [0.25142, 0.75726, 0, 0, 0.77778],
    57357: [0.25142, 0.75726, 0, 0, 0.77778],
    57358: [0.41951, 0.91951, 0, 0, 0.77778],
    57359: [0.30274, 0.79383, 0, 0, 0.77778],
    57360: [0.30274, 0.79383, 0, 0, 0.77778],
    57361: [0.41951, 0.91951, 0, 0, 0.77778],
    57366: [0.25142, 0.75726, 0, 0, 0.77778],
    57367: [0.25142, 0.75726, 0, 0, 0.77778],
    57368: [0.25142, 0.75726, 0, 0, 0.77778],
    57369: [0.25142, 0.75726, 0, 0, 0.77778],
    57370: [0.13597, 0.63597, 0, 0, 0.77778],
    57371: [0.13597, 0.63597, 0, 0, 0.77778]
  },
  "Caligraphic-Regular": {
    32: [0, 0, 0, 0, 0.25],
    65: [0, 0.68333, 0, 0.19445, 0.79847],
    66: [0, 0.68333, 0.03041, 0.13889, 0.65681],
    67: [0, 0.68333, 0.05834, 0.13889, 0.52653],
    68: [0, 0.68333, 0.02778, 0.08334, 0.77139],
    69: [0, 0.68333, 0.08944, 0.11111, 0.52778],
    70: [0, 0.68333, 0.09931, 0.11111, 0.71875],
    71: [0.09722, 0.68333, 0.0593, 0.11111, 0.59487],
    72: [0, 0.68333, 965e-5, 0.11111, 0.84452],
    73: [0, 0.68333, 0.07382, 0, 0.54452],
    74: [0.09722, 0.68333, 0.18472, 0.16667, 0.67778],
    75: [0, 0.68333, 0.01445, 0.05556, 0.76195],
    76: [0, 0.68333, 0, 0.13889, 0.68972],
    77: [0, 0.68333, 0, 0.13889, 1.2009],
    78: [0, 0.68333, 0.14736, 0.08334, 0.82049],
    79: [0, 0.68333, 0.02778, 0.11111, 0.79611],
    80: [0, 0.68333, 0.08222, 0.08334, 0.69556],
    81: [0.09722, 0.68333, 0, 0.11111, 0.81667],
    82: [0, 0.68333, 0, 0.08334, 0.8475],
    83: [0, 0.68333, 0.075, 0.13889, 0.60556],
    84: [0, 0.68333, 0.25417, 0, 0.54464],
    85: [0, 0.68333, 0.09931, 0.08334, 0.62583],
    86: [0, 0.68333, 0.08222, 0, 0.61278],
    87: [0, 0.68333, 0.08222, 0.08334, 0.98778],
    88: [0, 0.68333, 0.14643, 0.13889, 0.7133],
    89: [0.09722, 0.68333, 0.08222, 0.08334, 0.66834],
    90: [0, 0.68333, 0.07944, 0.13889, 0.72473],
    160: [0, 0, 0, 0, 0.25]
  },
  "Fraktur-Regular": {
    32: [0, 0, 0, 0, 0.25],
    33: [0, 0.69141, 0, 0, 0.29574],
    34: [0, 0.69141, 0, 0, 0.21471],
    38: [0, 0.69141, 0, 0, 0.73786],
    39: [0, 0.69141, 0, 0, 0.21201],
    40: [0.24982, 0.74947, 0, 0, 0.38865],
    41: [0.24982, 0.74947, 0, 0, 0.38865],
    42: [0, 0.62119, 0, 0, 0.27764],
    43: [0.08319, 0.58283, 0, 0, 0.75623],
    44: [0, 0.10803, 0, 0, 0.27764],
    45: [0.08319, 0.58283, 0, 0, 0.75623],
    46: [0, 0.10803, 0, 0, 0.27764],
    47: [0.24982, 0.74947, 0, 0, 0.50181],
    48: [0, 0.47534, 0, 0, 0.50181],
    49: [0, 0.47534, 0, 0, 0.50181],
    50: [0, 0.47534, 0, 0, 0.50181],
    51: [0.18906, 0.47534, 0, 0, 0.50181],
    52: [0.18906, 0.47534, 0, 0, 0.50181],
    53: [0.18906, 0.47534, 0, 0, 0.50181],
    54: [0, 0.69141, 0, 0, 0.50181],
    55: [0.18906, 0.47534, 0, 0, 0.50181],
    56: [0, 0.69141, 0, 0, 0.50181],
    57: [0.18906, 0.47534, 0, 0, 0.50181],
    58: [0, 0.47534, 0, 0, 0.21606],
    59: [0.12604, 0.47534, 0, 0, 0.21606],
    61: [-0.13099, 0.36866, 0, 0, 0.75623],
    63: [0, 0.69141, 0, 0, 0.36245],
    65: [0, 0.69141, 0, 0, 0.7176],
    66: [0, 0.69141, 0, 0, 0.88397],
    67: [0, 0.69141, 0, 0, 0.61254],
    68: [0, 0.69141, 0, 0, 0.83158],
    69: [0, 0.69141, 0, 0, 0.66278],
    70: [0.12604, 0.69141, 0, 0, 0.61119],
    71: [0, 0.69141, 0, 0, 0.78539],
    72: [0.06302, 0.69141, 0, 0, 0.7203],
    73: [0, 0.69141, 0, 0, 0.55448],
    74: [0.12604, 0.69141, 0, 0, 0.55231],
    75: [0, 0.69141, 0, 0, 0.66845],
    76: [0, 0.69141, 0, 0, 0.66602],
    77: [0, 0.69141, 0, 0, 1.04953],
    78: [0, 0.69141, 0, 0, 0.83212],
    79: [0, 0.69141, 0, 0, 0.82699],
    80: [0.18906, 0.69141, 0, 0, 0.82753],
    81: [0.03781, 0.69141, 0, 0, 0.82699],
    82: [0, 0.69141, 0, 0, 0.82807],
    83: [0, 0.69141, 0, 0, 0.82861],
    84: [0, 0.69141, 0, 0, 0.66899],
    85: [0, 0.69141, 0, 0, 0.64576],
    86: [0, 0.69141, 0, 0, 0.83131],
    87: [0, 0.69141, 0, 0, 1.04602],
    88: [0, 0.69141, 0, 0, 0.71922],
    89: [0.18906, 0.69141, 0, 0, 0.83293],
    90: [0.12604, 0.69141, 0, 0, 0.60201],
    91: [0.24982, 0.74947, 0, 0, 0.27764],
    93: [0.24982, 0.74947, 0, 0, 0.27764],
    94: [0, 0.69141, 0, 0, 0.49965],
    97: [0, 0.47534, 0, 0, 0.50046],
    98: [0, 0.69141, 0, 0, 0.51315],
    99: [0, 0.47534, 0, 0, 0.38946],
    100: [0, 0.62119, 0, 0, 0.49857],
    101: [0, 0.47534, 0, 0, 0.40053],
    102: [0.18906, 0.69141, 0, 0, 0.32626],
    103: [0.18906, 0.47534, 0, 0, 0.5037],
    104: [0.18906, 0.69141, 0, 0, 0.52126],
    105: [0, 0.69141, 0, 0, 0.27899],
    106: [0, 0.69141, 0, 0, 0.28088],
    107: [0, 0.69141, 0, 0, 0.38946],
    108: [0, 0.69141, 0, 0, 0.27953],
    109: [0, 0.47534, 0, 0, 0.76676],
    110: [0, 0.47534, 0, 0, 0.52666],
    111: [0, 0.47534, 0, 0, 0.48885],
    112: [0.18906, 0.52396, 0, 0, 0.50046],
    113: [0.18906, 0.47534, 0, 0, 0.48912],
    114: [0, 0.47534, 0, 0, 0.38919],
    115: [0, 0.47534, 0, 0, 0.44266],
    116: [0, 0.62119, 0, 0, 0.33301],
    117: [0, 0.47534, 0, 0, 0.5172],
    118: [0, 0.52396, 0, 0, 0.5118],
    119: [0, 0.52396, 0, 0, 0.77351],
    120: [0.18906, 0.47534, 0, 0, 0.38865],
    121: [0.18906, 0.47534, 0, 0, 0.49884],
    122: [0.18906, 0.47534, 0, 0, 0.39054],
    160: [0, 0, 0, 0, 0.25],
    8216: [0, 0.69141, 0, 0, 0.21471],
    8217: [0, 0.69141, 0, 0, 0.21471],
    58112: [0, 0.62119, 0, 0, 0.49749],
    58113: [0, 0.62119, 0, 0, 0.4983],
    58114: [0.18906, 0.69141, 0, 0, 0.33328],
    58115: [0.18906, 0.69141, 0, 0, 0.32923],
    58116: [0.18906, 0.47534, 0, 0, 0.50343],
    58117: [0, 0.69141, 0, 0, 0.33301],
    58118: [0, 0.62119, 0, 0, 0.33409],
    58119: [0, 0.47534, 0, 0, 0.50073]
  },
  "Main-Bold": {
    32: [0, 0, 0, 0, 0.25],
    33: [0, 0.69444, 0, 0, 0.35],
    34: [0, 0.69444, 0, 0, 0.60278],
    35: [0.19444, 0.69444, 0, 0, 0.95833],
    36: [0.05556, 0.75, 0, 0, 0.575],
    37: [0.05556, 0.75, 0, 0, 0.95833],
    38: [0, 0.69444, 0, 0, 0.89444],
    39: [0, 0.69444, 0, 0, 0.31944],
    40: [0.25, 0.75, 0, 0, 0.44722],
    41: [0.25, 0.75, 0, 0, 0.44722],
    42: [0, 0.75, 0, 0, 0.575],
    43: [0.13333, 0.63333, 0, 0, 0.89444],
    44: [0.19444, 0.15556, 0, 0, 0.31944],
    45: [0, 0.44444, 0, 0, 0.38333],
    46: [0, 0.15556, 0, 0, 0.31944],
    47: [0.25, 0.75, 0, 0, 0.575],
    48: [0, 0.64444, 0, 0, 0.575],
    49: [0, 0.64444, 0, 0, 0.575],
    50: [0, 0.64444, 0, 0, 0.575],
    51: [0, 0.64444, 0, 0, 0.575],
    52: [0, 0.64444, 0, 0, 0.575],
    53: [0, 0.64444, 0, 0, 0.575],
    54: [0, 0.64444, 0, 0, 0.575],
    55: [0, 0.64444, 0, 0, 0.575],
    56: [0, 0.64444, 0, 0, 0.575],
    57: [0, 0.64444, 0, 0, 0.575],
    58: [0, 0.44444, 0, 0, 0.31944],
    59: [0.19444, 0.44444, 0, 0, 0.31944],
    60: [0.08556, 0.58556, 0, 0, 0.89444],
    61: [-0.10889, 0.39111, 0, 0, 0.89444],
    62: [0.08556, 0.58556, 0, 0, 0.89444],
    63: [0, 0.69444, 0, 0, 0.54305],
    64: [0, 0.69444, 0, 0, 0.89444],
    65: [0, 0.68611, 0, 0, 0.86944],
    66: [0, 0.68611, 0, 0, 0.81805],
    67: [0, 0.68611, 0, 0, 0.83055],
    68: [0, 0.68611, 0, 0, 0.88194],
    69: [0, 0.68611, 0, 0, 0.75555],
    70: [0, 0.68611, 0, 0, 0.72361],
    71: [0, 0.68611, 0, 0, 0.90416],
    72: [0, 0.68611, 0, 0, 0.9],
    73: [0, 0.68611, 0, 0, 0.43611],
    74: [0, 0.68611, 0, 0, 0.59444],
    75: [0, 0.68611, 0, 0, 0.90138],
    76: [0, 0.68611, 0, 0, 0.69166],
    77: [0, 0.68611, 0, 0, 1.09166],
    78: [0, 0.68611, 0, 0, 0.9],
    79: [0, 0.68611, 0, 0, 0.86388],
    80: [0, 0.68611, 0, 0, 0.78611],
    81: [0.19444, 0.68611, 0, 0, 0.86388],
    82: [0, 0.68611, 0, 0, 0.8625],
    83: [0, 0.68611, 0, 0, 0.63889],
    84: [0, 0.68611, 0, 0, 0.8],
    85: [0, 0.68611, 0, 0, 0.88472],
    86: [0, 0.68611, 0.01597, 0, 0.86944],
    87: [0, 0.68611, 0.01597, 0, 1.18888],
    88: [0, 0.68611, 0, 0, 0.86944],
    89: [0, 0.68611, 0.02875, 0, 0.86944],
    90: [0, 0.68611, 0, 0, 0.70277],
    91: [0.25, 0.75, 0, 0, 0.31944],
    92: [0.25, 0.75, 0, 0, 0.575],
    93: [0.25, 0.75, 0, 0, 0.31944],
    94: [0, 0.69444, 0, 0, 0.575],
    95: [0.31, 0.13444, 0.03194, 0, 0.575],
    97: [0, 0.44444, 0, 0, 0.55902],
    98: [0, 0.69444, 0, 0, 0.63889],
    99: [0, 0.44444, 0, 0, 0.51111],
    100: [0, 0.69444, 0, 0, 0.63889],
    101: [0, 0.44444, 0, 0, 0.52708],
    102: [0, 0.69444, 0.10903, 0, 0.35139],
    103: [0.19444, 0.44444, 0.01597, 0, 0.575],
    104: [0, 0.69444, 0, 0, 0.63889],
    105: [0, 0.69444, 0, 0, 0.31944],
    106: [0.19444, 0.69444, 0, 0, 0.35139],
    107: [0, 0.69444, 0, 0, 0.60694],
    108: [0, 0.69444, 0, 0, 0.31944],
    109: [0, 0.44444, 0, 0, 0.95833],
    110: [0, 0.44444, 0, 0, 0.63889],
    111: [0, 0.44444, 0, 0, 0.575],
    112: [0.19444, 0.44444, 0, 0, 0.63889],
    113: [0.19444, 0.44444, 0, 0, 0.60694],
    114: [0, 0.44444, 0, 0, 0.47361],
    115: [0, 0.44444, 0, 0, 0.45361],
    116: [0, 0.63492, 0, 0, 0.44722],
    117: [0, 0.44444, 0, 0, 0.63889],
    118: [0, 0.44444, 0.01597, 0, 0.60694],
    119: [0, 0.44444, 0.01597, 0, 0.83055],
    120: [0, 0.44444, 0, 0, 0.60694],
    121: [0.19444, 0.44444, 0.01597, 0, 0.60694],
    122: [0, 0.44444, 0, 0, 0.51111],
    123: [0.25, 0.75, 0, 0, 0.575],
    124: [0.25, 0.75, 0, 0, 0.31944],
    125: [0.25, 0.75, 0, 0, 0.575],
    126: [0.35, 0.34444, 0, 0, 0.575],
    160: [0, 0, 0, 0, 0.25],
    163: [0, 0.69444, 0, 0, 0.86853],
    168: [0, 0.69444, 0, 0, 0.575],
    172: [0, 0.44444, 0, 0, 0.76666],
    176: [0, 0.69444, 0, 0, 0.86944],
    177: [0.13333, 0.63333, 0, 0, 0.89444],
    184: [0.17014, 0, 0, 0, 0.51111],
    198: [0, 0.68611, 0, 0, 1.04166],
    215: [0.13333, 0.63333, 0, 0, 0.89444],
    216: [0.04861, 0.73472, 0, 0, 0.89444],
    223: [0, 0.69444, 0, 0, 0.59722],
    230: [0, 0.44444, 0, 0, 0.83055],
    247: [0.13333, 0.63333, 0, 0, 0.89444],
    248: [0.09722, 0.54167, 0, 0, 0.575],
    305: [0, 0.44444, 0, 0, 0.31944],
    338: [0, 0.68611, 0, 0, 1.16944],
    339: [0, 0.44444, 0, 0, 0.89444],
    567: [0.19444, 0.44444, 0, 0, 0.35139],
    710: [0, 0.69444, 0, 0, 0.575],
    711: [0, 0.63194, 0, 0, 0.575],
    713: [0, 0.59611, 0, 0, 0.575],
    714: [0, 0.69444, 0, 0, 0.575],
    715: [0, 0.69444, 0, 0, 0.575],
    728: [0, 0.69444, 0, 0, 0.575],
    729: [0, 0.69444, 0, 0, 0.31944],
    730: [0, 0.69444, 0, 0, 0.86944],
    732: [0, 0.69444, 0, 0, 0.575],
    733: [0, 0.69444, 0, 0, 0.575],
    915: [0, 0.68611, 0, 0, 0.69166],
    916: [0, 0.68611, 0, 0, 0.95833],
    920: [0, 0.68611, 0, 0, 0.89444],
    923: [0, 0.68611, 0, 0, 0.80555],
    926: [0, 0.68611, 0, 0, 0.76666],
    928: [0, 0.68611, 0, 0, 0.9],
    931: [0, 0.68611, 0, 0, 0.83055],
    933: [0, 0.68611, 0, 0, 0.89444],
    934: [0, 0.68611, 0, 0, 0.83055],
    936: [0, 0.68611, 0, 0, 0.89444],
    937: [0, 0.68611, 0, 0, 0.83055],
    8211: [0, 0.44444, 0.03194, 0, 0.575],
    8212: [0, 0.44444, 0.03194, 0, 1.14999],
    8216: [0, 0.69444, 0, 0, 0.31944],
    8217: [0, 0.69444, 0, 0, 0.31944],
    8220: [0, 0.69444, 0, 0, 0.60278],
    8221: [0, 0.69444, 0, 0, 0.60278],
    8224: [0.19444, 0.69444, 0, 0, 0.51111],
    8225: [0.19444, 0.69444, 0, 0, 0.51111],
    8242: [0, 0.55556, 0, 0, 0.34444],
    8407: [0, 0.72444, 0.15486, 0, 0.575],
    8463: [0, 0.69444, 0, 0, 0.66759],
    8465: [0, 0.69444, 0, 0, 0.83055],
    8467: [0, 0.69444, 0, 0, 0.47361],
    8472: [0.19444, 0.44444, 0, 0, 0.74027],
    8476: [0, 0.69444, 0, 0, 0.83055],
    8501: [0, 0.69444, 0, 0, 0.70277],
    8592: [-0.10889, 0.39111, 0, 0, 1.14999],
    8593: [0.19444, 0.69444, 0, 0, 0.575],
    8594: [-0.10889, 0.39111, 0, 0, 1.14999],
    8595: [0.19444, 0.69444, 0, 0, 0.575],
    8596: [-0.10889, 0.39111, 0, 0, 1.14999],
    8597: [0.25, 0.75, 0, 0, 0.575],
    8598: [0.19444, 0.69444, 0, 0, 1.14999],
    8599: [0.19444, 0.69444, 0, 0, 1.14999],
    8600: [0.19444, 0.69444, 0, 0, 1.14999],
    8601: [0.19444, 0.69444, 0, 0, 1.14999],
    8636: [-0.10889, 0.39111, 0, 0, 1.14999],
    8637: [-0.10889, 0.39111, 0, 0, 1.14999],
    8640: [-0.10889, 0.39111, 0, 0, 1.14999],
    8641: [-0.10889, 0.39111, 0, 0, 1.14999],
    8656: [-0.10889, 0.39111, 0, 0, 1.14999],
    8657: [0.19444, 0.69444, 0, 0, 0.70277],
    8658: [-0.10889, 0.39111, 0, 0, 1.14999],
    8659: [0.19444, 0.69444, 0, 0, 0.70277],
    8660: [-0.10889, 0.39111, 0, 0, 1.14999],
    8661: [0.25, 0.75, 0, 0, 0.70277],
    8704: [0, 0.69444, 0, 0, 0.63889],
    8706: [0, 0.69444, 0.06389, 0, 0.62847],
    8707: [0, 0.69444, 0, 0, 0.63889],
    8709: [0.05556, 0.75, 0, 0, 0.575],
    8711: [0, 0.68611, 0, 0, 0.95833],
    8712: [0.08556, 0.58556, 0, 0, 0.76666],
    8715: [0.08556, 0.58556, 0, 0, 0.76666],
    8722: [0.13333, 0.63333, 0, 0, 0.89444],
    8723: [0.13333, 0.63333, 0, 0, 0.89444],
    8725: [0.25, 0.75, 0, 0, 0.575],
    8726: [0.25, 0.75, 0, 0, 0.575],
    8727: [-0.02778, 0.47222, 0, 0, 0.575],
    8728: [-0.02639, 0.47361, 0, 0, 0.575],
    8729: [-0.02639, 0.47361, 0, 0, 0.575],
    8730: [0.18, 0.82, 0, 0, 0.95833],
    8733: [0, 0.44444, 0, 0, 0.89444],
    8734: [0, 0.44444, 0, 0, 1.14999],
    8736: [0, 0.69224, 0, 0, 0.72222],
    8739: [0.25, 0.75, 0, 0, 0.31944],
    8741: [0.25, 0.75, 0, 0, 0.575],
    8743: [0, 0.55556, 0, 0, 0.76666],
    8744: [0, 0.55556, 0, 0, 0.76666],
    8745: [0, 0.55556, 0, 0, 0.76666],
    8746: [0, 0.55556, 0, 0, 0.76666],
    8747: [0.19444, 0.69444, 0.12778, 0, 0.56875],
    8764: [-0.10889, 0.39111, 0, 0, 0.89444],
    8768: [0.19444, 0.69444, 0, 0, 0.31944],
    8771: [222e-5, 0.50222, 0, 0, 0.89444],
    8773: [0.027, 0.638, 0, 0, 0.894],
    8776: [0.02444, 0.52444, 0, 0, 0.89444],
    8781: [222e-5, 0.50222, 0, 0, 0.89444],
    8801: [222e-5, 0.50222, 0, 0, 0.89444],
    8804: [0.19667, 0.69667, 0, 0, 0.89444],
    8805: [0.19667, 0.69667, 0, 0, 0.89444],
    8810: [0.08556, 0.58556, 0, 0, 1.14999],
    8811: [0.08556, 0.58556, 0, 0, 1.14999],
    8826: [0.08556, 0.58556, 0, 0, 0.89444],
    8827: [0.08556, 0.58556, 0, 0, 0.89444],
    8834: [0.08556, 0.58556, 0, 0, 0.89444],
    8835: [0.08556, 0.58556, 0, 0, 0.89444],
    8838: [0.19667, 0.69667, 0, 0, 0.89444],
    8839: [0.19667, 0.69667, 0, 0, 0.89444],
    8846: [0, 0.55556, 0, 0, 0.76666],
    8849: [0.19667, 0.69667, 0, 0, 0.89444],
    8850: [0.19667, 0.69667, 0, 0, 0.89444],
    8851: [0, 0.55556, 0, 0, 0.76666],
    8852: [0, 0.55556, 0, 0, 0.76666],
    8853: [0.13333, 0.63333, 0, 0, 0.89444],
    8854: [0.13333, 0.63333, 0, 0, 0.89444],
    8855: [0.13333, 0.63333, 0, 0, 0.89444],
    8856: [0.13333, 0.63333, 0, 0, 0.89444],
    8857: [0.13333, 0.63333, 0, 0, 0.89444],
    8866: [0, 0.69444, 0, 0, 0.70277],
    8867: [0, 0.69444, 0, 0, 0.70277],
    8868: [0, 0.69444, 0, 0, 0.89444],
    8869: [0, 0.69444, 0, 0, 0.89444],
    8900: [-0.02639, 0.47361, 0, 0, 0.575],
    8901: [-0.02639, 0.47361, 0, 0, 0.31944],
    8902: [-0.02778, 0.47222, 0, 0, 0.575],
    8968: [0.25, 0.75, 0, 0, 0.51111],
    8969: [0.25, 0.75, 0, 0, 0.51111],
    8970: [0.25, 0.75, 0, 0, 0.51111],
    8971: [0.25, 0.75, 0, 0, 0.51111],
    8994: [-0.13889, 0.36111, 0, 0, 1.14999],
    8995: [-0.13889, 0.36111, 0, 0, 1.14999],
    9651: [0.19444, 0.69444, 0, 0, 1.02222],
    9657: [-0.02778, 0.47222, 0, 0, 0.575],
    9661: [0.19444, 0.69444, 0, 0, 1.02222],
    9667: [-0.02778, 0.47222, 0, 0, 0.575],
    9711: [0.19444, 0.69444, 0, 0, 1.14999],
    9824: [0.12963, 0.69444, 0, 0, 0.89444],
    9825: [0.12963, 0.69444, 0, 0, 0.89444],
    9826: [0.12963, 0.69444, 0, 0, 0.89444],
    9827: [0.12963, 0.69444, 0, 0, 0.89444],
    9837: [0, 0.75, 0, 0, 0.44722],
    9838: [0.19444, 0.69444, 0, 0, 0.44722],
    9839: [0.19444, 0.69444, 0, 0, 0.44722],
    10216: [0.25, 0.75, 0, 0, 0.44722],
    10217: [0.25, 0.75, 0, 0, 0.44722],
    10815: [0, 0.68611, 0, 0, 0.9],
    10927: [0.19667, 0.69667, 0, 0, 0.89444],
    10928: [0.19667, 0.69667, 0, 0, 0.89444],
    57376: [0.19444, 0.69444, 0, 0, 0]
  },
  "Main-BoldItalic": {
    32: [0, 0, 0, 0, 0.25],
    33: [0, 0.69444, 0.11417, 0, 0.38611],
    34: [0, 0.69444, 0.07939, 0, 0.62055],
    35: [0.19444, 0.69444, 0.06833, 0, 0.94444],
    37: [0.05556, 0.75, 0.12861, 0, 0.94444],
    38: [0, 0.69444, 0.08528, 0, 0.88555],
    39: [0, 0.69444, 0.12945, 0, 0.35555],
    40: [0.25, 0.75, 0.15806, 0, 0.47333],
    41: [0.25, 0.75, 0.03306, 0, 0.47333],
    42: [0, 0.75, 0.14333, 0, 0.59111],
    43: [0.10333, 0.60333, 0.03306, 0, 0.88555],
    44: [0.19444, 0.14722, 0, 0, 0.35555],
    45: [0, 0.44444, 0.02611, 0, 0.41444],
    46: [0, 0.14722, 0, 0, 0.35555],
    47: [0.25, 0.75, 0.15806, 0, 0.59111],
    48: [0, 0.64444, 0.13167, 0, 0.59111],
    49: [0, 0.64444, 0.13167, 0, 0.59111],
    50: [0, 0.64444, 0.13167, 0, 0.59111],
    51: [0, 0.64444, 0.13167, 0, 0.59111],
    52: [0.19444, 0.64444, 0.13167, 0, 0.59111],
    53: [0, 0.64444, 0.13167, 0, 0.59111],
    54: [0, 0.64444, 0.13167, 0, 0.59111],
    55: [0.19444, 0.64444, 0.13167, 0, 0.59111],
    56: [0, 0.64444, 0.13167, 0, 0.59111],
    57: [0, 0.64444, 0.13167, 0, 0.59111],
    58: [0, 0.44444, 0.06695, 0, 0.35555],
    59: [0.19444, 0.44444, 0.06695, 0, 0.35555],
    61: [-0.10889, 0.39111, 0.06833, 0, 0.88555],
    63: [0, 0.69444, 0.11472, 0, 0.59111],
    64: [0, 0.69444, 0.09208, 0, 0.88555],
    65: [0, 0.68611, 0, 0, 0.86555],
    66: [0, 0.68611, 0.0992, 0, 0.81666],
    67: [0, 0.68611, 0.14208, 0, 0.82666],
    68: [0, 0.68611, 0.09062, 0, 0.87555],
    69: [0, 0.68611, 0.11431, 0, 0.75666],
    70: [0, 0.68611, 0.12903, 0, 0.72722],
    71: [0, 0.68611, 0.07347, 0, 0.89527],
    72: [0, 0.68611, 0.17208, 0, 0.8961],
    73: [0, 0.68611, 0.15681, 0, 0.47166],
    74: [0, 0.68611, 0.145, 0, 0.61055],
    75: [0, 0.68611, 0.14208, 0, 0.89499],
    76: [0, 0.68611, 0, 0, 0.69777],
    77: [0, 0.68611, 0.17208, 0, 1.07277],
    78: [0, 0.68611, 0.17208, 0, 0.8961],
    79: [0, 0.68611, 0.09062, 0, 0.85499],
    80: [0, 0.68611, 0.0992, 0, 0.78721],
    81: [0.19444, 0.68611, 0.09062, 0, 0.85499],
    82: [0, 0.68611, 0.02559, 0, 0.85944],
    83: [0, 0.68611, 0.11264, 0, 0.64999],
    84: [0, 0.68611, 0.12903, 0, 0.7961],
    85: [0, 0.68611, 0.17208, 0, 0.88083],
    86: [0, 0.68611, 0.18625, 0, 0.86555],
    87: [0, 0.68611, 0.18625, 0, 1.15999],
    88: [0, 0.68611, 0.15681, 0, 0.86555],
    89: [0, 0.68611, 0.19803, 0, 0.86555],
    90: [0, 0.68611, 0.14208, 0, 0.70888],
    91: [0.25, 0.75, 0.1875, 0, 0.35611],
    93: [0.25, 0.75, 0.09972, 0, 0.35611],
    94: [0, 0.69444, 0.06709, 0, 0.59111],
    95: [0.31, 0.13444, 0.09811, 0, 0.59111],
    97: [0, 0.44444, 0.09426, 0, 0.59111],
    98: [0, 0.69444, 0.07861, 0, 0.53222],
    99: [0, 0.44444, 0.05222, 0, 0.53222],
    100: [0, 0.69444, 0.10861, 0, 0.59111],
    101: [0, 0.44444, 0.085, 0, 0.53222],
    102: [0.19444, 0.69444, 0.21778, 0, 0.4],
    103: [0.19444, 0.44444, 0.105, 0, 0.53222],
    104: [0, 0.69444, 0.09426, 0, 0.59111],
    105: [0, 0.69326, 0.11387, 0, 0.35555],
    106: [0.19444, 0.69326, 0.1672, 0, 0.35555],
    107: [0, 0.69444, 0.11111, 0, 0.53222],
    108: [0, 0.69444, 0.10861, 0, 0.29666],
    109: [0, 0.44444, 0.09426, 0, 0.94444],
    110: [0, 0.44444, 0.09426, 0, 0.64999],
    111: [0, 0.44444, 0.07861, 0, 0.59111],
    112: [0.19444, 0.44444, 0.07861, 0, 0.59111],
    113: [0.19444, 0.44444, 0.105, 0, 0.53222],
    114: [0, 0.44444, 0.11111, 0, 0.50167],
    115: [0, 0.44444, 0.08167, 0, 0.48694],
    116: [0, 0.63492, 0.09639, 0, 0.385],
    117: [0, 0.44444, 0.09426, 0, 0.62055],
    118: [0, 0.44444, 0.11111, 0, 0.53222],
    119: [0, 0.44444, 0.11111, 0, 0.76777],
    120: [0, 0.44444, 0.12583, 0, 0.56055],
    121: [0.19444, 0.44444, 0.105, 0, 0.56166],
    122: [0, 0.44444, 0.13889, 0, 0.49055],
    126: [0.35, 0.34444, 0.11472, 0, 0.59111],
    160: [0, 0, 0, 0, 0.25],
    168: [0, 0.69444, 0.11473, 0, 0.59111],
    176: [0, 0.69444, 0, 0, 0.94888],
    184: [0.17014, 0, 0, 0, 0.53222],
    198: [0, 0.68611, 0.11431, 0, 1.02277],
    216: [0.04861, 0.73472, 0.09062, 0, 0.88555],
    223: [0.19444, 0.69444, 0.09736, 0, 0.665],
    230: [0, 0.44444, 0.085, 0, 0.82666],
    248: [0.09722, 0.54167, 0.09458, 0, 0.59111],
    305: [0, 0.44444, 0.09426, 0, 0.35555],
    338: [0, 0.68611, 0.11431, 0, 1.14054],
    339: [0, 0.44444, 0.085, 0, 0.82666],
    567: [0.19444, 0.44444, 0.04611, 0, 0.385],
    710: [0, 0.69444, 0.06709, 0, 0.59111],
    711: [0, 0.63194, 0.08271, 0, 0.59111],
    713: [0, 0.59444, 0.10444, 0, 0.59111],
    714: [0, 0.69444, 0.08528, 0, 0.59111],
    715: [0, 0.69444, 0, 0, 0.59111],
    728: [0, 0.69444, 0.10333, 0, 0.59111],
    729: [0, 0.69444, 0.12945, 0, 0.35555],
    730: [0, 0.69444, 0, 0, 0.94888],
    732: [0, 0.69444, 0.11472, 0, 0.59111],
    733: [0, 0.69444, 0.11472, 0, 0.59111],
    915: [0, 0.68611, 0.12903, 0, 0.69777],
    916: [0, 0.68611, 0, 0, 0.94444],
    920: [0, 0.68611, 0.09062, 0, 0.88555],
    923: [0, 0.68611, 0, 0, 0.80666],
    926: [0, 0.68611, 0.15092, 0, 0.76777],
    928: [0, 0.68611, 0.17208, 0, 0.8961],
    931: [0, 0.68611, 0.11431, 0, 0.82666],
    933: [0, 0.68611, 0.10778, 0, 0.88555],
    934: [0, 0.68611, 0.05632, 0, 0.82666],
    936: [0, 0.68611, 0.10778, 0, 0.88555],
    937: [0, 0.68611, 0.0992, 0, 0.82666],
    8211: [0, 0.44444, 0.09811, 0, 0.59111],
    8212: [0, 0.44444, 0.09811, 0, 1.18221],
    8216: [0, 0.69444, 0.12945, 0, 0.35555],
    8217: [0, 0.69444, 0.12945, 0, 0.35555],
    8220: [0, 0.69444, 0.16772, 0, 0.62055],
    8221: [0, 0.69444, 0.07939, 0, 0.62055]
  },
  "Main-Italic": {
    32: [0, 0, 0, 0, 0.25],
    33: [0, 0.69444, 0.12417, 0, 0.30667],
    34: [0, 0.69444, 0.06961, 0, 0.51444],
    35: [0.19444, 0.69444, 0.06616, 0, 0.81777],
    37: [0.05556, 0.75, 0.13639, 0, 0.81777],
    38: [0, 0.69444, 0.09694, 0, 0.76666],
    39: [0, 0.69444, 0.12417, 0, 0.30667],
    40: [0.25, 0.75, 0.16194, 0, 0.40889],
    41: [0.25, 0.75, 0.03694, 0, 0.40889],
    42: [0, 0.75, 0.14917, 0, 0.51111],
    43: [0.05667, 0.56167, 0.03694, 0, 0.76666],
    44: [0.19444, 0.10556, 0, 0, 0.30667],
    45: [0, 0.43056, 0.02826, 0, 0.35778],
    46: [0, 0.10556, 0, 0, 0.30667],
    47: [0.25, 0.75, 0.16194, 0, 0.51111],
    48: [0, 0.64444, 0.13556, 0, 0.51111],
    49: [0, 0.64444, 0.13556, 0, 0.51111],
    50: [0, 0.64444, 0.13556, 0, 0.51111],
    51: [0, 0.64444, 0.13556, 0, 0.51111],
    52: [0.19444, 0.64444, 0.13556, 0, 0.51111],
    53: [0, 0.64444, 0.13556, 0, 0.51111],
    54: [0, 0.64444, 0.13556, 0, 0.51111],
    55: [0.19444, 0.64444, 0.13556, 0, 0.51111],
    56: [0, 0.64444, 0.13556, 0, 0.51111],
    57: [0, 0.64444, 0.13556, 0, 0.51111],
    58: [0, 0.43056, 0.0582, 0, 0.30667],
    59: [0.19444, 0.43056, 0.0582, 0, 0.30667],
    61: [-0.13313, 0.36687, 0.06616, 0, 0.76666],
    63: [0, 0.69444, 0.1225, 0, 0.51111],
    64: [0, 0.69444, 0.09597, 0, 0.76666],
    65: [0, 0.68333, 0, 0, 0.74333],
    66: [0, 0.68333, 0.10257, 0, 0.70389],
    67: [0, 0.68333, 0.14528, 0, 0.71555],
    68: [0, 0.68333, 0.09403, 0, 0.755],
    69: [0, 0.68333, 0.12028, 0, 0.67833],
    70: [0, 0.68333, 0.13305, 0, 0.65277],
    71: [0, 0.68333, 0.08722, 0, 0.77361],
    72: [0, 0.68333, 0.16389, 0, 0.74333],
    73: [0, 0.68333, 0.15806, 0, 0.38555],
    74: [0, 0.68333, 0.14028, 0, 0.525],
    75: [0, 0.68333, 0.14528, 0, 0.76888],
    76: [0, 0.68333, 0, 0, 0.62722],
    77: [0, 0.68333, 0.16389, 0, 0.89666],
    78: [0, 0.68333, 0.16389, 0, 0.74333],
    79: [0, 0.68333, 0.09403, 0, 0.76666],
    80: [0, 0.68333, 0.10257, 0, 0.67833],
    81: [0.19444, 0.68333, 0.09403, 0, 0.76666],
    82: [0, 0.68333, 0.03868, 0, 0.72944],
    83: [0, 0.68333, 0.11972, 0, 0.56222],
    84: [0, 0.68333, 0.13305, 0, 0.71555],
    85: [0, 0.68333, 0.16389, 0, 0.74333],
    86: [0, 0.68333, 0.18361, 0, 0.74333],
    87: [0, 0.68333, 0.18361, 0, 0.99888],
    88: [0, 0.68333, 0.15806, 0, 0.74333],
    89: [0, 0.68333, 0.19383, 0, 0.74333],
    90: [0, 0.68333, 0.14528, 0, 0.61333],
    91: [0.25, 0.75, 0.1875, 0, 0.30667],
    93: [0.25, 0.75, 0.10528, 0, 0.30667],
    94: [0, 0.69444, 0.06646, 0, 0.51111],
    95: [0.31, 0.12056, 0.09208, 0, 0.51111],
    97: [0, 0.43056, 0.07671, 0, 0.51111],
    98: [0, 0.69444, 0.06312, 0, 0.46],
    99: [0, 0.43056, 0.05653, 0, 0.46],
    100: [0, 0.69444, 0.10333, 0, 0.51111],
    101: [0, 0.43056, 0.07514, 0, 0.46],
    102: [0.19444, 0.69444, 0.21194, 0, 0.30667],
    103: [0.19444, 0.43056, 0.08847, 0, 0.46],
    104: [0, 0.69444, 0.07671, 0, 0.51111],
    105: [0, 0.65536, 0.1019, 0, 0.30667],
    106: [0.19444, 0.65536, 0.14467, 0, 0.30667],
    107: [0, 0.69444, 0.10764, 0, 0.46],
    108: [0, 0.69444, 0.10333, 0, 0.25555],
    109: [0, 0.43056, 0.07671, 0, 0.81777],
    110: [0, 0.43056, 0.07671, 0, 0.56222],
    111: [0, 0.43056, 0.06312, 0, 0.51111],
    112: [0.19444, 0.43056, 0.06312, 0, 0.51111],
    113: [0.19444, 0.43056, 0.08847, 0, 0.46],
    114: [0, 0.43056, 0.10764, 0, 0.42166],
    115: [0, 0.43056, 0.08208, 0, 0.40889],
    116: [0, 0.61508, 0.09486, 0, 0.33222],
    117: [0, 0.43056, 0.07671, 0, 0.53666],
    118: [0, 0.43056, 0.10764, 0, 0.46],
    119: [0, 0.43056, 0.10764, 0, 0.66444],
    120: [0, 0.43056, 0.12042, 0, 0.46389],
    121: [0.19444, 0.43056, 0.08847, 0, 0.48555],
    122: [0, 0.43056, 0.12292, 0, 0.40889],
    126: [0.35, 0.31786, 0.11585, 0, 0.51111],
    160: [0, 0, 0, 0, 0.25],
    168: [0, 0.66786, 0.10474, 0, 0.51111],
    176: [0, 0.69444, 0, 0, 0.83129],
    184: [0.17014, 0, 0, 0, 0.46],
    198: [0, 0.68333, 0.12028, 0, 0.88277],
    216: [0.04861, 0.73194, 0.09403, 0, 0.76666],
    223: [0.19444, 0.69444, 0.10514, 0, 0.53666],
    230: [0, 0.43056, 0.07514, 0, 0.71555],
    248: [0.09722, 0.52778, 0.09194, 0, 0.51111],
    338: [0, 0.68333, 0.12028, 0, 0.98499],
    339: [0, 0.43056, 0.07514, 0, 0.71555],
    710: [0, 0.69444, 0.06646, 0, 0.51111],
    711: [0, 0.62847, 0.08295, 0, 0.51111],
    713: [0, 0.56167, 0.10333, 0, 0.51111],
    714: [0, 0.69444, 0.09694, 0, 0.51111],
    715: [0, 0.69444, 0, 0, 0.51111],
    728: [0, 0.69444, 0.10806, 0, 0.51111],
    729: [0, 0.66786, 0.11752, 0, 0.30667],
    730: [0, 0.69444, 0, 0, 0.83129],
    732: [0, 0.66786, 0.11585, 0, 0.51111],
    733: [0, 0.69444, 0.1225, 0, 0.51111],
    915: [0, 0.68333, 0.13305, 0, 0.62722],
    916: [0, 0.68333, 0, 0, 0.81777],
    920: [0, 0.68333, 0.09403, 0, 0.76666],
    923: [0, 0.68333, 0, 0, 0.69222],
    926: [0, 0.68333, 0.15294, 0, 0.66444],
    928: [0, 0.68333, 0.16389, 0, 0.74333],
    931: [0, 0.68333, 0.12028, 0, 0.71555],
    933: [0, 0.68333, 0.11111, 0, 0.76666],
    934: [0, 0.68333, 0.05986, 0, 0.71555],
    936: [0, 0.68333, 0.11111, 0, 0.76666],
    937: [0, 0.68333, 0.10257, 0, 0.71555],
    8211: [0, 0.43056, 0.09208, 0, 0.51111],
    8212: [0, 0.43056, 0.09208, 0, 1.02222],
    8216: [0, 0.69444, 0.12417, 0, 0.30667],
    8217: [0, 0.69444, 0.12417, 0, 0.30667],
    8220: [0, 0.69444, 0.1685, 0, 0.51444],
    8221: [0, 0.69444, 0.06961, 0, 0.51444],
    8463: [0, 0.68889, 0, 0, 0.54028]
  },
  "Main-Regular": {
    32: [0, 0, 0, 0, 0.25],
    33: [0, 0.69444, 0, 0, 0.27778],
    34: [0, 0.69444, 0, 0, 0.5],
    35: [0.19444, 0.69444, 0, 0, 0.83334],
    36: [0.05556, 0.75, 0, 0, 0.5],
    37: [0.05556, 0.75, 0, 0, 0.83334],
    38: [0, 0.69444, 0, 0, 0.77778],
    39: [0, 0.69444, 0, 0, 0.27778],
    40: [0.25, 0.75, 0, 0, 0.38889],
    41: [0.25, 0.75, 0, 0, 0.38889],
    42: [0, 0.75, 0, 0, 0.5],
    43: [0.08333, 0.58333, 0, 0, 0.77778],
    44: [0.19444, 0.10556, 0, 0, 0.27778],
    45: [0, 0.43056, 0, 0, 0.33333],
    46: [0, 0.10556, 0, 0, 0.27778],
    47: [0.25, 0.75, 0, 0, 0.5],
    48: [0, 0.64444, 0, 0, 0.5],
    49: [0, 0.64444, 0, 0, 0.5],
    50: [0, 0.64444, 0, 0, 0.5],
    51: [0, 0.64444, 0, 0, 0.5],
    52: [0, 0.64444, 0, 0, 0.5],
    53: [0, 0.64444, 0, 0, 0.5],
    54: [0, 0.64444, 0, 0, 0.5],
    55: [0, 0.64444, 0, 0, 0.5],
    56: [0, 0.64444, 0, 0, 0.5],
    57: [0, 0.64444, 0, 0, 0.5],
    58: [0, 0.43056, 0, 0, 0.27778],
    59: [0.19444, 0.43056, 0, 0, 0.27778],
    60: [0.0391, 0.5391, 0, 0, 0.77778],
    61: [-0.13313, 0.36687, 0, 0, 0.77778],
    62: [0.0391, 0.5391, 0, 0, 0.77778],
    63: [0, 0.69444, 0, 0, 0.47222],
    64: [0, 0.69444, 0, 0, 0.77778],
    65: [0, 0.68333, 0, 0, 0.75],
    66: [0, 0.68333, 0, 0, 0.70834],
    67: [0, 0.68333, 0, 0, 0.72222],
    68: [0, 0.68333, 0, 0, 0.76389],
    69: [0, 0.68333, 0, 0, 0.68056],
    70: [0, 0.68333, 0, 0, 0.65278],
    71: [0, 0.68333, 0, 0, 0.78472],
    72: [0, 0.68333, 0, 0, 0.75],
    73: [0, 0.68333, 0, 0, 0.36111],
    74: [0, 0.68333, 0, 0, 0.51389],
    75: [0, 0.68333, 0, 0, 0.77778],
    76: [0, 0.68333, 0, 0, 0.625],
    77: [0, 0.68333, 0, 0, 0.91667],
    78: [0, 0.68333, 0, 0, 0.75],
    79: [0, 0.68333, 0, 0, 0.77778],
    80: [0, 0.68333, 0, 0, 0.68056],
    81: [0.19444, 0.68333, 0, 0, 0.77778],
    82: [0, 0.68333, 0, 0, 0.73611],
    83: [0, 0.68333, 0, 0, 0.55556],
    84: [0, 0.68333, 0, 0, 0.72222],
    85: [0, 0.68333, 0, 0, 0.75],
    86: [0, 0.68333, 0.01389, 0, 0.75],
    87: [0, 0.68333, 0.01389, 0, 1.02778],
    88: [0, 0.68333, 0, 0, 0.75],
    89: [0, 0.68333, 0.025, 0, 0.75],
    90: [0, 0.68333, 0, 0, 0.61111],
    91: [0.25, 0.75, 0, 0, 0.27778],
    92: [0.25, 0.75, 0, 0, 0.5],
    93: [0.25, 0.75, 0, 0, 0.27778],
    94: [0, 0.69444, 0, 0, 0.5],
    95: [0.31, 0.12056, 0.02778, 0, 0.5],
    97: [0, 0.43056, 0, 0, 0.5],
    98: [0, 0.69444, 0, 0, 0.55556],
    99: [0, 0.43056, 0, 0, 0.44445],
    100: [0, 0.69444, 0, 0, 0.55556],
    101: [0, 0.43056, 0, 0, 0.44445],
    102: [0, 0.69444, 0.07778, 0, 0.30556],
    103: [0.19444, 0.43056, 0.01389, 0, 0.5],
    104: [0, 0.69444, 0, 0, 0.55556],
    105: [0, 0.66786, 0, 0, 0.27778],
    106: [0.19444, 0.66786, 0, 0, 0.30556],
    107: [0, 0.69444, 0, 0, 0.52778],
    108: [0, 0.69444, 0, 0, 0.27778],
    109: [0, 0.43056, 0, 0, 0.83334],
    110: [0, 0.43056, 0, 0, 0.55556],
    111: [0, 0.43056, 0, 0, 0.5],
    112: [0.19444, 0.43056, 0, 0, 0.55556],
    113: [0.19444, 0.43056, 0, 0, 0.52778],
    114: [0, 0.43056, 0, 0, 0.39167],
    115: [0, 0.43056, 0, 0, 0.39445],
    116: [0, 0.61508, 0, 0, 0.38889],
    117: [0, 0.43056, 0, 0, 0.55556],
    118: [0, 0.43056, 0.01389, 0, 0.52778],
    119: [0, 0.43056, 0.01389, 0, 0.72222],
    120: [0, 0.43056, 0, 0, 0.52778],
    121: [0.19444, 0.43056, 0.01389, 0, 0.52778],
    122: [0, 0.43056, 0, 0, 0.44445],
    123: [0.25, 0.75, 0, 0, 0.5],
    124: [0.25, 0.75, 0, 0, 0.27778],
    125: [0.25, 0.75, 0, 0, 0.5],
    126: [0.35, 0.31786, 0, 0, 0.5],
    160: [0, 0, 0, 0, 0.25],
    163: [0, 0.69444, 0, 0, 0.76909],
    167: [0.19444, 0.69444, 0, 0, 0.44445],
    168: [0, 0.66786, 0, 0, 0.5],
    172: [0, 0.43056, 0, 0, 0.66667],
    176: [0, 0.69444, 0, 0, 0.75],
    177: [0.08333, 0.58333, 0, 0, 0.77778],
    182: [0.19444, 0.69444, 0, 0, 0.61111],
    184: [0.17014, 0, 0, 0, 0.44445],
    198: [0, 0.68333, 0, 0, 0.90278],
    215: [0.08333, 0.58333, 0, 0, 0.77778],
    216: [0.04861, 0.73194, 0, 0, 0.77778],
    223: [0, 0.69444, 0, 0, 0.5],
    230: [0, 0.43056, 0, 0, 0.72222],
    247: [0.08333, 0.58333, 0, 0, 0.77778],
    248: [0.09722, 0.52778, 0, 0, 0.5],
    305: [0, 0.43056, 0, 0, 0.27778],
    338: [0, 0.68333, 0, 0, 1.01389],
    339: [0, 0.43056, 0, 0, 0.77778],
    567: [0.19444, 0.43056, 0, 0, 0.30556],
    710: [0, 0.69444, 0, 0, 0.5],
    711: [0, 0.62847, 0, 0, 0.5],
    713: [0, 0.56778, 0, 0, 0.5],
    714: [0, 0.69444, 0, 0, 0.5],
    715: [0, 0.69444, 0, 0, 0.5],
    728: [0, 0.69444, 0, 0, 0.5],
    729: [0, 0.66786, 0, 0, 0.27778],
    730: [0, 0.69444, 0, 0, 0.75],
    732: [0, 0.66786, 0, 0, 0.5],
    733: [0, 0.69444, 0, 0, 0.5],
    915: [0, 0.68333, 0, 0, 0.625],
    916: [0, 0.68333, 0, 0, 0.83334],
    920: [0, 0.68333, 0, 0, 0.77778],
    923: [0, 0.68333, 0, 0, 0.69445],
    926: [0, 0.68333, 0, 0, 0.66667],
    928: [0, 0.68333, 0, 0, 0.75],
    931: [0, 0.68333, 0, 0, 0.72222],
    933: [0, 0.68333, 0, 0, 0.77778],
    934: [0, 0.68333, 0, 0, 0.72222],
    936: [0, 0.68333, 0, 0, 0.77778],
    937: [0, 0.68333, 0, 0, 0.72222],
    8211: [0, 0.43056, 0.02778, 0, 0.5],
    8212: [0, 0.43056, 0.02778, 0, 1],
    8216: [0, 0.69444, 0, 0, 0.27778],
    8217: [0, 0.69444, 0, 0, 0.27778],
    8220: [0, 0.69444, 0, 0, 0.5],
    8221: [0, 0.69444, 0, 0, 0.5],
    8224: [0.19444, 0.69444, 0, 0, 0.44445],
    8225: [0.19444, 0.69444, 0, 0, 0.44445],
    8230: [0, 0.123, 0, 0, 1.172],
    8242: [0, 0.55556, 0, 0, 0.275],
    8407: [0, 0.71444, 0.15382, 0, 0.5],
    8463: [0, 0.68889, 0, 0, 0.54028],
    8465: [0, 0.69444, 0, 0, 0.72222],
    8467: [0, 0.69444, 0, 0.11111, 0.41667],
    8472: [0.19444, 0.43056, 0, 0.11111, 0.63646],
    8476: [0, 0.69444, 0, 0, 0.72222],
    8501: [0, 0.69444, 0, 0, 0.61111],
    8592: [-0.13313, 0.36687, 0, 0, 1],
    8593: [0.19444, 0.69444, 0, 0, 0.5],
    8594: [-0.13313, 0.36687, 0, 0, 1],
    8595: [0.19444, 0.69444, 0, 0, 0.5],
    8596: [-0.13313, 0.36687, 0, 0, 1],
    8597: [0.25, 0.75, 0, 0, 0.5],
    8598: [0.19444, 0.69444, 0, 0, 1],
    8599: [0.19444, 0.69444, 0, 0, 1],
    8600: [0.19444, 0.69444, 0, 0, 1],
    8601: [0.19444, 0.69444, 0, 0, 1],
    8614: [0.011, 0.511, 0, 0, 1],
    8617: [0.011, 0.511, 0, 0, 1.126],
    8618: [0.011, 0.511, 0, 0, 1.126],
    8636: [-0.13313, 0.36687, 0, 0, 1],
    8637: [-0.13313, 0.36687, 0, 0, 1],
    8640: [-0.13313, 0.36687, 0, 0, 1],
    8641: [-0.13313, 0.36687, 0, 0, 1],
    8652: [0.011, 0.671, 0, 0, 1],
    8656: [-0.13313, 0.36687, 0, 0, 1],
    8657: [0.19444, 0.69444, 0, 0, 0.61111],
    8658: [-0.13313, 0.36687, 0, 0, 1],
    8659: [0.19444, 0.69444, 0, 0, 0.61111],
    8660: [-0.13313, 0.36687, 0, 0, 1],
    8661: [0.25, 0.75, 0, 0, 0.61111],
    8704: [0, 0.69444, 0, 0, 0.55556],
    8706: [0, 0.69444, 0.05556, 0.08334, 0.5309],
    8707: [0, 0.69444, 0, 0, 0.55556],
    8709: [0.05556, 0.75, 0, 0, 0.5],
    8711: [0, 0.68333, 0, 0, 0.83334],
    8712: [0.0391, 0.5391, 0, 0, 0.66667],
    8715: [0.0391, 0.5391, 0, 0, 0.66667],
    8722: [0.08333, 0.58333, 0, 0, 0.77778],
    8723: [0.08333, 0.58333, 0, 0, 0.77778],
    8725: [0.25, 0.75, 0, 0, 0.5],
    8726: [0.25, 0.75, 0, 0, 0.5],
    8727: [-0.03472, 0.46528, 0, 0, 0.5],
    8728: [-0.05555, 0.44445, 0, 0, 0.5],
    8729: [-0.05555, 0.44445, 0, 0, 0.5],
    8730: [0.2, 0.8, 0, 0, 0.83334],
    8733: [0, 0.43056, 0, 0, 0.77778],
    8734: [0, 0.43056, 0, 0, 1],
    8736: [0, 0.69224, 0, 0, 0.72222],
    8739: [0.25, 0.75, 0, 0, 0.27778],
    8741: [0.25, 0.75, 0, 0, 0.5],
    8743: [0, 0.55556, 0, 0, 0.66667],
    8744: [0, 0.55556, 0, 0, 0.66667],
    8745: [0, 0.55556, 0, 0, 0.66667],
    8746: [0, 0.55556, 0, 0, 0.66667],
    8747: [0.19444, 0.69444, 0.11111, 0, 0.41667],
    8764: [-0.13313, 0.36687, 0, 0, 0.77778],
    8768: [0.19444, 0.69444, 0, 0, 0.27778],
    8771: [-0.03625, 0.46375, 0, 0, 0.77778],
    8773: [-0.022, 0.589, 0, 0, 0.778],
    8776: [-0.01688, 0.48312, 0, 0, 0.77778],
    8781: [-0.03625, 0.46375, 0, 0, 0.77778],
    8784: [-0.133, 0.673, 0, 0, 0.778],
    8801: [-0.03625, 0.46375, 0, 0, 0.77778],
    8804: [0.13597, 0.63597, 0, 0, 0.77778],
    8805: [0.13597, 0.63597, 0, 0, 0.77778],
    8810: [0.0391, 0.5391, 0, 0, 1],
    8811: [0.0391, 0.5391, 0, 0, 1],
    8826: [0.0391, 0.5391, 0, 0, 0.77778],
    8827: [0.0391, 0.5391, 0, 0, 0.77778],
    8834: [0.0391, 0.5391, 0, 0, 0.77778],
    8835: [0.0391, 0.5391, 0, 0, 0.77778],
    8838: [0.13597, 0.63597, 0, 0, 0.77778],
    8839: [0.13597, 0.63597, 0, 0, 0.77778],
    8846: [0, 0.55556, 0, 0, 0.66667],
    8849: [0.13597, 0.63597, 0, 0, 0.77778],
    8850: [0.13597, 0.63597, 0, 0, 0.77778],
    8851: [0, 0.55556, 0, 0, 0.66667],
    8852: [0, 0.55556, 0, 0, 0.66667],
    8853: [0.08333, 0.58333, 0, 0, 0.77778],
    8854: [0.08333, 0.58333, 0, 0, 0.77778],
    8855: [0.08333, 0.58333, 0, 0, 0.77778],
    8856: [0.08333, 0.58333, 0, 0, 0.77778],
    8857: [0.08333, 0.58333, 0, 0, 0.77778],
    8866: [0, 0.69444, 0, 0, 0.61111],
    8867: [0, 0.69444, 0, 0, 0.61111],
    8868: [0, 0.69444, 0, 0, 0.77778],
    8869: [0, 0.69444, 0, 0, 0.77778],
    8872: [0.249, 0.75, 0, 0, 0.867],
    8900: [-0.05555, 0.44445, 0, 0, 0.5],
    8901: [-0.05555, 0.44445, 0, 0, 0.27778],
    8902: [-0.03472, 0.46528, 0, 0, 0.5],
    8904: [5e-3, 0.505, 0, 0, 0.9],
    8942: [0.03, 0.903, 0, 0, 0.278],
    8943: [-0.19, 0.313, 0, 0, 1.172],
    8945: [-0.1, 0.823, 0, 0, 1.282],
    8968: [0.25, 0.75, 0, 0, 0.44445],
    8969: [0.25, 0.75, 0, 0, 0.44445],
    8970: [0.25, 0.75, 0, 0, 0.44445],
    8971: [0.25, 0.75, 0, 0, 0.44445],
    8994: [-0.14236, 0.35764, 0, 0, 1],
    8995: [-0.14236, 0.35764, 0, 0, 1],
    9136: [0.244, 0.744, 0, 0, 0.412],
    9137: [0.244, 0.745, 0, 0, 0.412],
    9651: [0.19444, 0.69444, 0, 0, 0.88889],
    9657: [-0.03472, 0.46528, 0, 0, 0.5],
    9661: [0.19444, 0.69444, 0, 0, 0.88889],
    9667: [-0.03472, 0.46528, 0, 0, 0.5],
    9711: [0.19444, 0.69444, 0, 0, 1],
    9824: [0.12963, 0.69444, 0, 0, 0.77778],
    9825: [0.12963, 0.69444, 0, 0, 0.77778],
    9826: [0.12963, 0.69444, 0, 0, 0.77778],
    9827: [0.12963, 0.69444, 0, 0, 0.77778],
    9837: [0, 0.75, 0, 0, 0.38889],
    9838: [0.19444, 0.69444, 0, 0, 0.38889],
    9839: [0.19444, 0.69444, 0, 0, 0.38889],
    10216: [0.25, 0.75, 0, 0, 0.38889],
    10217: [0.25, 0.75, 0, 0, 0.38889],
    10222: [0.244, 0.744, 0, 0, 0.412],
    10223: [0.244, 0.745, 0, 0, 0.412],
    10229: [0.011, 0.511, 0, 0, 1.609],
    10230: [0.011, 0.511, 0, 0, 1.638],
    10231: [0.011, 0.511, 0, 0, 1.859],
    10232: [0.024, 0.525, 0, 0, 1.609],
    10233: [0.024, 0.525, 0, 0, 1.638],
    10234: [0.024, 0.525, 0, 0, 1.858],
    10236: [0.011, 0.511, 0, 0, 1.638],
    10815: [0, 0.68333, 0, 0, 0.75],
    10927: [0.13597, 0.63597, 0, 0, 0.77778],
    10928: [0.13597, 0.63597, 0, 0, 0.77778],
    57376: [0.19444, 0.69444, 0, 0, 0]
  },
  "Math-BoldItalic": {
    32: [0, 0, 0, 0, 0.25],
    48: [0, 0.44444, 0, 0, 0.575],
    49: [0, 0.44444, 0, 0, 0.575],
    50: [0, 0.44444, 0, 0, 0.575],
    51: [0.19444, 0.44444, 0, 0, 0.575],
    52: [0.19444, 0.44444, 0, 0, 0.575],
    53: [0.19444, 0.44444, 0, 0, 0.575],
    54: [0, 0.64444, 0, 0, 0.575],
    55: [0.19444, 0.44444, 0, 0, 0.575],
    56: [0, 0.64444, 0, 0, 0.575],
    57: [0.19444, 0.44444, 0, 0, 0.575],
    65: [0, 0.68611, 0, 0, 0.86944],
    66: [0, 0.68611, 0.04835, 0, 0.8664],
    67: [0, 0.68611, 0.06979, 0, 0.81694],
    68: [0, 0.68611, 0.03194, 0, 0.93812],
    69: [0, 0.68611, 0.05451, 0, 0.81007],
    70: [0, 0.68611, 0.15972, 0, 0.68889],
    71: [0, 0.68611, 0, 0, 0.88673],
    72: [0, 0.68611, 0.08229, 0, 0.98229],
    73: [0, 0.68611, 0.07778, 0, 0.51111],
    74: [0, 0.68611, 0.10069, 0, 0.63125],
    75: [0, 0.68611, 0.06979, 0, 0.97118],
    76: [0, 0.68611, 0, 0, 0.75555],
    77: [0, 0.68611, 0.11424, 0, 1.14201],
    78: [0, 0.68611, 0.11424, 0, 0.95034],
    79: [0, 0.68611, 0.03194, 0, 0.83666],
    80: [0, 0.68611, 0.15972, 0, 0.72309],
    81: [0.19444, 0.68611, 0, 0, 0.86861],
    82: [0, 0.68611, 421e-5, 0, 0.87235],
    83: [0, 0.68611, 0.05382, 0, 0.69271],
    84: [0, 0.68611, 0.15972, 0, 0.63663],
    85: [0, 0.68611, 0.11424, 0, 0.80027],
    86: [0, 0.68611, 0.25555, 0, 0.67778],
    87: [0, 0.68611, 0.15972, 0, 1.09305],
    88: [0, 0.68611, 0.07778, 0, 0.94722],
    89: [0, 0.68611, 0.25555, 0, 0.67458],
    90: [0, 0.68611, 0.06979, 0, 0.77257],
    97: [0, 0.44444, 0, 0, 0.63287],
    98: [0, 0.69444, 0, 0, 0.52083],
    99: [0, 0.44444, 0, 0, 0.51342],
    100: [0, 0.69444, 0, 0, 0.60972],
    101: [0, 0.44444, 0, 0, 0.55361],
    102: [0.19444, 0.69444, 0.11042, 0, 0.56806],
    103: [0.19444, 0.44444, 0.03704, 0, 0.5449],
    104: [0, 0.69444, 0, 0, 0.66759],
    105: [0, 0.69326, 0, 0, 0.4048],
    106: [0.19444, 0.69326, 0.0622, 0, 0.47083],
    107: [0, 0.69444, 0.01852, 0, 0.6037],
    108: [0, 0.69444, 88e-4, 0, 0.34815],
    109: [0, 0.44444, 0, 0, 1.0324],
    110: [0, 0.44444, 0, 0, 0.71296],
    111: [0, 0.44444, 0, 0, 0.58472],
    112: [0.19444, 0.44444, 0, 0, 0.60092],
    113: [0.19444, 0.44444, 0.03704, 0, 0.54213],
    114: [0, 0.44444, 0.03194, 0, 0.5287],
    115: [0, 0.44444, 0, 0, 0.53125],
    116: [0, 0.63492, 0, 0, 0.41528],
    117: [0, 0.44444, 0, 0, 0.68102],
    118: [0, 0.44444, 0.03704, 0, 0.56666],
    119: [0, 0.44444, 0.02778, 0, 0.83148],
    120: [0, 0.44444, 0, 0, 0.65903],
    121: [0.19444, 0.44444, 0.03704, 0, 0.59028],
    122: [0, 0.44444, 0.04213, 0, 0.55509],
    160: [0, 0, 0, 0, 0.25],
    915: [0, 0.68611, 0.15972, 0, 0.65694],
    916: [0, 0.68611, 0, 0, 0.95833],
    920: [0, 0.68611, 0.03194, 0, 0.86722],
    923: [0, 0.68611, 0, 0, 0.80555],
    926: [0, 0.68611, 0.07458, 0, 0.84125],
    928: [0, 0.68611, 0.08229, 0, 0.98229],
    931: [0, 0.68611, 0.05451, 0, 0.88507],
    933: [0, 0.68611, 0.15972, 0, 0.67083],
    934: [0, 0.68611, 0, 0, 0.76666],
    936: [0, 0.68611, 0.11653, 0, 0.71402],
    937: [0, 0.68611, 0.04835, 0, 0.8789],
    945: [0, 0.44444, 0, 0, 0.76064],
    946: [0.19444, 0.69444, 0.03403, 0, 0.65972],
    947: [0.19444, 0.44444, 0.06389, 0, 0.59003],
    948: [0, 0.69444, 0.03819, 0, 0.52222],
    949: [0, 0.44444, 0, 0, 0.52882],
    950: [0.19444, 0.69444, 0.06215, 0, 0.50833],
    951: [0.19444, 0.44444, 0.03704, 0, 0.6],
    952: [0, 0.69444, 0.03194, 0, 0.5618],
    953: [0, 0.44444, 0, 0, 0.41204],
    954: [0, 0.44444, 0, 0, 0.66759],
    955: [0, 0.69444, 0, 0, 0.67083],
    956: [0.19444, 0.44444, 0, 0, 0.70787],
    957: [0, 0.44444, 0.06898, 0, 0.57685],
    958: [0.19444, 0.69444, 0.03021, 0, 0.50833],
    959: [0, 0.44444, 0, 0, 0.58472],
    960: [0, 0.44444, 0.03704, 0, 0.68241],
    961: [0.19444, 0.44444, 0, 0, 0.6118],
    962: [0.09722, 0.44444, 0.07917, 0, 0.42361],
    963: [0, 0.44444, 0.03704, 0, 0.68588],
    964: [0, 0.44444, 0.13472, 0, 0.52083],
    965: [0, 0.44444, 0.03704, 0, 0.63055],
    966: [0.19444, 0.44444, 0, 0, 0.74722],
    967: [0.19444, 0.44444, 0, 0, 0.71805],
    968: [0.19444, 0.69444, 0.03704, 0, 0.75833],
    969: [0, 0.44444, 0.03704, 0, 0.71782],
    977: [0, 0.69444, 0, 0, 0.69155],
    981: [0.19444, 0.69444, 0, 0, 0.7125],
    982: [0, 0.44444, 0.03194, 0, 0.975],
    1009: [0.19444, 0.44444, 0, 0, 0.6118],
    1013: [0, 0.44444, 0, 0, 0.48333],
    57649: [0, 0.44444, 0, 0, 0.39352],
    57911: [0.19444, 0.44444, 0, 0, 0.43889]
  },
  "Math-Italic": {
    32: [0, 0, 0, 0, 0.25],
    48: [0, 0.43056, 0, 0, 0.5],
    49: [0, 0.43056, 0, 0, 0.5],
    50: [0, 0.43056, 0, 0, 0.5],
    51: [0.19444, 0.43056, 0, 0, 0.5],
    52: [0.19444, 0.43056, 0, 0, 0.5],
    53: [0.19444, 0.43056, 0, 0, 0.5],
    54: [0, 0.64444, 0, 0, 0.5],
    55: [0.19444, 0.43056, 0, 0, 0.5],
    56: [0, 0.64444, 0, 0, 0.5],
    57: [0.19444, 0.43056, 0, 0, 0.5],
    65: [0, 0.68333, 0, 0.13889, 0.75],
    66: [0, 0.68333, 0.05017, 0.08334, 0.75851],
    67: [0, 0.68333, 0.07153, 0.08334, 0.71472],
    68: [0, 0.68333, 0.02778, 0.05556, 0.82792],
    69: [0, 0.68333, 0.05764, 0.08334, 0.7382],
    70: [0, 0.68333, 0.13889, 0.08334, 0.64306],
    71: [0, 0.68333, 0, 0.08334, 0.78625],
    72: [0, 0.68333, 0.08125, 0.05556, 0.83125],
    73: [0, 0.68333, 0.07847, 0.11111, 0.43958],
    74: [0, 0.68333, 0.09618, 0.16667, 0.55451],
    75: [0, 0.68333, 0.07153, 0.05556, 0.84931],
    76: [0, 0.68333, 0, 0.02778, 0.68056],
    77: [0, 0.68333, 0.10903, 0.08334, 0.97014],
    78: [0, 0.68333, 0.10903, 0.08334, 0.80347],
    79: [0, 0.68333, 0.02778, 0.08334, 0.76278],
    80: [0, 0.68333, 0.13889, 0.08334, 0.64201],
    81: [0.19444, 0.68333, 0, 0.08334, 0.79056],
    82: [0, 0.68333, 773e-5, 0.08334, 0.75929],
    83: [0, 0.68333, 0.05764, 0.08334, 0.6132],
    84: [0, 0.68333, 0.13889, 0.08334, 0.58438],
    85: [0, 0.68333, 0.10903, 0.02778, 0.68278],
    86: [0, 0.68333, 0.22222, 0, 0.58333],
    87: [0, 0.68333, 0.13889, 0, 0.94445],
    88: [0, 0.68333, 0.07847, 0.08334, 0.82847],
    89: [0, 0.68333, 0.22222, 0, 0.58056],
    90: [0, 0.68333, 0.07153, 0.08334, 0.68264],
    97: [0, 0.43056, 0, 0, 0.52859],
    98: [0, 0.69444, 0, 0, 0.42917],
    99: [0, 0.43056, 0, 0.05556, 0.43276],
    100: [0, 0.69444, 0, 0.16667, 0.52049],
    101: [0, 0.43056, 0, 0.05556, 0.46563],
    102: [0.19444, 0.69444, 0.10764, 0.16667, 0.48959],
    103: [0.19444, 0.43056, 0.03588, 0.02778, 0.47697],
    104: [0, 0.69444, 0, 0, 0.57616],
    105: [0, 0.65952, 0, 0, 0.34451],
    106: [0.19444, 0.65952, 0.05724, 0, 0.41181],
    107: [0, 0.69444, 0.03148, 0, 0.5206],
    108: [0, 0.69444, 0.01968, 0.08334, 0.29838],
    109: [0, 0.43056, 0, 0, 0.87801],
    110: [0, 0.43056, 0, 0, 0.60023],
    111: [0, 0.43056, 0, 0.05556, 0.48472],
    112: [0.19444, 0.43056, 0, 0.08334, 0.50313],
    113: [0.19444, 0.43056, 0.03588, 0.08334, 0.44641],
    114: [0, 0.43056, 0.02778, 0.05556, 0.45116],
    115: [0, 0.43056, 0, 0.05556, 0.46875],
    116: [0, 0.61508, 0, 0.08334, 0.36111],
    117: [0, 0.43056, 0, 0.02778, 0.57246],
    118: [0, 0.43056, 0.03588, 0.02778, 0.48472],
    119: [0, 0.43056, 0.02691, 0.08334, 0.71592],
    120: [0, 0.43056, 0, 0.02778, 0.57153],
    121: [0.19444, 0.43056, 0.03588, 0.05556, 0.49028],
    122: [0, 0.43056, 0.04398, 0.05556, 0.46505],
    160: [0, 0, 0, 0, 0.25],
    915: [0, 0.68333, 0.13889, 0.08334, 0.61528],
    916: [0, 0.68333, 0, 0.16667, 0.83334],
    920: [0, 0.68333, 0.02778, 0.08334, 0.76278],
    923: [0, 0.68333, 0, 0.16667, 0.69445],
    926: [0, 0.68333, 0.07569, 0.08334, 0.74236],
    928: [0, 0.68333, 0.08125, 0.05556, 0.83125],
    931: [0, 0.68333, 0.05764, 0.08334, 0.77986],
    933: [0, 0.68333, 0.13889, 0.05556, 0.58333],
    934: [0, 0.68333, 0, 0.08334, 0.66667],
    936: [0, 0.68333, 0.11, 0.05556, 0.61222],
    937: [0, 0.68333, 0.05017, 0.08334, 0.7724],
    945: [0, 0.43056, 37e-4, 0.02778, 0.6397],
    946: [0.19444, 0.69444, 0.05278, 0.08334, 0.56563],
    947: [0.19444, 0.43056, 0.05556, 0, 0.51773],
    948: [0, 0.69444, 0.03785, 0.05556, 0.44444],
    949: [0, 0.43056, 0, 0.08334, 0.46632],
    950: [0.19444, 0.69444, 0.07378, 0.08334, 0.4375],
    951: [0.19444, 0.43056, 0.03588, 0.05556, 0.49653],
    952: [0, 0.69444, 0.02778, 0.08334, 0.46944],
    953: [0, 0.43056, 0, 0.05556, 0.35394],
    954: [0, 0.43056, 0, 0, 0.57616],
    955: [0, 0.69444, 0, 0, 0.58334],
    956: [0.19444, 0.43056, 0, 0.02778, 0.60255],
    957: [0, 0.43056, 0.06366, 0.02778, 0.49398],
    958: [0.19444, 0.69444, 0.04601, 0.11111, 0.4375],
    959: [0, 0.43056, 0, 0.05556, 0.48472],
    960: [0, 0.43056, 0.03588, 0, 0.57003],
    961: [0.19444, 0.43056, 0, 0.08334, 0.51702],
    962: [0.09722, 0.43056, 0.07986, 0.08334, 0.36285],
    963: [0, 0.43056, 0.03588, 0, 0.57141],
    964: [0, 0.43056, 0.1132, 0.02778, 0.43715],
    965: [0, 0.43056, 0.03588, 0.02778, 0.54028],
    966: [0.19444, 0.43056, 0, 0.08334, 0.65417],
    967: [0.19444, 0.43056, 0, 0.05556, 0.62569],
    968: [0.19444, 0.69444, 0.03588, 0.11111, 0.65139],
    969: [0, 0.43056, 0.03588, 0, 0.62245],
    977: [0, 0.69444, 0, 0.08334, 0.59144],
    981: [0.19444, 0.69444, 0, 0.08334, 0.59583],
    982: [0, 0.43056, 0.02778, 0, 0.82813],
    1009: [0.19444, 0.43056, 0, 0.08334, 0.51702],
    1013: [0, 0.43056, 0, 0.05556, 0.4059],
    57649: [0, 0.43056, 0, 0.02778, 0.32246],
    57911: [0.19444, 0.43056, 0, 0.08334, 0.38403]
  },
  "SansSerif-Bold": {
    32: [0, 0, 0, 0, 0.25],
    33: [0, 0.69444, 0, 0, 0.36667],
    34: [0, 0.69444, 0, 0, 0.55834],
    35: [0.19444, 0.69444, 0, 0, 0.91667],
    36: [0.05556, 0.75, 0, 0, 0.55],
    37: [0.05556, 0.75, 0, 0, 1.02912],
    38: [0, 0.69444, 0, 0, 0.83056],
    39: [0, 0.69444, 0, 0, 0.30556],
    40: [0.25, 0.75, 0, 0, 0.42778],
    41: [0.25, 0.75, 0, 0, 0.42778],
    42: [0, 0.75, 0, 0, 0.55],
    43: [0.11667, 0.61667, 0, 0, 0.85556],
    44: [0.10556, 0.13056, 0, 0, 0.30556],
    45: [0, 0.45833, 0, 0, 0.36667],
    46: [0, 0.13056, 0, 0, 0.30556],
    47: [0.25, 0.75, 0, 0, 0.55],
    48: [0, 0.69444, 0, 0, 0.55],
    49: [0, 0.69444, 0, 0, 0.55],
    50: [0, 0.69444, 0, 0, 0.55],
    51: [0, 0.69444, 0, 0, 0.55],
    52: [0, 0.69444, 0, 0, 0.55],
    53: [0, 0.69444, 0, 0, 0.55],
    54: [0, 0.69444, 0, 0, 0.55],
    55: [0, 0.69444, 0, 0, 0.55],
    56: [0, 0.69444, 0, 0, 0.55],
    57: [0, 0.69444, 0, 0, 0.55],
    58: [0, 0.45833, 0, 0, 0.30556],
    59: [0.10556, 0.45833, 0, 0, 0.30556],
    61: [-0.09375, 0.40625, 0, 0, 0.85556],
    63: [0, 0.69444, 0, 0, 0.51945],
    64: [0, 0.69444, 0, 0, 0.73334],
    65: [0, 0.69444, 0, 0, 0.73334],
    66: [0, 0.69444, 0, 0, 0.73334],
    67: [0, 0.69444, 0, 0, 0.70278],
    68: [0, 0.69444, 0, 0, 0.79445],
    69: [0, 0.69444, 0, 0, 0.64167],
    70: [0, 0.69444, 0, 0, 0.61111],
    71: [0, 0.69444, 0, 0, 0.73334],
    72: [0, 0.69444, 0, 0, 0.79445],
    73: [0, 0.69444, 0, 0, 0.33056],
    74: [0, 0.69444, 0, 0, 0.51945],
    75: [0, 0.69444, 0, 0, 0.76389],
    76: [0, 0.69444, 0, 0, 0.58056],
    77: [0, 0.69444, 0, 0, 0.97778],
    78: [0, 0.69444, 0, 0, 0.79445],
    79: [0, 0.69444, 0, 0, 0.79445],
    80: [0, 0.69444, 0, 0, 0.70278],
    81: [0.10556, 0.69444, 0, 0, 0.79445],
    82: [0, 0.69444, 0, 0, 0.70278],
    83: [0, 0.69444, 0, 0, 0.61111],
    84: [0, 0.69444, 0, 0, 0.73334],
    85: [0, 0.69444, 0, 0, 0.76389],
    86: [0, 0.69444, 0.01528, 0, 0.73334],
    87: [0, 0.69444, 0.01528, 0, 1.03889],
    88: [0, 0.69444, 0, 0, 0.73334],
    89: [0, 0.69444, 0.0275, 0, 0.73334],
    90: [0, 0.69444, 0, 0, 0.67223],
    91: [0.25, 0.75, 0, 0, 0.34306],
    93: [0.25, 0.75, 0, 0, 0.34306],
    94: [0, 0.69444, 0, 0, 0.55],
    95: [0.35, 0.10833, 0.03056, 0, 0.55],
    97: [0, 0.45833, 0, 0, 0.525],
    98: [0, 0.69444, 0, 0, 0.56111],
    99: [0, 0.45833, 0, 0, 0.48889],
    100: [0, 0.69444, 0, 0, 0.56111],
    101: [0, 0.45833, 0, 0, 0.51111],
    102: [0, 0.69444, 0.07639, 0, 0.33611],
    103: [0.19444, 0.45833, 0.01528, 0, 0.55],
    104: [0, 0.69444, 0, 0, 0.56111],
    105: [0, 0.69444, 0, 0, 0.25556],
    106: [0.19444, 0.69444, 0, 0, 0.28611],
    107: [0, 0.69444, 0, 0, 0.53056],
    108: [0, 0.69444, 0, 0, 0.25556],
    109: [0, 0.45833, 0, 0, 0.86667],
    110: [0, 0.45833, 0, 0, 0.56111],
    111: [0, 0.45833, 0, 0, 0.55],
    112: [0.19444, 0.45833, 0, 0, 0.56111],
    113: [0.19444, 0.45833, 0, 0, 0.56111],
    114: [0, 0.45833, 0.01528, 0, 0.37222],
    115: [0, 0.45833, 0, 0, 0.42167],
    116: [0, 0.58929, 0, 0, 0.40417],
    117: [0, 0.45833, 0, 0, 0.56111],
    118: [0, 0.45833, 0.01528, 0, 0.5],
    119: [0, 0.45833, 0.01528, 0, 0.74445],
    120: [0, 0.45833, 0, 0, 0.5],
    121: [0.19444, 0.45833, 0.01528, 0, 0.5],
    122: [0, 0.45833, 0, 0, 0.47639],
    126: [0.35, 0.34444, 0, 0, 0.55],
    160: [0, 0, 0, 0, 0.25],
    168: [0, 0.69444, 0, 0, 0.55],
    176: [0, 0.69444, 0, 0, 0.73334],
    180: [0, 0.69444, 0, 0, 0.55],
    184: [0.17014, 0, 0, 0, 0.48889],
    305: [0, 0.45833, 0, 0, 0.25556],
    567: [0.19444, 0.45833, 0, 0, 0.28611],
    710: [0, 0.69444, 0, 0, 0.55],
    711: [0, 0.63542, 0, 0, 0.55],
    713: [0, 0.63778, 0, 0, 0.55],
    728: [0, 0.69444, 0, 0, 0.55],
    729: [0, 0.69444, 0, 0, 0.30556],
    730: [0, 0.69444, 0, 0, 0.73334],
    732: [0, 0.69444, 0, 0, 0.55],
    733: [0, 0.69444, 0, 0, 0.55],
    915: [0, 0.69444, 0, 0, 0.58056],
    916: [0, 0.69444, 0, 0, 0.91667],
    920: [0, 0.69444, 0, 0, 0.85556],
    923: [0, 0.69444, 0, 0, 0.67223],
    926: [0, 0.69444, 0, 0, 0.73334],
    928: [0, 0.69444, 0, 0, 0.79445],
    931: [0, 0.69444, 0, 0, 0.79445],
    933: [0, 0.69444, 0, 0, 0.85556],
    934: [0, 0.69444, 0, 0, 0.79445],
    936: [0, 0.69444, 0, 0, 0.85556],
    937: [0, 0.69444, 0, 0, 0.79445],
    8211: [0, 0.45833, 0.03056, 0, 0.55],
    8212: [0, 0.45833, 0.03056, 0, 1.10001],
    8216: [0, 0.69444, 0, 0, 0.30556],
    8217: [0, 0.69444, 0, 0, 0.30556],
    8220: [0, 0.69444, 0, 0, 0.55834],
    8221: [0, 0.69444, 0, 0, 0.55834]
  },
  "SansSerif-Italic": {
    32: [0, 0, 0, 0, 0.25],
    33: [0, 0.69444, 0.05733, 0, 0.31945],
    34: [0, 0.69444, 316e-5, 0, 0.5],
    35: [0.19444, 0.69444, 0.05087, 0, 0.83334],
    36: [0.05556, 0.75, 0.11156, 0, 0.5],
    37: [0.05556, 0.75, 0.03126, 0, 0.83334],
    38: [0, 0.69444, 0.03058, 0, 0.75834],
    39: [0, 0.69444, 0.07816, 0, 0.27778],
    40: [0.25, 0.75, 0.13164, 0, 0.38889],
    41: [0.25, 0.75, 0.02536, 0, 0.38889],
    42: [0, 0.75, 0.11775, 0, 0.5],
    43: [0.08333, 0.58333, 0.02536, 0, 0.77778],
    44: [0.125, 0.08333, 0, 0, 0.27778],
    45: [0, 0.44444, 0.01946, 0, 0.33333],
    46: [0, 0.08333, 0, 0, 0.27778],
    47: [0.25, 0.75, 0.13164, 0, 0.5],
    48: [0, 0.65556, 0.11156, 0, 0.5],
    49: [0, 0.65556, 0.11156, 0, 0.5],
    50: [0, 0.65556, 0.11156, 0, 0.5],
    51: [0, 0.65556, 0.11156, 0, 0.5],
    52: [0, 0.65556, 0.11156, 0, 0.5],
    53: [0, 0.65556, 0.11156, 0, 0.5],
    54: [0, 0.65556, 0.11156, 0, 0.5],
    55: [0, 0.65556, 0.11156, 0, 0.5],
    56: [0, 0.65556, 0.11156, 0, 0.5],
    57: [0, 0.65556, 0.11156, 0, 0.5],
    58: [0, 0.44444, 0.02502, 0, 0.27778],
    59: [0.125, 0.44444, 0.02502, 0, 0.27778],
    61: [-0.13, 0.37, 0.05087, 0, 0.77778],
    63: [0, 0.69444, 0.11809, 0, 0.47222],
    64: [0, 0.69444, 0.07555, 0, 0.66667],
    65: [0, 0.69444, 0, 0, 0.66667],
    66: [0, 0.69444, 0.08293, 0, 0.66667],
    67: [0, 0.69444, 0.11983, 0, 0.63889],
    68: [0, 0.69444, 0.07555, 0, 0.72223],
    69: [0, 0.69444, 0.11983, 0, 0.59722],
    70: [0, 0.69444, 0.13372, 0, 0.56945],
    71: [0, 0.69444, 0.11983, 0, 0.66667],
    72: [0, 0.69444, 0.08094, 0, 0.70834],
    73: [0, 0.69444, 0.13372, 0, 0.27778],
    74: [0, 0.69444, 0.08094, 0, 0.47222],
    75: [0, 0.69444, 0.11983, 0, 0.69445],
    76: [0, 0.69444, 0, 0, 0.54167],
    77: [0, 0.69444, 0.08094, 0, 0.875],
    78: [0, 0.69444, 0.08094, 0, 0.70834],
    79: [0, 0.69444, 0.07555, 0, 0.73611],
    80: [0, 0.69444, 0.08293, 0, 0.63889],
    81: [0.125, 0.69444, 0.07555, 0, 0.73611],
    82: [0, 0.69444, 0.08293, 0, 0.64584],
    83: [0, 0.69444, 0.09205, 0, 0.55556],
    84: [0, 0.69444, 0.13372, 0, 0.68056],
    85: [0, 0.69444, 0.08094, 0, 0.6875],
    86: [0, 0.69444, 0.1615, 0, 0.66667],
    87: [0, 0.69444, 0.1615, 0, 0.94445],
    88: [0, 0.69444, 0.13372, 0, 0.66667],
    89: [0, 0.69444, 0.17261, 0, 0.66667],
    90: [0, 0.69444, 0.11983, 0, 0.61111],
    91: [0.25, 0.75, 0.15942, 0, 0.28889],
    93: [0.25, 0.75, 0.08719, 0, 0.28889],
    94: [0, 0.69444, 0.0799, 0, 0.5],
    95: [0.35, 0.09444, 0.08616, 0, 0.5],
    97: [0, 0.44444, 981e-5, 0, 0.48056],
    98: [0, 0.69444, 0.03057, 0, 0.51667],
    99: [0, 0.44444, 0.08336, 0, 0.44445],
    100: [0, 0.69444, 0.09483, 0, 0.51667],
    101: [0, 0.44444, 0.06778, 0, 0.44445],
    102: [0, 0.69444, 0.21705, 0, 0.30556],
    103: [0.19444, 0.44444, 0.10836, 0, 0.5],
    104: [0, 0.69444, 0.01778, 0, 0.51667],
    105: [0, 0.67937, 0.09718, 0, 0.23889],
    106: [0.19444, 0.67937, 0.09162, 0, 0.26667],
    107: [0, 0.69444, 0.08336, 0, 0.48889],
    108: [0, 0.69444, 0.09483, 0, 0.23889],
    109: [0, 0.44444, 0.01778, 0, 0.79445],
    110: [0, 0.44444, 0.01778, 0, 0.51667],
    111: [0, 0.44444, 0.06613, 0, 0.5],
    112: [0.19444, 0.44444, 0.0389, 0, 0.51667],
    113: [0.19444, 0.44444, 0.04169, 0, 0.51667],
    114: [0, 0.44444, 0.10836, 0, 0.34167],
    115: [0, 0.44444, 0.0778, 0, 0.38333],
    116: [0, 0.57143, 0.07225, 0, 0.36111],
    117: [0, 0.44444, 0.04169, 0, 0.51667],
    118: [0, 0.44444, 0.10836, 0, 0.46111],
    119: [0, 0.44444, 0.10836, 0, 0.68334],
    120: [0, 0.44444, 0.09169, 0, 0.46111],
    121: [0.19444, 0.44444, 0.10836, 0, 0.46111],
    122: [0, 0.44444, 0.08752, 0, 0.43472],
    126: [0.35, 0.32659, 0.08826, 0, 0.5],
    160: [0, 0, 0, 0, 0.25],
    168: [0, 0.67937, 0.06385, 0, 0.5],
    176: [0, 0.69444, 0, 0, 0.73752],
    184: [0.17014, 0, 0, 0, 0.44445],
    305: [0, 0.44444, 0.04169, 0, 0.23889],
    567: [0.19444, 0.44444, 0.04169, 0, 0.26667],
    710: [0, 0.69444, 0.0799, 0, 0.5],
    711: [0, 0.63194, 0.08432, 0, 0.5],
    713: [0, 0.60889, 0.08776, 0, 0.5],
    714: [0, 0.69444, 0.09205, 0, 0.5],
    715: [0, 0.69444, 0, 0, 0.5],
    728: [0, 0.69444, 0.09483, 0, 0.5],
    729: [0, 0.67937, 0.07774, 0, 0.27778],
    730: [0, 0.69444, 0, 0, 0.73752],
    732: [0, 0.67659, 0.08826, 0, 0.5],
    733: [0, 0.69444, 0.09205, 0, 0.5],
    915: [0, 0.69444, 0.13372, 0, 0.54167],
    916: [0, 0.69444, 0, 0, 0.83334],
    920: [0, 0.69444, 0.07555, 0, 0.77778],
    923: [0, 0.69444, 0, 0, 0.61111],
    926: [0, 0.69444, 0.12816, 0, 0.66667],
    928: [0, 0.69444, 0.08094, 0, 0.70834],
    931: [0, 0.69444, 0.11983, 0, 0.72222],
    933: [0, 0.69444, 0.09031, 0, 0.77778],
    934: [0, 0.69444, 0.04603, 0, 0.72222],
    936: [0, 0.69444, 0.09031, 0, 0.77778],
    937: [0, 0.69444, 0.08293, 0, 0.72222],
    8211: [0, 0.44444, 0.08616, 0, 0.5],
    8212: [0, 0.44444, 0.08616, 0, 1],
    8216: [0, 0.69444, 0.07816, 0, 0.27778],
    8217: [0, 0.69444, 0.07816, 0, 0.27778],
    8220: [0, 0.69444, 0.14205, 0, 0.5],
    8221: [0, 0.69444, 316e-5, 0, 0.5]
  },
  "SansSerif-Regular": {
    32: [0, 0, 0, 0, 0.25],
    33: [0, 0.69444, 0, 0, 0.31945],
    34: [0, 0.69444, 0, 0, 0.5],
    35: [0.19444, 0.69444, 0, 0, 0.83334],
    36: [0.05556, 0.75, 0, 0, 0.5],
    37: [0.05556, 0.75, 0, 0, 0.83334],
    38: [0, 0.69444, 0, 0, 0.75834],
    39: [0, 0.69444, 0, 0, 0.27778],
    40: [0.25, 0.75, 0, 0, 0.38889],
    41: [0.25, 0.75, 0, 0, 0.38889],
    42: [0, 0.75, 0, 0, 0.5],
    43: [0.08333, 0.58333, 0, 0, 0.77778],
    44: [0.125, 0.08333, 0, 0, 0.27778],
    45: [0, 0.44444, 0, 0, 0.33333],
    46: [0, 0.08333, 0, 0, 0.27778],
    47: [0.25, 0.75, 0, 0, 0.5],
    48: [0, 0.65556, 0, 0, 0.5],
    49: [0, 0.65556, 0, 0, 0.5],
    50: [0, 0.65556, 0, 0, 0.5],
    51: [0, 0.65556, 0, 0, 0.5],
    52: [0, 0.65556, 0, 0, 0.5],
    53: [0, 0.65556, 0, 0, 0.5],
    54: [0, 0.65556, 0, 0, 0.5],
    55: [0, 0.65556, 0, 0, 0.5],
    56: [0, 0.65556, 0, 0, 0.5],
    57: [0, 0.65556, 0, 0, 0.5],
    58: [0, 0.44444, 0, 0, 0.27778],
    59: [0.125, 0.44444, 0, 0, 0.27778],
    61: [-0.13, 0.37, 0, 0, 0.77778],
    63: [0, 0.69444, 0, 0, 0.47222],
    64: [0, 0.69444, 0, 0, 0.66667],
    65: [0, 0.69444, 0, 0, 0.66667],
    66: [0, 0.69444, 0, 0, 0.66667],
    67: [0, 0.69444, 0, 0, 0.63889],
    68: [0, 0.69444, 0, 0, 0.72223],
    69: [0, 0.69444, 0, 0, 0.59722],
    70: [0, 0.69444, 0, 0, 0.56945],
    71: [0, 0.69444, 0, 0, 0.66667],
    72: [0, 0.69444, 0, 0, 0.70834],
    73: [0, 0.69444, 0, 0, 0.27778],
    74: [0, 0.69444, 0, 0, 0.47222],
    75: [0, 0.69444, 0, 0, 0.69445],
    76: [0, 0.69444, 0, 0, 0.54167],
    77: [0, 0.69444, 0, 0, 0.875],
    78: [0, 0.69444, 0, 0, 0.70834],
    79: [0, 0.69444, 0, 0, 0.73611],
    80: [0, 0.69444, 0, 0, 0.63889],
    81: [0.125, 0.69444, 0, 0, 0.73611],
    82: [0, 0.69444, 0, 0, 0.64584],
    83: [0, 0.69444, 0, 0, 0.55556],
    84: [0, 0.69444, 0, 0, 0.68056],
    85: [0, 0.69444, 0, 0, 0.6875],
    86: [0, 0.69444, 0.01389, 0, 0.66667],
    87: [0, 0.69444, 0.01389, 0, 0.94445],
    88: [0, 0.69444, 0, 0, 0.66667],
    89: [0, 0.69444, 0.025, 0, 0.66667],
    90: [0, 0.69444, 0, 0, 0.61111],
    91: [0.25, 0.75, 0, 0, 0.28889],
    93: [0.25, 0.75, 0, 0, 0.28889],
    94: [0, 0.69444, 0, 0, 0.5],
    95: [0.35, 0.09444, 0.02778, 0, 0.5],
    97: [0, 0.44444, 0, 0, 0.48056],
    98: [0, 0.69444, 0, 0, 0.51667],
    99: [0, 0.44444, 0, 0, 0.44445],
    100: [0, 0.69444, 0, 0, 0.51667],
    101: [0, 0.44444, 0, 0, 0.44445],
    102: [0, 0.69444, 0.06944, 0, 0.30556],
    103: [0.19444, 0.44444, 0.01389, 0, 0.5],
    104: [0, 0.69444, 0, 0, 0.51667],
    105: [0, 0.67937, 0, 0, 0.23889],
    106: [0.19444, 0.67937, 0, 0, 0.26667],
    107: [0, 0.69444, 0, 0, 0.48889],
    108: [0, 0.69444, 0, 0, 0.23889],
    109: [0, 0.44444, 0, 0, 0.79445],
    110: [0, 0.44444, 0, 0, 0.51667],
    111: [0, 0.44444, 0, 0, 0.5],
    112: [0.19444, 0.44444, 0, 0, 0.51667],
    113: [0.19444, 0.44444, 0, 0, 0.51667],
    114: [0, 0.44444, 0.01389, 0, 0.34167],
    115: [0, 0.44444, 0, 0, 0.38333],
    116: [0, 0.57143, 0, 0, 0.36111],
    117: [0, 0.44444, 0, 0, 0.51667],
    118: [0, 0.44444, 0.01389, 0, 0.46111],
    119: [0, 0.44444, 0.01389, 0, 0.68334],
    120: [0, 0.44444, 0, 0, 0.46111],
    121: [0.19444, 0.44444, 0.01389, 0, 0.46111],
    122: [0, 0.44444, 0, 0, 0.43472],
    126: [0.35, 0.32659, 0, 0, 0.5],
    160: [0, 0, 0, 0, 0.25],
    168: [0, 0.67937, 0, 0, 0.5],
    176: [0, 0.69444, 0, 0, 0.66667],
    184: [0.17014, 0, 0, 0, 0.44445],
    305: [0, 0.44444, 0, 0, 0.23889],
    567: [0.19444, 0.44444, 0, 0, 0.26667],
    710: [0, 0.69444, 0, 0, 0.5],
    711: [0, 0.63194, 0, 0, 0.5],
    713: [0, 0.60889, 0, 0, 0.5],
    714: [0, 0.69444, 0, 0, 0.5],
    715: [0, 0.69444, 0, 0, 0.5],
    728: [0, 0.69444, 0, 0, 0.5],
    729: [0, 0.67937, 0, 0, 0.27778],
    730: [0, 0.69444, 0, 0, 0.66667],
    732: [0, 0.67659, 0, 0, 0.5],
    733: [0, 0.69444, 0, 0, 0.5],
    915: [0, 0.69444, 0, 0, 0.54167],
    916: [0, 0.69444, 0, 0, 0.83334],
    920: [0, 0.69444, 0, 0, 0.77778],
    923: [0, 0.69444, 0, 0, 0.61111],
    926: [0, 0.69444, 0, 0, 0.66667],
    928: [0, 0.69444, 0, 0, 0.70834],
    931: [0, 0.69444, 0, 0, 0.72222],
    933: [0, 0.69444, 0, 0, 0.77778],
    934: [0, 0.69444, 0, 0, 0.72222],
    936: [0, 0.69444, 0, 0, 0.77778],
    937: [0, 0.69444, 0, 0, 0.72222],
    8211: [0, 0.44444, 0.02778, 0, 0.5],
    8212: [0, 0.44444, 0.02778, 0, 1],
    8216: [0, 0.69444, 0, 0, 0.27778],
    8217: [0, 0.69444, 0, 0, 0.27778],
    8220: [0, 0.69444, 0, 0, 0.5],
    8221: [0, 0.69444, 0, 0, 0.5]
  },
  "Script-Regular": {
    32: [0, 0, 0, 0, 0.25],
    65: [0, 0.7, 0.22925, 0, 0.80253],
    66: [0, 0.7, 0.04087, 0, 0.90757],
    67: [0, 0.7, 0.1689, 0, 0.66619],
    68: [0, 0.7, 0.09371, 0, 0.77443],
    69: [0, 0.7, 0.18583, 0, 0.56162],
    70: [0, 0.7, 0.13634, 0, 0.89544],
    71: [0, 0.7, 0.17322, 0, 0.60961],
    72: [0, 0.7, 0.29694, 0, 0.96919],
    73: [0, 0.7, 0.19189, 0, 0.80907],
    74: [0.27778, 0.7, 0.19189, 0, 1.05159],
    75: [0, 0.7, 0.31259, 0, 0.91364],
    76: [0, 0.7, 0.19189, 0, 0.87373],
    77: [0, 0.7, 0.15981, 0, 1.08031],
    78: [0, 0.7, 0.3525, 0, 0.9015],
    79: [0, 0.7, 0.08078, 0, 0.73787],
    80: [0, 0.7, 0.08078, 0, 1.01262],
    81: [0, 0.7, 0.03305, 0, 0.88282],
    82: [0, 0.7, 0.06259, 0, 0.85],
    83: [0, 0.7, 0.19189, 0, 0.86767],
    84: [0, 0.7, 0.29087, 0, 0.74697],
    85: [0, 0.7, 0.25815, 0, 0.79996],
    86: [0, 0.7, 0.27523, 0, 0.62204],
    87: [0, 0.7, 0.27523, 0, 0.80532],
    88: [0, 0.7, 0.26006, 0, 0.94445],
    89: [0, 0.7, 0.2939, 0, 0.70961],
    90: [0, 0.7, 0.24037, 0, 0.8212],
    160: [0, 0, 0, 0, 0.25]
  },
  "Size1-Regular": {
    32: [0, 0, 0, 0, 0.25],
    40: [0.35001, 0.85, 0, 0, 0.45834],
    41: [0.35001, 0.85, 0, 0, 0.45834],
    47: [0.35001, 0.85, 0, 0, 0.57778],
    91: [0.35001, 0.85, 0, 0, 0.41667],
    92: [0.35001, 0.85, 0, 0, 0.57778],
    93: [0.35001, 0.85, 0, 0, 0.41667],
    123: [0.35001, 0.85, 0, 0, 0.58334],
    125: [0.35001, 0.85, 0, 0, 0.58334],
    160: [0, 0, 0, 0, 0.25],
    710: [0, 0.72222, 0, 0, 0.55556],
    732: [0, 0.72222, 0, 0, 0.55556],
    770: [0, 0.72222, 0, 0, 0.55556],
    771: [0, 0.72222, 0, 0, 0.55556],
    8214: [-99e-5, 0.601, 0, 0, 0.77778],
    8593: [1e-5, 0.6, 0, 0, 0.66667],
    8595: [1e-5, 0.6, 0, 0, 0.66667],
    8657: [1e-5, 0.6, 0, 0, 0.77778],
    8659: [1e-5, 0.6, 0, 0, 0.77778],
    8719: [0.25001, 0.75, 0, 0, 0.94445],
    8720: [0.25001, 0.75, 0, 0, 0.94445],
    8721: [0.25001, 0.75, 0, 0, 1.05556],
    8730: [0.35001, 0.85, 0, 0, 1],
    8739: [-599e-5, 0.606, 0, 0, 0.33333],
    8741: [-599e-5, 0.606, 0, 0, 0.55556],
    8747: [0.30612, 0.805, 0.19445, 0, 0.47222],
    8748: [0.306, 0.805, 0.19445, 0, 0.47222],
    8749: [0.306, 0.805, 0.19445, 0, 0.47222],
    8750: [0.30612, 0.805, 0.19445, 0, 0.47222],
    8896: [0.25001, 0.75, 0, 0, 0.83334],
    8897: [0.25001, 0.75, 0, 0, 0.83334],
    8898: [0.25001, 0.75, 0, 0, 0.83334],
    8899: [0.25001, 0.75, 0, 0, 0.83334],
    8968: [0.35001, 0.85, 0, 0, 0.47222],
    8969: [0.35001, 0.85, 0, 0, 0.47222],
    8970: [0.35001, 0.85, 0, 0, 0.47222],
    8971: [0.35001, 0.85, 0, 0, 0.47222],
    9168: [-99e-5, 0.601, 0, 0, 0.66667],
    10216: [0.35001, 0.85, 0, 0, 0.47222],
    10217: [0.35001, 0.85, 0, 0, 0.47222],
    10752: [0.25001, 0.75, 0, 0, 1.11111],
    10753: [0.25001, 0.75, 0, 0, 1.11111],
    10754: [0.25001, 0.75, 0, 0, 1.11111],
    10756: [0.25001, 0.75, 0, 0, 0.83334],
    10758: [0.25001, 0.75, 0, 0, 0.83334]
  },
  "Size2-Regular": {
    32: [0, 0, 0, 0, 0.25],
    40: [0.65002, 1.15, 0, 0, 0.59722],
    41: [0.65002, 1.15, 0, 0, 0.59722],
    47: [0.65002, 1.15, 0, 0, 0.81111],
    91: [0.65002, 1.15, 0, 0, 0.47222],
    92: [0.65002, 1.15, 0, 0, 0.81111],
    93: [0.65002, 1.15, 0, 0, 0.47222],
    123: [0.65002, 1.15, 0, 0, 0.66667],
    125: [0.65002, 1.15, 0, 0, 0.66667],
    160: [0, 0, 0, 0, 0.25],
    710: [0, 0.75, 0, 0, 1],
    732: [0, 0.75, 0, 0, 1],
    770: [0, 0.75, 0, 0, 1],
    771: [0, 0.75, 0, 0, 1],
    8719: [0.55001, 1.05, 0, 0, 1.27778],
    8720: [0.55001, 1.05, 0, 0, 1.27778],
    8721: [0.55001, 1.05, 0, 0, 1.44445],
    8730: [0.65002, 1.15, 0, 0, 1],
    8747: [0.86225, 1.36, 0.44445, 0, 0.55556],
    8748: [0.862, 1.36, 0.44445, 0, 0.55556],
    8749: [0.862, 1.36, 0.44445, 0, 0.55556],
    8750: [0.86225, 1.36, 0.44445, 0, 0.55556],
    8896: [0.55001, 1.05, 0, 0, 1.11111],
    8897: [0.55001, 1.05, 0, 0, 1.11111],
    8898: [0.55001, 1.05, 0, 0, 1.11111],
    8899: [0.55001, 1.05, 0, 0, 1.11111],
    8968: [0.65002, 1.15, 0, 0, 0.52778],
    8969: [0.65002, 1.15, 0, 0, 0.52778],
    8970: [0.65002, 1.15, 0, 0, 0.52778],
    8971: [0.65002, 1.15, 0, 0, 0.52778],
    10216: [0.65002, 1.15, 0, 0, 0.61111],
    10217: [0.65002, 1.15, 0, 0, 0.61111],
    10752: [0.55001, 1.05, 0, 0, 1.51112],
    10753: [0.55001, 1.05, 0, 0, 1.51112],
    10754: [0.55001, 1.05, 0, 0, 1.51112],
    10756: [0.55001, 1.05, 0, 0, 1.11111],
    10758: [0.55001, 1.05, 0, 0, 1.11111]
  },
  "Size3-Regular": {
    32: [0, 0, 0, 0, 0.25],
    40: [0.95003, 1.45, 0, 0, 0.73611],
    41: [0.95003, 1.45, 0, 0, 0.73611],
    47: [0.95003, 1.45, 0, 0, 1.04445],
    91: [0.95003, 1.45, 0, 0, 0.52778],
    92: [0.95003, 1.45, 0, 0, 1.04445],
    93: [0.95003, 1.45, 0, 0, 0.52778],
    123: [0.95003, 1.45, 0, 0, 0.75],
    125: [0.95003, 1.45, 0, 0, 0.75],
    160: [0, 0, 0, 0, 0.25],
    710: [0, 0.75, 0, 0, 1.44445],
    732: [0, 0.75, 0, 0, 1.44445],
    770: [0, 0.75, 0, 0, 1.44445],
    771: [0, 0.75, 0, 0, 1.44445],
    8730: [0.95003, 1.45, 0, 0, 1],
    8968: [0.95003, 1.45, 0, 0, 0.58334],
    8969: [0.95003, 1.45, 0, 0, 0.58334],
    8970: [0.95003, 1.45, 0, 0, 0.58334],
    8971: [0.95003, 1.45, 0, 0, 0.58334],
    10216: [0.95003, 1.45, 0, 0, 0.75],
    10217: [0.95003, 1.45, 0, 0, 0.75]
  },
  "Size4-Regular": {
    32: [0, 0, 0, 0, 0.25],
    40: [1.25003, 1.75, 0, 0, 0.79167],
    41: [1.25003, 1.75, 0, 0, 0.79167],
    47: [1.25003, 1.75, 0, 0, 1.27778],
    91: [1.25003, 1.75, 0, 0, 0.58334],
    92: [1.25003, 1.75, 0, 0, 1.27778],
    93: [1.25003, 1.75, 0, 0, 0.58334],
    123: [1.25003, 1.75, 0, 0, 0.80556],
    125: [1.25003, 1.75, 0, 0, 0.80556],
    160: [0, 0, 0, 0, 0.25],
    710: [0, 0.825, 0, 0, 1.8889],
    732: [0, 0.825, 0, 0, 1.8889],
    770: [0, 0.825, 0, 0, 1.8889],
    771: [0, 0.825, 0, 0, 1.8889],
    8730: [1.25003, 1.75, 0, 0, 1],
    8968: [1.25003, 1.75, 0, 0, 0.63889],
    8969: [1.25003, 1.75, 0, 0, 0.63889],
    8970: [1.25003, 1.75, 0, 0, 0.63889],
    8971: [1.25003, 1.75, 0, 0, 0.63889],
    9115: [0.64502, 1.155, 0, 0, 0.875],
    9116: [1e-5, 0.6, 0, 0, 0.875],
    9117: [0.64502, 1.155, 0, 0, 0.875],
    9118: [0.64502, 1.155, 0, 0, 0.875],
    9119: [1e-5, 0.6, 0, 0, 0.875],
    9120: [0.64502, 1.155, 0, 0, 0.875],
    9121: [0.64502, 1.155, 0, 0, 0.66667],
    9122: [-99e-5, 0.601, 0, 0, 0.66667],
    9123: [0.64502, 1.155, 0, 0, 0.66667],
    9124: [0.64502, 1.155, 0, 0, 0.66667],
    9125: [-99e-5, 0.601, 0, 0, 0.66667],
    9126: [0.64502, 1.155, 0, 0, 0.66667],
    9127: [1e-5, 0.9, 0, 0, 0.88889],
    9128: [0.65002, 1.15, 0, 0, 0.88889],
    9129: [0.90001, 0, 0, 0, 0.88889],
    9130: [0, 0.3, 0, 0, 0.88889],
    9131: [1e-5, 0.9, 0, 0, 0.88889],
    9132: [0.65002, 1.15, 0, 0, 0.88889],
    9133: [0.90001, 0, 0, 0, 0.88889],
    9143: [0.88502, 0.915, 0, 0, 1.05556],
    10216: [1.25003, 1.75, 0, 0, 0.80556],
    10217: [1.25003, 1.75, 0, 0, 0.80556],
    57344: [-499e-5, 0.605, 0, 0, 1.05556],
    57345: [-499e-5, 0.605, 0, 0, 1.05556],
    57680: [0, 0.12, 0, 0, 0.45],
    57681: [0, 0.12, 0, 0, 0.45],
    57682: [0, 0.12, 0, 0, 0.45],
    57683: [0, 0.12, 0, 0, 0.45]
  },
  "Typewriter-Regular": {
    32: [0, 0, 0, 0, 0.525],
    33: [0, 0.61111, 0, 0, 0.525],
    34: [0, 0.61111, 0, 0, 0.525],
    35: [0, 0.61111, 0, 0, 0.525],
    36: [0.08333, 0.69444, 0, 0, 0.525],
    37: [0.08333, 0.69444, 0, 0, 0.525],
    38: [0, 0.61111, 0, 0, 0.525],
    39: [0, 0.61111, 0, 0, 0.525],
    40: [0.08333, 0.69444, 0, 0, 0.525],
    41: [0.08333, 0.69444, 0, 0, 0.525],
    42: [0, 0.52083, 0, 0, 0.525],
    43: [-0.08056, 0.53055, 0, 0, 0.525],
    44: [0.13889, 0.125, 0, 0, 0.525],
    45: [-0.08056, 0.53055, 0, 0, 0.525],
    46: [0, 0.125, 0, 0, 0.525],
    47: [0.08333, 0.69444, 0, 0, 0.525],
    48: [0, 0.61111, 0, 0, 0.525],
    49: [0, 0.61111, 0, 0, 0.525],
    50: [0, 0.61111, 0, 0, 0.525],
    51: [0, 0.61111, 0, 0, 0.525],
    52: [0, 0.61111, 0, 0, 0.525],
    53: [0, 0.61111, 0, 0, 0.525],
    54: [0, 0.61111, 0, 0, 0.525],
    55: [0, 0.61111, 0, 0, 0.525],
    56: [0, 0.61111, 0, 0, 0.525],
    57: [0, 0.61111, 0, 0, 0.525],
    58: [0, 0.43056, 0, 0, 0.525],
    59: [0.13889, 0.43056, 0, 0, 0.525],
    60: [-0.05556, 0.55556, 0, 0, 0.525],
    61: [-0.19549, 0.41562, 0, 0, 0.525],
    62: [-0.05556, 0.55556, 0, 0, 0.525],
    63: [0, 0.61111, 0, 0, 0.525],
    64: [0, 0.61111, 0, 0, 0.525],
    65: [0, 0.61111, 0, 0, 0.525],
    66: [0, 0.61111, 0, 0, 0.525],
    67: [0, 0.61111, 0, 0, 0.525],
    68: [0, 0.61111, 0, 0, 0.525],
    69: [0, 0.61111, 0, 0, 0.525],
    70: [0, 0.61111, 0, 0, 0.525],
    71: [0, 0.61111, 0, 0, 0.525],
    72: [0, 0.61111, 0, 0, 0.525],
    73: [0, 0.61111, 0, 0, 0.525],
    74: [0, 0.61111, 0, 0, 0.525],
    75: [0, 0.61111, 0, 0, 0.525],
    76: [0, 0.61111, 0, 0, 0.525],
    77: [0, 0.61111, 0, 0, 0.525],
    78: [0, 0.61111, 0, 0, 0.525],
    79: [0, 0.61111, 0, 0, 0.525],
    80: [0, 0.61111, 0, 0, 0.525],
    81: [0.13889, 0.61111, 0, 0, 0.525],
    82: [0, 0.61111, 0, 0, 0.525],
    83: [0, 0.61111, 0, 0, 0.525],
    84: [0, 0.61111, 0, 0, 0.525],
    85: [0, 0.61111, 0, 0, 0.525],
    86: [0, 0.61111, 0, 0, 0.525],
    87: [0, 0.61111, 0, 0, 0.525],
    88: [0, 0.61111, 0, 0, 0.525],
    89: [0, 0.61111, 0, 0, 0.525],
    90: [0, 0.61111, 0, 0, 0.525],
    91: [0.08333, 0.69444, 0, 0, 0.525],
    92: [0.08333, 0.69444, 0, 0, 0.525],
    93: [0.08333, 0.69444, 0, 0, 0.525],
    94: [0, 0.61111, 0, 0, 0.525],
    95: [0.09514, 0, 0, 0, 0.525],
    96: [0, 0.61111, 0, 0, 0.525],
    97: [0, 0.43056, 0, 0, 0.525],
    98: [0, 0.61111, 0, 0, 0.525],
    99: [0, 0.43056, 0, 0, 0.525],
    100: [0, 0.61111, 0, 0, 0.525],
    101: [0, 0.43056, 0, 0, 0.525],
    102: [0, 0.61111, 0, 0, 0.525],
    103: [0.22222, 0.43056, 0, 0, 0.525],
    104: [0, 0.61111, 0, 0, 0.525],
    105: [0, 0.61111, 0, 0, 0.525],
    106: [0.22222, 0.61111, 0, 0, 0.525],
    107: [0, 0.61111, 0, 0, 0.525],
    108: [0, 0.61111, 0, 0, 0.525],
    109: [0, 0.43056, 0, 0, 0.525],
    110: [0, 0.43056, 0, 0, 0.525],
    111: [0, 0.43056, 0, 0, 0.525],
    112: [0.22222, 0.43056, 0, 0, 0.525],
    113: [0.22222, 0.43056, 0, 0, 0.525],
    114: [0, 0.43056, 0, 0, 0.525],
    115: [0, 0.43056, 0, 0, 0.525],
    116: [0, 0.55358, 0, 0, 0.525],
    117: [0, 0.43056, 0, 0, 0.525],
    118: [0, 0.43056, 0, 0, 0.525],
    119: [0, 0.43056, 0, 0, 0.525],
    120: [0, 0.43056, 0, 0, 0.525],
    121: [0.22222, 0.43056, 0, 0, 0.525],
    122: [0, 0.43056, 0, 0, 0.525],
    123: [0.08333, 0.69444, 0, 0, 0.525],
    124: [0.08333, 0.69444, 0, 0, 0.525],
    125: [0.08333, 0.69444, 0, 0, 0.525],
    126: [0, 0.61111, 0, 0, 0.525],
    127: [0, 0.61111, 0, 0, 0.525],
    160: [0, 0, 0, 0, 0.525],
    176: [0, 0.61111, 0, 0, 0.525],
    184: [0.19445, 0, 0, 0, 0.525],
    305: [0, 0.43056, 0, 0, 0.525],
    567: [0.22222, 0.43056, 0, 0, 0.525],
    711: [0, 0.56597, 0, 0, 0.525],
    713: [0, 0.56555, 0, 0, 0.525],
    714: [0, 0.61111, 0, 0, 0.525],
    715: [0, 0.61111, 0, 0, 0.525],
    728: [0, 0.61111, 0, 0, 0.525],
    730: [0, 0.61111, 0, 0, 0.525],
    770: [0, 0.61111, 0, 0, 0.525],
    771: [0, 0.61111, 0, 0, 0.525],
    776: [0, 0.61111, 0, 0, 0.525],
    915: [0, 0.61111, 0, 0, 0.525],
    916: [0, 0.61111, 0, 0, 0.525],
    920: [0, 0.61111, 0, 0, 0.525],
    923: [0, 0.61111, 0, 0, 0.525],
    926: [0, 0.61111, 0, 0, 0.525],
    928: [0, 0.61111, 0, 0, 0.525],
    931: [0, 0.61111, 0, 0, 0.525],
    933: [0, 0.61111, 0, 0, 0.525],
    934: [0, 0.61111, 0, 0, 0.525],
    936: [0, 0.61111, 0, 0, 0.525],
    937: [0, 0.61111, 0, 0, 0.525],
    8216: [0, 0.61111, 0, 0, 0.525],
    8217: [0, 0.61111, 0, 0, 0.525],
    8242: [0, 0.61111, 0, 0, 0.525],
    9251: [0.11111, 0.21944, 0, 0, 0.525]
  }
}, Ai = {
  slant: [0.25, 0.25, 0.25],
  // sigma1
  space: [0, 0, 0],
  // sigma2
  stretch: [0, 0, 0],
  // sigma3
  shrink: [0, 0, 0],
  // sigma4
  xHeight: [0.431, 0.431, 0.431],
  // sigma5
  quad: [1, 1.171, 1.472],
  // sigma6
  extraSpace: [0, 0, 0],
  // sigma7
  num1: [0.677, 0.732, 0.925],
  // sigma8
  num2: [0.394, 0.384, 0.387],
  // sigma9
  num3: [0.444, 0.471, 0.504],
  // sigma10
  denom1: [0.686, 0.752, 1.025],
  // sigma11
  denom2: [0.345, 0.344, 0.532],
  // sigma12
  sup1: [0.413, 0.503, 0.504],
  // sigma13
  sup2: [0.363, 0.431, 0.404],
  // sigma14
  sup3: [0.289, 0.286, 0.294],
  // sigma15
  sub1: [0.15, 0.143, 0.2],
  // sigma16
  sub2: [0.247, 0.286, 0.4],
  // sigma17
  supDrop: [0.386, 0.353, 0.494],
  // sigma18
  subDrop: [0.05, 0.071, 0.1],
  // sigma19
  delim1: [2.39, 1.7, 1.98],
  // sigma20
  delim2: [1.01, 1.157, 1.42],
  // sigma21
  axisHeight: [0.25, 0.25, 0.25],
  // sigma22
  // These font metrics are extracted from TeX by using tftopl on cmex10.tfm;
  // they correspond to the font parameters of the extension fonts (family 3).
  // See the TeXbook, page 441. In AMSTeX, the extension fonts scale; to
  // match cmex7, we'd use cmex7.tfm values for script and scriptscript
  // values.
  defaultRuleThickness: [0.04, 0.049, 0.049],
  // xi8; cmex7: 0.049
  bigOpSpacing1: [0.111, 0.111, 0.111],
  // xi9
  bigOpSpacing2: [0.166, 0.166, 0.166],
  // xi10
  bigOpSpacing3: [0.2, 0.2, 0.2],
  // xi11
  bigOpSpacing4: [0.6, 0.611, 0.611],
  // xi12; cmex7: 0.611
  bigOpSpacing5: [0.1, 0.143, 0.143],
  // xi13; cmex7: 0.143
  // The \sqrt rule width is taken from the height of the surd character.
  // Since we use the same font at all sizes, this thickness doesn't scale.
  sqrtRuleThickness: [0.04, 0.04, 0.04],
  // This value determines how large a pt is, for metrics which are defined
  // in terms of pts.
  // This value is also used in katex.less; if you change it make sure the
  // values match.
  ptPerEm: [10, 10, 10],
  // The space between adjacent `|` columns in an array definition. From
  // `\showthe\doublerulesep` in LaTeX. Equals 2.0 / ptPerEm.
  doubleRuleSep: [0.2, 0.2, 0.2],
  // The width of separator lines in {array} environments. From
  // `\showthe\arrayrulewidth` in LaTeX. Equals 0.4 / ptPerEm.
  arrayRuleWidth: [0.04, 0.04, 0.04],
  // Two values from LaTeX source2e:
  fboxsep: [0.3, 0.3, 0.3],
  //        3 pt / ptPerEm
  fboxrule: [0.04, 0.04, 0.04]
  // 0.4 pt / ptPerEm
}, J0 = {
  // Latin-1
  Å: "A",
  Ð: "D",
  Þ: "o",
  å: "a",
  ð: "d",
  þ: "o",
  // Cyrillic
  А: "A",
  Б: "B",
  В: "B",
  Г: "F",
  Д: "A",
  Е: "E",
  Ж: "K",
  З: "3",
  И: "N",
  Й: "N",
  К: "K",
  Л: "N",
  М: "M",
  Н: "H",
  О: "O",
  П: "N",
  Р: "P",
  С: "C",
  Т: "T",
  У: "y",
  Ф: "O",
  Х: "X",
  Ц: "U",
  Ч: "h",
  Ш: "W",
  Щ: "W",
  Ъ: "B",
  Ы: "X",
  Ь: "B",
  Э: "3",
  Ю: "X",
  Я: "R",
  а: "a",
  б: "b",
  в: "a",
  г: "r",
  д: "y",
  е: "e",
  ж: "m",
  з: "e",
  и: "n",
  й: "n",
  к: "n",
  л: "n",
  м: "m",
  н: "n",
  о: "o",
  п: "n",
  р: "p",
  с: "c",
  т: "o",
  у: "y",
  ф: "b",
  х: "x",
  ц: "n",
  ч: "n",
  ш: "w",
  щ: "w",
  ъ: "a",
  ы: "m",
  ь: "a",
  э: "e",
  ю: "m",
  я: "r"
};
function bp(e, t) {
  Qt[e] = t;
}
function zo(e, t, r) {
  if (!Qt[t])
    throw new Error("Font metrics not found for font: " + t + ".");
  var n = e.charCodeAt(0), i = Qt[t][n];
  if (!i && e[0] in J0 && (n = J0[e[0]].charCodeAt(0), i = Qt[t][n]), !i && r === "text" && Vc(n) && (i = Qt[t][77]), i)
    return {
      depth: i[0],
      height: i[1],
      italic: i[2],
      skew: i[3],
      width: i[4]
    };
}
var Ss = {};
function vp(e) {
  var t;
  if (e >= 5 ? t = 0 : e >= 3 ? t = 1 : t = 2, !Ss[t]) {
    var r = Ss[t] = {
      cssEmPerMu: Ai.quad[t] / 18
    };
    for (var n in Ai)
      Ai.hasOwnProperty(n) && (r[n] = Ai[n][t]);
  }
  return Ss[t];
}
var yp = [
  // Each element contains [textsize, scriptsize, scriptscriptsize].
  // The size mappings are taken from TeX with \normalsize=10pt.
  [1, 1, 1],
  // size1: [5, 5, 5]              \tiny
  [2, 1, 1],
  // size2: [6, 5, 5]
  [3, 1, 1],
  // size3: [7, 5, 5]              \scriptsize
  [4, 2, 1],
  // size4: [8, 6, 5]              \footnotesize
  [5, 2, 1],
  // size5: [9, 6, 5]              \small
  [6, 3, 1],
  // size6: [10, 7, 5]             \normalsize
  [7, 4, 2],
  // size7: [12, 8, 6]             \large
  [8, 6, 3],
  // size8: [14.4, 10, 7]          \Large
  [9, 7, 6],
  // size9: [17.28, 12, 10]        \LARGE
  [10, 8, 7],
  // size10: [20.74, 14.4, 12]     \huge
  [11, 10, 9]
  // size11: [24.88, 20.74, 17.28] \HUGE
], Q0 = [
  // fontMetrics.js:getGlobalMetrics also uses size indexes, so if
  // you change size indexes, change that function.
  0.5,
  0.6,
  0.7,
  0.8,
  0.9,
  1,
  1.2,
  1.44,
  1.728,
  2.074,
  2.488
], el = function(t, r) {
  return r.size < 2 ? t : yp[t - 1][r.size - 1];
};
class gr {
  // A font family applies to a group of fonts (i.e. SansSerif), while a font
  // represents a specific font (i.e. SansSerif Bold).
  // See: https://tex.stackexchange.com/questions/22350/difference-between-textrm-and-mathrm
  /**
   * The base size index.
   */
  constructor(t) {
    this.style = void 0, this.color = void 0, this.size = void 0, this.textSize = void 0, this.phantom = void 0, this.font = void 0, this.fontFamily = void 0, this.fontWeight = void 0, this.fontShape = void 0, this.sizeMultiplier = void 0, this.maxSize = void 0, this.minRuleThickness = void 0, this._fontMetrics = void 0, this.style = t.style, this.color = t.color, this.size = t.size || gr.BASESIZE, this.textSize = t.textSize || this.size, this.phantom = !!t.phantom, this.font = t.font || "", this.fontFamily = t.fontFamily || "", this.fontWeight = t.fontWeight || "", this.fontShape = t.fontShape || "", this.sizeMultiplier = Q0[this.size - 1], this.maxSize = t.maxSize, this.minRuleThickness = t.minRuleThickness, this._fontMetrics = void 0;
  }
  /**
   * Returns a new options object with the same properties as "this".  Properties
   * from "extension" will be copied to the new options object.
   */
  extend(t) {
    var r = {
      style: this.style,
      size: this.size,
      textSize: this.textSize,
      color: this.color,
      phantom: this.phantom,
      font: this.font,
      fontFamily: this.fontFamily,
      fontWeight: this.fontWeight,
      fontShape: this.fontShape,
      maxSize: this.maxSize,
      minRuleThickness: this.minRuleThickness
    };
    for (var n in t)
      t.hasOwnProperty(n) && (r[n] = t[n]);
    return new gr(r);
  }
  /**
   * Return an options object with the given style. If `this.style === style`,
   * returns `this`.
   */
  havingStyle(t) {
    return this.style === t ? this : this.extend({
      style: t,
      size: el(this.textSize, t)
    });
  }
  /**
   * Return an options object with a cramped version of the current style. If
   * the current style is cramped, returns `this`.
   */
  havingCrampedStyle() {
    return this.havingStyle(this.style.cramp());
  }
  /**
   * Return an options object with the given size and in at least `\textstyle`.
   * Returns `this` if appropriate.
   */
  havingSize(t) {
    return this.size === t && this.textSize === t ? this : this.extend({
      style: this.style.text(),
      size: t,
      textSize: t,
      sizeMultiplier: Q0[t - 1]
    });
  }
  /**
   * Like `this.havingSize(BASESIZE).havingStyle(style)`. If `style` is omitted,
   * changes to at least `\textstyle`.
   */
  havingBaseStyle(t) {
    t = t || this.style.text();
    var r = el(gr.BASESIZE, t);
    return this.size === r && this.textSize === gr.BASESIZE && this.style === t ? this : this.extend({
      style: t,
      size: r
    });
  }
  /**
   * Remove the effect of sizing changes such as \Huge.
   * Keep the effect of the current style, such as \scriptstyle.
   */
  havingBaseSizing() {
    var t;
    switch (this.style.id) {
      case 4:
      case 5:
        t = 3;
        break;
      case 6:
      case 7:
        t = 1;
        break;
      default:
        t = 6;
    }
    return this.extend({
      style: this.style.text(),
      size: t
    });
  }
  /**
   * Create a new options object with the given color.
   */
  withColor(t) {
    return this.extend({
      color: t
    });
  }
  /**
   * Create a new options object with "phantom" set to true.
   */
  withPhantom() {
    return this.extend({
      phantom: !0
    });
  }
  /**
   * Creates a new options object with the given math font or old text font.
   * @type {[type]}
   */
  withFont(t) {
    return this.extend({
      font: t
    });
  }
  /**
   * Create a new options objects with the given fontFamily.
   */
  withTextFontFamily(t) {
    return this.extend({
      fontFamily: t,
      font: ""
    });
  }
  /**
   * Creates a new options object with the given font weight
   */
  withTextFontWeight(t) {
    return this.extend({
      fontWeight: t,
      font: ""
    });
  }
  /**
   * Creates a new options object with the given font weight
   */
  withTextFontShape(t) {
    return this.extend({
      fontShape: t,
      font: ""
    });
  }
  /**
   * Return the CSS sizing classes required to switch from enclosing options
   * `oldOptions` to `this`. Returns an array of classes.
   */
  sizingClasses(t) {
    return t.size !== this.size ? ["sizing", "reset-size" + t.size, "size" + this.size] : [];
  }
  /**
   * Return the CSS sizing classes required to switch to the base size. Like
   * `this.havingSize(BASESIZE).sizingClasses(this)`.
   */
  baseSizingClasses() {
    return this.size !== gr.BASESIZE ? ["sizing", "reset-size" + this.size, "size" + gr.BASESIZE] : [];
  }
  /**
   * Return the font metrics for this size.
   */
  fontMetrics() {
    return this._fontMetrics || (this._fontMetrics = vp(this.size)), this._fontMetrics;
  }
  /**
   * Gets the CSS color of the current options object
   */
  getColor() {
    return this.phantom ? "transparent" : this.color;
  }
}
gr.BASESIZE = 6;
var no = {
  // https://en.wikibooks.org/wiki/LaTeX/Lengths and
  // https://tex.stackexchange.com/a/8263
  pt: 1,
  // TeX point
  mm: 7227 / 2540,
  // millimeter
  cm: 7227 / 254,
  // centimeter
  in: 72.27,
  // inch
  bp: 803 / 800,
  // big (PostScript) points
  pc: 12,
  // pica
  dd: 1238 / 1157,
  // didot
  cc: 14856 / 1157,
  // cicero (12 didot)
  nd: 685 / 642,
  // new didot
  nc: 1370 / 107,
  // new cicero (12 new didot)
  sp: 1 / 65536,
  // scaled point (TeX's internal smallest unit)
  // https://tex.stackexchange.com/a/41371
  px: 803 / 800
  // \pdfpxdimen defaults to 1 bp in pdfTeX and LuaTeX
}, xp = {
  ex: !0,
  em: !0,
  mu: !0
}, Xc = function(t) {
  return typeof t != "string" && (t = t.unit), t in no || t in xp || t === "ex";
}, je = function(t, r) {
  var n;
  if (t.unit in no)
    n = no[t.unit] / r.fontMetrics().ptPerEm / r.sizeMultiplier;
  else if (t.unit === "mu")
    n = r.fontMetrics().cssEmPerMu;
  else {
    var i;
    if (r.style.isTight() ? i = r.havingStyle(r.style.text()) : i = r, t.unit === "ex")
      n = i.fontMetrics().xHeight;
    else if (t.unit === "em")
      n = i.fontMetrics().quad;
    else
      throw new U("Invalid unit: '" + t.unit + "'");
    i !== r && (n *= i.sizeMultiplier / r.sizeMultiplier);
  }
  return Math.min(t.number * n, r.maxSize);
}, j = function(t) {
  return +t.toFixed(4) + "em";
}, zr = function(t) {
  return t.filter((r) => r).join(" ");
}, Kc = function(t, r, n) {
  if (this.classes = t || [], this.attributes = {}, this.height = 0, this.depth = 0, this.maxFontSize = 0, this.style = n || {}, r) {
    r.style.isTight() && this.classes.push("mtight");
    var i = r.getColor();
    i && (this.style.color = i);
  }
}, Zc = function(t) {
  var r = document.createElement(t);
  r.className = zr(this.classes);
  for (var n in this.style)
    this.style.hasOwnProperty(n) && (r.style[n] = this.style[n]);
  for (var i in this.attributes)
    this.attributes.hasOwnProperty(i) && r.setAttribute(i, this.attributes[i]);
  for (var a = 0; a < this.children.length; a++)
    r.appendChild(this.children[a].toNode());
  return r;
}, Jc = function(t) {
  var r = "<" + t;
  this.classes.length && (r += ' class="' + me.escape(zr(this.classes)) + '"');
  var n = "";
  for (var i in this.style)
    this.style.hasOwnProperty(i) && (n += me.hyphenate(i) + ":" + this.style[i] + ";");
  n && (r += ' style="' + me.escape(n) + '"');
  for (var a in this.attributes)
    this.attributes.hasOwnProperty(a) && (r += " " + a + '="' + me.escape(this.attributes[a]) + '"');
  r += ">";
  for (var s = 0; s < this.children.length; s++)
    r += this.children[s].toMarkup();
  return r += "</" + t + ">", r;
};
class mi {
  constructor(t, r, n, i) {
    this.children = void 0, this.attributes = void 0, this.classes = void 0, this.height = void 0, this.depth = void 0, this.width = void 0, this.maxFontSize = void 0, this.style = void 0, Kc.call(this, t, n, i), this.children = r || [];
  }
  /**
   * Sets an arbitrary attribute on the span. Warning: use this wisely. Not
   * all browsers support attributes the same, and having too many custom
   * attributes is probably bad.
   */
  setAttribute(t, r) {
    this.attributes[t] = r;
  }
  hasClass(t) {
    return me.contains(this.classes, t);
  }
  toNode() {
    return Zc.call(this, "span");
  }
  toMarkup() {
    return Jc.call(this, "span");
  }
}
class Po {
  constructor(t, r, n, i) {
    this.children = void 0, this.attributes = void 0, this.classes = void 0, this.height = void 0, this.depth = void 0, this.maxFontSize = void 0, this.style = void 0, Kc.call(this, r, i), this.children = n || [], this.setAttribute("href", t);
  }
  setAttribute(t, r) {
    this.attributes[t] = r;
  }
  hasClass(t) {
    return me.contains(this.classes, t);
  }
  toNode() {
    return Zc.call(this, "a");
  }
  toMarkup() {
    return Jc.call(this, "a");
  }
}
class _p {
  constructor(t, r, n) {
    this.src = void 0, this.alt = void 0, this.classes = void 0, this.height = void 0, this.depth = void 0, this.maxFontSize = void 0, this.style = void 0, this.alt = r, this.src = t, this.classes = ["mord"], this.style = n;
  }
  hasClass(t) {
    return me.contains(this.classes, t);
  }
  toNode() {
    var t = document.createElement("img");
    t.src = this.src, t.alt = this.alt, t.className = "mord";
    for (var r in this.style)
      this.style.hasOwnProperty(r) && (t.style[r] = this.style[r]);
    return t;
  }
  toMarkup() {
    var t = "<img  src='" + this.src + " 'alt='" + this.alt + "' ", r = "";
    for (var n in this.style)
      this.style.hasOwnProperty(n) && (r += me.hyphenate(n) + ":" + this.style[n] + ";");
    return r && (t += ' style="' + me.escape(r) + '"'), t += "'/>", t;
  }
}
var wp = {
  î: "ı̂",
  ï: "ı̈",
  í: "ı́",
  // 'ī': '\u0131\u0304', // enable when we add Extended Latin
  ì: "ı̀"
};
class Mt {
  constructor(t, r, n, i, a, s, o, l) {
    this.text = void 0, this.height = void 0, this.depth = void 0, this.italic = void 0, this.skew = void 0, this.width = void 0, this.maxFontSize = void 0, this.classes = void 0, this.style = void 0, this.text = t, this.height = r || 0, this.depth = n || 0, this.italic = i || 0, this.skew = a || 0, this.width = s || 0, this.classes = o || [], this.style = l || {}, this.maxFontSize = 0;
    var u = sp(this.text.charCodeAt(0));
    u && this.classes.push(u + "_fallback"), /[îïíì]/.test(this.text) && (this.text = wp[this.text]);
  }
  hasClass(t) {
    return me.contains(this.classes, t);
  }
  /**
   * Creates a text node or span from a symbol node. Note that a span is only
   * created if it is needed.
   */
  toNode() {
    var t = document.createTextNode(this.text), r = null;
    this.italic > 0 && (r = document.createElement("span"), r.style.marginRight = j(this.italic)), this.classes.length > 0 && (r = r || document.createElement("span"), r.className = zr(this.classes));
    for (var n in this.style)
      this.style.hasOwnProperty(n) && (r = r || document.createElement("span"), r.style[n] = this.style[n]);
    return r ? (r.appendChild(t), r) : t;
  }
  /**
   * Creates markup for a symbol node.
   */
  toMarkup() {
    var t = !1, r = "<span";
    this.classes.length && (t = !0, r += ' class="', r += me.escape(zr(this.classes)), r += '"');
    var n = "";
    this.italic > 0 && (n += "margin-right:" + this.italic + "em;");
    for (var i in this.style)
      this.style.hasOwnProperty(i) && (n += me.hyphenate(i) + ":" + this.style[i] + ";");
    n && (t = !0, r += ' style="' + me.escape(n) + '"');
    var a = me.escape(this.text);
    return t ? (r += ">", r += a, r += "</span>", r) : a;
  }
}
class _r {
  constructor(t, r) {
    this.children = void 0, this.attributes = void 0, this.children = t || [], this.attributes = r || {};
  }
  toNode() {
    var t = "http://www.w3.org/2000/svg", r = document.createElementNS(t, "svg");
    for (var n in this.attributes)
      Object.prototype.hasOwnProperty.call(this.attributes, n) && r.setAttribute(n, this.attributes[n]);
    for (var i = 0; i < this.children.length; i++)
      r.appendChild(this.children[i].toNode());
    return r;
  }
  toMarkup() {
    var t = '<svg xmlns="http://www.w3.org/2000/svg"';
    for (var r in this.attributes)
      Object.prototype.hasOwnProperty.call(this.attributes, r) && (t += " " + r + "='" + this.attributes[r] + "'");
    t += ">";
    for (var n = 0; n < this.children.length; n++)
      t += this.children[n].toMarkup();
    return t += "</svg>", t;
  }
}
class Pr {
  constructor(t, r) {
    this.pathName = void 0, this.alternate = void 0, this.pathName = t, this.alternate = r;
  }
  toNode() {
    var t = "http://www.w3.org/2000/svg", r = document.createElementNS(t, "path");
    return this.alternate ? r.setAttribute("d", this.alternate) : r.setAttribute("d", Z0[this.pathName]), r;
  }
  toMarkup() {
    return this.alternate ? "<path d='" + this.alternate + "'/>" : "<path d='" + Z0[this.pathName] + "'/>";
  }
}
class io {
  constructor(t) {
    this.attributes = void 0, this.attributes = t || {};
  }
  toNode() {
    var t = "http://www.w3.org/2000/svg", r = document.createElementNS(t, "line");
    for (var n in this.attributes)
      Object.prototype.hasOwnProperty.call(this.attributes, n) && r.setAttribute(n, this.attributes[n]);
    return r;
  }
  toMarkup() {
    var t = "<line";
    for (var r in this.attributes)
      Object.prototype.hasOwnProperty.call(this.attributes, r) && (t += " " + r + "='" + this.attributes[r] + "'");
    return t += "/>", t;
  }
}
function tl(e) {
  if (e instanceof Mt)
    return e;
  throw new Error("Expected symbolNode but got " + String(e) + ".");
}
function Sp(e) {
  if (e instanceof mi)
    return e;
  throw new Error("Expected span<HtmlDomNode> but got " + String(e) + ".");
}
var kp = {
  bin: 1,
  close: 1,
  inner: 1,
  open: 1,
  punct: 1,
  rel: 1
}, Tp = {
  "accent-token": 1,
  mathord: 1,
  "op-token": 1,
  spacing: 1,
  textord: 1
}, $e = {
  math: {},
  text: {}
};
function c(e, t, r, n, i, a) {
  $e[e][i] = {
    font: t,
    group: r,
    replace: n
  }, a && n && ($e[e][n] = $e[e][i]);
}
var h = "math", D = "text", f = "main", y = "ams", Ue = "accent-token", ee = "bin", gt = "close", Mn = "inner", fe = "mathord", Je = "op-token", At = "open", Ha = "punct", x = "rel", Cr = "spacing", w = "textord";
c(h, f, x, "≡", "\\equiv", !0);
c(h, f, x, "≺", "\\prec", !0);
c(h, f, x, "≻", "\\succ", !0);
c(h, f, x, "∼", "\\sim", !0);
c(h, f, x, "⊥", "\\perp");
c(h, f, x, "⪯", "\\preceq", !0);
c(h, f, x, "⪰", "\\succeq", !0);
c(h, f, x, "≃", "\\simeq", !0);
c(h, f, x, "∣", "\\mid", !0);
c(h, f, x, "≪", "\\ll", !0);
c(h, f, x, "≫", "\\gg", !0);
c(h, f, x, "≍", "\\asymp", !0);
c(h, f, x, "∥", "\\parallel");
c(h, f, x, "⋈", "\\bowtie", !0);
c(h, f, x, "⌣", "\\smile", !0);
c(h, f, x, "⊑", "\\sqsubseteq", !0);
c(h, f, x, "⊒", "\\sqsupseteq", !0);
c(h, f, x, "≐", "\\doteq", !0);
c(h, f, x, "⌢", "\\frown", !0);
c(h, f, x, "∋", "\\ni", !0);
c(h, f, x, "∝", "\\propto", !0);
c(h, f, x, "⊢", "\\vdash", !0);
c(h, f, x, "⊣", "\\dashv", !0);
c(h, f, x, "∋", "\\owns");
c(h, f, Ha, ".", "\\ldotp");
c(h, f, Ha, "⋅", "\\cdotp");
c(h, f, w, "#", "\\#");
c(D, f, w, "#", "\\#");
c(h, f, w, "&", "\\&");
c(D, f, w, "&", "\\&");
c(h, f, w, "ℵ", "\\aleph", !0);
c(h, f, w, "∀", "\\forall", !0);
c(h, f, w, "ℏ", "\\hbar", !0);
c(h, f, w, "∃", "\\exists", !0);
c(h, f, w, "∇", "\\nabla", !0);
c(h, f, w, "♭", "\\flat", !0);
c(h, f, w, "ℓ", "\\ell", !0);
c(h, f, w, "♮", "\\natural", !0);
c(h, f, w, "♣", "\\clubsuit", !0);
c(h, f, w, "℘", "\\wp", !0);
c(h, f, w, "♯", "\\sharp", !0);
c(h, f, w, "♢", "\\diamondsuit", !0);
c(h, f, w, "ℜ", "\\Re", !0);
c(h, f, w, "♡", "\\heartsuit", !0);
c(h, f, w, "ℑ", "\\Im", !0);
c(h, f, w, "♠", "\\spadesuit", !0);
c(h, f, w, "§", "\\S", !0);
c(D, f, w, "§", "\\S");
c(h, f, w, "¶", "\\P", !0);
c(D, f, w, "¶", "\\P");
c(h, f, w, "†", "\\dag");
c(D, f, w, "†", "\\dag");
c(D, f, w, "†", "\\textdagger");
c(h, f, w, "‡", "\\ddag");
c(D, f, w, "‡", "\\ddag");
c(D, f, w, "‡", "\\textdaggerdbl");
c(h, f, gt, "⎱", "\\rmoustache", !0);
c(h, f, At, "⎰", "\\lmoustache", !0);
c(h, f, gt, "⟯", "\\rgroup", !0);
c(h, f, At, "⟮", "\\lgroup", !0);
c(h, f, ee, "∓", "\\mp", !0);
c(h, f, ee, "⊖", "\\ominus", !0);
c(h, f, ee, "⊎", "\\uplus", !0);
c(h, f, ee, "⊓", "\\sqcap", !0);
c(h, f, ee, "∗", "\\ast");
c(h, f, ee, "⊔", "\\sqcup", !0);
c(h, f, ee, "◯", "\\bigcirc", !0);
c(h, f, ee, "∙", "\\bullet", !0);
c(h, f, ee, "‡", "\\ddagger");
c(h, f, ee, "≀", "\\wr", !0);
c(h, f, ee, "⨿", "\\amalg");
c(h, f, ee, "&", "\\And");
c(h, f, x, "⟵", "\\longleftarrow", !0);
c(h, f, x, "⇐", "\\Leftarrow", !0);
c(h, f, x, "⟸", "\\Longleftarrow", !0);
c(h, f, x, "⟶", "\\longrightarrow", !0);
c(h, f, x, "⇒", "\\Rightarrow", !0);
c(h, f, x, "⟹", "\\Longrightarrow", !0);
c(h, f, x, "↔", "\\leftrightarrow", !0);
c(h, f, x, "⟷", "\\longleftrightarrow", !0);
c(h, f, x, "⇔", "\\Leftrightarrow", !0);
c(h, f, x, "⟺", "\\Longleftrightarrow", !0);
c(h, f, x, "↦", "\\mapsto", !0);
c(h, f, x, "⟼", "\\longmapsto", !0);
c(h, f, x, "↗", "\\nearrow", !0);
c(h, f, x, "↩", "\\hookleftarrow", !0);
c(h, f, x, "↪", "\\hookrightarrow", !0);
c(h, f, x, "↘", "\\searrow", !0);
c(h, f, x, "↼", "\\leftharpoonup", !0);
c(h, f, x, "⇀", "\\rightharpoonup", !0);
c(h, f, x, "↙", "\\swarrow", !0);
c(h, f, x, "↽", "\\leftharpoondown", !0);
c(h, f, x, "⇁", "\\rightharpoondown", !0);
c(h, f, x, "↖", "\\nwarrow", !0);
c(h, f, x, "⇌", "\\rightleftharpoons", !0);
c(h, y, x, "≮", "\\nless", !0);
c(h, y, x, "", "\\@nleqslant");
c(h, y, x, "", "\\@nleqq");
c(h, y, x, "⪇", "\\lneq", !0);
c(h, y, x, "≨", "\\lneqq", !0);
c(h, y, x, "", "\\@lvertneqq");
c(h, y, x, "⋦", "\\lnsim", !0);
c(h, y, x, "⪉", "\\lnapprox", !0);
c(h, y, x, "⊀", "\\nprec", !0);
c(h, y, x, "⋠", "\\npreceq", !0);
c(h, y, x, "⋨", "\\precnsim", !0);
c(h, y, x, "⪹", "\\precnapprox", !0);
c(h, y, x, "≁", "\\nsim", !0);
c(h, y, x, "", "\\@nshortmid");
c(h, y, x, "∤", "\\nmid", !0);
c(h, y, x, "⊬", "\\nvdash", !0);
c(h, y, x, "⊭", "\\nvDash", !0);
c(h, y, x, "⋪", "\\ntriangleleft");
c(h, y, x, "⋬", "\\ntrianglelefteq", !0);
c(h, y, x, "⊊", "\\subsetneq", !0);
c(h, y, x, "", "\\@varsubsetneq");
c(h, y, x, "⫋", "\\subsetneqq", !0);
c(h, y, x, "", "\\@varsubsetneqq");
c(h, y, x, "≯", "\\ngtr", !0);
c(h, y, x, "", "\\@ngeqslant");
c(h, y, x, "", "\\@ngeqq");
c(h, y, x, "⪈", "\\gneq", !0);
c(h, y, x, "≩", "\\gneqq", !0);
c(h, y, x, "", "\\@gvertneqq");
c(h, y, x, "⋧", "\\gnsim", !0);
c(h, y, x, "⪊", "\\gnapprox", !0);
c(h, y, x, "⊁", "\\nsucc", !0);
c(h, y, x, "⋡", "\\nsucceq", !0);
c(h, y, x, "⋩", "\\succnsim", !0);
c(h, y, x, "⪺", "\\succnapprox", !0);
c(h, y, x, "≆", "\\ncong", !0);
c(h, y, x, "", "\\@nshortparallel");
c(h, y, x, "∦", "\\nparallel", !0);
c(h, y, x, "⊯", "\\nVDash", !0);
c(h, y, x, "⋫", "\\ntriangleright");
c(h, y, x, "⋭", "\\ntrianglerighteq", !0);
c(h, y, x, "", "\\@nsupseteqq");
c(h, y, x, "⊋", "\\supsetneq", !0);
c(h, y, x, "", "\\@varsupsetneq");
c(h, y, x, "⫌", "\\supsetneqq", !0);
c(h, y, x, "", "\\@varsupsetneqq");
c(h, y, x, "⊮", "\\nVdash", !0);
c(h, y, x, "⪵", "\\precneqq", !0);
c(h, y, x, "⪶", "\\succneqq", !0);
c(h, y, x, "", "\\@nsubseteqq");
c(h, y, ee, "⊴", "\\unlhd");
c(h, y, ee, "⊵", "\\unrhd");
c(h, y, x, "↚", "\\nleftarrow", !0);
c(h, y, x, "↛", "\\nrightarrow", !0);
c(h, y, x, "⇍", "\\nLeftarrow", !0);
c(h, y, x, "⇏", "\\nRightarrow", !0);
c(h, y, x, "↮", "\\nleftrightarrow", !0);
c(h, y, x, "⇎", "\\nLeftrightarrow", !0);
c(h, y, x, "△", "\\vartriangle");
c(h, y, w, "ℏ", "\\hslash");
c(h, y, w, "▽", "\\triangledown");
c(h, y, w, "◊", "\\lozenge");
c(h, y, w, "Ⓢ", "\\circledS");
c(h, y, w, "®", "\\circledR");
c(D, y, w, "®", "\\circledR");
c(h, y, w, "∡", "\\measuredangle", !0);
c(h, y, w, "∄", "\\nexists");
c(h, y, w, "℧", "\\mho");
c(h, y, w, "Ⅎ", "\\Finv", !0);
c(h, y, w, "⅁", "\\Game", !0);
c(h, y, w, "‵", "\\backprime");
c(h, y, w, "▲", "\\blacktriangle");
c(h, y, w, "▼", "\\blacktriangledown");
c(h, y, w, "■", "\\blacksquare");
c(h, y, w, "⧫", "\\blacklozenge");
c(h, y, w, "★", "\\bigstar");
c(h, y, w, "∢", "\\sphericalangle", !0);
c(h, y, w, "∁", "\\complement", !0);
c(h, y, w, "ð", "\\eth", !0);
c(D, f, w, "ð", "ð");
c(h, y, w, "╱", "\\diagup");
c(h, y, w, "╲", "\\diagdown");
c(h, y, w, "□", "\\square");
c(h, y, w, "□", "\\Box");
c(h, y, w, "◊", "\\Diamond");
c(h, y, w, "¥", "\\yen", !0);
c(D, y, w, "¥", "\\yen", !0);
c(h, y, w, "✓", "\\checkmark", !0);
c(D, y, w, "✓", "\\checkmark");
c(h, y, w, "ℶ", "\\beth", !0);
c(h, y, w, "ℸ", "\\daleth", !0);
c(h, y, w, "ℷ", "\\gimel", !0);
c(h, y, w, "ϝ", "\\digamma", !0);
c(h, y, w, "ϰ", "\\varkappa");
c(h, y, At, "┌", "\\@ulcorner", !0);
c(h, y, gt, "┐", "\\@urcorner", !0);
c(h, y, At, "└", "\\@llcorner", !0);
c(h, y, gt, "┘", "\\@lrcorner", !0);
c(h, y, x, "≦", "\\leqq", !0);
c(h, y, x, "⩽", "\\leqslant", !0);
c(h, y, x, "⪕", "\\eqslantless", !0);
c(h, y, x, "≲", "\\lesssim", !0);
c(h, y, x, "⪅", "\\lessapprox", !0);
c(h, y, x, "≊", "\\approxeq", !0);
c(h, y, ee, "⋖", "\\lessdot");
c(h, y, x, "⋘", "\\lll", !0);
c(h, y, x, "≶", "\\lessgtr", !0);
c(h, y, x, "⋚", "\\lesseqgtr", !0);
c(h, y, x, "⪋", "\\lesseqqgtr", !0);
c(h, y, x, "≑", "\\doteqdot");
c(h, y, x, "≓", "\\risingdotseq", !0);
c(h, y, x, "≒", "\\fallingdotseq", !0);
c(h, y, x, "∽", "\\backsim", !0);
c(h, y, x, "⋍", "\\backsimeq", !0);
c(h, y, x, "⫅", "\\subseteqq", !0);
c(h, y, x, "⋐", "\\Subset", !0);
c(h, y, x, "⊏", "\\sqsubset", !0);
c(h, y, x, "≼", "\\preccurlyeq", !0);
c(h, y, x, "⋞", "\\curlyeqprec", !0);
c(h, y, x, "≾", "\\precsim", !0);
c(h, y, x, "⪷", "\\precapprox", !0);
c(h, y, x, "⊲", "\\vartriangleleft");
c(h, y, x, "⊴", "\\trianglelefteq");
c(h, y, x, "⊨", "\\vDash", !0);
c(h, y, x, "⊪", "\\Vvdash", !0);
c(h, y, x, "⌣", "\\smallsmile");
c(h, y, x, "⌢", "\\smallfrown");
c(h, y, x, "≏", "\\bumpeq", !0);
c(h, y, x, "≎", "\\Bumpeq", !0);
c(h, y, x, "≧", "\\geqq", !0);
c(h, y, x, "⩾", "\\geqslant", !0);
c(h, y, x, "⪖", "\\eqslantgtr", !0);
c(h, y, x, "≳", "\\gtrsim", !0);
c(h, y, x, "⪆", "\\gtrapprox", !0);
c(h, y, ee, "⋗", "\\gtrdot");
c(h, y, x, "⋙", "\\ggg", !0);
c(h, y, x, "≷", "\\gtrless", !0);
c(h, y, x, "⋛", "\\gtreqless", !0);
c(h, y, x, "⪌", "\\gtreqqless", !0);
c(h, y, x, "≖", "\\eqcirc", !0);
c(h, y, x, "≗", "\\circeq", !0);
c(h, y, x, "≜", "\\triangleq", !0);
c(h, y, x, "∼", "\\thicksim");
c(h, y, x, "≈", "\\thickapprox");
c(h, y, x, "⫆", "\\supseteqq", !0);
c(h, y, x, "⋑", "\\Supset", !0);
c(h, y, x, "⊐", "\\sqsupset", !0);
c(h, y, x, "≽", "\\succcurlyeq", !0);
c(h, y, x, "⋟", "\\curlyeqsucc", !0);
c(h, y, x, "≿", "\\succsim", !0);
c(h, y, x, "⪸", "\\succapprox", !0);
c(h, y, x, "⊳", "\\vartriangleright");
c(h, y, x, "⊵", "\\trianglerighteq");
c(h, y, x, "⊩", "\\Vdash", !0);
c(h, y, x, "∣", "\\shortmid");
c(h, y, x, "∥", "\\shortparallel");
c(h, y, x, "≬", "\\between", !0);
c(h, y, x, "⋔", "\\pitchfork", !0);
c(h, y, x, "∝", "\\varpropto");
c(h, y, x, "◀", "\\blacktriangleleft");
c(h, y, x, "∴", "\\therefore", !0);
c(h, y, x, "∍", "\\backepsilon");
c(h, y, x, "▶", "\\blacktriangleright");
c(h, y, x, "∵", "\\because", !0);
c(h, y, x, "⋘", "\\llless");
c(h, y, x, "⋙", "\\gggtr");
c(h, y, ee, "⊲", "\\lhd");
c(h, y, ee, "⊳", "\\rhd");
c(h, y, x, "≂", "\\eqsim", !0);
c(h, f, x, "⋈", "\\Join");
c(h, y, x, "≑", "\\Doteq", !0);
c(h, y, ee, "∔", "\\dotplus", !0);
c(h, y, ee, "∖", "\\smallsetminus");
c(h, y, ee, "⋒", "\\Cap", !0);
c(h, y, ee, "⋓", "\\Cup", !0);
c(h, y, ee, "⩞", "\\doublebarwedge", !0);
c(h, y, ee, "⊟", "\\boxminus", !0);
c(h, y, ee, "⊞", "\\boxplus", !0);
c(h, y, ee, "⋇", "\\divideontimes", !0);
c(h, y, ee, "⋉", "\\ltimes", !0);
c(h, y, ee, "⋊", "\\rtimes", !0);
c(h, y, ee, "⋋", "\\leftthreetimes", !0);
c(h, y, ee, "⋌", "\\rightthreetimes", !0);
c(h, y, ee, "⋏", "\\curlywedge", !0);
c(h, y, ee, "⋎", "\\curlyvee", !0);
c(h, y, ee, "⊝", "\\circleddash", !0);
c(h, y, ee, "⊛", "\\circledast", !0);
c(h, y, ee, "⋅", "\\centerdot");
c(h, y, ee, "⊺", "\\intercal", !0);
c(h, y, ee, "⋒", "\\doublecap");
c(h, y, ee, "⋓", "\\doublecup");
c(h, y, ee, "⊠", "\\boxtimes", !0);
c(h, y, x, "⇢", "\\dashrightarrow", !0);
c(h, y, x, "⇠", "\\dashleftarrow", !0);
c(h, y, x, "⇇", "\\leftleftarrows", !0);
c(h, y, x, "⇆", "\\leftrightarrows", !0);
c(h, y, x, "⇚", "\\Lleftarrow", !0);
c(h, y, x, "↞", "\\twoheadleftarrow", !0);
c(h, y, x, "↢", "\\leftarrowtail", !0);
c(h, y, x, "↫", "\\looparrowleft", !0);
c(h, y, x, "⇋", "\\leftrightharpoons", !0);
c(h, y, x, "↶", "\\curvearrowleft", !0);
c(h, y, x, "↺", "\\circlearrowleft", !0);
c(h, y, x, "↰", "\\Lsh", !0);
c(h, y, x, "⇈", "\\upuparrows", !0);
c(h, y, x, "↿", "\\upharpoonleft", !0);
c(h, y, x, "⇃", "\\downharpoonleft", !0);
c(h, f, x, "⊶", "\\origof", !0);
c(h, f, x, "⊷", "\\imageof", !0);
c(h, y, x, "⊸", "\\multimap", !0);
c(h, y, x, "↭", "\\leftrightsquigarrow", !0);
c(h, y, x, "⇉", "\\rightrightarrows", !0);
c(h, y, x, "⇄", "\\rightleftarrows", !0);
c(h, y, x, "↠", "\\twoheadrightarrow", !0);
c(h, y, x, "↣", "\\rightarrowtail", !0);
c(h, y, x, "↬", "\\looparrowright", !0);
c(h, y, x, "↷", "\\curvearrowright", !0);
c(h, y, x, "↻", "\\circlearrowright", !0);
c(h, y, x, "↱", "\\Rsh", !0);
c(h, y, x, "⇊", "\\downdownarrows", !0);
c(h, y, x, "↾", "\\upharpoonright", !0);
c(h, y, x, "⇂", "\\downharpoonright", !0);
c(h, y, x, "⇝", "\\rightsquigarrow", !0);
c(h, y, x, "⇝", "\\leadsto");
c(h, y, x, "⇛", "\\Rrightarrow", !0);
c(h, y, x, "↾", "\\restriction");
c(h, f, w, "‘", "`");
c(h, f, w, "$", "\\$");
c(D, f, w, "$", "\\$");
c(D, f, w, "$", "\\textdollar");
c(h, f, w, "%", "\\%");
c(D, f, w, "%", "\\%");
c(h, f, w, "_", "\\_");
c(D, f, w, "_", "\\_");
c(D, f, w, "_", "\\textunderscore");
c(h, f, w, "∠", "\\angle", !0);
c(h, f, w, "∞", "\\infty", !0);
c(h, f, w, "′", "\\prime");
c(h, f, w, "△", "\\triangle");
c(h, f, w, "Γ", "\\Gamma", !0);
c(h, f, w, "Δ", "\\Delta", !0);
c(h, f, w, "Θ", "\\Theta", !0);
c(h, f, w, "Λ", "\\Lambda", !0);
c(h, f, w, "Ξ", "\\Xi", !0);
c(h, f, w, "Π", "\\Pi", !0);
c(h, f, w, "Σ", "\\Sigma", !0);
c(h, f, w, "Υ", "\\Upsilon", !0);
c(h, f, w, "Φ", "\\Phi", !0);
c(h, f, w, "Ψ", "\\Psi", !0);
c(h, f, w, "Ω", "\\Omega", !0);
c(h, f, w, "A", "Α");
c(h, f, w, "B", "Β");
c(h, f, w, "E", "Ε");
c(h, f, w, "Z", "Ζ");
c(h, f, w, "H", "Η");
c(h, f, w, "I", "Ι");
c(h, f, w, "K", "Κ");
c(h, f, w, "M", "Μ");
c(h, f, w, "N", "Ν");
c(h, f, w, "O", "Ο");
c(h, f, w, "P", "Ρ");
c(h, f, w, "T", "Τ");
c(h, f, w, "X", "Χ");
c(h, f, w, "¬", "\\neg", !0);
c(h, f, w, "¬", "\\lnot");
c(h, f, w, "⊤", "\\top");
c(h, f, w, "⊥", "\\bot");
c(h, f, w, "∅", "\\emptyset");
c(h, y, w, "∅", "\\varnothing");
c(h, f, fe, "α", "\\alpha", !0);
c(h, f, fe, "β", "\\beta", !0);
c(h, f, fe, "γ", "\\gamma", !0);
c(h, f, fe, "δ", "\\delta", !0);
c(h, f, fe, "ϵ", "\\epsilon", !0);
c(h, f, fe, "ζ", "\\zeta", !0);
c(h, f, fe, "η", "\\eta", !0);
c(h, f, fe, "θ", "\\theta", !0);
c(h, f, fe, "ι", "\\iota", !0);
c(h, f, fe, "κ", "\\kappa", !0);
c(h, f, fe, "λ", "\\lambda", !0);
c(h, f, fe, "μ", "\\mu", !0);
c(h, f, fe, "ν", "\\nu", !0);
c(h, f, fe, "ξ", "\\xi", !0);
c(h, f, fe, "ο", "\\omicron", !0);
c(h, f, fe, "π", "\\pi", !0);
c(h, f, fe, "ρ", "\\rho", !0);
c(h, f, fe, "σ", "\\sigma", !0);
c(h, f, fe, "τ", "\\tau", !0);
c(h, f, fe, "υ", "\\upsilon", !0);
c(h, f, fe, "ϕ", "\\phi", !0);
c(h, f, fe, "χ", "\\chi", !0);
c(h, f, fe, "ψ", "\\psi", !0);
c(h, f, fe, "ω", "\\omega", !0);
c(h, f, fe, "ε", "\\varepsilon", !0);
c(h, f, fe, "ϑ", "\\vartheta", !0);
c(h, f, fe, "ϖ", "\\varpi", !0);
c(h, f, fe, "ϱ", "\\varrho", !0);
c(h, f, fe, "ς", "\\varsigma", !0);
c(h, f, fe, "φ", "\\varphi", !0);
c(h, f, ee, "∗", "*", !0);
c(h, f, ee, "+", "+");
c(h, f, ee, "−", "-", !0);
c(h, f, ee, "⋅", "\\cdot", !0);
c(h, f, ee, "∘", "\\circ", !0);
c(h, f, ee, "÷", "\\div", !0);
c(h, f, ee, "±", "\\pm", !0);
c(h, f, ee, "×", "\\times", !0);
c(h, f, ee, "∩", "\\cap", !0);
c(h, f, ee, "∪", "\\cup", !0);
c(h, f, ee, "∖", "\\setminus", !0);
c(h, f, ee, "∧", "\\land");
c(h, f, ee, "∨", "\\lor");
c(h, f, ee, "∧", "\\wedge", !0);
c(h, f, ee, "∨", "\\vee", !0);
c(h, f, w, "√", "\\surd");
c(h, f, At, "⟨", "\\langle", !0);
c(h, f, At, "∣", "\\lvert");
c(h, f, At, "∥", "\\lVert");
c(h, f, gt, "?", "?");
c(h, f, gt, "!", "!");
c(h, f, gt, "⟩", "\\rangle", !0);
c(h, f, gt, "∣", "\\rvert");
c(h, f, gt, "∥", "\\rVert");
c(h, f, x, "=", "=");
c(h, f, x, ":", ":");
c(h, f, x, "≈", "\\approx", !0);
c(h, f, x, "≅", "\\cong", !0);
c(h, f, x, "≥", "\\ge");
c(h, f, x, "≥", "\\geq", !0);
c(h, f, x, "←", "\\gets");
c(h, f, x, ">", "\\gt", !0);
c(h, f, x, "∈", "\\in", !0);
c(h, f, x, "", "\\@not");
c(h, f, x, "⊂", "\\subset", !0);
c(h, f, x, "⊃", "\\supset", !0);
c(h, f, x, "⊆", "\\subseteq", !0);
c(h, f, x, "⊇", "\\supseteq", !0);
c(h, y, x, "⊈", "\\nsubseteq", !0);
c(h, y, x, "⊉", "\\nsupseteq", !0);
c(h, f, x, "⊨", "\\models");
c(h, f, x, "←", "\\leftarrow", !0);
c(h, f, x, "≤", "\\le");
c(h, f, x, "≤", "\\leq", !0);
c(h, f, x, "<", "\\lt", !0);
c(h, f, x, "→", "\\rightarrow", !0);
c(h, f, x, "→", "\\to");
c(h, y, x, "≱", "\\ngeq", !0);
c(h, y, x, "≰", "\\nleq", !0);
c(h, f, Cr, " ", "\\ ");
c(h, f, Cr, " ", "\\space");
c(h, f, Cr, " ", "\\nobreakspace");
c(D, f, Cr, " ", "\\ ");
c(D, f, Cr, " ", " ");
c(D, f, Cr, " ", "\\space");
c(D, f, Cr, " ", "\\nobreakspace");
c(h, f, Cr, null, "\\nobreak");
c(h, f, Cr, null, "\\allowbreak");
c(h, f, Ha, ",", ",");
c(h, f, Ha, ";", ";");
c(h, y, ee, "⊼", "\\barwedge", !0);
c(h, y, ee, "⊻", "\\veebar", !0);
c(h, f, ee, "⊙", "\\odot", !0);
c(h, f, ee, "⊕", "\\oplus", !0);
c(h, f, ee, "⊗", "\\otimes", !0);
c(h, f, w, "∂", "\\partial", !0);
c(h, f, ee, "⊘", "\\oslash", !0);
c(h, y, ee, "⊚", "\\circledcirc", !0);
c(h, y, ee, "⊡", "\\boxdot", !0);
c(h, f, ee, "△", "\\bigtriangleup");
c(h, f, ee, "▽", "\\bigtriangledown");
c(h, f, ee, "†", "\\dagger");
c(h, f, ee, "⋄", "\\diamond");
c(h, f, ee, "⋆", "\\star");
c(h, f, ee, "◃", "\\triangleleft");
c(h, f, ee, "▹", "\\triangleright");
c(h, f, At, "{", "\\{");
c(D, f, w, "{", "\\{");
c(D, f, w, "{", "\\textbraceleft");
c(h, f, gt, "}", "\\}");
c(D, f, w, "}", "\\}");
c(D, f, w, "}", "\\textbraceright");
c(h, f, At, "{", "\\lbrace");
c(h, f, gt, "}", "\\rbrace");
c(h, f, At, "[", "\\lbrack", !0);
c(D, f, w, "[", "\\lbrack", !0);
c(h, f, gt, "]", "\\rbrack", !0);
c(D, f, w, "]", "\\rbrack", !0);
c(h, f, At, "(", "\\lparen", !0);
c(h, f, gt, ")", "\\rparen", !0);
c(D, f, w, "<", "\\textless", !0);
c(D, f, w, ">", "\\textgreater", !0);
c(h, f, At, "⌊", "\\lfloor", !0);
c(h, f, gt, "⌋", "\\rfloor", !0);
c(h, f, At, "⌈", "\\lceil", !0);
c(h, f, gt, "⌉", "\\rceil", !0);
c(h, f, w, "\\", "\\backslash");
c(h, f, w, "∣", "|");
c(h, f, w, "∣", "\\vert");
c(D, f, w, "|", "\\textbar", !0);
c(h, f, w, "∥", "\\|");
c(h, f, w, "∥", "\\Vert");
c(D, f, w, "∥", "\\textbardbl");
c(D, f, w, "~", "\\textasciitilde");
c(D, f, w, "\\", "\\textbackslash");
c(D, f, w, "^", "\\textasciicircum");
c(h, f, x, "↑", "\\uparrow", !0);
c(h, f, x, "⇑", "\\Uparrow", !0);
c(h, f, x, "↓", "\\downarrow", !0);
c(h, f, x, "⇓", "\\Downarrow", !0);
c(h, f, x, "↕", "\\updownarrow", !0);
c(h, f, x, "⇕", "\\Updownarrow", !0);
c(h, f, Je, "∐", "\\coprod");
c(h, f, Je, "⋁", "\\bigvee");
c(h, f, Je, "⋀", "\\bigwedge");
c(h, f, Je, "⨄", "\\biguplus");
c(h, f, Je, "⋂", "\\bigcap");
c(h, f, Je, "⋃", "\\bigcup");
c(h, f, Je, "∫", "\\int");
c(h, f, Je, "∫", "\\intop");
c(h, f, Je, "∬", "\\iint");
c(h, f, Je, "∭", "\\iiint");
c(h, f, Je, "∏", "\\prod");
c(h, f, Je, "∑", "\\sum");
c(h, f, Je, "⨂", "\\bigotimes");
c(h, f, Je, "⨁", "\\bigoplus");
c(h, f, Je, "⨀", "\\bigodot");
c(h, f, Je, "∮", "\\oint");
c(h, f, Je, "∯", "\\oiint");
c(h, f, Je, "∰", "\\oiiint");
c(h, f, Je, "⨆", "\\bigsqcup");
c(h, f, Je, "∫", "\\smallint");
c(D, f, Mn, "…", "\\textellipsis");
c(h, f, Mn, "…", "\\mathellipsis");
c(D, f, Mn, "…", "\\ldots", !0);
c(h, f, Mn, "…", "\\ldots", !0);
c(h, f, Mn, "⋯", "\\@cdots", !0);
c(h, f, Mn, "⋱", "\\ddots", !0);
c(h, f, w, "⋮", "\\varvdots");
c(h, f, Ue, "ˊ", "\\acute");
c(h, f, Ue, "ˋ", "\\grave");
c(h, f, Ue, "¨", "\\ddot");
c(h, f, Ue, "~", "\\tilde");
c(h, f, Ue, "ˉ", "\\bar");
c(h, f, Ue, "˘", "\\breve");
c(h, f, Ue, "ˇ", "\\check");
c(h, f, Ue, "^", "\\hat");
c(h, f, Ue, "⃗", "\\vec");
c(h, f, Ue, "˙", "\\dot");
c(h, f, Ue, "˚", "\\mathring");
c(h, f, fe, "", "\\@imath");
c(h, f, fe, "", "\\@jmath");
c(h, f, w, "ı", "ı");
c(h, f, w, "ȷ", "ȷ");
c(D, f, w, "ı", "\\i", !0);
c(D, f, w, "ȷ", "\\j", !0);
c(D, f, w, "ß", "\\ss", !0);
c(D, f, w, "æ", "\\ae", !0);
c(D, f, w, "œ", "\\oe", !0);
c(D, f, w, "ø", "\\o", !0);
c(D, f, w, "Æ", "\\AE", !0);
c(D, f, w, "Œ", "\\OE", !0);
c(D, f, w, "Ø", "\\O", !0);
c(D, f, Ue, "ˊ", "\\'");
c(D, f, Ue, "ˋ", "\\`");
c(D, f, Ue, "ˆ", "\\^");
c(D, f, Ue, "˜", "\\~");
c(D, f, Ue, "ˉ", "\\=");
c(D, f, Ue, "˘", "\\u");
c(D, f, Ue, "˙", "\\.");
c(D, f, Ue, "¸", "\\c");
c(D, f, Ue, "˚", "\\r");
c(D, f, Ue, "ˇ", "\\v");
c(D, f, Ue, "¨", '\\"');
c(D, f, Ue, "˝", "\\H");
c(D, f, Ue, "◯", "\\textcircled");
var Qc = {
  "--": !0,
  "---": !0,
  "``": !0,
  "''": !0
};
c(D, f, w, "–", "--", !0);
c(D, f, w, "–", "\\textendash");
c(D, f, w, "—", "---", !0);
c(D, f, w, "—", "\\textemdash");
c(D, f, w, "‘", "`", !0);
c(D, f, w, "‘", "\\textquoteleft");
c(D, f, w, "’", "'", !0);
c(D, f, w, "’", "\\textquoteright");
c(D, f, w, "“", "``", !0);
c(D, f, w, "“", "\\textquotedblleft");
c(D, f, w, "”", "''", !0);
c(D, f, w, "”", "\\textquotedblright");
c(h, f, w, "°", "\\degree", !0);
c(D, f, w, "°", "\\degree");
c(D, f, w, "°", "\\textdegree", !0);
c(h, f, w, "£", "\\pounds");
c(h, f, w, "£", "\\mathsterling", !0);
c(D, f, w, "£", "\\pounds");
c(D, f, w, "£", "\\textsterling", !0);
c(h, y, w, "✠", "\\maltese");
c(D, y, w, "✠", "\\maltese");
var rl = '0123456789/@."';
for (var ks = 0; ks < rl.length; ks++) {
  var nl = rl.charAt(ks);
  c(h, f, w, nl, nl);
}
var il = '0123456789!@*()-=+";:?/.,';
for (var Ts = 0; Ts < il.length; Ts++) {
  var al = il.charAt(Ts);
  c(D, f, w, al, al);
}
var ma = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
for (var Cs = 0; Cs < ma.length; Cs++) {
  var Ii = ma.charAt(Cs);
  c(h, f, fe, Ii, Ii), c(D, f, w, Ii, Ii);
}
c(h, y, w, "C", "ℂ");
c(D, y, w, "C", "ℂ");
c(h, y, w, "H", "ℍ");
c(D, y, w, "H", "ℍ");
c(h, y, w, "N", "ℕ");
c(D, y, w, "N", "ℕ");
c(h, y, w, "P", "ℙ");
c(D, y, w, "P", "ℙ");
c(h, y, w, "Q", "ℚ");
c(D, y, w, "Q", "ℚ");
c(h, y, w, "R", "ℝ");
c(D, y, w, "R", "ℝ");
c(h, y, w, "Z", "ℤ");
c(D, y, w, "Z", "ℤ");
c(h, f, fe, "h", "ℎ");
c(D, f, fe, "h", "ℎ");
var ve = "";
for (var yt = 0; yt < ma.length; yt++) {
  var Ve = ma.charAt(yt);
  ve = String.fromCharCode(55349, 56320 + yt), c(h, f, fe, Ve, ve), c(D, f, w, Ve, ve), ve = String.fromCharCode(55349, 56372 + yt), c(h, f, fe, Ve, ve), c(D, f, w, Ve, ve), ve = String.fromCharCode(55349, 56424 + yt), c(h, f, fe, Ve, ve), c(D, f, w, Ve, ve), ve = String.fromCharCode(55349, 56580 + yt), c(h, f, fe, Ve, ve), c(D, f, w, Ve, ve), ve = String.fromCharCode(55349, 56736 + yt), c(h, f, fe, Ve, ve), c(D, f, w, Ve, ve), ve = String.fromCharCode(55349, 56788 + yt), c(h, f, fe, Ve, ve), c(D, f, w, Ve, ve), ve = String.fromCharCode(55349, 56840 + yt), c(h, f, fe, Ve, ve), c(D, f, w, Ve, ve), ve = String.fromCharCode(55349, 56944 + yt), c(h, f, fe, Ve, ve), c(D, f, w, Ve, ve), yt < 26 && (ve = String.fromCharCode(55349, 56632 + yt), c(h, f, fe, Ve, ve), c(D, f, w, Ve, ve), ve = String.fromCharCode(55349, 56476 + yt), c(h, f, fe, Ve, ve), c(D, f, w, Ve, ve));
}
ve = String.fromCharCode(55349, 56668);
c(h, f, fe, "k", ve);
c(D, f, w, "k", ve);
for (var Xr = 0; Xr < 10; Xr++) {
  var Lr = Xr.toString();
  ve = String.fromCharCode(55349, 57294 + Xr), c(h, f, fe, Lr, ve), c(D, f, w, Lr, ve), ve = String.fromCharCode(55349, 57314 + Xr), c(h, f, fe, Lr, ve), c(D, f, w, Lr, ve), ve = String.fromCharCode(55349, 57324 + Xr), c(h, f, fe, Lr, ve), c(D, f, w, Lr, ve), ve = String.fromCharCode(55349, 57334 + Xr), c(h, f, fe, Lr, ve), c(D, f, w, Lr, ve);
}
var ao = "ÐÞþ";
for (var Es = 0; Es < ao.length; Es++) {
  var Ri = ao.charAt(Es);
  c(h, f, fe, Ri, Ri), c(D, f, w, Ri, Ri);
}
var Li = [
  ["mathbf", "textbf", "Main-Bold"],
  // A-Z bold upright
  ["mathbf", "textbf", "Main-Bold"],
  // a-z bold upright
  ["mathnormal", "textit", "Math-Italic"],
  // A-Z italic
  ["mathnormal", "textit", "Math-Italic"],
  // a-z italic
  ["boldsymbol", "boldsymbol", "Main-BoldItalic"],
  // A-Z bold italic
  ["boldsymbol", "boldsymbol", "Main-BoldItalic"],
  // a-z bold italic
  // Map fancy A-Z letters to script, not calligraphic.
  // This aligns with unicode-math and math fonts (except Cambria Math).
  ["mathscr", "textscr", "Script-Regular"],
  // A-Z script
  ["", "", ""],
  // a-z script.  No font
  ["", "", ""],
  // A-Z bold script. No font
  ["", "", ""],
  // a-z bold script. No font
  ["mathfrak", "textfrak", "Fraktur-Regular"],
  // A-Z Fraktur
  ["mathfrak", "textfrak", "Fraktur-Regular"],
  // a-z Fraktur
  ["mathbb", "textbb", "AMS-Regular"],
  // A-Z double-struck
  ["mathbb", "textbb", "AMS-Regular"],
  // k double-struck
  ["", "", ""],
  // A-Z bold Fraktur No font metrics
  ["", "", ""],
  // a-z bold Fraktur.   No font.
  ["mathsf", "textsf", "SansSerif-Regular"],
  // A-Z sans-serif
  ["mathsf", "textsf", "SansSerif-Regular"],
  // a-z sans-serif
  ["mathboldsf", "textboldsf", "SansSerif-Bold"],
  // A-Z bold sans-serif
  ["mathboldsf", "textboldsf", "SansSerif-Bold"],
  // a-z bold sans-serif
  ["mathitsf", "textitsf", "SansSerif-Italic"],
  // A-Z italic sans-serif
  ["mathitsf", "textitsf", "SansSerif-Italic"],
  // a-z italic sans-serif
  ["", "", ""],
  // A-Z bold italic sans. No font
  ["", "", ""],
  // a-z bold italic sans. No font
  ["mathtt", "texttt", "Typewriter-Regular"],
  // A-Z monospace
  ["mathtt", "texttt", "Typewriter-Regular"]
  // a-z monospace
], sl = [
  ["mathbf", "textbf", "Main-Bold"],
  // 0-9 bold
  ["", "", ""],
  // 0-9 double-struck. No KaTeX font.
  ["mathsf", "textsf", "SansSerif-Regular"],
  // 0-9 sans-serif
  ["mathboldsf", "textboldsf", "SansSerif-Bold"],
  // 0-9 bold sans-serif
  ["mathtt", "texttt", "Typewriter-Regular"]
  // 0-9 monospace
], Cp = function(t, r) {
  var n = t.charCodeAt(0), i = t.charCodeAt(1), a = (n - 55296) * 1024 + (i - 56320) + 65536, s = r === "math" ? 0 : 1;
  if (119808 <= a && a < 120484) {
    var o = Math.floor((a - 119808) / 26);
    return [Li[o][2], Li[o][s]];
  } else if (120782 <= a && a <= 120831) {
    var l = Math.floor((a - 120782) / 10);
    return [sl[l][2], sl[l][s]];
  } else {
    if (a === 120485 || a === 120486)
      return [Li[0][2], Li[0][s]];
    if (120486 < a && a < 120782)
      return ["", ""];
    throw new U("Unsupported character: " + t);
  }
}, qa = function(t, r, n) {
  return $e[n][t] && $e[n][t].replace && (t = $e[n][t].replace), {
    value: t,
    metrics: zo(t, r, n)
  };
}, Gt = function(t, r, n, i, a) {
  var s = qa(t, r, n), o = s.metrics;
  t = s.value;
  var l;
  if (o) {
    var u = o.italic;
    (n === "text" || i && i.font === "mathit") && (u = 0), l = new Mt(t, o.height, o.depth, u, o.skew, o.width, a);
  } else
    typeof console < "u" && console.warn("No character metrics " + ("for '" + t + "' in style '" + r + "' and mode '" + n + "'")), l = new Mt(t, 0, 0, 0, 0, 0, a);
  if (i) {
    l.maxFontSize = i.sizeMultiplier, i.style.isTight() && l.classes.push("mtight");
    var d = i.getColor();
    d && (l.style.color = d);
  }
  return l;
}, Ep = function(t, r, n, i) {
  return i === void 0 && (i = []), n.font === "boldsymbol" && qa(t, "Main-Bold", r).metrics ? Gt(t, "Main-Bold", r, n, i.concat(["mathbf"])) : t === "\\" || $e[r][t].font === "main" ? Gt(t, "Main-Regular", r, n, i) : Gt(t, "AMS-Regular", r, n, i.concat(["amsrm"]));
}, Ap = function(t, r, n, i, a) {
  return a !== "textord" && qa(t, "Math-BoldItalic", r).metrics ? {
    fontName: "Math-BoldItalic",
    fontClass: "boldsymbol"
  } : {
    fontName: "Main-Bold",
    fontClass: "mathbf"
  };
}, Ip = function(t, r, n) {
  var i = t.mode, a = t.text, s = ["mord"], o = i === "math" || i === "text" && r.font, l = o ? r.font : r.fontFamily;
  if (a.charCodeAt(0) === 55349) {
    var [u, d] = Cp(a, i);
    return Gt(a, u, i, r, s.concat(d));
  } else if (l) {
    var p, b;
    if (l === "boldsymbol") {
      var m = Ap(a, i, r, s, n);
      p = m.fontName, b = [m.fontClass];
    } else
      o ? (p = ru[l].fontName, b = [l]) : (p = Oi(l, r.fontWeight, r.fontShape), b = [l, r.fontWeight, r.fontShape]);
    if (qa(a, p, i).metrics)
      return Gt(a, p, i, r, s.concat(b));
    if (Qc.hasOwnProperty(a) && p.slice(0, 10) === "Typewriter") {
      for (var _ = [], k = 0; k < a.length; k++)
        _.push(Gt(a[k], p, i, r, s.concat(b)));
      return tu(_);
    }
  }
  if (n === "mathord")
    return Gt(a, "Math-Italic", i, r, s.concat(["mathnormal"]));
  if (n === "textord") {
    var L = $e[i][a] && $e[i][a].font;
    if (L === "ams") {
      var A = Oi("amsrm", r.fontWeight, r.fontShape);
      return Gt(a, A, i, r, s.concat("amsrm", r.fontWeight, r.fontShape));
    } else if (L === "main" || !L) {
      var v = Oi("textrm", r.fontWeight, r.fontShape);
      return Gt(a, v, i, r, s.concat(r.fontWeight, r.fontShape));
    } else {
      var S = Oi(L, r.fontWeight, r.fontShape);
      return Gt(a, S, i, r, s.concat(S, r.fontWeight, r.fontShape));
    }
  } else
    throw new Error("unexpected type: " + n + " in makeOrd");
}, Rp = (e, t) => {
  if (zr(e.classes) !== zr(t.classes) || e.skew !== t.skew || e.maxFontSize !== t.maxFontSize)
    return !1;
  if (e.classes.length === 1) {
    var r = e.classes[0];
    if (r === "mbin" || r === "mord")
      return !1;
  }
  for (var n in e.style)
    if (e.style.hasOwnProperty(n) && e.style[n] !== t.style[n])
      return !1;
  for (var i in t.style)
    if (t.style.hasOwnProperty(i) && e.style[i] !== t.style[i])
      return !1;
  return !0;
}, Lp = (e) => {
  for (var t = 0; t < e.length - 1; t++) {
    var r = e[t], n = e[t + 1];
    r instanceof Mt && n instanceof Mt && Rp(r, n) && (r.text += n.text, r.height = Math.max(r.height, n.height), r.depth = Math.max(r.depth, n.depth), r.italic = n.italic, e.splice(t + 1, 1), t--);
  }
  return e;
}, Uo = function(t) {
  for (var r = 0, n = 0, i = 0, a = 0; a < t.children.length; a++) {
    var s = t.children[a];
    s.height > r && (r = s.height), s.depth > n && (n = s.depth), s.maxFontSize > i && (i = s.maxFontSize);
  }
  t.height = r, t.depth = n, t.maxFontSize = i;
}, xt = function(t, r, n, i) {
  var a = new mi(t, r, n, i);
  return Uo(a), a;
}, eu = (e, t, r, n) => new mi(e, t, r, n), Op = function(t, r, n) {
  var i = xt([t], [], r);
  return i.height = Math.max(n || r.fontMetrics().defaultRuleThickness, r.minRuleThickness), i.style.borderBottomWidth = j(i.height), i.maxFontSize = 1, i;
}, Np = function(t, r, n, i) {
  var a = new Po(t, r, n, i);
  return Uo(a), a;
}, tu = function(t) {
  var r = new fi(t);
  return Uo(r), r;
}, Mp = function(t, r) {
  return t instanceof fi ? xt([], [t], r) : t;
}, Bp = function(t) {
  if (t.positionType === "individualShift") {
    for (var r = t.children, n = [r[0]], i = -r[0].shift - r[0].elem.depth, a = i, s = 1; s < r.length; s++) {
      var o = -r[s].shift - a - r[s].elem.depth, l = o - (r[s - 1].elem.height + r[s - 1].elem.depth);
      a = a + o, n.push({
        type: "kern",
        size: l
      }), n.push(r[s]);
    }
    return {
      children: n,
      depth: i
    };
  }
  var u;
  if (t.positionType === "top") {
    for (var d = t.positionData, p = 0; p < t.children.length; p++) {
      var b = t.children[p];
      d -= b.type === "kern" ? b.size : b.elem.height + b.elem.depth;
    }
    u = d;
  } else if (t.positionType === "bottom")
    u = -t.positionData;
  else {
    var m = t.children[0];
    if (m.type !== "elem")
      throw new Error('First child must have type "elem".');
    if (t.positionType === "shift")
      u = -m.elem.depth - t.positionData;
    else if (t.positionType === "firstBaseline")
      u = -m.elem.depth;
    else
      throw new Error("Invalid positionType " + t.positionType + ".");
  }
  return {
    children: t.children,
    depth: u
  };
}, Dp = function(t, r) {
  for (var {
    children: n,
    depth: i
  } = Bp(t), a = 0, s = 0; s < n.length; s++) {
    var o = n[s];
    if (o.type === "elem") {
      var l = o.elem;
      a = Math.max(a, l.maxFontSize, l.height);
    }
  }
  a += 2;
  var u = xt(["pstrut"], []);
  u.style.height = j(a);
  for (var d = [], p = i, b = i, m = i, _ = 0; _ < n.length; _++) {
    var k = n[_];
    if (k.type === "kern")
      m += k.size;
    else {
      var L = k.elem, A = k.wrapperClasses || [], v = k.wrapperStyle || {}, S = xt(A, [u, L], void 0, v);
      S.style.top = j(-a - m - L.depth), k.marginLeft && (S.style.marginLeft = k.marginLeft), k.marginRight && (S.style.marginRight = k.marginRight), d.push(S), m += L.height + L.depth;
    }
    p = Math.min(p, m), b = Math.max(b, m);
  }
  var C = xt(["vlist"], d);
  C.style.height = j(b);
  var I;
  if (p < 0) {
    var R = xt([], []), N = xt(["vlist"], [R]);
    N.style.height = j(-p);
    var K = xt(["vlist-s"], [new Mt("​")]);
    I = [xt(["vlist-r"], [C, K]), xt(["vlist-r"], [N])];
  } else
    I = [xt(["vlist-r"], [C])];
  var B = xt(["vlist-t"], I);
  return I.length === 2 && B.classes.push("vlist-t2"), B.height = b, B.depth = -p, B;
}, Fp = (e, t) => {
  var r = xt(["mspace"], [], t), n = je(e, t);
  return r.style.marginRight = j(n), r;
}, Oi = function(t, r, n) {
  var i = "";
  switch (t) {
    case "amsrm":
      i = "AMS";
      break;
    case "textrm":
      i = "Main";
      break;
    case "textsf":
      i = "SansSerif";
      break;
    case "texttt":
      i = "Typewriter";
      break;
    default:
      i = t;
  }
  var a;
  return r === "textbf" && n === "textit" ? a = "BoldItalic" : r === "textbf" ? a = "Bold" : r === "textit" ? a = "Italic" : a = "Regular", i + "-" + a;
}, ru = {
  // styles
  mathbf: {
    variant: "bold",
    fontName: "Main-Bold"
  },
  mathrm: {
    variant: "normal",
    fontName: "Main-Regular"
  },
  textit: {
    variant: "italic",
    fontName: "Main-Italic"
  },
  mathit: {
    variant: "italic",
    fontName: "Main-Italic"
  },
  mathnormal: {
    variant: "italic",
    fontName: "Math-Italic"
  },
  // "boldsymbol" is missing because they require the use of multiple fonts:
  // Math-BoldItalic and Main-Bold.  This is handled by a special case in
  // makeOrd which ends up calling boldsymbol.
  // families
  mathbb: {
    variant: "double-struck",
    fontName: "AMS-Regular"
  },
  mathcal: {
    variant: "script",
    fontName: "Caligraphic-Regular"
  },
  mathfrak: {
    variant: "fraktur",
    fontName: "Fraktur-Regular"
  },
  mathscr: {
    variant: "script",
    fontName: "Script-Regular"
  },
  mathsf: {
    variant: "sans-serif",
    fontName: "SansSerif-Regular"
  },
  mathtt: {
    variant: "monospace",
    fontName: "Typewriter-Regular"
  }
}, nu = {
  //   path, width, height
  vec: ["vec", 0.471, 0.714],
  // values from the font glyph
  oiintSize1: ["oiintSize1", 0.957, 0.499],
  // oval to overlay the integrand
  oiintSize2: ["oiintSize2", 1.472, 0.659],
  oiiintSize1: ["oiiintSize1", 1.304, 0.499],
  oiiintSize2: ["oiiintSize2", 1.98, 0.659]
}, $p = function(t, r) {
  var [n, i, a] = nu[t], s = new Pr(n), o = new _r([s], {
    width: j(i),
    height: j(a),
    // Override CSS rule `.katex svg { width: 100% }`
    style: "width:" + j(i),
    viewBox: "0 0 " + 1e3 * i + " " + 1e3 * a,
    preserveAspectRatio: "xMinYMin"
  }), l = eu(["overlay"], [o], r);
  return l.height = a, l.style.height = j(a), l.style.width = j(i), l;
}, E = {
  fontMap: ru,
  makeSymbol: Gt,
  mathsym: Ep,
  makeSpan: xt,
  makeSvgSpan: eu,
  makeLineSpan: Op,
  makeAnchor: Np,
  makeFragment: tu,
  wrapFragment: Mp,
  makeVList: Dp,
  makeOrd: Ip,
  makeGlue: Fp,
  staticSvg: $p,
  svgData: nu,
  tryCombineChars: Lp
}, We = {
  number: 3,
  unit: "mu"
}, Kr = {
  number: 4,
  unit: "mu"
}, dr = {
  number: 5,
  unit: "mu"
}, zp = {
  mord: {
    mop: We,
    mbin: Kr,
    mrel: dr,
    minner: We
  },
  mop: {
    mord: We,
    mop: We,
    mrel: dr,
    minner: We
  },
  mbin: {
    mord: Kr,
    mop: Kr,
    mopen: Kr,
    minner: Kr
  },
  mrel: {
    mord: dr,
    mop: dr,
    mopen: dr,
    minner: dr
  },
  mopen: {},
  mclose: {
    mop: We,
    mbin: Kr,
    mrel: dr,
    minner: We
  },
  mpunct: {
    mord: We,
    mop: We,
    mrel: dr,
    mopen: We,
    mclose: We,
    mpunct: We,
    minner: We
  },
  minner: {
    mord: We,
    mop: We,
    mbin: Kr,
    mrel: dr,
    mopen: We,
    mpunct: We,
    minner: We
  }
}, Pp = {
  mord: {
    mop: We
  },
  mop: {
    mord: We,
    mop: We
  },
  mbin: {},
  mrel: {},
  mopen: {},
  mclose: {
    mop: We
  },
  mpunct: {},
  minner: {
    mop: We
  }
}, iu = {}, ga = {}, ba = {};
function Q(e) {
  for (var {
    type: t,
    names: r,
    props: n,
    handler: i,
    htmlBuilder: a,
    mathmlBuilder: s
  } = e, o = {
    type: t,
    numArgs: n.numArgs,
    argTypes: n.argTypes,
    allowedInArgument: !!n.allowedInArgument,
    allowedInText: !!n.allowedInText,
    allowedInMath: n.allowedInMath === void 0 ? !0 : n.allowedInMath,
    numOptionalArgs: n.numOptionalArgs || 0,
    infix: !!n.infix,
    primitive: !!n.primitive,
    handler: i
  }, l = 0; l < r.length; ++l)
    iu[r[l]] = o;
  t && (a && (ga[t] = a), s && (ba[t] = s));
}
function un(e) {
  var {
    type: t,
    htmlBuilder: r,
    mathmlBuilder: n
  } = e;
  Q({
    type: t,
    names: [],
    props: {
      numArgs: 0
    },
    handler() {
      throw new Error("Should never be called.");
    },
    htmlBuilder: r,
    mathmlBuilder: n
  });
}
var va = function(t) {
  return t.type === "ordgroup" && t.body.length === 1 ? t.body[0] : t;
}, Ye = function(t) {
  return t.type === "ordgroup" ? t.body : [t];
}, wr = E.makeSpan, Up = ["leftmost", "mbin", "mopen", "mrel", "mop", "mpunct"], Hp = ["rightmost", "mrel", "mclose", "mpunct"], qp = {
  display: he.DISPLAY,
  text: he.TEXT,
  script: he.SCRIPT,
  scriptscript: he.SCRIPTSCRIPT
}, Gp = {
  mord: "mord",
  mop: "mop",
  mbin: "mbin",
  mrel: "mrel",
  mopen: "mopen",
  mclose: "mclose",
  mpunct: "mpunct",
  minner: "minner"
}, Qe = function(t, r, n, i) {
  i === void 0 && (i = [null, null]);
  for (var a = [], s = 0; s < t.length; s++) {
    var o = Ae(t[s], r);
    if (o instanceof fi) {
      var l = o.children;
      a.push(...l);
    } else
      a.push(o);
  }
  if (E.tryCombineChars(a), !n)
    return a;
  var u = r;
  if (t.length === 1) {
    var d = t[0];
    d.type === "sizing" ? u = r.havingSize(d.size) : d.type === "styling" && (u = r.havingStyle(qp[d.style]));
  }
  var p = wr([i[0] || "leftmost"], [], r), b = wr([i[1] || "rightmost"], [], r), m = n === "root";
  return ol(a, (_, k) => {
    var L = k.classes[0], A = _.classes[0];
    L === "mbin" && me.contains(Hp, A) ? k.classes[0] = "mord" : A === "mbin" && me.contains(Up, L) && (_.classes[0] = "mord");
  }, {
    node: p
  }, b, m), ol(a, (_, k) => {
    var L = so(k), A = so(_), v = L && A ? _.hasClass("mtight") ? Pp[L][A] : zp[L][A] : null;
    if (v)
      return E.makeGlue(v, u);
  }, {
    node: p
  }, b, m), a;
}, ol = function e(t, r, n, i, a) {
  i && t.push(i);
  for (var s = 0; s < t.length; s++) {
    var o = t[s], l = au(o);
    if (l) {
      e(l.children, r, n, null, a);
      continue;
    }
    var u = !o.hasClass("mspace");
    if (u) {
      var d = r(o, n.node);
      d && (n.insertAfter ? n.insertAfter(d) : (t.unshift(d), s++));
    }
    u ? n.node = o : a && o.hasClass("newline") && (n.node = wr(["leftmost"])), n.insertAfter = ((p) => (b) => {
      t.splice(p + 1, 0, b), s++;
    })(s);
  }
  i && t.pop();
}, au = function(t) {
  return t instanceof fi || t instanceof Po || t instanceof mi && t.hasClass("enclosing") ? t : null;
}, Wp = function e(t, r) {
  var n = au(t);
  if (n) {
    var i = n.children;
    if (i.length) {
      if (r === "right")
        return e(i[i.length - 1], "right");
      if (r === "left")
        return e(i[0], "left");
    }
  }
  return t;
}, so = function(t, r) {
  return t ? (r && (t = Wp(t, r)), Gp[t.classes[0]] || null) : null;
}, ri = function(t, r) {
  var n = ["nulldelimiter"].concat(t.baseSizingClasses());
  return wr(r.concat(n));
}, Ae = function(t, r, n) {
  if (!t)
    return wr();
  if (ga[t.type]) {
    var i = ga[t.type](t, r);
    if (n && r.size !== n.size) {
      i = wr(r.sizingClasses(n), [i], r);
      var a = r.sizeMultiplier / n.sizeMultiplier;
      i.height *= a, i.depth *= a;
    }
    return i;
  } else
    throw new U("Got group of unknown type: '" + t.type + "'");
};
function Ni(e, t) {
  var r = wr(["base"], e, t), n = wr(["strut"]);
  return n.style.height = j(r.height + r.depth), r.depth && (n.style.verticalAlign = j(-r.depth)), r.children.unshift(n), r;
}
function oo(e, t) {
  var r = null;
  e.length === 1 && e[0].type === "tag" && (r = e[0].tag, e = e[0].body);
  var n = Qe(e, t, "root"), i;
  n.length === 2 && n[1].hasClass("tag") && (i = n.pop());
  for (var a = [], s = [], o = 0; o < n.length; o++)
    if (s.push(n[o]), n[o].hasClass("mbin") || n[o].hasClass("mrel") || n[o].hasClass("allowbreak")) {
      for (var l = !1; o < n.length - 1 && n[o + 1].hasClass("mspace") && !n[o + 1].hasClass("newline"); )
        o++, s.push(n[o]), n[o].hasClass("nobreak") && (l = !0);
      l || (a.push(Ni(s, t)), s = []);
    } else
      n[o].hasClass("newline") && (s.pop(), s.length > 0 && (a.push(Ni(s, t)), s = []), a.push(n[o]));
  s.length > 0 && a.push(Ni(s, t));
  var u;
  r ? (u = Ni(Qe(r, t, !0)), u.classes = ["tag"], a.push(u)) : i && a.push(i);
  var d = wr(["katex-html"], a);
  if (d.setAttribute("aria-hidden", "true"), u) {
    var p = u.children[0];
    p.style.height = j(d.height + d.depth), d.depth && (p.style.verticalAlign = j(-d.depth));
  }
  return d;
}
function su(e) {
  return new fi(e);
}
class Lt {
  constructor(t, r, n) {
    this.type = void 0, this.attributes = void 0, this.children = void 0, this.classes = void 0, this.type = t, this.attributes = {}, this.children = r || [], this.classes = n || [];
  }
  /**
   * Sets an attribute on a MathML node. MathML depends on attributes to convey a
   * semantic content, so this is used heavily.
   */
  setAttribute(t, r) {
    this.attributes[t] = r;
  }
  /**
   * Gets an attribute on a MathML node.
   */
  getAttribute(t) {
    return this.attributes[t];
  }
  /**
   * Converts the math node into a MathML-namespaced DOM element.
   */
  toNode() {
    var t = document.createElementNS("http://www.w3.org/1998/Math/MathML", this.type);
    for (var r in this.attributes)
      Object.prototype.hasOwnProperty.call(this.attributes, r) && t.setAttribute(r, this.attributes[r]);
    this.classes.length > 0 && (t.className = zr(this.classes));
    for (var n = 0; n < this.children.length; n++)
      t.appendChild(this.children[n].toNode());
    return t;
  }
  /**
   * Converts the math node into an HTML markup string.
   */
  toMarkup() {
    var t = "<" + this.type;
    for (var r in this.attributes)
      Object.prototype.hasOwnProperty.call(this.attributes, r) && (t += " " + r + '="', t += me.escape(this.attributes[r]), t += '"');
    this.classes.length > 0 && (t += ' class ="' + me.escape(zr(this.classes)) + '"'), t += ">";
    for (var n = 0; n < this.children.length; n++)
      t += this.children[n].toMarkup();
    return t += "</" + this.type + ">", t;
  }
  /**
   * Converts the math node into a string, similar to innerText, but escaped.
   */
  toText() {
    return this.children.map((t) => t.toText()).join("");
  }
}
class Xn {
  constructor(t) {
    this.text = void 0, this.text = t;
  }
  /**
   * Converts the text node into a DOM text node.
   */
  toNode() {
    return document.createTextNode(this.text);
  }
  /**
   * Converts the text node into escaped HTML markup
   * (representing the text itself).
   */
  toMarkup() {
    return me.escape(this.toText());
  }
  /**
   * Converts the text node into a string
   * (representing the text iteself).
   */
  toText() {
    return this.text;
  }
}
class jp {
  /**
   * Create a Space node with width given in CSS ems.
   */
  constructor(t) {
    this.width = void 0, this.character = void 0, this.width = t, t >= 0.05555 && t <= 0.05556 ? this.character = " " : t >= 0.1666 && t <= 0.1667 ? this.character = " " : t >= 0.2222 && t <= 0.2223 ? this.character = " " : t >= 0.2777 && t <= 0.2778 ? this.character = "  " : t >= -0.05556 && t <= -0.05555 ? this.character = " ⁣" : t >= -0.1667 && t <= -0.1666 ? this.character = " ⁣" : t >= -0.2223 && t <= -0.2222 ? this.character = " ⁣" : t >= -0.2778 && t <= -0.2777 ? this.character = " ⁣" : this.character = null;
  }
  /**
   * Converts the math node into a MathML-namespaced DOM element.
   */
  toNode() {
    if (this.character)
      return document.createTextNode(this.character);
    var t = document.createElementNS("http://www.w3.org/1998/Math/MathML", "mspace");
    return t.setAttribute("width", j(this.width)), t;
  }
  /**
   * Converts the math node into an HTML markup string.
   */
  toMarkup() {
    return this.character ? "<mtext>" + this.character + "</mtext>" : '<mspace width="' + j(this.width) + '"/>';
  }
  /**
   * Converts the math node into a string, similar to innerText.
   */
  toText() {
    return this.character ? this.character : " ";
  }
}
var z = {
  MathNode: Lt,
  TextNode: Xn,
  SpaceNode: jp,
  newDocumentFragment: su
}, Bt = function(t, r, n) {
  return $e[r][t] && $e[r][t].replace && t.charCodeAt(0) !== 55349 && !(Qc.hasOwnProperty(t) && n && (n.fontFamily && n.fontFamily.slice(4, 6) === "tt" || n.font && n.font.slice(4, 6) === "tt")) && (t = $e[r][t].replace), new z.TextNode(t);
}, Ho = function(t) {
  return t.length === 1 ? t[0] : new z.MathNode("mrow", t);
}, qo = function(t, r) {
  if (r.fontFamily === "texttt")
    return "monospace";
  if (r.fontFamily === "textsf")
    return r.fontShape === "textit" && r.fontWeight === "textbf" ? "sans-serif-bold-italic" : r.fontShape === "textit" ? "sans-serif-italic" : r.fontWeight === "textbf" ? "bold-sans-serif" : "sans-serif";
  if (r.fontShape === "textit" && r.fontWeight === "textbf")
    return "bold-italic";
  if (r.fontShape === "textit")
    return "italic";
  if (r.fontWeight === "textbf")
    return "bold";
  var n = r.font;
  if (!n || n === "mathnormal")
    return null;
  var i = t.mode;
  if (n === "mathit")
    return "italic";
  if (n === "boldsymbol")
    return t.type === "textord" ? "bold" : "bold-italic";
  if (n === "mathbf")
    return "bold";
  if (n === "mathbb")
    return "double-struck";
  if (n === "mathfrak")
    return "fraktur";
  if (n === "mathscr" || n === "mathcal")
    return "script";
  if (n === "mathsf")
    return "sans-serif";
  if (n === "mathtt")
    return "monospace";
  var a = t.text;
  if (me.contains(["\\imath", "\\jmath"], a))
    return null;
  $e[i][a] && $e[i][a].replace && (a = $e[i][a].replace);
  var s = E.fontMap[n].fontName;
  return zo(a, s, i) ? E.fontMap[n].variant : null;
}, kt = function(t, r, n) {
  if (t.length === 1) {
    var i = Be(t[0], r);
    return n && i instanceof Lt && i.type === "mo" && (i.setAttribute("lspace", "0em"), i.setAttribute("rspace", "0em")), [i];
  }
  for (var a = [], s, o = 0; o < t.length; o++) {
    var l = Be(t[o], r);
    if (l instanceof Lt && s instanceof Lt) {
      if (l.type === "mtext" && s.type === "mtext" && l.getAttribute("mathvariant") === s.getAttribute("mathvariant")) {
        s.children.push(...l.children);
        continue;
      } else if (l.type === "mn" && s.type === "mn") {
        s.children.push(...l.children);
        continue;
      } else if (l.type === "mi" && l.children.length === 1 && s.type === "mn") {
        var u = l.children[0];
        if (u instanceof Xn && u.text === ".") {
          s.children.push(...l.children);
          continue;
        }
      } else if (s.type === "mi" && s.children.length === 1) {
        var d = s.children[0];
        if (d instanceof Xn && d.text === "̸" && (l.type === "mo" || l.type === "mi" || l.type === "mn")) {
          var p = l.children[0];
          p instanceof Xn && p.text.length > 0 && (p.text = p.text.slice(0, 1) + "̸" + p.text.slice(1), a.pop());
        }
      }
    }
    a.push(l), s = l;
  }
  return a;
}, Ur = function(t, r, n) {
  return Ho(kt(t, r, n));
}, Be = function(t, r) {
  if (!t)
    return new z.MathNode("mrow");
  if (ba[t.type]) {
    var n = ba[t.type](t, r);
    return n;
  } else
    throw new U("Got group of unknown type: '" + t.type + "'");
};
function ll(e, t, r, n, i) {
  var a = kt(e, r), s;
  a.length === 1 && a[0] instanceof Lt && me.contains(["mrow", "mtable"], a[0].type) ? s = a[0] : s = new z.MathNode("mrow", a);
  var o = new z.MathNode("annotation", [new z.TextNode(t)]);
  o.setAttribute("encoding", "application/x-tex");
  var l = new z.MathNode("semantics", [s, o]), u = new z.MathNode("math", [l]);
  u.setAttribute("xmlns", "http://www.w3.org/1998/Math/MathML"), n && u.setAttribute("display", "block");
  var d = i ? "katex" : "katex-mathml";
  return E.makeSpan([d], [u]);
}
var ou = function(t) {
  return new gr({
    style: t.displayMode ? he.DISPLAY : he.TEXT,
    maxSize: t.maxSize,
    minRuleThickness: t.minRuleThickness
  });
}, lu = function(t, r) {
  if (r.displayMode) {
    var n = ["katex-display"];
    r.leqno && n.push("leqno"), r.fleqn && n.push("fleqn"), t = E.makeSpan(n, [t]);
  }
  return t;
}, Yp = function(t, r, n) {
  var i = ou(n), a;
  if (n.output === "mathml")
    return ll(t, r, i, n.displayMode, !0);
  if (n.output === "html") {
    var s = oo(t, i);
    a = E.makeSpan(["katex"], [s]);
  } else {
    var o = ll(t, r, i, n.displayMode, !1), l = oo(t, i);
    a = E.makeSpan(["katex"], [o, l]);
  }
  return lu(a, n);
}, Vp = function(t, r, n) {
  var i = ou(n), a = oo(t, i), s = E.makeSpan(["katex"], [a]);
  return lu(s, n);
}, Xp = {
  widehat: "^",
  widecheck: "ˇ",
  widetilde: "~",
  utilde: "~",
  overleftarrow: "←",
  underleftarrow: "←",
  xleftarrow: "←",
  overrightarrow: "→",
  underrightarrow: "→",
  xrightarrow: "→",
  underbrace: "⏟",
  overbrace: "⏞",
  overgroup: "⏠",
  undergroup: "⏡",
  overleftrightarrow: "↔",
  underleftrightarrow: "↔",
  xleftrightarrow: "↔",
  Overrightarrow: "⇒",
  xRightarrow: "⇒",
  overleftharpoon: "↼",
  xleftharpoonup: "↼",
  overrightharpoon: "⇀",
  xrightharpoonup: "⇀",
  xLeftarrow: "⇐",
  xLeftrightarrow: "⇔",
  xhookleftarrow: "↩",
  xhookrightarrow: "↪",
  xmapsto: "↦",
  xrightharpoondown: "⇁",
  xleftharpoondown: "↽",
  xrightleftharpoons: "⇌",
  xleftrightharpoons: "⇋",
  xtwoheadleftarrow: "↞",
  xtwoheadrightarrow: "↠",
  xlongequal: "=",
  xtofrom: "⇄",
  xrightleftarrows: "⇄",
  xrightequilibrium: "⇌",
  // Not a perfect match.
  xleftequilibrium: "⇋",
  // None better available.
  "\\cdrightarrow": "→",
  "\\cdleftarrow": "←",
  "\\cdlongequal": "="
}, Kp = function(t) {
  var r = new z.MathNode("mo", [new z.TextNode(Xp[t.replace(/^\\/, "")])]);
  return r.setAttribute("stretchy", "true"), r;
}, Zp = {
  //   path(s), minWidth, height, align
  overrightarrow: [["rightarrow"], 0.888, 522, "xMaxYMin"],
  overleftarrow: [["leftarrow"], 0.888, 522, "xMinYMin"],
  underrightarrow: [["rightarrow"], 0.888, 522, "xMaxYMin"],
  underleftarrow: [["leftarrow"], 0.888, 522, "xMinYMin"],
  xrightarrow: [["rightarrow"], 1.469, 522, "xMaxYMin"],
  "\\cdrightarrow": [["rightarrow"], 3, 522, "xMaxYMin"],
  // CD minwwidth2.5pc
  xleftarrow: [["leftarrow"], 1.469, 522, "xMinYMin"],
  "\\cdleftarrow": [["leftarrow"], 3, 522, "xMinYMin"],
  Overrightarrow: [["doublerightarrow"], 0.888, 560, "xMaxYMin"],
  xRightarrow: [["doublerightarrow"], 1.526, 560, "xMaxYMin"],
  xLeftarrow: [["doubleleftarrow"], 1.526, 560, "xMinYMin"],
  overleftharpoon: [["leftharpoon"], 0.888, 522, "xMinYMin"],
  xleftharpoonup: [["leftharpoon"], 0.888, 522, "xMinYMin"],
  xleftharpoondown: [["leftharpoondown"], 0.888, 522, "xMinYMin"],
  overrightharpoon: [["rightharpoon"], 0.888, 522, "xMaxYMin"],
  xrightharpoonup: [["rightharpoon"], 0.888, 522, "xMaxYMin"],
  xrightharpoondown: [["rightharpoondown"], 0.888, 522, "xMaxYMin"],
  xlongequal: [["longequal"], 0.888, 334, "xMinYMin"],
  "\\cdlongequal": [["longequal"], 3, 334, "xMinYMin"],
  xtwoheadleftarrow: [["twoheadleftarrow"], 0.888, 334, "xMinYMin"],
  xtwoheadrightarrow: [["twoheadrightarrow"], 0.888, 334, "xMaxYMin"],
  overleftrightarrow: [["leftarrow", "rightarrow"], 0.888, 522],
  overbrace: [["leftbrace", "midbrace", "rightbrace"], 1.6, 548],
  underbrace: [["leftbraceunder", "midbraceunder", "rightbraceunder"], 1.6, 548],
  underleftrightarrow: [["leftarrow", "rightarrow"], 0.888, 522],
  xleftrightarrow: [["leftarrow", "rightarrow"], 1.75, 522],
  xLeftrightarrow: [["doubleleftarrow", "doublerightarrow"], 1.75, 560],
  xrightleftharpoons: [["leftharpoondownplus", "rightharpoonplus"], 1.75, 716],
  xleftrightharpoons: [["leftharpoonplus", "rightharpoondownplus"], 1.75, 716],
  xhookleftarrow: [["leftarrow", "righthook"], 1.08, 522],
  xhookrightarrow: [["lefthook", "rightarrow"], 1.08, 522],
  overlinesegment: [["leftlinesegment", "rightlinesegment"], 0.888, 522],
  underlinesegment: [["leftlinesegment", "rightlinesegment"], 0.888, 522],
  overgroup: [["leftgroup", "rightgroup"], 0.888, 342],
  undergroup: [["leftgroupunder", "rightgroupunder"], 0.888, 342],
  xmapsto: [["leftmapsto", "rightarrow"], 1.5, 522],
  xtofrom: [["leftToFrom", "rightToFrom"], 1.75, 528],
  // The next three arrows are from the mhchem package.
  // In mhchem.sty, min-length is 2.0em. But these arrows might appear in the
  // document as \xrightarrow or \xrightleftharpoons. Those have
  // min-length = 1.75em, so we set min-length on these next three to match.
  xrightleftarrows: [["baraboveleftarrow", "rightarrowabovebar"], 1.75, 901],
  xrightequilibrium: [["baraboveshortleftharpoon", "rightharpoonaboveshortbar"], 1.75, 716],
  xleftequilibrium: [["shortbaraboveleftharpoon", "shortrightharpoonabovebar"], 1.75, 716]
}, Jp = function(t) {
  return t.type === "ordgroup" ? t.body.length : 1;
}, Qp = function(t, r) {
  function n() {
    var o = 4e5, l = t.label.slice(1);
    if (me.contains(["widehat", "widecheck", "widetilde", "utilde"], l)) {
      var u = t, d = Jp(u.base), p, b, m;
      if (d > 5)
        l === "widehat" || l === "widecheck" ? (p = 420, o = 2364, m = 0.42, b = l + "4") : (p = 312, o = 2340, m = 0.34, b = "tilde4");
      else {
        var _ = [1, 1, 2, 2, 3, 3][d];
        l === "widehat" || l === "widecheck" ? (o = [0, 1062, 2364, 2364, 2364][_], p = [0, 239, 300, 360, 420][_], m = [0, 0.24, 0.3, 0.3, 0.36, 0.42][_], b = l + _) : (o = [0, 600, 1033, 2339, 2340][_], p = [0, 260, 286, 306, 312][_], m = [0, 0.26, 0.286, 0.3, 0.306, 0.34][_], b = "tilde" + _);
      }
      var k = new Pr(b), L = new _r([k], {
        width: "100%",
        height: j(m),
        viewBox: "0 0 " + o + " " + p,
        preserveAspectRatio: "none"
      });
      return {
        span: E.makeSvgSpan([], [L], r),
        minWidth: 0,
        height: m
      };
    } else {
      var A = [], v = Zp[l], [S, C, I] = v, R = I / 1e3, N = S.length, K, B;
      if (N === 1) {
        var ie = v[3];
        K = ["hide-tail"], B = [ie];
      } else if (N === 2)
        K = ["halfarrow-left", "halfarrow-right"], B = ["xMinYMin", "xMaxYMin"];
      else if (N === 3)
        K = ["brace-left", "brace-center", "brace-right"], B = ["xMinYMin", "xMidYMin", "xMaxYMin"];
      else
        throw new Error(`Correct katexImagesData or update code here to support
                    ` + N + " children.");
      for (var ge = 0; ge < N; ge++) {
        var ce = new Pr(S[ge]), V = new _r([ce], {
          width: "400em",
          height: j(R),
          viewBox: "0 0 " + o + " " + I,
          preserveAspectRatio: B[ge] + " slice"
        }), F = E.makeSvgSpan([K[ge]], [V], r);
        if (N === 1)
          return {
            span: F,
            minWidth: C,
            height: R
          };
        F.style.height = j(R), A.push(F);
      }
      return {
        span: E.makeSpan(["stretchy"], A, r),
        minWidth: C,
        height: R
      };
    }
  }
  var {
    span: i,
    minWidth: a,
    height: s
  } = n();
  return i.height = s, i.style.height = j(s), a > 0 && (i.style.minWidth = j(a)), i;
}, ef = function(t, r, n, i, a) {
  var s, o = t.height + t.depth + n + i;
  if (/fbox|color|angl/.test(r)) {
    if (s = E.makeSpan(["stretchy", r], [], a), r === "fbox") {
      var l = a.color && a.getColor();
      l && (s.style.borderColor = l);
    }
  } else {
    var u = [];
    /^[bx]cancel$/.test(r) && u.push(new io({
      x1: "0",
      y1: "0",
      x2: "100%",
      y2: "100%",
      "stroke-width": "0.046em"
    })), /^x?cancel$/.test(r) && u.push(new io({
      x1: "0",
      y1: "100%",
      x2: "100%",
      y2: "0",
      "stroke-width": "0.046em"
    }));
    var d = new _r(u, {
      width: "100%",
      height: j(o)
    });
    s = E.makeSvgSpan([], [d], a);
  }
  return s.height = o, s.style.height = j(o), s;
}, Sr = {
  encloseSpan: ef,
  mathMLnode: Kp,
  svgSpan: Qp
};
function Se(e, t) {
  if (!e || e.type !== t)
    throw new Error("Expected node of type " + t + ", but got " + (e ? "node of type " + e.type : String(e)));
  return e;
}
function Go(e) {
  var t = Ga(e);
  if (!t)
    throw new Error("Expected node of symbol group type, but got " + (e ? "node of type " + e.type : String(e)));
  return t;
}
function Ga(e) {
  return e && (e.type === "atom" || Tp.hasOwnProperty(e.type)) ? e : null;
}
var Wo = (e, t) => {
  var r, n, i;
  e && e.type === "supsub" ? (n = Se(e.base, "accent"), r = n.base, e.base = r, i = Sp(Ae(e, t)), e.base = n) : (n = Se(e, "accent"), r = n.base);
  var a = Ae(r, t.havingCrampedStyle()), s = n.isShifty && me.isCharacterBox(r), o = 0;
  if (s) {
    var l = me.getBaseElem(r), u = Ae(l, t.havingCrampedStyle());
    o = tl(u).skew;
  }
  var d = n.label === "\\c", p = d ? a.height + a.depth : Math.min(a.height, t.fontMetrics().xHeight), b;
  if (n.isStretchy)
    b = Sr.svgSpan(n, t), b = E.makeVList({
      positionType: "firstBaseline",
      children: [{
        type: "elem",
        elem: a
      }, {
        type: "elem",
        elem: b,
        wrapperClasses: ["svg-align"],
        wrapperStyle: o > 0 ? {
          width: "calc(100% - " + j(2 * o) + ")",
          marginLeft: j(2 * o)
        } : void 0
      }]
    }, t);
  else {
    var m, _;
    n.label === "\\vec" ? (m = E.staticSvg("vec", t), _ = E.svgData.vec[1]) : (m = E.makeOrd({
      mode: n.mode,
      text: n.label
    }, t, "textord"), m = tl(m), m.italic = 0, _ = m.width, d && (p += m.depth)), b = E.makeSpan(["accent-body"], [m]);
    var k = n.label === "\\textcircled";
    k && (b.classes.push("accent-full"), p = a.height);
    var L = o;
    k || (L -= _ / 2), b.style.left = j(L), n.label === "\\textcircled" && (b.style.top = ".2em"), b = E.makeVList({
      positionType: "firstBaseline",
      children: [{
        type: "elem",
        elem: a
      }, {
        type: "kern",
        size: -p
      }, {
        type: "elem",
        elem: b
      }]
    }, t);
  }
  var A = E.makeSpan(["mord", "accent"], [b], t);
  return i ? (i.children[0] = A, i.height = Math.max(A.height, i.height), i.classes[0] = "mord", i) : A;
}, cu = (e, t) => {
  var r = e.isStretchy ? Sr.mathMLnode(e.label) : new z.MathNode("mo", [Bt(e.label, e.mode)]), n = new z.MathNode("mover", [Be(e.base, t), r]);
  return n.setAttribute("accent", "true"), n;
}, tf = new RegExp(["\\acute", "\\grave", "\\ddot", "\\tilde", "\\bar", "\\breve", "\\check", "\\hat", "\\vec", "\\dot", "\\mathring"].map((e) => "\\" + e).join("|"));
Q({
  type: "accent",
  names: ["\\acute", "\\grave", "\\ddot", "\\tilde", "\\bar", "\\breve", "\\check", "\\hat", "\\vec", "\\dot", "\\mathring", "\\widecheck", "\\widehat", "\\widetilde", "\\overrightarrow", "\\overleftarrow", "\\Overrightarrow", "\\overleftrightarrow", "\\overgroup", "\\overlinesegment", "\\overleftharpoon", "\\overrightharpoon"],
  props: {
    numArgs: 1
  },
  handler: (e, t) => {
    var r = va(t[0]), n = !tf.test(e.funcName), i = !n || e.funcName === "\\widehat" || e.funcName === "\\widetilde" || e.funcName === "\\widecheck";
    return {
      type: "accent",
      mode: e.parser.mode,
      label: e.funcName,
      isStretchy: n,
      isShifty: i,
      base: r
    };
  },
  htmlBuilder: Wo,
  mathmlBuilder: cu
});
Q({
  type: "accent",
  names: ["\\'", "\\`", "\\^", "\\~", "\\=", "\\u", "\\.", '\\"', "\\c", "\\r", "\\H", "\\v", "\\textcircled"],
  props: {
    numArgs: 1,
    allowedInText: !0,
    allowedInMath: !0,
    // unless in strict mode
    argTypes: ["primitive"]
  },
  handler: (e, t) => {
    var r = t[0], n = e.parser.mode;
    return n === "math" && (e.parser.settings.reportNonstrict("mathVsTextAccents", "LaTeX's accent " + e.funcName + " works only in text mode"), n = "text"), {
      type: "accent",
      mode: n,
      label: e.funcName,
      isStretchy: !1,
      isShifty: !0,
      base: r
    };
  },
  htmlBuilder: Wo,
  mathmlBuilder: cu
});
Q({
  type: "accentUnder",
  names: ["\\underleftarrow", "\\underrightarrow", "\\underleftrightarrow", "\\undergroup", "\\underlinesegment", "\\utilde"],
  props: {
    numArgs: 1
  },
  handler: (e, t) => {
    var {
      parser: r,
      funcName: n
    } = e, i = t[0];
    return {
      type: "accentUnder",
      mode: r.mode,
      label: n,
      base: i
    };
  },
  htmlBuilder: (e, t) => {
    var r = Ae(e.base, t), n = Sr.svgSpan(e, t), i = e.label === "\\utilde" ? 0.12 : 0, a = E.makeVList({
      positionType: "top",
      positionData: r.height,
      children: [{
        type: "elem",
        elem: n,
        wrapperClasses: ["svg-align"]
      }, {
        type: "kern",
        size: i
      }, {
        type: "elem",
        elem: r
      }]
    }, t);
    return E.makeSpan(["mord", "accentunder"], [a], t);
  },
  mathmlBuilder: (e, t) => {
    var r = Sr.mathMLnode(e.label), n = new z.MathNode("munder", [Be(e.base, t), r]);
    return n.setAttribute("accentunder", "true"), n;
  }
});
var Mi = (e) => {
  var t = new z.MathNode("mpadded", e ? [e] : []);
  return t.setAttribute("width", "+0.6em"), t.setAttribute("lspace", "0.3em"), t;
};
Q({
  type: "xArrow",
  names: [
    "\\xleftarrow",
    "\\xrightarrow",
    "\\xLeftarrow",
    "\\xRightarrow",
    "\\xleftrightarrow",
    "\\xLeftrightarrow",
    "\\xhookleftarrow",
    "\\xhookrightarrow",
    "\\xmapsto",
    "\\xrightharpoondown",
    "\\xrightharpoonup",
    "\\xleftharpoondown",
    "\\xleftharpoonup",
    "\\xrightleftharpoons",
    "\\xleftrightharpoons",
    "\\xlongequal",
    "\\xtwoheadrightarrow",
    "\\xtwoheadleftarrow",
    "\\xtofrom",
    // The next 3 functions are here to support the mhchem extension.
    // Direct use of these functions is discouraged and may break someday.
    "\\xrightleftarrows",
    "\\xrightequilibrium",
    "\\xleftequilibrium",
    // The next 3 functions are here only to support the {CD} environment.
    "\\\\cdrightarrow",
    "\\\\cdleftarrow",
    "\\\\cdlongequal"
  ],
  props: {
    numArgs: 1,
    numOptionalArgs: 1
  },
  handler(e, t, r) {
    var {
      parser: n,
      funcName: i
    } = e;
    return {
      type: "xArrow",
      mode: n.mode,
      label: i,
      body: t[0],
      below: r[0]
    };
  },
  // Flow is unable to correctly infer the type of `group`, even though it's
  // unamibiguously determined from the passed-in `type` above.
  htmlBuilder(e, t) {
    var r = t.style, n = t.havingStyle(r.sup()), i = E.wrapFragment(Ae(e.body, n, t), t), a = e.label.slice(0, 2) === "\\x" ? "x" : "cd";
    i.classes.push(a + "-arrow-pad");
    var s;
    e.below && (n = t.havingStyle(r.sub()), s = E.wrapFragment(Ae(e.below, n, t), t), s.classes.push(a + "-arrow-pad"));
    var o = Sr.svgSpan(e, t), l = -t.fontMetrics().axisHeight + 0.5 * o.height, u = -t.fontMetrics().axisHeight - 0.5 * o.height - 0.111;
    (i.depth > 0.25 || e.label === "\\xleftequilibrium") && (u -= i.depth);
    var d;
    if (s) {
      var p = -t.fontMetrics().axisHeight + s.height + 0.5 * o.height + 0.111;
      d = E.makeVList({
        positionType: "individualShift",
        children: [{
          type: "elem",
          elem: i,
          shift: u
        }, {
          type: "elem",
          elem: o,
          shift: l
        }, {
          type: "elem",
          elem: s,
          shift: p
        }]
      }, t);
    } else
      d = E.makeVList({
        positionType: "individualShift",
        children: [{
          type: "elem",
          elem: i,
          shift: u
        }, {
          type: "elem",
          elem: o,
          shift: l
        }]
      }, t);
    return d.children[0].children[0].children[1].classes.push("svg-align"), E.makeSpan(["mrel", "x-arrow"], [d], t);
  },
  mathmlBuilder(e, t) {
    var r = Sr.mathMLnode(e.label);
    r.setAttribute("minsize", e.label.charAt(0) === "x" ? "1.75em" : "3.0em");
    var n;
    if (e.body) {
      var i = Mi(Be(e.body, t));
      if (e.below) {
        var a = Mi(Be(e.below, t));
        n = new z.MathNode("munderover", [r, a, i]);
      } else
        n = new z.MathNode("mover", [r, i]);
    } else if (e.below) {
      var s = Mi(Be(e.below, t));
      n = new z.MathNode("munder", [r, s]);
    } else
      n = Mi(), n = new z.MathNode("mover", [r, n]);
    return n;
  }
});
var rf = E.makeSpan;
function uu(e, t) {
  var r = Qe(e.body, t, !0);
  return rf([e.mclass], r, t);
}
function hu(e, t) {
  var r, n = kt(e.body, t);
  return e.mclass === "minner" ? r = new z.MathNode("mpadded", n) : e.mclass === "mord" ? e.isCharacterBox ? (r = n[0], r.type = "mi") : r = new z.MathNode("mi", n) : (e.isCharacterBox ? (r = n[0], r.type = "mo") : r = new z.MathNode("mo", n), e.mclass === "mbin" ? (r.attributes.lspace = "0.22em", r.attributes.rspace = "0.22em") : e.mclass === "mpunct" ? (r.attributes.lspace = "0em", r.attributes.rspace = "0.17em") : e.mclass === "mopen" || e.mclass === "mclose" ? (r.attributes.lspace = "0em", r.attributes.rspace = "0em") : e.mclass === "minner" && (r.attributes.lspace = "0.0556em", r.attributes.width = "+0.1111em")), r;
}
Q({
  type: "mclass",
  names: ["\\mathord", "\\mathbin", "\\mathrel", "\\mathopen", "\\mathclose", "\\mathpunct", "\\mathinner"],
  props: {
    numArgs: 1,
    primitive: !0
  },
  handler(e, t) {
    var {
      parser: r,
      funcName: n
    } = e, i = t[0];
    return {
      type: "mclass",
      mode: r.mode,
      mclass: "m" + n.slice(5),
      // TODO(kevinb): don't prefix with 'm'
      body: Ye(i),
      isCharacterBox: me.isCharacterBox(i)
    };
  },
  htmlBuilder: uu,
  mathmlBuilder: hu
});
var Wa = (e) => {
  var t = e.type === "ordgroup" && e.body.length ? e.body[0] : e;
  return t.type === "atom" && (t.family === "bin" || t.family === "rel") ? "m" + t.family : "mord";
};
Q({
  type: "mclass",
  names: ["\\@binrel"],
  props: {
    numArgs: 2
  },
  handler(e, t) {
    var {
      parser: r
    } = e;
    return {
      type: "mclass",
      mode: r.mode,
      mclass: Wa(t[0]),
      body: Ye(t[1]),
      isCharacterBox: me.isCharacterBox(t[1])
    };
  }
});
Q({
  type: "mclass",
  names: ["\\stackrel", "\\overset", "\\underset"],
  props: {
    numArgs: 2
  },
  handler(e, t) {
    var {
      parser: r,
      funcName: n
    } = e, i = t[1], a = t[0], s;
    n !== "\\stackrel" ? s = Wa(i) : s = "mrel";
    var o = {
      type: "op",
      mode: i.mode,
      limits: !0,
      alwaysHandleSupSub: !0,
      parentIsSupSub: !1,
      symbol: !1,
      suppressBaseShift: n !== "\\stackrel",
      body: Ye(i)
    }, l = {
      type: "supsub",
      mode: a.mode,
      base: o,
      sup: n === "\\underset" ? null : a,
      sub: n === "\\underset" ? a : null
    };
    return {
      type: "mclass",
      mode: r.mode,
      mclass: s,
      body: [l],
      isCharacterBox: me.isCharacterBox(l)
    };
  },
  htmlBuilder: uu,
  mathmlBuilder: hu
});
Q({
  type: "pmb",
  names: ["\\pmb"],
  props: {
    numArgs: 1,
    allowedInText: !0
  },
  handler(e, t) {
    var {
      parser: r
    } = e;
    return {
      type: "pmb",
      mode: r.mode,
      mclass: Wa(t[0]),
      body: Ye(t[0])
    };
  },
  htmlBuilder(e, t) {
    var r = Qe(e.body, t, !0), n = E.makeSpan([e.mclass], r, t);
    return n.style.textShadow = "0.02em 0.01em 0.04px", n;
  },
  mathmlBuilder(e, t) {
    var r = kt(e.body, t), n = new z.MathNode("mstyle", r);
    return n.setAttribute("style", "text-shadow: 0.02em 0.01em 0.04px"), n;
  }
});
var nf = {
  ">": "\\\\cdrightarrow",
  "<": "\\\\cdleftarrow",
  "=": "\\\\cdlongequal",
  A: "\\uparrow",
  V: "\\downarrow",
  "|": "\\Vert",
  ".": "no arrow"
}, cl = () => ({
  type: "styling",
  body: [],
  mode: "math",
  style: "display"
}), ul = (e) => e.type === "textord" && e.text === "@", af = (e, t) => (e.type === "mathord" || e.type === "atom") && e.text === t;
function sf(e, t, r) {
  var n = nf[e];
  switch (n) {
    case "\\\\cdrightarrow":
    case "\\\\cdleftarrow":
      return r.callFunction(n, [t[0]], [t[1]]);
    case "\\uparrow":
    case "\\downarrow": {
      var i = r.callFunction("\\\\cdleft", [t[0]], []), a = {
        type: "atom",
        text: n,
        mode: "math",
        family: "rel"
      }, s = r.callFunction("\\Big", [a], []), o = r.callFunction("\\\\cdright", [t[1]], []), l = {
        type: "ordgroup",
        mode: "math",
        body: [i, s, o]
      };
      return r.callFunction("\\\\cdparent", [l], []);
    }
    case "\\\\cdlongequal":
      return r.callFunction("\\\\cdlongequal", [], []);
    case "\\Vert": {
      var u = {
        type: "textord",
        text: "\\Vert",
        mode: "math"
      };
      return r.callFunction("\\Big", [u], []);
    }
    default:
      return {
        type: "textord",
        text: " ",
        mode: "math"
      };
  }
}
function of(e) {
  var t = [];
  for (e.gullet.beginGroup(), e.gullet.macros.set("\\cr", "\\\\\\relax"), e.gullet.beginGroup(); ; ) {
    t.push(e.parseExpression(!1, "\\\\")), e.gullet.endGroup(), e.gullet.beginGroup();
    var r = e.fetch().text;
    if (r === "&" || r === "\\\\")
      e.consume();
    else if (r === "\\end") {
      t[t.length - 1].length === 0 && t.pop();
      break;
    } else
      throw new U("Expected \\\\ or \\cr or \\end", e.nextToken);
  }
  for (var n = [], i = [n], a = 0; a < t.length; a++) {
    for (var s = t[a], o = cl(), l = 0; l < s.length; l++)
      if (!ul(s[l]))
        o.body.push(s[l]);
      else {
        n.push(o), l += 1;
        var u = Go(s[l]).text, d = new Array(2);
        if (d[0] = {
          type: "ordgroup",
          mode: "math",
          body: []
        }, d[1] = {
          type: "ordgroup",
          mode: "math",
          body: []
        }, !("=|.".indexOf(u) > -1))
          if ("<>AV".indexOf(u) > -1)
            for (var p = 0; p < 2; p++) {
              for (var b = !0, m = l + 1; m < s.length; m++) {
                if (af(s[m], u)) {
                  b = !1, l = m;
                  break;
                }
                if (ul(s[m]))
                  throw new U("Missing a " + u + " character to complete a CD arrow.", s[m]);
                d[p].body.push(s[m]);
              }
              if (b)
                throw new U("Missing a " + u + " character to complete a CD arrow.", s[l]);
            }
          else
            throw new U('Expected one of "<>AV=|." after @', s[l]);
        var _ = sf(u, d, e), k = {
          type: "styling",
          body: [_],
          mode: "math",
          style: "display"
          // CD is always displaystyle.
        };
        n.push(k), o = cl();
      }
    a % 2 === 0 ? n.push(o) : n.shift(), n = [], i.push(n);
  }
  e.gullet.endGroup(), e.gullet.endGroup();
  var L = new Array(i[0].length).fill({
    type: "align",
    align: "c",
    pregap: 0.25,
    // CD package sets \enskip between columns.
    postgap: 0.25
    // So pre and post each get half an \enskip, i.e. 0.25em.
  });
  return {
    type: "array",
    mode: "math",
    body: i,
    arraystretch: 1,
    addJot: !0,
    rowGaps: [null],
    cols: L,
    colSeparationType: "CD",
    hLinesBeforeRow: new Array(i.length + 1).fill([])
  };
}
Q({
  type: "cdlabel",
  names: ["\\\\cdleft", "\\\\cdright"],
  props: {
    numArgs: 1
  },
  handler(e, t) {
    var {
      parser: r,
      funcName: n
    } = e;
    return {
      type: "cdlabel",
      mode: r.mode,
      side: n.slice(4),
      label: t[0]
    };
  },
  htmlBuilder(e, t) {
    var r = t.havingStyle(t.style.sup()), n = E.wrapFragment(Ae(e.label, r, t), t);
    return n.classes.push("cd-label-" + e.side), n.style.bottom = j(0.8 - n.depth), n.height = 0, n.depth = 0, n;
  },
  mathmlBuilder(e, t) {
    var r = new z.MathNode("mrow", [Be(e.label, t)]);
    return r = new z.MathNode("mpadded", [r]), r.setAttribute("width", "0"), e.side === "left" && r.setAttribute("lspace", "-1width"), r.setAttribute("voffset", "0.7em"), r = new z.MathNode("mstyle", [r]), r.setAttribute("displaystyle", "false"), r.setAttribute("scriptlevel", "1"), r;
  }
});
Q({
  type: "cdlabelparent",
  names: ["\\\\cdparent"],
  props: {
    numArgs: 1
  },
  handler(e, t) {
    var {
      parser: r
    } = e;
    return {
      type: "cdlabelparent",
      mode: r.mode,
      fragment: t[0]
    };
  },
  htmlBuilder(e, t) {
    var r = E.wrapFragment(Ae(e.fragment, t), t);
    return r.classes.push("cd-vert-arrow"), r;
  },
  mathmlBuilder(e, t) {
    return new z.MathNode("mrow", [Be(e.fragment, t)]);
  }
});
Q({
  type: "textord",
  names: ["\\@char"],
  props: {
    numArgs: 1,
    allowedInText: !0
  },
  handler(e, t) {
    for (var {
      parser: r
    } = e, n = Se(t[0], "ordgroup"), i = n.body, a = "", s = 0; s < i.length; s++) {
      var o = Se(i[s], "textord");
      a += o.text;
    }
    var l = parseInt(a), u;
    if (isNaN(l))
      throw new U("\\@char has non-numeric argument " + a);
    if (l < 0 || l >= 1114111)
      throw new U("\\@char with invalid code point " + a);
    return l <= 65535 ? u = String.fromCharCode(l) : (l -= 65536, u = String.fromCharCode((l >> 10) + 55296, (l & 1023) + 56320)), {
      type: "textord",
      mode: r.mode,
      text: u
    };
  }
});
var du = (e, t) => {
  var r = Qe(e.body, t.withColor(e.color), !1);
  return E.makeFragment(r);
}, pu = (e, t) => {
  var r = kt(e.body, t.withColor(e.color)), n = new z.MathNode("mstyle", r);
  return n.setAttribute("mathcolor", e.color), n;
};
Q({
  type: "color",
  names: ["\\textcolor"],
  props: {
    numArgs: 2,
    allowedInText: !0,
    argTypes: ["color", "original"]
  },
  handler(e, t) {
    var {
      parser: r
    } = e, n = Se(t[0], "color-token").color, i = t[1];
    return {
      type: "color",
      mode: r.mode,
      color: n,
      body: Ye(i)
    };
  },
  htmlBuilder: du,
  mathmlBuilder: pu
});
Q({
  type: "color",
  names: ["\\color"],
  props: {
    numArgs: 1,
    allowedInText: !0,
    argTypes: ["color"]
  },
  handler(e, t) {
    var {
      parser: r,
      breakOnTokenText: n
    } = e, i = Se(t[0], "color-token").color;
    r.gullet.macros.set("\\current@color", i);
    var a = r.parseExpression(!0, n);
    return {
      type: "color",
      mode: r.mode,
      color: i,
      body: a
    };
  },
  htmlBuilder: du,
  mathmlBuilder: pu
});
Q({
  type: "cr",
  names: ["\\\\"],
  props: {
    numArgs: 0,
    numOptionalArgs: 0,
    allowedInText: !0
  },
  handler(e, t, r) {
    var {
      parser: n
    } = e, i = n.gullet.future().text === "[" ? n.parseSizeGroup(!0) : null, a = !n.settings.displayMode || !n.settings.useStrictBehavior("newLineInDisplayMode", "In LaTeX, \\\\ or \\newline does nothing in display mode");
    return {
      type: "cr",
      mode: n.mode,
      newLine: a,
      size: i && Se(i, "size").value
    };
  },
  // The following builders are called only at the top level,
  // not within tabular/array environments.
  htmlBuilder(e, t) {
    var r = E.makeSpan(["mspace"], [], t);
    return e.newLine && (r.classes.push("newline"), e.size && (r.style.marginTop = j(je(e.size, t)))), r;
  },
  mathmlBuilder(e, t) {
    var r = new z.MathNode("mspace");
    return e.newLine && (r.setAttribute("linebreak", "newline"), e.size && r.setAttribute("height", j(je(e.size, t)))), r;
  }
});
var lo = {
  "\\global": "\\global",
  "\\long": "\\\\globallong",
  "\\\\globallong": "\\\\globallong",
  "\\def": "\\gdef",
  "\\gdef": "\\gdef",
  "\\edef": "\\xdef",
  "\\xdef": "\\xdef",
  "\\let": "\\\\globallet",
  "\\futurelet": "\\\\globalfuture"
}, fu = (e) => {
  var t = e.text;
  if (/^(?:[\\{}$&#^_]|EOF)$/.test(t))
    throw new U("Expected a control sequence", e);
  return t;
}, lf = (e) => {
  var t = e.gullet.popToken();
  return t.text === "=" && (t = e.gullet.popToken(), t.text === " " && (t = e.gullet.popToken())), t;
}, mu = (e, t, r, n) => {
  var i = e.gullet.macros.get(r.text);
  i == null && (r.noexpand = !0, i = {
    tokens: [r],
    numArgs: 0,
    // reproduce the same behavior in expansion
    unexpandable: !e.gullet.isExpandable(r.text)
  }), e.gullet.macros.set(t, i, n);
};
Q({
  type: "internal",
  names: [
    "\\global",
    "\\long",
    "\\\\globallong"
    // can’t be entered directly
  ],
  props: {
    numArgs: 0,
    allowedInText: !0
  },
  handler(e) {
    var {
      parser: t,
      funcName: r
    } = e;
    t.consumeSpaces();
    var n = t.fetch();
    if (lo[n.text])
      return (r === "\\global" || r === "\\\\globallong") && (n.text = lo[n.text]), Se(t.parseFunction(), "internal");
    throw new U("Invalid token after macro prefix", n);
  }
});
Q({
  type: "internal",
  names: ["\\def", "\\gdef", "\\edef", "\\xdef"],
  props: {
    numArgs: 0,
    allowedInText: !0,
    primitive: !0
  },
  handler(e) {
    var {
      parser: t,
      funcName: r
    } = e, n = t.gullet.popToken(), i = n.text;
    if (/^(?:[\\{}$&#^_]|EOF)$/.test(i))
      throw new U("Expected a control sequence", n);
    for (var a = 0, s, o = [[]]; t.gullet.future().text !== "{"; )
      if (n = t.gullet.popToken(), n.text === "#") {
        if (t.gullet.future().text === "{") {
          s = t.gullet.future(), o[a].push("{");
          break;
        }
        if (n = t.gullet.popToken(), !/^[1-9]$/.test(n.text))
          throw new U('Invalid argument number "' + n.text + '"');
        if (parseInt(n.text) !== a + 1)
          throw new U('Argument number "' + n.text + '" out of order');
        a++, o.push([]);
      } else {
        if (n.text === "EOF")
          throw new U("Expected a macro definition");
        o[a].push(n.text);
      }
    var {
      tokens: l
    } = t.gullet.consumeArg();
    return s && l.unshift(s), (r === "\\edef" || r === "\\xdef") && (l = t.gullet.expandTokens(l), l.reverse()), t.gullet.macros.set(i, {
      tokens: l,
      numArgs: a,
      delimiters: o
    }, r === lo[r]), {
      type: "internal",
      mode: t.mode
    };
  }
});
Q({
  type: "internal",
  names: [
    "\\let",
    "\\\\globallet"
    // can’t be entered directly
  ],
  props: {
    numArgs: 0,
    allowedInText: !0,
    primitive: !0
  },
  handler(e) {
    var {
      parser: t,
      funcName: r
    } = e, n = fu(t.gullet.popToken());
    t.gullet.consumeSpaces();
    var i = lf(t);
    return mu(t, n, i, r === "\\\\globallet"), {
      type: "internal",
      mode: t.mode
    };
  }
});
Q({
  type: "internal",
  names: [
    "\\futurelet",
    "\\\\globalfuture"
    // can’t be entered directly
  ],
  props: {
    numArgs: 0,
    allowedInText: !0,
    primitive: !0
  },
  handler(e) {
    var {
      parser: t,
      funcName: r
    } = e, n = fu(t.gullet.popToken()), i = t.gullet.popToken(), a = t.gullet.popToken();
    return mu(t, n, a, r === "\\\\globalfuture"), t.gullet.pushToken(a), t.gullet.pushToken(i), {
      type: "internal",
      mode: t.mode
    };
  }
});
var Wn = function(t, r, n) {
  var i = $e.math[t] && $e.math[t].replace, a = zo(i || t, r, n);
  if (!a)
    throw new Error("Unsupported symbol " + t + " and font size " + r + ".");
  return a;
}, jo = function(t, r, n, i) {
  var a = n.havingBaseStyle(r), s = E.makeSpan(i.concat(a.sizingClasses(n)), [t], n), o = a.sizeMultiplier / n.sizeMultiplier;
  return s.height *= o, s.depth *= o, s.maxFontSize = a.sizeMultiplier, s;
}, gu = function(t, r, n) {
  var i = r.havingBaseStyle(n), a = (1 - r.sizeMultiplier / i.sizeMultiplier) * r.fontMetrics().axisHeight;
  t.classes.push("delimcenter"), t.style.top = j(a), t.height -= a, t.depth += a;
}, cf = function(t, r, n, i, a, s) {
  var o = E.makeSymbol(t, "Main-Regular", a, i), l = jo(o, r, i, s);
  return n && gu(l, i, r), l;
}, uf = function(t, r, n, i) {
  return E.makeSymbol(t, "Size" + r + "-Regular", n, i);
}, bu = function(t, r, n, i, a, s) {
  var o = uf(t, r, a, i), l = jo(E.makeSpan(["delimsizing", "size" + r], [o], i), he.TEXT, i, s);
  return n && gu(l, i, he.TEXT), l;
}, As = function(t, r, n) {
  var i;
  r === "Size1-Regular" ? i = "delim-size1" : i = "delim-size4";
  var a = E.makeSpan(["delimsizinginner", i], [E.makeSpan([], [E.makeSymbol(t, r, n)])]);
  return {
    type: "elem",
    elem: a
  };
}, Is = function(t, r, n) {
  var i = Qt["Size4-Regular"][t.charCodeAt(0)] ? Qt["Size4-Regular"][t.charCodeAt(0)][4] : Qt["Size1-Regular"][t.charCodeAt(0)][4], a = new Pr("inner", mp(t, Math.round(1e3 * r))), s = new _r([a], {
    width: j(i),
    height: j(r),
    // Override CSS rule `.katex svg { width: 100% }`
    style: "width:" + j(i),
    viewBox: "0 0 " + 1e3 * i + " " + Math.round(1e3 * r),
    preserveAspectRatio: "xMinYMin"
  }), o = E.makeSvgSpan([], [s], n);
  return o.height = r, o.style.height = j(r), o.style.width = j(i), {
    type: "elem",
    elem: o
  };
}, co = 8e-3, Bi = {
  type: "kern",
  size: -1 * co
}, hf = ["|", "\\lvert", "\\rvert", "\\vert"], df = ["\\|", "\\lVert", "\\rVert", "\\Vert"], vu = function(t, r, n, i, a, s) {
  var o, l, u, d, p = "", b = 0;
  o = u = d = t, l = null;
  var m = "Size1-Regular";
  t === "\\uparrow" ? u = d = "⏐" : t === "\\Uparrow" ? u = d = "‖" : t === "\\downarrow" ? o = u = "⏐" : t === "\\Downarrow" ? o = u = "‖" : t === "\\updownarrow" ? (o = "\\uparrow", u = "⏐", d = "\\downarrow") : t === "\\Updownarrow" ? (o = "\\Uparrow", u = "‖", d = "\\Downarrow") : me.contains(hf, t) ? (u = "∣", p = "vert", b = 333) : me.contains(df, t) ? (u = "∥", p = "doublevert", b = 556) : t === "[" || t === "\\lbrack" ? (o = "⎡", u = "⎢", d = "⎣", m = "Size4-Regular", p = "lbrack", b = 667) : t === "]" || t === "\\rbrack" ? (o = "⎤", u = "⎥", d = "⎦", m = "Size4-Regular", p = "rbrack", b = 667) : t === "\\lfloor" || t === "⌊" ? (u = o = "⎢", d = "⎣", m = "Size4-Regular", p = "lfloor", b = 667) : t === "\\lceil" || t === "⌈" ? (o = "⎡", u = d = "⎢", m = "Size4-Regular", p = "lceil", b = 667) : t === "\\rfloor" || t === "⌋" ? (u = o = "⎥", d = "⎦", m = "Size4-Regular", p = "rfloor", b = 667) : t === "\\rceil" || t === "⌉" ? (o = "⎤", u = d = "⎥", m = "Size4-Regular", p = "rceil", b = 667) : t === "(" || t === "\\lparen" ? (o = "⎛", u = "⎜", d = "⎝", m = "Size4-Regular", p = "lparen", b = 875) : t === ")" || t === "\\rparen" ? (o = "⎞", u = "⎟", d = "⎠", m = "Size4-Regular", p = "rparen", b = 875) : t === "\\{" || t === "\\lbrace" ? (o = "⎧", l = "⎨", d = "⎩", u = "⎪", m = "Size4-Regular") : t === "\\}" || t === "\\rbrace" ? (o = "⎫", l = "⎬", d = "⎭", u = "⎪", m = "Size4-Regular") : t === "\\lgroup" || t === "⟮" ? (o = "⎧", d = "⎩", u = "⎪", m = "Size4-Regular") : t === "\\rgroup" || t === "⟯" ? (o = "⎫", d = "⎭", u = "⎪", m = "Size4-Regular") : t === "\\lmoustache" || t === "⎰" ? (o = "⎧", d = "⎭", u = "⎪", m = "Size4-Regular") : (t === "\\rmoustache" || t === "⎱") && (o = "⎫", d = "⎩", u = "⎪", m = "Size4-Regular");
  var _ = Wn(o, m, a), k = _.height + _.depth, L = Wn(u, m, a), A = L.height + L.depth, v = Wn(d, m, a), S = v.height + v.depth, C = 0, I = 1;
  if (l !== null) {
    var R = Wn(l, m, a);
    C = R.height + R.depth, I = 2;
  }
  var N = k + S + C, K = Math.max(0, Math.ceil((r - N) / (I * A))), B = N + K * I * A, ie = i.fontMetrics().axisHeight;
  n && (ie *= i.sizeMultiplier);
  var ge = B / 2 - ie, ce = [];
  if (p.length > 0) {
    var V = B - k - S, F = Math.round(B * 1e3), $ = gp(p, Math.round(V * 1e3)), te = new Pr(p, $), P = (b / 1e3).toFixed(3) + "em", Z = (F / 1e3).toFixed(3) + "em", G = new _r([te], {
      width: P,
      height: Z,
      viewBox: "0 0 " + b + " " + F
    }), ae = E.makeSvgSpan([], [G], i);
    ae.height = F / 1e3, ae.style.width = P, ae.style.height = Z, ce.push({
      type: "elem",
      elem: ae
    });
  } else {
    if (ce.push(As(d, m, a)), ce.push(Bi), l === null) {
      var se = B - k - S + 2 * co;
      ce.push(Is(u, se, i));
    } else {
      var Y = (B - k - S - C) / 2 + 2 * co;
      ce.push(Is(u, Y, i)), ce.push(Bi), ce.push(As(l, m, a)), ce.push(Bi), ce.push(Is(u, Y, i));
    }
    ce.push(Bi), ce.push(As(o, m, a));
  }
  var Oe = i.havingBaseStyle(he.TEXT), _e = E.makeVList({
    positionType: "bottom",
    positionData: ge,
    children: ce
  }, Oe);
  return jo(E.makeSpan(["delimsizing", "mult"], [_e], Oe), he.TEXT, i, s);
}, Rs = 80, Ls = 0.08, Os = function(t, r, n, i, a) {
  var s = fp(t, i, n), o = new Pr(t, s), l = new _r([o], {
    // Note: 1000:1 ratio of viewBox to document em width.
    width: "400em",
    height: j(r),
    viewBox: "0 0 400000 " + n,
    preserveAspectRatio: "xMinYMin slice"
  });
  return E.makeSvgSpan(["hide-tail"], [l], a);
}, pf = function(t, r) {
  var n = r.havingBaseSizing(), i = wu("\\surd", t * n.sizeMultiplier, _u, n), a = n.sizeMultiplier, s = Math.max(0, r.minRuleThickness - r.fontMetrics().sqrtRuleThickness), o, l = 0, u = 0, d = 0, p;
  return i.type === "small" ? (d = 1e3 + 1e3 * s + Rs, t < 1 ? a = 1 : t < 1.4 && (a = 0.7), l = (1 + s + Ls) / a, u = (1 + s) / a, o = Os("sqrtMain", l, d, s, r), o.style.minWidth = "0.853em", p = 0.833 / a) : i.type === "large" ? (d = (1e3 + Rs) * Kn[i.size], u = (Kn[i.size] + s) / a, l = (Kn[i.size] + s + Ls) / a, o = Os("sqrtSize" + i.size, l, d, s, r), o.style.minWidth = "1.02em", p = 1 / a) : (l = t + s + Ls, u = t + s, d = Math.floor(1e3 * t + s) + Rs, o = Os("sqrtTall", l, d, s, r), o.style.minWidth = "0.742em", p = 1.056), o.height = u, o.style.height = j(l), {
    span: o,
    advanceWidth: p,
    // Calculate the actual line width.
    // This actually should depend on the chosen font -- e.g. \boldmath
    // should use the thicker surd symbols from e.g. KaTeX_Main-Bold, and
    // have thicker rules.
    ruleWidth: (r.fontMetrics().sqrtRuleThickness + s) * a
  };
}, yu = ["(", "\\lparen", ")", "\\rparen", "[", "\\lbrack", "]", "\\rbrack", "\\{", "\\lbrace", "\\}", "\\rbrace", "\\lfloor", "\\rfloor", "⌊", "⌋", "\\lceil", "\\rceil", "⌈", "⌉", "\\surd"], ff = ["\\uparrow", "\\downarrow", "\\updownarrow", "\\Uparrow", "\\Downarrow", "\\Updownarrow", "|", "\\|", "\\vert", "\\Vert", "\\lvert", "\\rvert", "\\lVert", "\\rVert", "\\lgroup", "\\rgroup", "⟮", "⟯", "\\lmoustache", "\\rmoustache", "⎰", "⎱"], xu = ["<", ">", "\\langle", "\\rangle", "/", "\\backslash", "\\lt", "\\gt"], Kn = [0, 1.2, 1.8, 2.4, 3], mf = function(t, r, n, i, a) {
  if (t === "<" || t === "\\lt" || t === "⟨" ? t = "\\langle" : (t === ">" || t === "\\gt" || t === "⟩") && (t = "\\rangle"), me.contains(yu, t) || me.contains(xu, t))
    return bu(t, r, !1, n, i, a);
  if (me.contains(ff, t))
    return vu(t, Kn[r], !1, n, i, a);
  throw new U("Illegal delimiter: '" + t + "'");
}, gf = [{
  type: "small",
  style: he.SCRIPTSCRIPT
}, {
  type: "small",
  style: he.SCRIPT
}, {
  type: "small",
  style: he.TEXT
}, {
  type: "large",
  size: 1
}, {
  type: "large",
  size: 2
}, {
  type: "large",
  size: 3
}, {
  type: "large",
  size: 4
}], bf = [{
  type: "small",
  style: he.SCRIPTSCRIPT
}, {
  type: "small",
  style: he.SCRIPT
}, {
  type: "small",
  style: he.TEXT
}, {
  type: "stack"
}], _u = [{
  type: "small",
  style: he.SCRIPTSCRIPT
}, {
  type: "small",
  style: he.SCRIPT
}, {
  type: "small",
  style: he.TEXT
}, {
  type: "large",
  size: 1
}, {
  type: "large",
  size: 2
}, {
  type: "large",
  size: 3
}, {
  type: "large",
  size: 4
}, {
  type: "stack"
}], vf = function(t) {
  if (t.type === "small")
    return "Main-Regular";
  if (t.type === "large")
    return "Size" + t.size + "-Regular";
  if (t.type === "stack")
    return "Size4-Regular";
  throw new Error("Add support for delim type '" + t.type + "' here.");
}, wu = function(t, r, n, i) {
  for (var a = Math.min(2, 3 - i.style.size), s = a; s < n.length && n[s].type !== "stack"; s++) {
    var o = Wn(t, vf(n[s]), "math"), l = o.height + o.depth;
    if (n[s].type === "small") {
      var u = i.havingBaseStyle(n[s].style);
      l *= u.sizeMultiplier;
    }
    if (l > r)
      return n[s];
  }
  return n[n.length - 1];
}, Su = function(t, r, n, i, a, s) {
  t === "<" || t === "\\lt" || t === "⟨" ? t = "\\langle" : (t === ">" || t === "\\gt" || t === "⟩") && (t = "\\rangle");
  var o;
  me.contains(xu, t) ? o = gf : me.contains(yu, t) ? o = _u : o = bf;
  var l = wu(t, r, o, i);
  return l.type === "small" ? cf(t, l.style, n, i, a, s) : l.type === "large" ? bu(t, l.size, n, i, a, s) : vu(t, r, n, i, a, s);
}, yf = function(t, r, n, i, a, s) {
  var o = i.fontMetrics().axisHeight * i.sizeMultiplier, l = 901, u = 5 / i.fontMetrics().ptPerEm, d = Math.max(r - o, n + o), p = Math.max(
    // In real TeX, calculations are done using integral values which are
    // 65536 per pt, or 655360 per em. So, the division here truncates in
    // TeX but doesn't here, producing different results. If we wanted to
    // exactly match TeX's calculation, we could do
    //   Math.floor(655360 * maxDistFromAxis / 500) *
    //    delimiterFactor / 655360
    // (To see the difference, compare
    //    x^{x^{\left(\rule{0.1em}{0.68em}\right)}}
    // in TeX and KaTeX)
    d / 500 * l,
    2 * d - u
  );
  return Su(t, p, !0, i, a, s);
}, yr = {
  sqrtImage: pf,
  sizedDelim: mf,
  sizeToMaxHeight: Kn,
  customSizedDelim: Su,
  leftRightDelim: yf
}, hl = {
  "\\bigl": {
    mclass: "mopen",
    size: 1
  },
  "\\Bigl": {
    mclass: "mopen",
    size: 2
  },
  "\\biggl": {
    mclass: "mopen",
    size: 3
  },
  "\\Biggl": {
    mclass: "mopen",
    size: 4
  },
  "\\bigr": {
    mclass: "mclose",
    size: 1
  },
  "\\Bigr": {
    mclass: "mclose",
    size: 2
  },
  "\\biggr": {
    mclass: "mclose",
    size: 3
  },
  "\\Biggr": {
    mclass: "mclose",
    size: 4
  },
  "\\bigm": {
    mclass: "mrel",
    size: 1
  },
  "\\Bigm": {
    mclass: "mrel",
    size: 2
  },
  "\\biggm": {
    mclass: "mrel",
    size: 3
  },
  "\\Biggm": {
    mclass: "mrel",
    size: 4
  },
  "\\big": {
    mclass: "mord",
    size: 1
  },
  "\\Big": {
    mclass: "mord",
    size: 2
  },
  "\\bigg": {
    mclass: "mord",
    size: 3
  },
  "\\Bigg": {
    mclass: "mord",
    size: 4
  }
}, xf = ["(", "\\lparen", ")", "\\rparen", "[", "\\lbrack", "]", "\\rbrack", "\\{", "\\lbrace", "\\}", "\\rbrace", "\\lfloor", "\\rfloor", "⌊", "⌋", "\\lceil", "\\rceil", "⌈", "⌉", "<", ">", "\\langle", "⟨", "\\rangle", "⟩", "\\lt", "\\gt", "\\lvert", "\\rvert", "\\lVert", "\\rVert", "\\lgroup", "\\rgroup", "⟮", "⟯", "\\lmoustache", "\\rmoustache", "⎰", "⎱", "/", "\\backslash", "|", "\\vert", "\\|", "\\Vert", "\\uparrow", "\\Uparrow", "\\downarrow", "\\Downarrow", "\\updownarrow", "\\Updownarrow", "."];
function ja(e, t) {
  var r = Ga(e);
  if (r && me.contains(xf, r.text))
    return r;
  throw r ? new U("Invalid delimiter '" + r.text + "' after '" + t.funcName + "'", e) : new U("Invalid delimiter type '" + e.type + "'", e);
}
Q({
  type: "delimsizing",
  names: ["\\bigl", "\\Bigl", "\\biggl", "\\Biggl", "\\bigr", "\\Bigr", "\\biggr", "\\Biggr", "\\bigm", "\\Bigm", "\\biggm", "\\Biggm", "\\big", "\\Big", "\\bigg", "\\Bigg"],
  props: {
    numArgs: 1,
    argTypes: ["primitive"]
  },
  handler: (e, t) => {
    var r = ja(t[0], e);
    return {
      type: "delimsizing",
      mode: e.parser.mode,
      size: hl[e.funcName].size,
      mclass: hl[e.funcName].mclass,
      delim: r.text
    };
  },
  htmlBuilder: (e, t) => e.delim === "." ? E.makeSpan([e.mclass]) : yr.sizedDelim(e.delim, e.size, t, e.mode, [e.mclass]),
  mathmlBuilder: (e) => {
    var t = [];
    e.delim !== "." && t.push(Bt(e.delim, e.mode));
    var r = new z.MathNode("mo", t);
    e.mclass === "mopen" || e.mclass === "mclose" ? r.setAttribute("fence", "true") : r.setAttribute("fence", "false"), r.setAttribute("stretchy", "true");
    var n = j(yr.sizeToMaxHeight[e.size]);
    return r.setAttribute("minsize", n), r.setAttribute("maxsize", n), r;
  }
});
function dl(e) {
  if (!e.body)
    throw new Error("Bug: The leftright ParseNode wasn't fully parsed.");
}
Q({
  type: "leftright-right",
  names: ["\\right"],
  props: {
    numArgs: 1,
    primitive: !0
  },
  handler: (e, t) => {
    var r = e.parser.gullet.macros.get("\\current@color");
    if (r && typeof r != "string")
      throw new U("\\current@color set to non-string in \\right");
    return {
      type: "leftright-right",
      mode: e.parser.mode,
      delim: ja(t[0], e).text,
      color: r
      // undefined if not set via \color
    };
  }
});
Q({
  type: "leftright",
  names: ["\\left"],
  props: {
    numArgs: 1,
    primitive: !0
  },
  handler: (e, t) => {
    var r = ja(t[0], e), n = e.parser;
    ++n.leftrightDepth;
    var i = n.parseExpression(!1);
    --n.leftrightDepth, n.expect("\\right", !1);
    var a = Se(n.parseFunction(), "leftright-right");
    return {
      type: "leftright",
      mode: n.mode,
      body: i,
      left: r.text,
      right: a.delim,
      rightColor: a.color
    };
  },
  htmlBuilder: (e, t) => {
    dl(e);
    for (var r = Qe(e.body, t, !0, ["mopen", "mclose"]), n = 0, i = 0, a = !1, s = 0; s < r.length; s++)
      r[s].isMiddle ? a = !0 : (n = Math.max(r[s].height, n), i = Math.max(r[s].depth, i));
    n *= t.sizeMultiplier, i *= t.sizeMultiplier;
    var o;
    if (e.left === "." ? o = ri(t, ["mopen"]) : o = yr.leftRightDelim(e.left, n, i, t, e.mode, ["mopen"]), r.unshift(o), a)
      for (var l = 1; l < r.length; l++) {
        var u = r[l], d = u.isMiddle;
        d && (r[l] = yr.leftRightDelim(d.delim, n, i, d.options, e.mode, []));
      }
    var p;
    if (e.right === ".")
      p = ri(t, ["mclose"]);
    else {
      var b = e.rightColor ? t.withColor(e.rightColor) : t;
      p = yr.leftRightDelim(e.right, n, i, b, e.mode, ["mclose"]);
    }
    return r.push(p), E.makeSpan(["minner"], r, t);
  },
  mathmlBuilder: (e, t) => {
    dl(e);
    var r = kt(e.body, t);
    if (e.left !== ".") {
      var n = new z.MathNode("mo", [Bt(e.left, e.mode)]);
      n.setAttribute("fence", "true"), r.unshift(n);
    }
    if (e.right !== ".") {
      var i = new z.MathNode("mo", [Bt(e.right, e.mode)]);
      i.setAttribute("fence", "true"), e.rightColor && i.setAttribute("mathcolor", e.rightColor), r.push(i);
    }
    return Ho(r);
  }
});
Q({
  type: "middle",
  names: ["\\middle"],
  props: {
    numArgs: 1,
    primitive: !0
  },
  handler: (e, t) => {
    var r = ja(t[0], e);
    if (!e.parser.leftrightDepth)
      throw new U("\\middle without preceding \\left", r);
    return {
      type: "middle",
      mode: e.parser.mode,
      delim: r.text
    };
  },
  htmlBuilder: (e, t) => {
    var r;
    if (e.delim === ".")
      r = ri(t, []);
    else {
      r = yr.sizedDelim(e.delim, 1, t, e.mode, []);
      var n = {
        delim: e.delim,
        options: t
      };
      r.isMiddle = n;
    }
    return r;
  },
  mathmlBuilder: (e, t) => {
    var r = e.delim === "\\vert" || e.delim === "|" ? Bt("|", "text") : Bt(e.delim, e.mode), n = new z.MathNode("mo", [r]);
    return n.setAttribute("fence", "true"), n.setAttribute("lspace", "0.05em"), n.setAttribute("rspace", "0.05em"), n;
  }
});
var Yo = (e, t) => {
  var r = E.wrapFragment(Ae(e.body, t), t), n = e.label.slice(1), i = t.sizeMultiplier, a, s = 0, o = me.isCharacterBox(e.body);
  if (n === "sout")
    a = E.makeSpan(["stretchy", "sout"]), a.height = t.fontMetrics().defaultRuleThickness / i, s = -0.5 * t.fontMetrics().xHeight;
  else if (n === "phase") {
    var l = je({
      number: 0.6,
      unit: "pt"
    }, t), u = je({
      number: 0.35,
      unit: "ex"
    }, t), d = t.havingBaseSizing();
    i = i / d.sizeMultiplier;
    var p = r.height + r.depth + l + u;
    r.style.paddingLeft = j(p / 2 + l);
    var b = Math.floor(1e3 * p * i), m = dp(b), _ = new _r([new Pr("phase", m)], {
      width: "400em",
      height: j(b / 1e3),
      viewBox: "0 0 400000 " + b,
      preserveAspectRatio: "xMinYMin slice"
    });
    a = E.makeSvgSpan(["hide-tail"], [_], t), a.style.height = j(p), s = r.depth + l + u;
  } else {
    /cancel/.test(n) ? o || r.classes.push("cancel-pad") : n === "angl" ? r.classes.push("anglpad") : r.classes.push("boxpad");
    var k = 0, L = 0, A = 0;
    /box/.test(n) ? (A = Math.max(
      t.fontMetrics().fboxrule,
      // default
      t.minRuleThickness
      // User override.
    ), k = t.fontMetrics().fboxsep + (n === "colorbox" ? 0 : A), L = k) : n === "angl" ? (A = Math.max(t.fontMetrics().defaultRuleThickness, t.minRuleThickness), k = 4 * A, L = Math.max(0, 0.25 - r.depth)) : (k = o ? 0.2 : 0, L = k), a = Sr.encloseSpan(r, n, k, L, t), /fbox|boxed|fcolorbox/.test(n) ? (a.style.borderStyle = "solid", a.style.borderWidth = j(A)) : n === "angl" && A !== 0.049 && (a.style.borderTopWidth = j(A), a.style.borderRightWidth = j(A)), s = r.depth + L, e.backgroundColor && (a.style.backgroundColor = e.backgroundColor, e.borderColor && (a.style.borderColor = e.borderColor));
  }
  var v;
  if (e.backgroundColor)
    v = E.makeVList({
      positionType: "individualShift",
      children: [
        // Put the color background behind inner;
        {
          type: "elem",
          elem: a,
          shift: s
        },
        {
          type: "elem",
          elem: r,
          shift: 0
        }
      ]
    }, t);
  else {
    var S = /cancel|phase/.test(n) ? ["svg-align"] : [];
    v = E.makeVList({
      positionType: "individualShift",
      children: [
        // Write the \cancel stroke on top of inner.
        {
          type: "elem",
          elem: r,
          shift: 0
        },
        {
          type: "elem",
          elem: a,
          shift: s,
          wrapperClasses: S
        }
      ]
    }, t);
  }
  return /cancel/.test(n) && (v.height = r.height, v.depth = r.depth), /cancel/.test(n) && !o ? E.makeSpan(["mord", "cancel-lap"], [v], t) : E.makeSpan(["mord"], [v], t);
}, Vo = (e, t) => {
  var r = 0, n = new z.MathNode(e.label.indexOf("colorbox") > -1 ? "mpadded" : "menclose", [Be(e.body, t)]);
  switch (e.label) {
    case "\\cancel":
      n.setAttribute("notation", "updiagonalstrike");
      break;
    case "\\bcancel":
      n.setAttribute("notation", "downdiagonalstrike");
      break;
    case "\\phase":
      n.setAttribute("notation", "phasorangle");
      break;
    case "\\sout":
      n.setAttribute("notation", "horizontalstrike");
      break;
    case "\\fbox":
      n.setAttribute("notation", "box");
      break;
    case "\\angl":
      n.setAttribute("notation", "actuarial");
      break;
    case "\\fcolorbox":
    case "\\colorbox":
      if (r = t.fontMetrics().fboxsep * t.fontMetrics().ptPerEm, n.setAttribute("width", "+" + 2 * r + "pt"), n.setAttribute("height", "+" + 2 * r + "pt"), n.setAttribute("lspace", r + "pt"), n.setAttribute("voffset", r + "pt"), e.label === "\\fcolorbox") {
        var i = Math.max(
          t.fontMetrics().fboxrule,
          // default
          t.minRuleThickness
          // user override
        );
        n.setAttribute("style", "border: " + i + "em solid " + String(e.borderColor));
      }
      break;
    case "\\xcancel":
      n.setAttribute("notation", "updiagonalstrike downdiagonalstrike");
      break;
  }
  return e.backgroundColor && n.setAttribute("mathbackground", e.backgroundColor), n;
};
Q({
  type: "enclose",
  names: ["\\colorbox"],
  props: {
    numArgs: 2,
    allowedInText: !0,
    argTypes: ["color", "text"]
  },
  handler(e, t, r) {
    var {
      parser: n,
      funcName: i
    } = e, a = Se(t[0], "color-token").color, s = t[1];
    return {
      type: "enclose",
      mode: n.mode,
      label: i,
      backgroundColor: a,
      body: s
    };
  },
  htmlBuilder: Yo,
  mathmlBuilder: Vo
});
Q({
  type: "enclose",
  names: ["\\fcolorbox"],
  props: {
    numArgs: 3,
    allowedInText: !0,
    argTypes: ["color", "color", "text"]
  },
  handler(e, t, r) {
    var {
      parser: n,
      funcName: i
    } = e, a = Se(t[0], "color-token").color, s = Se(t[1], "color-token").color, o = t[2];
    return {
      type: "enclose",
      mode: n.mode,
      label: i,
      backgroundColor: s,
      borderColor: a,
      body: o
    };
  },
  htmlBuilder: Yo,
  mathmlBuilder: Vo
});
Q({
  type: "enclose",
  names: ["\\fbox"],
  props: {
    numArgs: 1,
    argTypes: ["hbox"],
    allowedInText: !0
  },
  handler(e, t) {
    var {
      parser: r
    } = e;
    return {
      type: "enclose",
      mode: r.mode,
      label: "\\fbox",
      body: t[0]
    };
  }
});
Q({
  type: "enclose",
  names: ["\\cancel", "\\bcancel", "\\xcancel", "\\sout", "\\phase"],
  props: {
    numArgs: 1
  },
  handler(e, t) {
    var {
      parser: r,
      funcName: n
    } = e, i = t[0];
    return {
      type: "enclose",
      mode: r.mode,
      label: n,
      body: i
    };
  },
  htmlBuilder: Yo,
  mathmlBuilder: Vo
});
Q({
  type: "enclose",
  names: ["\\angl"],
  props: {
    numArgs: 1,
    argTypes: ["hbox"],
    allowedInText: !1
  },
  handler(e, t) {
    var {
      parser: r
    } = e;
    return {
      type: "enclose",
      mode: r.mode,
      label: "\\angl",
      body: t[0]
    };
  }
});
var ku = {};
function rr(e) {
  for (var {
    type: t,
    names: r,
    props: n,
    handler: i,
    htmlBuilder: a,
    mathmlBuilder: s
  } = e, o = {
    type: t,
    numArgs: n.numArgs || 0,
    allowedInText: !1,
    numOptionalArgs: 0,
    handler: i
  }, l = 0; l < r.length; ++l)
    ku[r[l]] = o;
  a && (ga[t] = a), s && (ba[t] = s);
}
var Tu = {};
function g(e, t) {
  Tu[e] = t;
}
function pl(e) {
  var t = [];
  e.consumeSpaces();
  var r = e.fetch().text;
  for (r === "\\relax" && (e.consume(), e.consumeSpaces(), r = e.fetch().text); r === "\\hline" || r === "\\hdashline"; )
    e.consume(), t.push(r === "\\hdashline"), e.consumeSpaces(), r = e.fetch().text;
  return t;
}
var Ya = (e) => {
  var t = e.parser.settings;
  if (!t.displayMode)
    throw new U("{" + e.envName + "} can be used only in display mode.");
};
function Xo(e) {
  if (e.indexOf("ed") === -1)
    return e.indexOf("*") === -1;
}
function Gr(e, t, r) {
  var {
    hskipBeforeAndAfter: n,
    addJot: i,
    cols: a,
    arraystretch: s,
    colSeparationType: o,
    autoTag: l,
    singleRow: u,
    emptySingleRow: d,
    maxNumCols: p,
    leqno: b
  } = t;
  if (e.gullet.beginGroup(), u || e.gullet.macros.set("\\cr", "\\\\\\relax"), !s) {
    var m = e.gullet.expandMacroAsText("\\arraystretch");
    if (m == null)
      s = 1;
    else if (s = parseFloat(m), !s || s < 0)
      throw new U("Invalid \\arraystretch: " + m);
  }
  e.gullet.beginGroup();
  var _ = [], k = [_], L = [], A = [], v = l != null ? [] : void 0;
  function S() {
    l && e.gullet.macros.set("\\@eqnsw", "1", !0);
  }
  function C() {
    v && (e.gullet.macros.get("\\df@tag") ? (v.push(e.subparse([new Ot("\\df@tag")])), e.gullet.macros.set("\\df@tag", void 0, !0)) : v.push(!!l && e.gullet.macros.get("\\@eqnsw") === "1"));
  }
  for (S(), A.push(pl(e)); ; ) {
    var I = e.parseExpression(!1, u ? "\\end" : "\\\\");
    e.gullet.endGroup(), e.gullet.beginGroup(), I = {
      type: "ordgroup",
      mode: e.mode,
      body: I
    }, r && (I = {
      type: "styling",
      mode: e.mode,
      style: r,
      body: [I]
    }), _.push(I);
    var R = e.fetch().text;
    if (R === "&") {
      if (p && _.length === p) {
        if (u || o)
          throw new U("Too many tab characters: &", e.nextToken);
        e.settings.reportNonstrict("textEnv", "Too few columns specified in the {array} column argument.");
      }
      e.consume();
    } else if (R === "\\end") {
      C(), _.length === 1 && I.type === "styling" && I.body[0].body.length === 0 && (k.length > 1 || !d) && k.pop(), A.length < k.length + 1 && A.push([]);
      break;
    } else if (R === "\\\\") {
      e.consume();
      var N = void 0;
      e.gullet.future().text !== " " && (N = e.parseSizeGroup(!0)), L.push(N ? N.value : null), C(), A.push(pl(e)), _ = [], k.push(_), S();
    } else
      throw new U("Expected & or \\\\ or \\cr or \\end", e.nextToken);
  }
  return e.gullet.endGroup(), e.gullet.endGroup(), {
    type: "array",
    mode: e.mode,
    addJot: i,
    arraystretch: s,
    body: k,
    cols: a,
    rowGaps: L,
    hskipBeforeAndAfter: n,
    hLinesBeforeRow: A,
    colSeparationType: o,
    tags: v,
    leqno: b
  };
}
function Ko(e) {
  return e.slice(0, 1) === "d" ? "display" : "text";
}
var nr = function(t, r) {
  var n, i, a = t.body.length, s = t.hLinesBeforeRow, o = 0, l = new Array(a), u = [], d = Math.max(
    // From LaTeX \showthe\arrayrulewidth. Equals 0.04 em.
    r.fontMetrics().arrayRuleWidth,
    r.minRuleThickness
    // User override.
  ), p = 1 / r.fontMetrics().ptPerEm, b = 5 * p;
  if (t.colSeparationType && t.colSeparationType === "small") {
    var m = r.havingStyle(he.SCRIPT).sizeMultiplier;
    b = 0.2778 * (m / r.sizeMultiplier);
  }
  var _ = t.colSeparationType === "CD" ? je({
    number: 3,
    unit: "ex"
  }, r) : 12 * p, k = 3 * p, L = t.arraystretch * _, A = 0.7 * L, v = 0.3 * L, S = 0;
  function C(zt) {
    for (var Pt = 0; Pt < zt.length; ++Pt)
      Pt > 0 && (S += 0.25), u.push({
        pos: S,
        isDashed: zt[Pt]
      });
  }
  for (C(s[0]), n = 0; n < t.body.length; ++n) {
    var I = t.body[n], R = A, N = v;
    o < I.length && (o = I.length);
    var K = new Array(I.length);
    for (i = 0; i < I.length; ++i) {
      var B = Ae(I[i], r);
      N < B.depth && (N = B.depth), R < B.height && (R = B.height), K[i] = B;
    }
    var ie = t.rowGaps[n], ge = 0;
    ie && (ge = je(ie, r), ge > 0 && (ge += v, N < ge && (N = ge), ge = 0)), t.addJot && (N += k), K.height = R, K.depth = N, S += R, K.pos = S, S += N + ge, l[n] = K, C(s[n + 1]);
  }
  var ce = S / 2 + r.fontMetrics().axisHeight, V = t.cols || [], F = [], $, te, P = [];
  if (t.tags && t.tags.some((zt) => zt))
    for (n = 0; n < a; ++n) {
      var Z = l[n], G = Z.pos - ce, ae = t.tags[n], se = void 0;
      ae === !0 ? se = E.makeSpan(["eqn-num"], [], r) : ae === !1 ? se = E.makeSpan([], [], r) : se = E.makeSpan([], Qe(ae, r, !0), r), se.depth = Z.depth, se.height = Z.height, P.push({
        type: "elem",
        elem: se,
        shift: G
      });
    }
  for (
    i = 0, te = 0;
    // Continue while either there are more columns or more column
    // descriptions, so trailing separators don't get lost.
    i < o || te < V.length;
    ++i, ++te
  ) {
    for (var Y = V[te] || {}, Oe = !0; Y.type === "separator"; ) {
      if (Oe || ($ = E.makeSpan(["arraycolsep"], []), $.style.width = j(r.fontMetrics().doubleRuleSep), F.push($)), Y.separator === "|" || Y.separator === ":") {
        var _e = Y.separator === "|" ? "solid" : "dashed", Me = E.makeSpan(["vertical-separator"], [], r);
        Me.style.height = j(S), Me.style.borderRightWidth = j(d), Me.style.borderRightStyle = _e, Me.style.margin = "0 " + j(-d / 2);
        var Ce = S - ce;
        Ce && (Me.style.verticalAlign = j(-Ce)), F.push(Me);
      } else
        throw new U("Invalid separator type: " + Y.separator);
      te++, Y = V[te] || {}, Oe = !1;
    }
    if (!(i >= o)) {
      var ze = void 0;
      (i > 0 || t.hskipBeforeAndAfter) && (ze = me.deflt(Y.pregap, b), ze !== 0 && ($ = E.makeSpan(["arraycolsep"], []), $.style.width = j(ze), F.push($)));
      var He = [];
      for (n = 0; n < a; ++n) {
        var Re = l[n], we = Re[i];
        if (we) {
          var Ee = Re.pos - ce;
          we.depth = Re.depth, we.height = Re.height, He.push({
            type: "elem",
            elem: we,
            shift: Ee
          });
        }
      }
      He = E.makeVList({
        positionType: "individualShift",
        children: He
      }, r), He = E.makeSpan(["col-align-" + (Y.align || "c")], [He]), F.push(He), (i < o - 1 || t.hskipBeforeAndAfter) && (ze = me.deflt(Y.postgap, b), ze !== 0 && ($ = E.makeSpan(["arraycolsep"], []), $.style.width = j(ze), F.push($)));
    }
  }
  if (l = E.makeSpan(["mtable"], F), u.length > 0) {
    for (var rt = E.makeLineSpan("hline", r, d), ut = E.makeLineSpan("hdashline", r, d), bt = [{
      type: "elem",
      elem: l,
      shift: 0
    }]; u.length > 0; ) {
      var sr = u.pop(), Kt = sr.pos - ce;
      sr.isDashed ? bt.push({
        type: "elem",
        elem: ut,
        shift: Kt
      }) : bt.push({
        type: "elem",
        elem: rt,
        shift: Kt
      });
    }
    l = E.makeVList({
      positionType: "individualShift",
      children: bt
    }, r);
  }
  if (P.length === 0)
    return E.makeSpan(["mord"], [l], r);
  var It = E.makeVList({
    positionType: "individualShift",
    children: P
  }, r);
  return It = E.makeSpan(["tag"], [It], r), E.makeFragment([l, It]);
}, _f = {
  c: "center ",
  l: "left ",
  r: "right "
}, ir = function(t, r) {
  for (var n = [], i = new z.MathNode("mtd", [], ["mtr-glue"]), a = new z.MathNode("mtd", [], ["mml-eqn-num"]), s = 0; s < t.body.length; s++) {
    for (var o = t.body[s], l = [], u = 0; u < o.length; u++)
      l.push(new z.MathNode("mtd", [Be(o[u], r)]));
    t.tags && t.tags[s] && (l.unshift(i), l.push(i), t.leqno ? l.unshift(a) : l.push(a)), n.push(new z.MathNode("mtr", l));
  }
  var d = new z.MathNode("mtable", n), p = t.arraystretch === 0.5 ? 0.1 : 0.16 + t.arraystretch - 1 + (t.addJot ? 0.09 : 0);
  d.setAttribute("rowspacing", j(p));
  var b = "", m = "";
  if (t.cols && t.cols.length > 0) {
    var _ = t.cols, k = "", L = !1, A = 0, v = _.length;
    _[0].type === "separator" && (b += "top ", A = 1), _[_.length - 1].type === "separator" && (b += "bottom ", v -= 1);
    for (var S = A; S < v; S++)
      _[S].type === "align" ? (m += _f[_[S].align], L && (k += "none "), L = !0) : _[S].type === "separator" && L && (k += _[S].separator === "|" ? "solid " : "dashed ", L = !1);
    d.setAttribute("columnalign", m.trim()), /[sd]/.test(k) && d.setAttribute("columnlines", k.trim());
  }
  if (t.colSeparationType === "align") {
    for (var C = t.cols || [], I = "", R = 1; R < C.length; R++)
      I += R % 2 ? "0em " : "1em ";
    d.setAttribute("columnspacing", I.trim());
  } else
    t.colSeparationType === "alignat" || t.colSeparationType === "gather" ? d.setAttribute("columnspacing", "0em") : t.colSeparationType === "small" ? d.setAttribute("columnspacing", "0.2778em") : t.colSeparationType === "CD" ? d.setAttribute("columnspacing", "0.5em") : d.setAttribute("columnspacing", "1em");
  var N = "", K = t.hLinesBeforeRow;
  b += K[0].length > 0 ? "left " : "", b += K[K.length - 1].length > 0 ? "right " : "";
  for (var B = 1; B < K.length - 1; B++)
    N += K[B].length === 0 ? "none " : K[B][0] ? "dashed " : "solid ";
  return /[sd]/.test(N) && d.setAttribute("rowlines", N.trim()), b !== "" && (d = new z.MathNode("menclose", [d]), d.setAttribute("notation", b.trim())), t.arraystretch && t.arraystretch < 1 && (d = new z.MathNode("mstyle", [d]), d.setAttribute("scriptlevel", "1")), d;
}, Cu = function(t, r) {
  t.envName.indexOf("ed") === -1 && Ya(t);
  var n = [], i = t.envName.indexOf("at") > -1 ? "alignat" : "align", a = t.envName === "split", s = Gr(t.parser, {
    cols: n,
    addJot: !0,
    autoTag: a ? void 0 : Xo(t.envName),
    emptySingleRow: !0,
    colSeparationType: i,
    maxNumCols: a ? 2 : void 0,
    leqno: t.parser.settings.leqno
  }, "display"), o, l = 0, u = {
    type: "ordgroup",
    mode: t.mode,
    body: []
  };
  if (r[0] && r[0].type === "ordgroup") {
    for (var d = "", p = 0; p < r[0].body.length; p++) {
      var b = Se(r[0].body[p], "textord");
      d += b.text;
    }
    o = Number(d), l = o * 2;
  }
  var m = !l;
  s.body.forEach(function(A) {
    for (var v = 1; v < A.length; v += 2) {
      var S = Se(A[v], "styling"), C = Se(S.body[0], "ordgroup");
      C.body.unshift(u);
    }
    if (m)
      l < A.length && (l = A.length);
    else {
      var I = A.length / 2;
      if (o < I)
        throw new U("Too many math in a row: " + ("expected " + o + ", but got " + I), A[0]);
    }
  });
  for (var _ = 0; _ < l; ++_) {
    var k = "r", L = 0;
    _ % 2 === 1 ? k = "l" : _ > 0 && m && (L = 1), n[_] = {
      type: "align",
      align: k,
      pregap: L,
      postgap: 0
    };
  }
  return s.colSeparationType = m ? "align" : "alignat", s;
};
rr({
  type: "array",
  names: ["array", "darray"],
  props: {
    numArgs: 1
  },
  handler(e, t) {
    var r = Ga(t[0]), n = r ? [t[0]] : Se(t[0], "ordgroup").body, i = n.map(function(s) {
      var o = Go(s), l = o.text;
      if ("lcr".indexOf(l) !== -1)
        return {
          type: "align",
          align: l
        };
      if (l === "|")
        return {
          type: "separator",
          separator: "|"
        };
      if (l === ":")
        return {
          type: "separator",
          separator: ":"
        };
      throw new U("Unknown column alignment: " + l, s);
    }), a = {
      cols: i,
      hskipBeforeAndAfter: !0,
      // \@preamble in lttab.dtx
      maxNumCols: i.length
    };
    return Gr(e.parser, a, Ko(e.envName));
  },
  htmlBuilder: nr,
  mathmlBuilder: ir
});
rr({
  type: "array",
  names: ["matrix", "pmatrix", "bmatrix", "Bmatrix", "vmatrix", "Vmatrix", "matrix*", "pmatrix*", "bmatrix*", "Bmatrix*", "vmatrix*", "Vmatrix*"],
  props: {
    numArgs: 0
  },
  handler(e) {
    var t = {
      matrix: null,
      pmatrix: ["(", ")"],
      bmatrix: ["[", "]"],
      Bmatrix: ["\\{", "\\}"],
      vmatrix: ["|", "|"],
      Vmatrix: ["\\Vert", "\\Vert"]
    }[e.envName.replace("*", "")], r = "c", n = {
      hskipBeforeAndAfter: !1,
      cols: [{
        type: "align",
        align: r
      }]
    };
    if (e.envName.charAt(e.envName.length - 1) === "*") {
      var i = e.parser;
      if (i.consumeSpaces(), i.fetch().text === "[") {
        if (i.consume(), i.consumeSpaces(), r = i.fetch().text, "lcr".indexOf(r) === -1)
          throw new U("Expected l or c or r", i.nextToken);
        i.consume(), i.consumeSpaces(), i.expect("]"), i.consume(), n.cols = [{
          type: "align",
          align: r
        }];
      }
    }
    var a = Gr(e.parser, n, Ko(e.envName)), s = Math.max(0, ...a.body.map((o) => o.length));
    return a.cols = new Array(s).fill({
      type: "align",
      align: r
    }), t ? {
      type: "leftright",
      mode: e.mode,
      body: [a],
      left: t[0],
      right: t[1],
      rightColor: void 0
      // \right uninfluenced by \color in array
    } : a;
  },
  htmlBuilder: nr,
  mathmlBuilder: ir
});
rr({
  type: "array",
  names: ["smallmatrix"],
  props: {
    numArgs: 0
  },
  handler(e) {
    var t = {
      arraystretch: 0.5
    }, r = Gr(e.parser, t, "script");
    return r.colSeparationType = "small", r;
  },
  htmlBuilder: nr,
  mathmlBuilder: ir
});
rr({
  type: "array",
  names: ["subarray"],
  props: {
    numArgs: 1
  },
  handler(e, t) {
    var r = Ga(t[0]), n = r ? [t[0]] : Se(t[0], "ordgroup").body, i = n.map(function(s) {
      var o = Go(s), l = o.text;
      if ("lc".indexOf(l) !== -1)
        return {
          type: "align",
          align: l
        };
      throw new U("Unknown column alignment: " + l, s);
    });
    if (i.length > 1)
      throw new U("{subarray} can contain only one column");
    var a = {
      cols: i,
      hskipBeforeAndAfter: !1,
      arraystretch: 0.5
    };
    if (a = Gr(e.parser, a, "script"), a.body.length > 0 && a.body[0].length > 1)
      throw new U("{subarray} can contain only one column");
    return a;
  },
  htmlBuilder: nr,
  mathmlBuilder: ir
});
rr({
  type: "array",
  names: ["cases", "dcases", "rcases", "drcases"],
  props: {
    numArgs: 0
  },
  handler(e) {
    var t = {
      arraystretch: 1.2,
      cols: [{
        type: "align",
        align: "l",
        pregap: 0,
        // TODO(kevinb) get the current style.
        // For now we use the metrics for TEXT style which is what we were
        // doing before.  Before attempting to get the current style we
        // should look at TeX's behavior especially for \over and matrices.
        postgap: 1
        /* 1em quad */
      }, {
        type: "align",
        align: "l",
        pregap: 0,
        postgap: 0
      }]
    }, r = Gr(e.parser, t, Ko(e.envName));
    return {
      type: "leftright",
      mode: e.mode,
      body: [r],
      left: e.envName.indexOf("r") > -1 ? "." : "\\{",
      right: e.envName.indexOf("r") > -1 ? "\\}" : ".",
      rightColor: void 0
    };
  },
  htmlBuilder: nr,
  mathmlBuilder: ir
});
rr({
  type: "array",
  names: ["align", "align*", "aligned", "split"],
  props: {
    numArgs: 0
  },
  handler: Cu,
  htmlBuilder: nr,
  mathmlBuilder: ir
});
rr({
  type: "array",
  names: ["gathered", "gather", "gather*"],
  props: {
    numArgs: 0
  },
  handler(e) {
    me.contains(["gather", "gather*"], e.envName) && Ya(e);
    var t = {
      cols: [{
        type: "align",
        align: "c"
      }],
      addJot: !0,
      colSeparationType: "gather",
      autoTag: Xo(e.envName),
      emptySingleRow: !0,
      leqno: e.parser.settings.leqno
    };
    return Gr(e.parser, t, "display");
  },
  htmlBuilder: nr,
  mathmlBuilder: ir
});
rr({
  type: "array",
  names: ["alignat", "alignat*", "alignedat"],
  props: {
    numArgs: 1
  },
  handler: Cu,
  htmlBuilder: nr,
  mathmlBuilder: ir
});
rr({
  type: "array",
  names: ["equation", "equation*"],
  props: {
    numArgs: 0
  },
  handler(e) {
    Ya(e);
    var t = {
      autoTag: Xo(e.envName),
      emptySingleRow: !0,
      singleRow: !0,
      maxNumCols: 1,
      leqno: e.parser.settings.leqno
    };
    return Gr(e.parser, t, "display");
  },
  htmlBuilder: nr,
  mathmlBuilder: ir
});
rr({
  type: "array",
  names: ["CD"],
  props: {
    numArgs: 0
  },
  handler(e) {
    return Ya(e), of(e.parser);
  },
  htmlBuilder: nr,
  mathmlBuilder: ir
});
g("\\nonumber", "\\gdef\\@eqnsw{0}");
g("\\notag", "\\nonumber");
Q({
  type: "text",
  // Doesn't matter what this is.
  names: ["\\hline", "\\hdashline"],
  props: {
    numArgs: 0,
    allowedInText: !0,
    allowedInMath: !0
  },
  handler(e, t) {
    throw new U(e.funcName + " valid only within array environment");
  }
});
var fl = ku;
Q({
  type: "environment",
  names: ["\\begin", "\\end"],
  props: {
    numArgs: 1,
    argTypes: ["text"]
  },
  handler(e, t) {
    var {
      parser: r,
      funcName: n
    } = e, i = t[0];
    if (i.type !== "ordgroup")
      throw new U("Invalid environment name", i);
    for (var a = "", s = 0; s < i.body.length; ++s)
      a += Se(i.body[s], "textord").text;
    if (n === "\\begin") {
      if (!fl.hasOwnProperty(a))
        throw new U("No such environment: " + a, i);
      var o = fl[a], {
        args: l,
        optArgs: u
      } = r.parseArguments("\\begin{" + a + "}", o), d = {
        mode: r.mode,
        envName: a,
        parser: r
      }, p = o.handler(d, l, u);
      r.expect("\\end", !1);
      var b = r.nextToken, m = Se(r.parseFunction(), "environment");
      if (m.name !== a)
        throw new U("Mismatch: \\begin{" + a + "} matched by \\end{" + m.name + "}", b);
      return p;
    }
    return {
      type: "environment",
      mode: r.mode,
      name: a,
      nameGroup: i
    };
  }
});
var Eu = (e, t) => {
  var r = e.font, n = t.withFont(r);
  return Ae(e.body, n);
}, Au = (e, t) => {
  var r = e.font, n = t.withFont(r);
  return Be(e.body, n);
}, ml = {
  "\\Bbb": "\\mathbb",
  "\\bold": "\\mathbf",
  "\\frak": "\\mathfrak",
  "\\bm": "\\boldsymbol"
};
Q({
  type: "font",
  names: [
    // styles, except \boldsymbol defined below
    "\\mathrm",
    "\\mathit",
    "\\mathbf",
    "\\mathnormal",
    // families
    "\\mathbb",
    "\\mathcal",
    "\\mathfrak",
    "\\mathscr",
    "\\mathsf",
    "\\mathtt",
    // aliases, except \bm defined below
    "\\Bbb",
    "\\bold",
    "\\frak"
  ],
  props: {
    numArgs: 1,
    allowedInArgument: !0
  },
  handler: (e, t) => {
    var {
      parser: r,
      funcName: n
    } = e, i = va(t[0]), a = n;
    return a in ml && (a = ml[a]), {
      type: "font",
      mode: r.mode,
      font: a.slice(1),
      body: i
    };
  },
  htmlBuilder: Eu,
  mathmlBuilder: Au
});
Q({
  type: "mclass",
  names: ["\\boldsymbol", "\\bm"],
  props: {
    numArgs: 1
  },
  handler: (e, t) => {
    var {
      parser: r
    } = e, n = t[0], i = me.isCharacterBox(n);
    return {
      type: "mclass",
      mode: r.mode,
      mclass: Wa(n),
      body: [{
        type: "font",
        mode: r.mode,
        font: "boldsymbol",
        body: n
      }],
      isCharacterBox: i
    };
  }
});
Q({
  type: "font",
  names: ["\\rm", "\\sf", "\\tt", "\\bf", "\\it", "\\cal"],
  props: {
    numArgs: 0,
    allowedInText: !0
  },
  handler: (e, t) => {
    var {
      parser: r,
      funcName: n,
      breakOnTokenText: i
    } = e, {
      mode: a
    } = r, s = r.parseExpression(!0, i), o = "math" + n.slice(1);
    return {
      type: "font",
      mode: a,
      font: o,
      body: {
        type: "ordgroup",
        mode: r.mode,
        body: s
      }
    };
  },
  htmlBuilder: Eu,
  mathmlBuilder: Au
});
var Iu = (e, t) => {
  var r = t;
  return e === "display" ? r = r.id >= he.SCRIPT.id ? r.text() : he.DISPLAY : e === "text" && r.size === he.DISPLAY.size ? r = he.TEXT : e === "script" ? r = he.SCRIPT : e === "scriptscript" && (r = he.SCRIPTSCRIPT), r;
}, Zo = (e, t) => {
  var r = Iu(e.size, t.style), n = r.fracNum(), i = r.fracDen(), a;
  a = t.havingStyle(n);
  var s = Ae(e.numer, a, t);
  if (e.continued) {
    var o = 8.5 / t.fontMetrics().ptPerEm, l = 3.5 / t.fontMetrics().ptPerEm;
    s.height = s.height < o ? o : s.height, s.depth = s.depth < l ? l : s.depth;
  }
  a = t.havingStyle(i);
  var u = Ae(e.denom, a, t), d, p, b;
  e.hasBarLine ? (e.barSize ? (p = je(e.barSize, t), d = E.makeLineSpan("frac-line", t, p)) : d = E.makeLineSpan("frac-line", t), p = d.height, b = d.height) : (d = null, p = 0, b = t.fontMetrics().defaultRuleThickness);
  var m, _, k;
  r.size === he.DISPLAY.size || e.size === "display" ? (m = t.fontMetrics().num1, p > 0 ? _ = 3 * b : _ = 7 * b, k = t.fontMetrics().denom1) : (p > 0 ? (m = t.fontMetrics().num2, _ = b) : (m = t.fontMetrics().num3, _ = 3 * b), k = t.fontMetrics().denom2);
  var L;
  if (d) {
    var v = t.fontMetrics().axisHeight;
    m - s.depth - (v + 0.5 * p) < _ && (m += _ - (m - s.depth - (v + 0.5 * p))), v - 0.5 * p - (u.height - k) < _ && (k += _ - (v - 0.5 * p - (u.height - k)));
    var S = -(v - 0.5 * p);
    L = E.makeVList({
      positionType: "individualShift",
      children: [{
        type: "elem",
        elem: u,
        shift: k
      }, {
        type: "elem",
        elem: d,
        shift: S
      }, {
        type: "elem",
        elem: s,
        shift: -m
      }]
    }, t);
  } else {
    var A = m - s.depth - (u.height - k);
    A < _ && (m += 0.5 * (_ - A), k += 0.5 * (_ - A)), L = E.makeVList({
      positionType: "individualShift",
      children: [{
        type: "elem",
        elem: u,
        shift: k
      }, {
        type: "elem",
        elem: s,
        shift: -m
      }]
    }, t);
  }
  a = t.havingStyle(r), L.height *= a.sizeMultiplier / t.sizeMultiplier, L.depth *= a.sizeMultiplier / t.sizeMultiplier;
  var C;
  r.size === he.DISPLAY.size ? C = t.fontMetrics().delim1 : r.size === he.SCRIPTSCRIPT.size ? C = t.havingStyle(he.SCRIPT).fontMetrics().delim2 : C = t.fontMetrics().delim2;
  var I, R;
  return e.leftDelim == null ? I = ri(t, ["mopen"]) : I = yr.customSizedDelim(e.leftDelim, C, !0, t.havingStyle(r), e.mode, ["mopen"]), e.continued ? R = E.makeSpan([]) : e.rightDelim == null ? R = ri(t, ["mclose"]) : R = yr.customSizedDelim(e.rightDelim, C, !0, t.havingStyle(r), e.mode, ["mclose"]), E.makeSpan(["mord"].concat(a.sizingClasses(t)), [I, E.makeSpan(["mfrac"], [L]), R], t);
}, Jo = (e, t) => {
  var r = new z.MathNode("mfrac", [Be(e.numer, t), Be(e.denom, t)]);
  if (!e.hasBarLine)
    r.setAttribute("linethickness", "0px");
  else if (e.barSize) {
    var n = je(e.barSize, t);
    r.setAttribute("linethickness", j(n));
  }
  var i = Iu(e.size, t.style);
  if (i.size !== t.style.size) {
    r = new z.MathNode("mstyle", [r]);
    var a = i.size === he.DISPLAY.size ? "true" : "false";
    r.setAttribute("displaystyle", a), r.setAttribute("scriptlevel", "0");
  }
  if (e.leftDelim != null || e.rightDelim != null) {
    var s = [];
    if (e.leftDelim != null) {
      var o = new z.MathNode("mo", [new z.TextNode(e.leftDelim.replace("\\", ""))]);
      o.setAttribute("fence", "true"), s.push(o);
    }
    if (s.push(r), e.rightDelim != null) {
      var l = new z.MathNode("mo", [new z.TextNode(e.rightDelim.replace("\\", ""))]);
      l.setAttribute("fence", "true"), s.push(l);
    }
    return Ho(s);
  }
  return r;
};
Q({
  type: "genfrac",
  names: [
    "\\dfrac",
    "\\frac",
    "\\tfrac",
    "\\dbinom",
    "\\binom",
    "\\tbinom",
    "\\\\atopfrac",
    // can’t be entered directly
    "\\\\bracefrac",
    "\\\\brackfrac"
    // ditto
  ],
  props: {
    numArgs: 2,
    allowedInArgument: !0
  },
  handler: (e, t) => {
    var {
      parser: r,
      funcName: n
    } = e, i = t[0], a = t[1], s, o = null, l = null, u = "auto";
    switch (n) {
      case "\\dfrac":
      case "\\frac":
      case "\\tfrac":
        s = !0;
        break;
      case "\\\\atopfrac":
        s = !1;
        break;
      case "\\dbinom":
      case "\\binom":
      case "\\tbinom":
        s = !1, o = "(", l = ")";
        break;
      case "\\\\bracefrac":
        s = !1, o = "\\{", l = "\\}";
        break;
      case "\\\\brackfrac":
        s = !1, o = "[", l = "]";
        break;
      default:
        throw new Error("Unrecognized genfrac command");
    }
    switch (n) {
      case "\\dfrac":
      case "\\dbinom":
        u = "display";
        break;
      case "\\tfrac":
      case "\\tbinom":
        u = "text";
        break;
    }
    return {
      type: "genfrac",
      mode: r.mode,
      continued: !1,
      numer: i,
      denom: a,
      hasBarLine: s,
      leftDelim: o,
      rightDelim: l,
      size: u,
      barSize: null
    };
  },
  htmlBuilder: Zo,
  mathmlBuilder: Jo
});
Q({
  type: "genfrac",
  names: ["\\cfrac"],
  props: {
    numArgs: 2
  },
  handler: (e, t) => {
    var {
      parser: r,
      funcName: n
    } = e, i = t[0], a = t[1];
    return {
      type: "genfrac",
      mode: r.mode,
      continued: !0,
      numer: i,
      denom: a,
      hasBarLine: !0,
      leftDelim: null,
      rightDelim: null,
      size: "display",
      barSize: null
    };
  }
});
Q({
  type: "infix",
  names: ["\\over", "\\choose", "\\atop", "\\brace", "\\brack"],
  props: {
    numArgs: 0,
    infix: !0
  },
  handler(e) {
    var {
      parser: t,
      funcName: r,
      token: n
    } = e, i;
    switch (r) {
      case "\\over":
        i = "\\frac";
        break;
      case "\\choose":
        i = "\\binom";
        break;
      case "\\atop":
        i = "\\\\atopfrac";
        break;
      case "\\brace":
        i = "\\\\bracefrac";
        break;
      case "\\brack":
        i = "\\\\brackfrac";
        break;
      default:
        throw new Error("Unrecognized infix genfrac command");
    }
    return {
      type: "infix",
      mode: t.mode,
      replaceWith: i,
      token: n
    };
  }
});
var gl = ["display", "text", "script", "scriptscript"], bl = function(t) {
  var r = null;
  return t.length > 0 && (r = t, r = r === "." ? null : r), r;
};
Q({
  type: "genfrac",
  names: ["\\genfrac"],
  props: {
    numArgs: 6,
    allowedInArgument: !0,
    argTypes: ["math", "math", "size", "text", "math", "math"]
  },
  handler(e, t) {
    var {
      parser: r
    } = e, n = t[4], i = t[5], a = va(t[0]), s = a.type === "atom" && a.family === "open" ? bl(a.text) : null, o = va(t[1]), l = o.type === "atom" && o.family === "close" ? bl(o.text) : null, u = Se(t[2], "size"), d, p = null;
    u.isBlank ? d = !0 : (p = u.value, d = p.number > 0);
    var b = "auto", m = t[3];
    if (m.type === "ordgroup") {
      if (m.body.length > 0) {
        var _ = Se(m.body[0], "textord");
        b = gl[Number(_.text)];
      }
    } else
      m = Se(m, "textord"), b = gl[Number(m.text)];
    return {
      type: "genfrac",
      mode: r.mode,
      numer: n,
      denom: i,
      continued: !1,
      hasBarLine: d,
      barSize: p,
      leftDelim: s,
      rightDelim: l,
      size: b
    };
  },
  htmlBuilder: Zo,
  mathmlBuilder: Jo
});
Q({
  type: "infix",
  names: ["\\above"],
  props: {
    numArgs: 1,
    argTypes: ["size"],
    infix: !0
  },
  handler(e, t) {
    var {
      parser: r,
      funcName: n,
      token: i
    } = e;
    return {
      type: "infix",
      mode: r.mode,
      replaceWith: "\\\\abovefrac",
      size: Se(t[0], "size").value,
      token: i
    };
  }
});
Q({
  type: "genfrac",
  names: ["\\\\abovefrac"],
  props: {
    numArgs: 3,
    argTypes: ["math", "size", "math"]
  },
  handler: (e, t) => {
    var {
      parser: r,
      funcName: n
    } = e, i = t[0], a = Z1(Se(t[1], "infix").size), s = t[2], o = a.number > 0;
    return {
      type: "genfrac",
      mode: r.mode,
      numer: i,
      denom: s,
      continued: !1,
      hasBarLine: o,
      barSize: a,
      leftDelim: null,
      rightDelim: null,
      size: "auto"
    };
  },
  htmlBuilder: Zo,
  mathmlBuilder: Jo
});
var Ru = (e, t) => {
  var r = t.style, n, i;
  e.type === "supsub" ? (n = e.sup ? Ae(e.sup, t.havingStyle(r.sup()), t) : Ae(e.sub, t.havingStyle(r.sub()), t), i = Se(e.base, "horizBrace")) : i = Se(e, "horizBrace");
  var a = Ae(i.base, t.havingBaseStyle(he.DISPLAY)), s = Sr.svgSpan(i, t), o;
  if (i.isOver ? (o = E.makeVList({
    positionType: "firstBaseline",
    children: [{
      type: "elem",
      elem: a
    }, {
      type: "kern",
      size: 0.1
    }, {
      type: "elem",
      elem: s
    }]
  }, t), o.children[0].children[0].children[1].classes.push("svg-align")) : (o = E.makeVList({
    positionType: "bottom",
    positionData: a.depth + 0.1 + s.height,
    children: [{
      type: "elem",
      elem: s
    }, {
      type: "kern",
      size: 0.1
    }, {
      type: "elem",
      elem: a
    }]
  }, t), o.children[0].children[0].children[0].classes.push("svg-align")), n) {
    var l = E.makeSpan(["mord", i.isOver ? "mover" : "munder"], [o], t);
    i.isOver ? o = E.makeVList({
      positionType: "firstBaseline",
      children: [{
        type: "elem",
        elem: l
      }, {
        type: "kern",
        size: 0.2
      }, {
        type: "elem",
        elem: n
      }]
    }, t) : o = E.makeVList({
      positionType: "bottom",
      positionData: l.depth + 0.2 + n.height + n.depth,
      children: [{
        type: "elem",
        elem: n
      }, {
        type: "kern",
        size: 0.2
      }, {
        type: "elem",
        elem: l
      }]
    }, t);
  }
  return E.makeSpan(["mord", i.isOver ? "mover" : "munder"], [o], t);
}, wf = (e, t) => {
  var r = Sr.mathMLnode(e.label);
  return new z.MathNode(e.isOver ? "mover" : "munder", [Be(e.base, t), r]);
};
Q({
  type: "horizBrace",
  names: ["\\overbrace", "\\underbrace"],
  props: {
    numArgs: 1
  },
  handler(e, t) {
    var {
      parser: r,
      funcName: n
    } = e;
    return {
      type: "horizBrace",
      mode: r.mode,
      label: n,
      isOver: /^\\over/.test(n),
      base: t[0]
    };
  },
  htmlBuilder: Ru,
  mathmlBuilder: wf
});
Q({
  type: "href",
  names: ["\\href"],
  props: {
    numArgs: 2,
    argTypes: ["url", "original"],
    allowedInText: !0
  },
  handler: (e, t) => {
    var {
      parser: r
    } = e, n = t[1], i = Se(t[0], "url").url;
    return r.settings.isTrusted({
      command: "\\href",
      url: i
    }) ? {
      type: "href",
      mode: r.mode,
      href: i,
      body: Ye(n)
    } : r.formatUnsupportedCmd("\\href");
  },
  htmlBuilder: (e, t) => {
    var r = Qe(e.body, t, !1);
    return E.makeAnchor(e.href, [], r, t);
  },
  mathmlBuilder: (e, t) => {
    var r = Ur(e.body, t);
    return r instanceof Lt || (r = new Lt("mrow", [r])), r.setAttribute("href", e.href), r;
  }
});
Q({
  type: "href",
  names: ["\\url"],
  props: {
    numArgs: 1,
    argTypes: ["url"],
    allowedInText: !0
  },
  handler: (e, t) => {
    var {
      parser: r
    } = e, n = Se(t[0], "url").url;
    if (!r.settings.isTrusted({
      command: "\\url",
      url: n
    }))
      return r.formatUnsupportedCmd("\\url");
    for (var i = [], a = 0; a < n.length; a++) {
      var s = n[a];
      s === "~" && (s = "\\textasciitilde"), i.push({
        type: "textord",
        mode: "text",
        text: s
      });
    }
    var o = {
      type: "text",
      mode: r.mode,
      font: "\\texttt",
      body: i
    };
    return {
      type: "href",
      mode: r.mode,
      href: n,
      body: Ye(o)
    };
  }
});
Q({
  type: "hbox",
  names: ["\\hbox"],
  props: {
    numArgs: 1,
    argTypes: ["text"],
    allowedInText: !0,
    primitive: !0
  },
  handler(e, t) {
    var {
      parser: r
    } = e;
    return {
      type: "hbox",
      mode: r.mode,
      body: Ye(t[0])
    };
  },
  htmlBuilder(e, t) {
    var r = Qe(e.body, t, !1);
    return E.makeFragment(r);
  },
  mathmlBuilder(e, t) {
    return new z.MathNode("mrow", kt(e.body, t));
  }
});
Q({
  type: "html",
  names: ["\\htmlClass", "\\htmlId", "\\htmlStyle", "\\htmlData"],
  props: {
    numArgs: 2,
    argTypes: ["raw", "original"],
    allowedInText: !0
  },
  handler: (e, t) => {
    var {
      parser: r,
      funcName: n,
      token: i
    } = e, a = Se(t[0], "raw").string, s = t[1];
    r.settings.strict && r.settings.reportNonstrict("htmlExtension", "HTML extension is disabled on strict mode");
    var o, l = {};
    switch (n) {
      case "\\htmlClass":
        l.class = a, o = {
          command: "\\htmlClass",
          class: a
        };
        break;
      case "\\htmlId":
        l.id = a, o = {
          command: "\\htmlId",
          id: a
        };
        break;
      case "\\htmlStyle":
        l.style = a, o = {
          command: "\\htmlStyle",
          style: a
        };
        break;
      case "\\htmlData": {
        for (var u = a.split(","), d = 0; d < u.length; d++) {
          var p = u[d].split("=");
          if (p.length !== 2)
            throw new U("Error parsing key-value for \\htmlData");
          l["data-" + p[0].trim()] = p[1].trim();
        }
        o = {
          command: "\\htmlData",
          attributes: l
        };
        break;
      }
      default:
        throw new Error("Unrecognized html command");
    }
    return r.settings.isTrusted(o) ? {
      type: "html",
      mode: r.mode,
      attributes: l,
      body: Ye(s)
    } : r.formatUnsupportedCmd(n);
  },
  htmlBuilder: (e, t) => {
    var r = Qe(e.body, t, !1), n = ["enclosing"];
    e.attributes.class && n.push(...e.attributes.class.trim().split(/\s+/));
    var i = E.makeSpan(n, r, t);
    for (var a in e.attributes)
      a !== "class" && e.attributes.hasOwnProperty(a) && i.setAttribute(a, e.attributes[a]);
    return i;
  },
  mathmlBuilder: (e, t) => Ur(e.body, t)
});
Q({
  type: "htmlmathml",
  names: ["\\html@mathml"],
  props: {
    numArgs: 2,
    allowedInText: !0
  },
  handler: (e, t) => {
    var {
      parser: r
    } = e;
    return {
      type: "htmlmathml",
      mode: r.mode,
      html: Ye(t[0]),
      mathml: Ye(t[1])
    };
  },
  htmlBuilder: (e, t) => {
    var r = Qe(e.html, t, !1);
    return E.makeFragment(r);
  },
  mathmlBuilder: (e, t) => Ur(e.mathml, t)
});
var Ns = function(t) {
  if (/^[-+]? *(\d+(\.\d*)?|\.\d+)$/.test(t))
    return {
      number: +t,
      unit: "bp"
    };
  var r = /([-+]?) *(\d+(?:\.\d*)?|\.\d+) *([a-z]{2})/.exec(t);
  if (!r)
    throw new U("Invalid size: '" + t + "' in \\includegraphics");
  var n = {
    number: +(r[1] + r[2]),
    // sign + magnitude, cast to number
    unit: r[3]
  };
  if (!Xc(n))
    throw new U("Invalid unit: '" + n.unit + "' in \\includegraphics.");
  return n;
};
Q({
  type: "includegraphics",
  names: ["\\includegraphics"],
  props: {
    numArgs: 1,
    numOptionalArgs: 1,
    argTypes: ["raw", "url"],
    allowedInText: !1
  },
  handler: (e, t, r) => {
    var {
      parser: n
    } = e, i = {
      number: 0,
      unit: "em"
    }, a = {
      number: 0.9,
      unit: "em"
    }, s = {
      number: 0,
      unit: "em"
    }, o = "";
    if (r[0])
      for (var l = Se(r[0], "raw").string, u = l.split(","), d = 0; d < u.length; d++) {
        var p = u[d].split("=");
        if (p.length === 2) {
          var b = p[1].trim();
          switch (p[0].trim()) {
            case "alt":
              o = b;
              break;
            case "width":
              i = Ns(b);
              break;
            case "height":
              a = Ns(b);
              break;
            case "totalheight":
              s = Ns(b);
              break;
            default:
              throw new U("Invalid key: '" + p[0] + "' in \\includegraphics.");
          }
        }
      }
    var m = Se(t[0], "url").url;
    return o === "" && (o = m, o = o.replace(/^.*[\\/]/, ""), o = o.substring(0, o.lastIndexOf("."))), n.settings.isTrusted({
      command: "\\includegraphics",
      url: m
    }) ? {
      type: "includegraphics",
      mode: n.mode,
      alt: o,
      width: i,
      height: a,
      totalheight: s,
      src: m
    } : n.formatUnsupportedCmd("\\includegraphics");
  },
  htmlBuilder: (e, t) => {
    var r = je(e.height, t), n = 0;
    e.totalheight.number > 0 && (n = je(e.totalheight, t) - r);
    var i = 0;
    e.width.number > 0 && (i = je(e.width, t));
    var a = {
      height: j(r + n)
    };
    i > 0 && (a.width = j(i)), n > 0 && (a.verticalAlign = j(-n));
    var s = new _p(e.src, e.alt, a);
    return s.height = r, s.depth = n, s;
  },
  mathmlBuilder: (e, t) => {
    var r = new z.MathNode("mglyph", []);
    r.setAttribute("alt", e.alt);
    var n = je(e.height, t), i = 0;
    if (e.totalheight.number > 0 && (i = je(e.totalheight, t) - n, r.setAttribute("valign", j(-i))), r.setAttribute("height", j(n + i)), e.width.number > 0) {
      var a = je(e.width, t);
      r.setAttribute("width", j(a));
    }
    return r.setAttribute("src", e.src), r;
  }
});
Q({
  type: "kern",
  names: ["\\kern", "\\mkern", "\\hskip", "\\mskip"],
  props: {
    numArgs: 1,
    argTypes: ["size"],
    primitive: !0,
    allowedInText: !0
  },
  handler(e, t) {
    var {
      parser: r,
      funcName: n
    } = e, i = Se(t[0], "size");
    if (r.settings.strict) {
      var a = n[1] === "m", s = i.value.unit === "mu";
      a ? (s || r.settings.reportNonstrict("mathVsTextUnits", "LaTeX's " + n + " supports only mu units, " + ("not " + i.value.unit + " units")), r.mode !== "math" && r.settings.reportNonstrict("mathVsTextUnits", "LaTeX's " + n + " works only in math mode")) : s && r.settings.reportNonstrict("mathVsTextUnits", "LaTeX's " + n + " doesn't support mu units");
    }
    return {
      type: "kern",
      mode: r.mode,
      dimension: i.value
    };
  },
  htmlBuilder(e, t) {
    return E.makeGlue(e.dimension, t);
  },
  mathmlBuilder(e, t) {
    var r = je(e.dimension, t);
    return new z.SpaceNode(r);
  }
});
Q({
  type: "lap",
  names: ["\\mathllap", "\\mathrlap", "\\mathclap"],
  props: {
    numArgs: 1,
    allowedInText: !0
  },
  handler: (e, t) => {
    var {
      parser: r,
      funcName: n
    } = e, i = t[0];
    return {
      type: "lap",
      mode: r.mode,
      alignment: n.slice(5),
      body: i
    };
  },
  htmlBuilder: (e, t) => {
    var r;
    e.alignment === "clap" ? (r = E.makeSpan([], [Ae(e.body, t)]), r = E.makeSpan(["inner"], [r], t)) : r = E.makeSpan(["inner"], [Ae(e.body, t)]);
    var n = E.makeSpan(["fix"], []), i = E.makeSpan([e.alignment], [r, n], t), a = E.makeSpan(["strut"]);
    return a.style.height = j(i.height + i.depth), i.depth && (a.style.verticalAlign = j(-i.depth)), i.children.unshift(a), i = E.makeSpan(["thinbox"], [i], t), E.makeSpan(["mord", "vbox"], [i], t);
  },
  mathmlBuilder: (e, t) => {
    var r = new z.MathNode("mpadded", [Be(e.body, t)]);
    if (e.alignment !== "rlap") {
      var n = e.alignment === "llap" ? "-1" : "-0.5";
      r.setAttribute("lspace", n + "width");
    }
    return r.setAttribute("width", "0px"), r;
  }
});
Q({
  type: "styling",
  names: ["\\(", "$"],
  props: {
    numArgs: 0,
    allowedInText: !0,
    allowedInMath: !1
  },
  handler(e, t) {
    var {
      funcName: r,
      parser: n
    } = e, i = n.mode;
    n.switchMode("math");
    var a = r === "\\(" ? "\\)" : "$", s = n.parseExpression(!1, a);
    return n.expect(a), n.switchMode(i), {
      type: "styling",
      mode: n.mode,
      style: "text",
      body: s
    };
  }
});
Q({
  type: "text",
  // Doesn't matter what this is.
  names: ["\\)", "\\]"],
  props: {
    numArgs: 0,
    allowedInText: !0,
    allowedInMath: !1
  },
  handler(e, t) {
    throw new U("Mismatched " + e.funcName);
  }
});
var vl = (e, t) => {
  switch (t.style.size) {
    case he.DISPLAY.size:
      return e.display;
    case he.TEXT.size:
      return e.text;
    case he.SCRIPT.size:
      return e.script;
    case he.SCRIPTSCRIPT.size:
      return e.scriptscript;
    default:
      return e.text;
  }
};
Q({
  type: "mathchoice",
  names: ["\\mathchoice"],
  props: {
    numArgs: 4,
    primitive: !0
  },
  handler: (e, t) => {
    var {
      parser: r
    } = e;
    return {
      type: "mathchoice",
      mode: r.mode,
      display: Ye(t[0]),
      text: Ye(t[1]),
      script: Ye(t[2]),
      scriptscript: Ye(t[3])
    };
  },
  htmlBuilder: (e, t) => {
    var r = vl(e, t), n = Qe(r, t, !1);
    return E.makeFragment(n);
  },
  mathmlBuilder: (e, t) => {
    var r = vl(e, t);
    return Ur(r, t);
  }
});
var Lu = (e, t, r, n, i, a, s) => {
  e = E.makeSpan([], [e]);
  var o = r && me.isCharacterBox(r), l, u;
  if (t) {
    var d = Ae(t, n.havingStyle(i.sup()), n);
    u = {
      elem: d,
      kern: Math.max(n.fontMetrics().bigOpSpacing1, n.fontMetrics().bigOpSpacing3 - d.depth)
    };
  }
  if (r) {
    var p = Ae(r, n.havingStyle(i.sub()), n);
    l = {
      elem: p,
      kern: Math.max(n.fontMetrics().bigOpSpacing2, n.fontMetrics().bigOpSpacing4 - p.height)
    };
  }
  var b;
  if (u && l) {
    var m = n.fontMetrics().bigOpSpacing5 + l.elem.height + l.elem.depth + l.kern + e.depth + s;
    b = E.makeVList({
      positionType: "bottom",
      positionData: m,
      children: [{
        type: "kern",
        size: n.fontMetrics().bigOpSpacing5
      }, {
        type: "elem",
        elem: l.elem,
        marginLeft: j(-a)
      }, {
        type: "kern",
        size: l.kern
      }, {
        type: "elem",
        elem: e
      }, {
        type: "kern",
        size: u.kern
      }, {
        type: "elem",
        elem: u.elem,
        marginLeft: j(a)
      }, {
        type: "kern",
        size: n.fontMetrics().bigOpSpacing5
      }]
    }, n);
  } else if (l) {
    var _ = e.height - s;
    b = E.makeVList({
      positionType: "top",
      positionData: _,
      children: [{
        type: "kern",
        size: n.fontMetrics().bigOpSpacing5
      }, {
        type: "elem",
        elem: l.elem,
        marginLeft: j(-a)
      }, {
        type: "kern",
        size: l.kern
      }, {
        type: "elem",
        elem: e
      }]
    }, n);
  } else if (u) {
    var k = e.depth + s;
    b = E.makeVList({
      positionType: "bottom",
      positionData: k,
      children: [{
        type: "elem",
        elem: e
      }, {
        type: "kern",
        size: u.kern
      }, {
        type: "elem",
        elem: u.elem,
        marginLeft: j(a)
      }, {
        type: "kern",
        size: n.fontMetrics().bigOpSpacing5
      }]
    }, n);
  } else
    return e;
  var L = [b];
  if (l && a !== 0 && !o) {
    var A = E.makeSpan(["mspace"], [], n);
    A.style.marginRight = j(a), L.unshift(A);
  }
  return E.makeSpan(["mop", "op-limits"], L, n);
}, Ou = ["\\smallint"], Bn = (e, t) => {
  var r, n, i = !1, a;
  e.type === "supsub" ? (r = e.sup, n = e.sub, a = Se(e.base, "op"), i = !0) : a = Se(e, "op");
  var s = t.style, o = !1;
  s.size === he.DISPLAY.size && a.symbol && !me.contains(Ou, a.name) && (o = !0);
  var l;
  if (a.symbol) {
    var u = o ? "Size2-Regular" : "Size1-Regular", d = "";
    if ((a.name === "\\oiint" || a.name === "\\oiiint") && (d = a.name.slice(1), a.name = d === "oiint" ? "\\iint" : "\\iiint"), l = E.makeSymbol(a.name, u, "math", t, ["mop", "op-symbol", o ? "large-op" : "small-op"]), d.length > 0) {
      var p = l.italic, b = E.staticSvg(d + "Size" + (o ? "2" : "1"), t);
      l = E.makeVList({
        positionType: "individualShift",
        children: [{
          type: "elem",
          elem: l,
          shift: 0
        }, {
          type: "elem",
          elem: b,
          shift: o ? 0.08 : 0
        }]
      }, t), a.name = "\\" + d, l.classes.unshift("mop"), l.italic = p;
    }
  } else if (a.body) {
    var m = Qe(a.body, t, !0);
    m.length === 1 && m[0] instanceof Mt ? (l = m[0], l.classes[0] = "mop") : l = E.makeSpan(["mop"], m, t);
  } else {
    for (var _ = [], k = 1; k < a.name.length; k++)
      _.push(E.mathsym(a.name[k], a.mode, t));
    l = E.makeSpan(["mop"], _, t);
  }
  var L = 0, A = 0;
  return (l instanceof Mt || a.name === "\\oiint" || a.name === "\\oiiint") && !a.suppressBaseShift && (L = (l.height - l.depth) / 2 - t.fontMetrics().axisHeight, A = l.italic), i ? Lu(l, r, n, t, s, A, L) : (L && (l.style.position = "relative", l.style.top = j(L)), l);
}, gi = (e, t) => {
  var r;
  if (e.symbol)
    r = new Lt("mo", [Bt(e.name, e.mode)]), me.contains(Ou, e.name) && r.setAttribute("largeop", "false");
  else if (e.body)
    r = new Lt("mo", kt(e.body, t));
  else {
    r = new Lt("mi", [new Xn(e.name.slice(1))]);
    var n = new Lt("mo", [Bt("⁡", "text")]);
    e.parentIsSupSub ? r = new Lt("mrow", [r, n]) : r = su([r, n]);
  }
  return r;
}, Sf = {
  "∏": "\\prod",
  "∐": "\\coprod",
  "∑": "\\sum",
  "⋀": "\\bigwedge",
  "⋁": "\\bigvee",
  "⋂": "\\bigcap",
  "⋃": "\\bigcup",
  "⨀": "\\bigodot",
  "⨁": "\\bigoplus",
  "⨂": "\\bigotimes",
  "⨄": "\\biguplus",
  "⨆": "\\bigsqcup"
};
Q({
  type: "op",
  names: ["\\coprod", "\\bigvee", "\\bigwedge", "\\biguplus", "\\bigcap", "\\bigcup", "\\intop", "\\prod", "\\sum", "\\bigotimes", "\\bigoplus", "\\bigodot", "\\bigsqcup", "\\smallint", "∏", "∐", "∑", "⋀", "⋁", "⋂", "⋃", "⨀", "⨁", "⨂", "⨄", "⨆"],
  props: {
    numArgs: 0
  },
  handler: (e, t) => {
    var {
      parser: r,
      funcName: n
    } = e, i = n;
    return i.length === 1 && (i = Sf[i]), {
      type: "op",
      mode: r.mode,
      limits: !0,
      parentIsSupSub: !1,
      symbol: !0,
      name: i
    };
  },
  htmlBuilder: Bn,
  mathmlBuilder: gi
});
Q({
  type: "op",
  names: ["\\mathop"],
  props: {
    numArgs: 1,
    primitive: !0
  },
  handler: (e, t) => {
    var {
      parser: r
    } = e, n = t[0];
    return {
      type: "op",
      mode: r.mode,
      limits: !1,
      parentIsSupSub: !1,
      symbol: !1,
      body: Ye(n)
    };
  },
  htmlBuilder: Bn,
  mathmlBuilder: gi
});
var kf = {
  "∫": "\\int",
  "∬": "\\iint",
  "∭": "\\iiint",
  "∮": "\\oint",
  "∯": "\\oiint",
  "∰": "\\oiiint"
};
Q({
  type: "op",
  names: ["\\arcsin", "\\arccos", "\\arctan", "\\arctg", "\\arcctg", "\\arg", "\\ch", "\\cos", "\\cosec", "\\cosh", "\\cot", "\\cotg", "\\coth", "\\csc", "\\ctg", "\\cth", "\\deg", "\\dim", "\\exp", "\\hom", "\\ker", "\\lg", "\\ln", "\\log", "\\sec", "\\sin", "\\sinh", "\\sh", "\\tan", "\\tanh", "\\tg", "\\th"],
  props: {
    numArgs: 0
  },
  handler(e) {
    var {
      parser: t,
      funcName: r
    } = e;
    return {
      type: "op",
      mode: t.mode,
      limits: !1,
      parentIsSupSub: !1,
      symbol: !1,
      name: r
    };
  },
  htmlBuilder: Bn,
  mathmlBuilder: gi
});
Q({
  type: "op",
  names: ["\\det", "\\gcd", "\\inf", "\\lim", "\\max", "\\min", "\\Pr", "\\sup"],
  props: {
    numArgs: 0
  },
  handler(e) {
    var {
      parser: t,
      funcName: r
    } = e;
    return {
      type: "op",
      mode: t.mode,
      limits: !0,
      parentIsSupSub: !1,
      symbol: !1,
      name: r
    };
  },
  htmlBuilder: Bn,
  mathmlBuilder: gi
});
Q({
  type: "op",
  names: ["\\int", "\\iint", "\\iiint", "\\oint", "\\oiint", "\\oiiint", "∫", "∬", "∭", "∮", "∯", "∰"],
  props: {
    numArgs: 0
  },
  handler(e) {
    var {
      parser: t,
      funcName: r
    } = e, n = r;
    return n.length === 1 && (n = kf[n]), {
      type: "op",
      mode: t.mode,
      limits: !1,
      parentIsSupSub: !1,
      symbol: !0,
      name: n
    };
  },
  htmlBuilder: Bn,
  mathmlBuilder: gi
});
var Nu = (e, t) => {
  var r, n, i = !1, a;
  e.type === "supsub" ? (r = e.sup, n = e.sub, a = Se(e.base, "operatorname"), i = !0) : a = Se(e, "operatorname");
  var s;
  if (a.body.length > 0) {
    for (var o = a.body.map((p) => {
      var b = p.text;
      return typeof b == "string" ? {
        type: "textord",
        mode: p.mode,
        text: b
      } : p;
    }), l = Qe(o, t.withFont("mathrm"), !0), u = 0; u < l.length; u++) {
      var d = l[u];
      d instanceof Mt && (d.text = d.text.replace(/\u2212/, "-").replace(/\u2217/, "*"));
    }
    s = E.makeSpan(["mop"], l, t);
  } else
    s = E.makeSpan(["mop"], [], t);
  return i ? Lu(s, r, n, t, t.style, 0, 0) : s;
}, Tf = (e, t) => {
  for (var r = kt(e.body, t.withFont("mathrm")), n = !0, i = 0; i < r.length; i++) {
    var a = r[i];
    if (!(a instanceof z.SpaceNode))
      if (a instanceof z.MathNode)
        switch (a.type) {
          case "mi":
          case "mn":
          case "ms":
          case "mspace":
          case "mtext":
            break;
          case "mo": {
            var s = a.children[0];
            a.children.length === 1 && s instanceof z.TextNode ? s.text = s.text.replace(/\u2212/, "-").replace(/\u2217/, "*") : n = !1;
            break;
          }
          default:
            n = !1;
        }
      else
        n = !1;
  }
  if (n) {
    var o = r.map((d) => d.toText()).join("");
    r = [new z.TextNode(o)];
  }
  var l = new z.MathNode("mi", r);
  l.setAttribute("mathvariant", "normal");
  var u = new z.MathNode("mo", [Bt("⁡", "text")]);
  return e.parentIsSupSub ? new z.MathNode("mrow", [l, u]) : z.newDocumentFragment([l, u]);
};
Q({
  type: "operatorname",
  names: ["\\operatorname@", "\\operatornamewithlimits"],
  props: {
    numArgs: 1
  },
  handler: (e, t) => {
    var {
      parser: r,
      funcName: n
    } = e, i = t[0];
    return {
      type: "operatorname",
      mode: r.mode,
      body: Ye(i),
      alwaysHandleSupSub: n === "\\operatornamewithlimits",
      limits: !1,
      parentIsSupSub: !1
    };
  },
  htmlBuilder: Nu,
  mathmlBuilder: Tf
});
g("\\operatorname", "\\@ifstar\\operatornamewithlimits\\operatorname@");
un({
  type: "ordgroup",
  htmlBuilder(e, t) {
    return e.semisimple ? E.makeFragment(Qe(e.body, t, !1)) : E.makeSpan(["mord"], Qe(e.body, t, !0), t);
  },
  mathmlBuilder(e, t) {
    return Ur(e.body, t, !0);
  }
});
Q({
  type: "overline",
  names: ["\\overline"],
  props: {
    numArgs: 1
  },
  handler(e, t) {
    var {
      parser: r
    } = e, n = t[0];
    return {
      type: "overline",
      mode: r.mode,
      body: n
    };
  },
  htmlBuilder(e, t) {
    var r = Ae(e.body, t.havingCrampedStyle()), n = E.makeLineSpan("overline-line", t), i = t.fontMetrics().defaultRuleThickness, a = E.makeVList({
      positionType: "firstBaseline",
      children: [{
        type: "elem",
        elem: r
      }, {
        type: "kern",
        size: 3 * i
      }, {
        type: "elem",
        elem: n
      }, {
        type: "kern",
        size: i
      }]
    }, t);
    return E.makeSpan(["mord", "overline"], [a], t);
  },
  mathmlBuilder(e, t) {
    var r = new z.MathNode("mo", [new z.TextNode("‾")]);
    r.setAttribute("stretchy", "true");
    var n = new z.MathNode("mover", [Be(e.body, t), r]);
    return n.setAttribute("accent", "true"), n;
  }
});
Q({
  type: "phantom",
  names: ["\\phantom"],
  props: {
    numArgs: 1,
    allowedInText: !0
  },
  handler: (e, t) => {
    var {
      parser: r
    } = e, n = t[0];
    return {
      type: "phantom",
      mode: r.mode,
      body: Ye(n)
    };
  },
  htmlBuilder: (e, t) => {
    var r = Qe(e.body, t.withPhantom(), !1);
    return E.makeFragment(r);
  },
  mathmlBuilder: (e, t) => {
    var r = kt(e.body, t);
    return new z.MathNode("mphantom", r);
  }
});
Q({
  type: "hphantom",
  names: ["\\hphantom"],
  props: {
    numArgs: 1,
    allowedInText: !0
  },
  handler: (e, t) => {
    var {
      parser: r
    } = e, n = t[0];
    return {
      type: "hphantom",
      mode: r.mode,
      body: n
    };
  },
  htmlBuilder: (e, t) => {
    var r = E.makeSpan([], [Ae(e.body, t.withPhantom())]);
    if (r.height = 0, r.depth = 0, r.children)
      for (var n = 0; n < r.children.length; n++)
        r.children[n].height = 0, r.children[n].depth = 0;
    return r = E.makeVList({
      positionType: "firstBaseline",
      children: [{
        type: "elem",
        elem: r
      }]
    }, t), E.makeSpan(["mord"], [r], t);
  },
  mathmlBuilder: (e, t) => {
    var r = kt(Ye(e.body), t), n = new z.MathNode("mphantom", r), i = new z.MathNode("mpadded", [n]);
    return i.setAttribute("height", "0px"), i.setAttribute("depth", "0px"), i;
  }
});
Q({
  type: "vphantom",
  names: ["\\vphantom"],
  props: {
    numArgs: 1,
    allowedInText: !0
  },
  handler: (e, t) => {
    var {
      parser: r
    } = e, n = t[0];
    return {
      type: "vphantom",
      mode: r.mode,
      body: n
    };
  },
  htmlBuilder: (e, t) => {
    var r = E.makeSpan(["inner"], [Ae(e.body, t.withPhantom())]), n = E.makeSpan(["fix"], []);
    return E.makeSpan(["mord", "rlap"], [r, n], t);
  },
  mathmlBuilder: (e, t) => {
    var r = kt(Ye(e.body), t), n = new z.MathNode("mphantom", r), i = new z.MathNode("mpadded", [n]);
    return i.setAttribute("width", "0px"), i;
  }
});
Q({
  type: "raisebox",
  names: ["\\raisebox"],
  props: {
    numArgs: 2,
    argTypes: ["size", "hbox"],
    allowedInText: !0
  },
  handler(e, t) {
    var {
      parser: r
    } = e, n = Se(t[0], "size").value, i = t[1];
    return {
      type: "raisebox",
      mode: r.mode,
      dy: n,
      body: i
    };
  },
  htmlBuilder(e, t) {
    var r = Ae(e.body, t), n = je(e.dy, t);
    return E.makeVList({
      positionType: "shift",
      positionData: -n,
      children: [{
        type: "elem",
        elem: r
      }]
    }, t);
  },
  mathmlBuilder(e, t) {
    var r = new z.MathNode("mpadded", [Be(e.body, t)]), n = e.dy.number + e.dy.unit;
    return r.setAttribute("voffset", n), r;
  }
});
Q({
  type: "internal",
  names: ["\\relax"],
  props: {
    numArgs: 0,
    allowedInText: !0
  },
  handler(e) {
    var {
      parser: t
    } = e;
    return {
      type: "internal",
      mode: t.mode
    };
  }
});
Q({
  type: "rule",
  names: ["\\rule"],
  props: {
    numArgs: 2,
    numOptionalArgs: 1,
    argTypes: ["size", "size", "size"]
  },
  handler(e, t, r) {
    var {
      parser: n
    } = e, i = r[0], a = Se(t[0], "size"), s = Se(t[1], "size");
    return {
      type: "rule",
      mode: n.mode,
      shift: i && Se(i, "size").value,
      width: a.value,
      height: s.value
    };
  },
  htmlBuilder(e, t) {
    var r = E.makeSpan(["mord", "rule"], [], t), n = je(e.width, t), i = je(e.height, t), a = e.shift ? je(e.shift, t) : 0;
    return r.style.borderRightWidth = j(n), r.style.borderTopWidth = j(i), r.style.bottom = j(a), r.width = n, r.height = i + a, r.depth = -a, r.maxFontSize = i * 1.125 * t.sizeMultiplier, r;
  },
  mathmlBuilder(e, t) {
    var r = je(e.width, t), n = je(e.height, t), i = e.shift ? je(e.shift, t) : 0, a = t.color && t.getColor() || "black", s = new z.MathNode("mspace");
    s.setAttribute("mathbackground", a), s.setAttribute("width", j(r)), s.setAttribute("height", j(n));
    var o = new z.MathNode("mpadded", [s]);
    return i >= 0 ? o.setAttribute("height", j(i)) : (o.setAttribute("height", j(i)), o.setAttribute("depth", j(-i))), o.setAttribute("voffset", j(i)), o;
  }
});
function Mu(e, t, r) {
  for (var n = Qe(e, t, !1), i = t.sizeMultiplier / r.sizeMultiplier, a = 0; a < n.length; a++) {
    var s = n[a].classes.indexOf("sizing");
    s < 0 ? Array.prototype.push.apply(n[a].classes, t.sizingClasses(r)) : n[a].classes[s + 1] === "reset-size" + t.size && (n[a].classes[s + 1] = "reset-size" + r.size), n[a].height *= i, n[a].depth *= i;
  }
  return E.makeFragment(n);
}
var yl = ["\\tiny", "\\sixptsize", "\\scriptsize", "\\footnotesize", "\\small", "\\normalsize", "\\large", "\\Large", "\\LARGE", "\\huge", "\\Huge"], Cf = (e, t) => {
  var r = t.havingSize(e.size);
  return Mu(e.body, r, t);
};
Q({
  type: "sizing",
  names: yl,
  props: {
    numArgs: 0,
    allowedInText: !0
  },
  handler: (e, t) => {
    var {
      breakOnTokenText: r,
      funcName: n,
      parser: i
    } = e, a = i.parseExpression(!1, r);
    return {
      type: "sizing",
      mode: i.mode,
      // Figure out what size to use based on the list of functions above
      size: yl.indexOf(n) + 1,
      body: a
    };
  },
  htmlBuilder: Cf,
  mathmlBuilder: (e, t) => {
    var r = t.havingSize(e.size), n = kt(e.body, r), i = new z.MathNode("mstyle", n);
    return i.setAttribute("mathsize", j(r.sizeMultiplier)), i;
  }
});
Q({
  type: "smash",
  names: ["\\smash"],
  props: {
    numArgs: 1,
    numOptionalArgs: 1,
    allowedInText: !0
  },
  handler: (e, t, r) => {
    var {
      parser: n
    } = e, i = !1, a = !1, s = r[0] && Se(r[0], "ordgroup");
    if (s)
      for (var o = "", l = 0; l < s.body.length; ++l) {
        var u = s.body[l];
        if (o = u.text, o === "t")
          i = !0;
        else if (o === "b")
          a = !0;
        else {
          i = !1, a = !1;
          break;
        }
      }
    else
      i = !0, a = !0;
    var d = t[0];
    return {
      type: "smash",
      mode: n.mode,
      body: d,
      smashHeight: i,
      smashDepth: a
    };
  },
  htmlBuilder: (e, t) => {
    var r = E.makeSpan([], [Ae(e.body, t)]);
    if (!e.smashHeight && !e.smashDepth)
      return r;
    if (e.smashHeight && (r.height = 0, r.children))
      for (var n = 0; n < r.children.length; n++)
        r.children[n].height = 0;
    if (e.smashDepth && (r.depth = 0, r.children))
      for (var i = 0; i < r.children.length; i++)
        r.children[i].depth = 0;
    var a = E.makeVList({
      positionType: "firstBaseline",
      children: [{
        type: "elem",
        elem: r
      }]
    }, t);
    return E.makeSpan(["mord"], [a], t);
  },
  mathmlBuilder: (e, t) => {
    var r = new z.MathNode("mpadded", [Be(e.body, t)]);
    return e.smashHeight && r.setAttribute("height", "0px"), e.smashDepth && r.setAttribute("depth", "0px"), r;
  }
});
Q({
  type: "sqrt",
  names: ["\\sqrt"],
  props: {
    numArgs: 1,
    numOptionalArgs: 1
  },
  handler(e, t, r) {
    var {
      parser: n
    } = e, i = r[0], a = t[0];
    return {
      type: "sqrt",
      mode: n.mode,
      body: a,
      index: i
    };
  },
  htmlBuilder(e, t) {
    var r = Ae(e.body, t.havingCrampedStyle());
    r.height === 0 && (r.height = t.fontMetrics().xHeight), r = E.wrapFragment(r, t);
    var n = t.fontMetrics(), i = n.defaultRuleThickness, a = i;
    t.style.id < he.TEXT.id && (a = t.fontMetrics().xHeight);
    var s = i + a / 4, o = r.height + r.depth + s + i, {
      span: l,
      ruleWidth: u,
      advanceWidth: d
    } = yr.sqrtImage(o, t), p = l.height - u;
    p > r.height + r.depth + s && (s = (s + p - r.height - r.depth) / 2);
    var b = l.height - r.height - s - u;
    r.style.paddingLeft = j(d);
    var m = E.makeVList({
      positionType: "firstBaseline",
      children: [{
        type: "elem",
        elem: r,
        wrapperClasses: ["svg-align"]
      }, {
        type: "kern",
        size: -(r.height + b)
      }, {
        type: "elem",
        elem: l
      }, {
        type: "kern",
        size: u
      }]
    }, t);
    if (e.index) {
      var _ = t.havingStyle(he.SCRIPTSCRIPT), k = Ae(e.index, _, t), L = 0.6 * (m.height - m.depth), A = E.makeVList({
        positionType: "shift",
        positionData: -L,
        children: [{
          type: "elem",
          elem: k
        }]
      }, t), v = E.makeSpan(["root"], [A]);
      return E.makeSpan(["mord", "sqrt"], [v, m], t);
    } else
      return E.makeSpan(["mord", "sqrt"], [m], t);
  },
  mathmlBuilder(e, t) {
    var {
      body: r,
      index: n
    } = e;
    return n ? new z.MathNode("mroot", [Be(r, t), Be(n, t)]) : new z.MathNode("msqrt", [Be(r, t)]);
  }
});
var xl = {
  display: he.DISPLAY,
  text: he.TEXT,
  script: he.SCRIPT,
  scriptscript: he.SCRIPTSCRIPT
};
Q({
  type: "styling",
  names: ["\\displaystyle", "\\textstyle", "\\scriptstyle", "\\scriptscriptstyle"],
  props: {
    numArgs: 0,
    allowedInText: !0,
    primitive: !0
  },
  handler(e, t) {
    var {
      breakOnTokenText: r,
      funcName: n,
      parser: i
    } = e, a = i.parseExpression(!0, r), s = n.slice(1, n.length - 5);
    return {
      type: "styling",
      mode: i.mode,
      // Figure out what style to use by pulling out the style from
      // the function name
      style: s,
      body: a
    };
  },
  htmlBuilder(e, t) {
    var r = xl[e.style], n = t.havingStyle(r).withFont("");
    return Mu(e.body, n, t);
  },
  mathmlBuilder(e, t) {
    var r = xl[e.style], n = t.havingStyle(r), i = kt(e.body, n), a = new z.MathNode("mstyle", i), s = {
      display: ["0", "true"],
      text: ["0", "false"],
      script: ["1", "false"],
      scriptscript: ["2", "false"]
    }, o = s[e.style];
    return a.setAttribute("scriptlevel", o[0]), a.setAttribute("displaystyle", o[1]), a;
  }
});
var Ef = function(t, r) {
  var n = t.base;
  if (n)
    if (n.type === "op") {
      var i = n.limits && (r.style.size === he.DISPLAY.size || n.alwaysHandleSupSub);
      return i ? Bn : null;
    } else if (n.type === "operatorname") {
      var a = n.alwaysHandleSupSub && (r.style.size === he.DISPLAY.size || n.limits);
      return a ? Nu : null;
    } else {
      if (n.type === "accent")
        return me.isCharacterBox(n.base) ? Wo : null;
      if (n.type === "horizBrace") {
        var s = !t.sub;
        return s === n.isOver ? Ru : null;
      } else
        return null;
    }
  else
    return null;
};
un({
  type: "supsub",
  htmlBuilder(e, t) {
    var r = Ef(e, t);
    if (r)
      return r(e, t);
    var {
      base: n,
      sup: i,
      sub: a
    } = e, s = Ae(n, t), o, l, u = t.fontMetrics(), d = 0, p = 0, b = n && me.isCharacterBox(n);
    if (i) {
      var m = t.havingStyle(t.style.sup());
      o = Ae(i, m, t), b || (d = s.height - m.fontMetrics().supDrop * m.sizeMultiplier / t.sizeMultiplier);
    }
    if (a) {
      var _ = t.havingStyle(t.style.sub());
      l = Ae(a, _, t), b || (p = s.depth + _.fontMetrics().subDrop * _.sizeMultiplier / t.sizeMultiplier);
    }
    var k;
    t.style === he.DISPLAY ? k = u.sup1 : t.style.cramped ? k = u.sup3 : k = u.sup2;
    var L = t.sizeMultiplier, A = j(0.5 / u.ptPerEm / L), v = null;
    if (l) {
      var S = e.base && e.base.type === "op" && e.base.name && (e.base.name === "\\oiint" || e.base.name === "\\oiiint");
      (s instanceof Mt || S) && (v = j(-s.italic));
    }
    var C;
    if (o && l) {
      d = Math.max(d, k, o.depth + 0.25 * u.xHeight), p = Math.max(p, u.sub2);
      var I = u.defaultRuleThickness, R = 4 * I;
      if (d - o.depth - (l.height - p) < R) {
        p = R - (d - o.depth) + l.height;
        var N = 0.8 * u.xHeight - (d - o.depth);
        N > 0 && (d += N, p -= N);
      }
      var K = [{
        type: "elem",
        elem: l,
        shift: p,
        marginRight: A,
        marginLeft: v
      }, {
        type: "elem",
        elem: o,
        shift: -d,
        marginRight: A
      }];
      C = E.makeVList({
        positionType: "individualShift",
        children: K
      }, t);
    } else if (l) {
      p = Math.max(p, u.sub1, l.height - 0.8 * u.xHeight);
      var B = [{
        type: "elem",
        elem: l,
        marginLeft: v,
        marginRight: A
      }];
      C = E.makeVList({
        positionType: "shift",
        positionData: p,
        children: B
      }, t);
    } else if (o)
      d = Math.max(d, k, o.depth + 0.25 * u.xHeight), C = E.makeVList({
        positionType: "shift",
        positionData: -d,
        children: [{
          type: "elem",
          elem: o,
          marginRight: A
        }]
      }, t);
    else
      throw new Error("supsub must have either sup or sub.");
    var ie = so(s, "right") || "mord";
    return E.makeSpan([ie], [s, E.makeSpan(["msupsub"], [C])], t);
  },
  mathmlBuilder(e, t) {
    var r = !1, n, i;
    e.base && e.base.type === "horizBrace" && (i = !!e.sup, i === e.base.isOver && (r = !0, n = e.base.isOver)), e.base && (e.base.type === "op" || e.base.type === "operatorname") && (e.base.parentIsSupSub = !0);
    var a = [Be(e.base, t)];
    e.sub && a.push(Be(e.sub, t)), e.sup && a.push(Be(e.sup, t));
    var s;
    if (r)
      s = n ? "mover" : "munder";
    else if (e.sub)
      if (e.sup) {
        var u = e.base;
        u && u.type === "op" && u.limits && t.style === he.DISPLAY || u && u.type === "operatorname" && u.alwaysHandleSupSub && (t.style === he.DISPLAY || u.limits) ? s = "munderover" : s = "msubsup";
      } else {
        var l = e.base;
        l && l.type === "op" && l.limits && (t.style === he.DISPLAY || l.alwaysHandleSupSub) || l && l.type === "operatorname" && l.alwaysHandleSupSub && (l.limits || t.style === he.DISPLAY) ? s = "munder" : s = "msub";
      }
    else {
      var o = e.base;
      o && o.type === "op" && o.limits && (t.style === he.DISPLAY || o.alwaysHandleSupSub) || o && o.type === "operatorname" && o.alwaysHandleSupSub && (o.limits || t.style === he.DISPLAY) ? s = "mover" : s = "msup";
    }
    return new z.MathNode(s, a);
  }
});
un({
  type: "atom",
  htmlBuilder(e, t) {
    return E.mathsym(e.text, e.mode, t, ["m" + e.family]);
  },
  mathmlBuilder(e, t) {
    var r = new z.MathNode("mo", [Bt(e.text, e.mode)]);
    if (e.family === "bin") {
      var n = qo(e, t);
      n === "bold-italic" && r.setAttribute("mathvariant", n);
    } else
      e.family === "punct" ? r.setAttribute("separator", "true") : (e.family === "open" || e.family === "close") && r.setAttribute("stretchy", "false");
    return r;
  }
});
var Bu = {
  mi: "italic",
  mn: "normal",
  mtext: "normal"
};
un({
  type: "mathord",
  htmlBuilder(e, t) {
    return E.makeOrd(e, t, "mathord");
  },
  mathmlBuilder(e, t) {
    var r = new z.MathNode("mi", [Bt(e.text, e.mode, t)]), n = qo(e, t) || "italic";
    return n !== Bu[r.type] && r.setAttribute("mathvariant", n), r;
  }
});
un({
  type: "textord",
  htmlBuilder(e, t) {
    return E.makeOrd(e, t, "textord");
  },
  mathmlBuilder(e, t) {
    var r = Bt(e.text, e.mode, t), n = qo(e, t) || "normal", i;
    return e.mode === "text" ? i = new z.MathNode("mtext", [r]) : /[0-9]/.test(e.text) ? i = new z.MathNode("mn", [r]) : e.text === "\\prime" ? i = new z.MathNode("mo", [r]) : i = new z.MathNode("mi", [r]), n !== Bu[i.type] && i.setAttribute("mathvariant", n), i;
  }
});
var Ms = {
  "\\nobreak": "nobreak",
  "\\allowbreak": "allowbreak"
}, Bs = {
  " ": {},
  "\\ ": {},
  "~": {
    className: "nobreak"
  },
  "\\space": {},
  "\\nobreakspace": {
    className: "nobreak"
  }
};
un({
  type: "spacing",
  htmlBuilder(e, t) {
    if (Bs.hasOwnProperty(e.text)) {
      var r = Bs[e.text].className || "";
      if (e.mode === "text") {
        var n = E.makeOrd(e, t, "textord");
        return n.classes.push(r), n;
      } else
        return E.makeSpan(["mspace", r], [E.mathsym(e.text, e.mode, t)], t);
    } else {
      if (Ms.hasOwnProperty(e.text))
        return E.makeSpan(["mspace", Ms[e.text]], [], t);
      throw new U('Unknown type of space "' + e.text + '"');
    }
  },
  mathmlBuilder(e, t) {
    var r;
    if (Bs.hasOwnProperty(e.text))
      r = new z.MathNode("mtext", [new z.TextNode(" ")]);
    else {
      if (Ms.hasOwnProperty(e.text))
        return new z.MathNode("mspace");
      throw new U('Unknown type of space "' + e.text + '"');
    }
    return r;
  }
});
var _l = () => {
  var e = new z.MathNode("mtd", []);
  return e.setAttribute("width", "50%"), e;
};
un({
  type: "tag",
  mathmlBuilder(e, t) {
    var r = new z.MathNode("mtable", [new z.MathNode("mtr", [_l(), new z.MathNode("mtd", [Ur(e.body, t)]), _l(), new z.MathNode("mtd", [Ur(e.tag, t)])])]);
    return r.setAttribute("width", "100%"), r;
  }
});
var wl = {
  "\\text": void 0,
  "\\textrm": "textrm",
  "\\textsf": "textsf",
  "\\texttt": "texttt",
  "\\textnormal": "textrm"
}, Sl = {
  "\\textbf": "textbf",
  "\\textmd": "textmd"
}, Af = {
  "\\textit": "textit",
  "\\textup": "textup"
}, kl = (e, t) => {
  var r = e.font;
  return r ? wl[r] ? t.withTextFontFamily(wl[r]) : Sl[r] ? t.withTextFontWeight(Sl[r]) : t.withTextFontShape(Af[r]) : t;
};
Q({
  type: "text",
  names: [
    // Font families
    "\\text",
    "\\textrm",
    "\\textsf",
    "\\texttt",
    "\\textnormal",
    // Font weights
    "\\textbf",
    "\\textmd",
    // Font Shapes
    "\\textit",
    "\\textup"
  ],
  props: {
    numArgs: 1,
    argTypes: ["text"],
    allowedInArgument: !0,
    allowedInText: !0
  },
  handler(e, t) {
    var {
      parser: r,
      funcName: n
    } = e, i = t[0];
    return {
      type: "text",
      mode: r.mode,
      body: Ye(i),
      font: n
    };
  },
  htmlBuilder(e, t) {
    var r = kl(e, t), n = Qe(e.body, r, !0);
    return E.makeSpan(["mord", "text"], n, r);
  },
  mathmlBuilder(e, t) {
    var r = kl(e, t);
    return Ur(e.body, r);
  }
});
Q({
  type: "underline",
  names: ["\\underline"],
  props: {
    numArgs: 1,
    allowedInText: !0
  },
  handler(e, t) {
    var {
      parser: r
    } = e;
    return {
      type: "underline",
      mode: r.mode,
      body: t[0]
    };
  },
  htmlBuilder(e, t) {
    var r = Ae(e.body, t), n = E.makeLineSpan("underline-line", t), i = t.fontMetrics().defaultRuleThickness, a = E.makeVList({
      positionType: "top",
      positionData: r.height,
      children: [{
        type: "kern",
        size: i
      }, {
        type: "elem",
        elem: n
      }, {
        type: "kern",
        size: 3 * i
      }, {
        type: "elem",
        elem: r
      }]
    }, t);
    return E.makeSpan(["mord", "underline"], [a], t);
  },
  mathmlBuilder(e, t) {
    var r = new z.MathNode("mo", [new z.TextNode("‾")]);
    r.setAttribute("stretchy", "true");
    var n = new z.MathNode("munder", [Be(e.body, t), r]);
    return n.setAttribute("accentunder", "true"), n;
  }
});
Q({
  type: "vcenter",
  names: ["\\vcenter"],
  props: {
    numArgs: 1,
    argTypes: ["original"],
    // In LaTeX, \vcenter can act only on a box.
    allowedInText: !1
  },
  handler(e, t) {
    var {
      parser: r
    } = e;
    return {
      type: "vcenter",
      mode: r.mode,
      body: t[0]
    };
  },
  htmlBuilder(e, t) {
    var r = Ae(e.body, t), n = t.fontMetrics().axisHeight, i = 0.5 * (r.height - n - (r.depth + n));
    return E.makeVList({
      positionType: "shift",
      positionData: i,
      children: [{
        type: "elem",
        elem: r
      }]
    }, t);
  },
  mathmlBuilder(e, t) {
    return new z.MathNode("mpadded", [Be(e.body, t)], ["vcenter"]);
  }
});
Q({
  type: "verb",
  names: ["\\verb"],
  props: {
    numArgs: 0,
    allowedInText: !0
  },
  handler(e, t, r) {
    throw new U("\\verb ended by end of line instead of matching delimiter");
  },
  htmlBuilder(e, t) {
    for (var r = Tl(e), n = [], i = t.havingStyle(t.style.text()), a = 0; a < r.length; a++) {
      var s = r[a];
      s === "~" && (s = "\\textasciitilde"), n.push(E.makeSymbol(s, "Typewriter-Regular", e.mode, i, ["mord", "texttt"]));
    }
    return E.makeSpan(["mord", "text"].concat(i.sizingClasses(t)), E.tryCombineChars(n), i);
  },
  mathmlBuilder(e, t) {
    var r = new z.TextNode(Tl(e)), n = new z.MathNode("mtext", [r]);
    return n.setAttribute("mathvariant", "monospace"), n;
  }
});
var Tl = (e) => e.body.replace(/ /g, e.star ? "␣" : " "), Dr = iu, Du = `[ \r
	]`, If = "\\\\[a-zA-Z@]+", Rf = "\\\\[^\uD800-\uDFFF]", Lf = "(" + If + ")" + Du + "*", Of = `\\\\(
|[ \r	]+
?)[ \r	]*`, uo = "[̀-ͯ]", Nf = new RegExp(uo + "+$"), Mf = "(" + Du + "+)|" + // whitespace
(Of + "|") + // \whitespace
"([!-\\[\\]-‧‪-퟿豈-￿]" + // single codepoint
(uo + "*") + // ...plus accents
"|[\uD800-\uDBFF][\uDC00-\uDFFF]" + // surrogate pair
(uo + "*") + // ...plus accents
"|\\\\verb\\*([^]).*?\\4|\\\\verb([^*a-zA-Z]).*?\\5" + // \verb unstarred
("|" + Lf) + // \macroName + spaces
("|" + Rf + ")");
class Cl {
  // Category codes. The lexer only supports comment characters (14) for now.
  // MacroExpander additionally distinguishes active (13).
  constructor(t, r) {
    this.input = void 0, this.settings = void 0, this.tokenRegex = void 0, this.catcodes = void 0, this.input = t, this.settings = r, this.tokenRegex = new RegExp(Mf, "g"), this.catcodes = {
      "%": 14,
      // comment character
      "~": 13
      // active character
    };
  }
  setCatcode(t, r) {
    this.catcodes[t] = r;
  }
  /**
   * This function lexes a single token.
   */
  lex() {
    var t = this.input, r = this.tokenRegex.lastIndex;
    if (r === t.length)
      return new Ot("EOF", new Ct(this, r, r));
    var n = this.tokenRegex.exec(t);
    if (n === null || n.index !== r)
      throw new U("Unexpected character: '" + t[r] + "'", new Ot(t[r], new Ct(this, r, r + 1)));
    var i = n[6] || n[3] || (n[2] ? "\\ " : " ");
    if (this.catcodes[i] === 14) {
      var a = t.indexOf(`
`, this.tokenRegex.lastIndex);
      return a === -1 ? (this.tokenRegex.lastIndex = t.length, this.settings.reportNonstrict("commentAtEnd", "% comment has no terminating newline; LaTeX would fail because of commenting the end of math mode (e.g. $)")) : this.tokenRegex.lastIndex = a + 1, this.lex();
    }
    return new Ot(i, new Ct(this, r, this.tokenRegex.lastIndex));
  }
}
class Bf {
  /**
   * Both arguments are optional.  The first argument is an object of
   * built-in mappings which never change.  The second argument is an object
   * of initial (global-level) mappings, which will constantly change
   * according to any global/top-level `set`s done.
   */
  constructor(t, r) {
    t === void 0 && (t = {}), r === void 0 && (r = {}), this.current = void 0, this.builtins = void 0, this.undefStack = void 0, this.current = r, this.builtins = t, this.undefStack = [];
  }
  /**
   * Start a new nested group, affecting future local `set`s.
   */
  beginGroup() {
    this.undefStack.push({});
  }
  /**
   * End current nested group, restoring values before the group began.
   */
  endGroup() {
    if (this.undefStack.length === 0)
      throw new U("Unbalanced namespace destruction: attempt to pop global namespace; please report this as a bug");
    var t = this.undefStack.pop();
    for (var r in t)
      t.hasOwnProperty(r) && (t[r] == null ? delete this.current[r] : this.current[r] = t[r]);
  }
  /**
   * Ends all currently nested groups (if any), restoring values before the
   * groups began.  Useful in case of an error in the middle of parsing.
   */
  endGroups() {
    for (; this.undefStack.length > 0; )
      this.endGroup();
  }
  /**
   * Detect whether `name` has a definition.  Equivalent to
   * `get(name) != null`.
   */
  has(t) {
    return this.current.hasOwnProperty(t) || this.builtins.hasOwnProperty(t);
  }
  /**
   * Get the current value of a name, or `undefined` if there is no value.
   *
   * Note: Do not use `if (namespace.get(...))` to detect whether a macro
   * is defined, as the definition may be the empty string which evaluates
   * to `false` in JavaScript.  Use `if (namespace.get(...) != null)` or
   * `if (namespace.has(...))`.
   */
  get(t) {
    return this.current.hasOwnProperty(t) ? this.current[t] : this.builtins[t];
  }
  /**
   * Set the current value of a name, and optionally set it globally too.
   * Local set() sets the current value and (when appropriate) adds an undo
   * operation to the undo stack.  Global set() may change the undo
   * operation at every level, so takes time linear in their number.
   * A value of undefined means to delete existing definitions.
   */
  set(t, r, n) {
    if (n === void 0 && (n = !1), n) {
      for (var i = 0; i < this.undefStack.length; i++)
        delete this.undefStack[i][t];
      this.undefStack.length > 0 && (this.undefStack[this.undefStack.length - 1][t] = r);
    } else {
      var a = this.undefStack[this.undefStack.length - 1];
      a && !a.hasOwnProperty(t) && (a[t] = this.current[t]);
    }
    r == null ? delete this.current[t] : this.current[t] = r;
  }
}
var Df = Tu;
g("\\noexpand", function(e) {
  var t = e.popToken();
  return e.isExpandable(t.text) && (t.noexpand = !0, t.treatAsRelax = !0), {
    tokens: [t],
    numArgs: 0
  };
});
g("\\expandafter", function(e) {
  var t = e.popToken();
  return e.expandOnce(!0), {
    tokens: [t],
    numArgs: 0
  };
});
g("\\@firstoftwo", function(e) {
  var t = e.consumeArgs(2);
  return {
    tokens: t[0],
    numArgs: 0
  };
});
g("\\@secondoftwo", function(e) {
  var t = e.consumeArgs(2);
  return {
    tokens: t[1],
    numArgs: 0
  };
});
g("\\@ifnextchar", function(e) {
  var t = e.consumeArgs(3);
  e.consumeSpaces();
  var r = e.future();
  return t[0].length === 1 && t[0][0].text === r.text ? {
    tokens: t[1],
    numArgs: 0
  } : {
    tokens: t[2],
    numArgs: 0
  };
});
g("\\@ifstar", "\\@ifnextchar *{\\@firstoftwo{#1}}");
g("\\TextOrMath", function(e) {
  var t = e.consumeArgs(2);
  return e.mode === "text" ? {
    tokens: t[0],
    numArgs: 0
  } : {
    tokens: t[1],
    numArgs: 0
  };
});
var El = {
  0: 0,
  1: 1,
  2: 2,
  3: 3,
  4: 4,
  5: 5,
  6: 6,
  7: 7,
  8: 8,
  9: 9,
  a: 10,
  A: 10,
  b: 11,
  B: 11,
  c: 12,
  C: 12,
  d: 13,
  D: 13,
  e: 14,
  E: 14,
  f: 15,
  F: 15
};
g("\\char", function(e) {
  var t = e.popToken(), r, n = "";
  if (t.text === "'")
    r = 8, t = e.popToken();
  else if (t.text === '"')
    r = 16, t = e.popToken();
  else if (t.text === "`")
    if (t = e.popToken(), t.text[0] === "\\")
      n = t.text.charCodeAt(1);
    else {
      if (t.text === "EOF")
        throw new U("\\char` missing argument");
      n = t.text.charCodeAt(0);
    }
  else
    r = 10;
  if (r) {
    if (n = El[t.text], n == null || n >= r)
      throw new U("Invalid base-" + r + " digit " + t.text);
    for (var i; (i = El[e.future().text]) != null && i < r; )
      n *= r, n += i, e.popToken();
  }
  return "\\@char{" + n + "}";
});
var Qo = (e, t, r) => {
  var n = e.consumeArg().tokens;
  if (n.length !== 1)
    throw new U("\\newcommand's first argument must be a macro name");
  var i = n[0].text, a = e.isDefined(i);
  if (a && !t)
    throw new U("\\newcommand{" + i + "} attempting to redefine " + (i + "; use \\renewcommand"));
  if (!a && !r)
    throw new U("\\renewcommand{" + i + "} when command " + i + " does not yet exist; use \\newcommand");
  var s = 0;
  if (n = e.consumeArg().tokens, n.length === 1 && n[0].text === "[") {
    for (var o = "", l = e.expandNextToken(); l.text !== "]" && l.text !== "EOF"; )
      o += l.text, l = e.expandNextToken();
    if (!o.match(/^\s*[0-9]+\s*$/))
      throw new U("Invalid number of arguments: " + o);
    s = parseInt(o), n = e.consumeArg().tokens;
  }
  return e.macros.set(i, {
    tokens: n,
    numArgs: s
  }), "";
};
g("\\newcommand", (e) => Qo(e, !1, !0));
g("\\renewcommand", (e) => Qo(e, !0, !1));
g("\\providecommand", (e) => Qo(e, !0, !0));
g("\\message", (e) => {
  var t = e.consumeArgs(1)[0];
  return console.log(t.reverse().map((r) => r.text).join("")), "";
});
g("\\errmessage", (e) => {
  var t = e.consumeArgs(1)[0];
  return console.error(t.reverse().map((r) => r.text).join("")), "";
});
g("\\show", (e) => {
  var t = e.popToken(), r = t.text;
  return console.log(t, e.macros.get(r), Dr[r], $e.math[r], $e.text[r]), "";
});
g("\\bgroup", "{");
g("\\egroup", "}");
g("~", "\\nobreakspace");
g("\\lq", "`");
g("\\rq", "'");
g("\\aa", "\\r a");
g("\\AA", "\\r A");
g("\\textcopyright", "\\html@mathml{\\textcircled{c}}{\\char`©}");
g("\\copyright", "\\TextOrMath{\\textcopyright}{\\text{\\textcopyright}}");
g("\\textregistered", "\\html@mathml{\\textcircled{\\scriptsize R}}{\\char`®}");
g("ℬ", "\\mathscr{B}");
g("ℰ", "\\mathscr{E}");
g("ℱ", "\\mathscr{F}");
g("ℋ", "\\mathscr{H}");
g("ℐ", "\\mathscr{I}");
g("ℒ", "\\mathscr{L}");
g("ℳ", "\\mathscr{M}");
g("ℛ", "\\mathscr{R}");
g("ℭ", "\\mathfrak{C}");
g("ℌ", "\\mathfrak{H}");
g("ℨ", "\\mathfrak{Z}");
g("\\Bbbk", "\\Bbb{k}");
g("·", "\\cdotp");
g("\\llap", "\\mathllap{\\textrm{#1}}");
g("\\rlap", "\\mathrlap{\\textrm{#1}}");
g("\\clap", "\\mathclap{\\textrm{#1}}");
g("\\mathstrut", "\\vphantom{(}");
g("\\underbar", "\\underline{\\text{#1}}");
g("\\not", '\\html@mathml{\\mathrel{\\mathrlap\\@not}}{\\char"338}');
g("\\neq", "\\html@mathml{\\mathrel{\\not=}}{\\mathrel{\\char`≠}}");
g("\\ne", "\\neq");
g("≠", "\\neq");
g("\\notin", "\\html@mathml{\\mathrel{{\\in}\\mathllap{/\\mskip1mu}}}{\\mathrel{\\char`∉}}");
g("∉", "\\notin");
g("≘", "\\html@mathml{\\mathrel{=\\kern{-1em}\\raisebox{0.4em}{$\\scriptsize\\frown$}}}{\\mathrel{\\char`≘}}");
g("≙", "\\html@mathml{\\stackrel{\\tiny\\wedge}{=}}{\\mathrel{\\char`≘}}");
g("≚", "\\html@mathml{\\stackrel{\\tiny\\vee}{=}}{\\mathrel{\\char`≚}}");
g("≛", "\\html@mathml{\\stackrel{\\scriptsize\\star}{=}}{\\mathrel{\\char`≛}}");
g("≝", "\\html@mathml{\\stackrel{\\tiny\\mathrm{def}}{=}}{\\mathrel{\\char`≝}}");
g("≞", "\\html@mathml{\\stackrel{\\tiny\\mathrm{m}}{=}}{\\mathrel{\\char`≞}}");
g("≟", "\\html@mathml{\\stackrel{\\tiny?}{=}}{\\mathrel{\\char`≟}}");
g("⟂", "\\perp");
g("‼", "\\mathclose{!\\mkern-0.8mu!}");
g("∌", "\\notni");
g("⌜", "\\ulcorner");
g("⌝", "\\urcorner");
g("⌞", "\\llcorner");
g("⌟", "\\lrcorner");
g("©", "\\copyright");
g("®", "\\textregistered");
g("️", "\\textregistered");
g("\\ulcorner", '\\html@mathml{\\@ulcorner}{\\mathop{\\char"231c}}');
g("\\urcorner", '\\html@mathml{\\@urcorner}{\\mathop{\\char"231d}}');
g("\\llcorner", '\\html@mathml{\\@llcorner}{\\mathop{\\char"231e}}');
g("\\lrcorner", '\\html@mathml{\\@lrcorner}{\\mathop{\\char"231f}}');
g("\\vdots", "\\mathord{\\varvdots\\rule{0pt}{15pt}}");
g("⋮", "\\vdots");
g("\\varGamma", "\\mathit{\\Gamma}");
g("\\varDelta", "\\mathit{\\Delta}");
g("\\varTheta", "\\mathit{\\Theta}");
g("\\varLambda", "\\mathit{\\Lambda}");
g("\\varXi", "\\mathit{\\Xi}");
g("\\varPi", "\\mathit{\\Pi}");
g("\\varSigma", "\\mathit{\\Sigma}");
g("\\varUpsilon", "\\mathit{\\Upsilon}");
g("\\varPhi", "\\mathit{\\Phi}");
g("\\varPsi", "\\mathit{\\Psi}");
g("\\varOmega", "\\mathit{\\Omega}");
g("\\substack", "\\begin{subarray}{c}#1\\end{subarray}");
g("\\colon", "\\nobreak\\mskip2mu\\mathpunct{}\\mathchoice{\\mkern-3mu}{\\mkern-3mu}{}{}{:}\\mskip6mu\\relax");
g("\\boxed", "\\fbox{$\\displaystyle{#1}$}");
g("\\iff", "\\DOTSB\\;\\Longleftrightarrow\\;");
g("\\implies", "\\DOTSB\\;\\Longrightarrow\\;");
g("\\impliedby", "\\DOTSB\\;\\Longleftarrow\\;");
var Al = {
  ",": "\\dotsc",
  "\\not": "\\dotsb",
  // \keybin@ checks for the following:
  "+": "\\dotsb",
  "=": "\\dotsb",
  "<": "\\dotsb",
  ">": "\\dotsb",
  "-": "\\dotsb",
  "*": "\\dotsb",
  ":": "\\dotsb",
  // Symbols whose definition starts with \DOTSB:
  "\\DOTSB": "\\dotsb",
  "\\coprod": "\\dotsb",
  "\\bigvee": "\\dotsb",
  "\\bigwedge": "\\dotsb",
  "\\biguplus": "\\dotsb",
  "\\bigcap": "\\dotsb",
  "\\bigcup": "\\dotsb",
  "\\prod": "\\dotsb",
  "\\sum": "\\dotsb",
  "\\bigotimes": "\\dotsb",
  "\\bigoplus": "\\dotsb",
  "\\bigodot": "\\dotsb",
  "\\bigsqcup": "\\dotsb",
  "\\And": "\\dotsb",
  "\\longrightarrow": "\\dotsb",
  "\\Longrightarrow": "\\dotsb",
  "\\longleftarrow": "\\dotsb",
  "\\Longleftarrow": "\\dotsb",
  "\\longleftrightarrow": "\\dotsb",
  "\\Longleftrightarrow": "\\dotsb",
  "\\mapsto": "\\dotsb",
  "\\longmapsto": "\\dotsb",
  "\\hookrightarrow": "\\dotsb",
  "\\doteq": "\\dotsb",
  // Symbols whose definition starts with \mathbin:
  "\\mathbin": "\\dotsb",
  // Symbols whose definition starts with \mathrel:
  "\\mathrel": "\\dotsb",
  "\\relbar": "\\dotsb",
  "\\Relbar": "\\dotsb",
  "\\xrightarrow": "\\dotsb",
  "\\xleftarrow": "\\dotsb",
  // Symbols whose definition starts with \DOTSI:
  "\\DOTSI": "\\dotsi",
  "\\int": "\\dotsi",
  "\\oint": "\\dotsi",
  "\\iint": "\\dotsi",
  "\\iiint": "\\dotsi",
  "\\iiiint": "\\dotsi",
  "\\idotsint": "\\dotsi",
  // Symbols whose definition starts with \DOTSX:
  "\\DOTSX": "\\dotsx"
};
g("\\dots", function(e) {
  var t = "\\dotso", r = e.expandAfterFuture().text;
  return r in Al ? t = Al[r] : (r.slice(0, 4) === "\\not" || r in $e.math && me.contains(["bin", "rel"], $e.math[r].group)) && (t = "\\dotsb"), t;
});
var e0 = {
  // \rightdelim@ checks for the following:
  ")": !0,
  "]": !0,
  "\\rbrack": !0,
  "\\}": !0,
  "\\rbrace": !0,
  "\\rangle": !0,
  "\\rceil": !0,
  "\\rfloor": !0,
  "\\rgroup": !0,
  "\\rmoustache": !0,
  "\\right": !0,
  "\\bigr": !0,
  "\\biggr": !0,
  "\\Bigr": !0,
  "\\Biggr": !0,
  // \extra@ also tests for the following:
  $: !0,
  // \extrap@ checks for the following:
  ";": !0,
  ".": !0,
  ",": !0
};
g("\\dotso", function(e) {
  var t = e.future().text;
  return t in e0 ? "\\ldots\\," : "\\ldots";
});
g("\\dotsc", function(e) {
  var t = e.future().text;
  return t in e0 && t !== "," ? "\\ldots\\," : "\\ldots";
});
g("\\cdots", function(e) {
  var t = e.future().text;
  return t in e0 ? "\\@cdots\\," : "\\@cdots";
});
g("\\dotsb", "\\cdots");
g("\\dotsm", "\\cdots");
g("\\dotsi", "\\!\\cdots");
g("\\dotsx", "\\ldots\\,");
g("\\DOTSI", "\\relax");
g("\\DOTSB", "\\relax");
g("\\DOTSX", "\\relax");
g("\\tmspace", "\\TextOrMath{\\kern#1#3}{\\mskip#1#2}\\relax");
g("\\,", "\\tmspace+{3mu}{.1667em}");
g("\\thinspace", "\\,");
g("\\>", "\\mskip{4mu}");
g("\\:", "\\tmspace+{4mu}{.2222em}");
g("\\medspace", "\\:");
g("\\;", "\\tmspace+{5mu}{.2777em}");
g("\\thickspace", "\\;");
g("\\!", "\\tmspace-{3mu}{.1667em}");
g("\\negthinspace", "\\!");
g("\\negmedspace", "\\tmspace-{4mu}{.2222em}");
g("\\negthickspace", "\\tmspace-{5mu}{.277em}");
g("\\enspace", "\\kern.5em ");
g("\\enskip", "\\hskip.5em\\relax");
g("\\quad", "\\hskip1em\\relax");
g("\\qquad", "\\hskip2em\\relax");
g("\\tag", "\\@ifstar\\tag@literal\\tag@paren");
g("\\tag@paren", "\\tag@literal{({#1})}");
g("\\tag@literal", (e) => {
  if (e.macros.get("\\df@tag"))
    throw new U("Multiple \\tag");
  return "\\gdef\\df@tag{\\text{#1}}";
});
g("\\bmod", "\\mathchoice{\\mskip1mu}{\\mskip1mu}{\\mskip5mu}{\\mskip5mu}\\mathbin{\\rm mod}\\mathchoice{\\mskip1mu}{\\mskip1mu}{\\mskip5mu}{\\mskip5mu}");
g("\\pod", "\\allowbreak\\mathchoice{\\mkern18mu}{\\mkern8mu}{\\mkern8mu}{\\mkern8mu}(#1)");
g("\\pmod", "\\pod{{\\rm mod}\\mkern6mu#1}");
g("\\mod", "\\allowbreak\\mathchoice{\\mkern18mu}{\\mkern12mu}{\\mkern12mu}{\\mkern12mu}{\\rm mod}\\,\\,#1");
g("\\newline", "\\\\\\relax");
g("\\TeX", "\\textrm{\\html@mathml{T\\kern-.1667em\\raisebox{-.5ex}{E}\\kern-.125emX}{TeX}}");
var Fu = j(Qt["Main-Regular"]["T".charCodeAt(0)][1] - 0.7 * Qt["Main-Regular"]["A".charCodeAt(0)][1]);
g("\\LaTeX", "\\textrm{\\html@mathml{" + ("L\\kern-.36em\\raisebox{" + Fu + "}{\\scriptstyle A}") + "\\kern-.15em\\TeX}{LaTeX}}");
g("\\KaTeX", "\\textrm{\\html@mathml{" + ("K\\kern-.17em\\raisebox{" + Fu + "}{\\scriptstyle A}") + "\\kern-.15em\\TeX}{KaTeX}}");
g("\\hspace", "\\@ifstar\\@hspacer\\@hspace");
g("\\@hspace", "\\hskip #1\\relax");
g("\\@hspacer", "\\rule{0pt}{0pt}\\hskip #1\\relax");
g("\\ordinarycolon", ":");
g("\\vcentcolon", "\\mathrel{\\mathop\\ordinarycolon}");
g("\\dblcolon", '\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-.9mu}\\vcentcolon}}{\\mathop{\\char"2237}}');
g("\\coloneqq", '\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}=}}{\\mathop{\\char"2254}}');
g("\\Coloneqq", '\\html@mathml{\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}=}}{\\mathop{\\char"2237\\char"3d}}');
g("\\coloneq", '\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}}{\\mathop{\\char"3a\\char"2212}}');
g("\\Coloneq", '\\html@mathml{\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}}{\\mathop{\\char"2237\\char"2212}}');
g("\\eqqcolon", '\\html@mathml{\\mathrel{=\\mathrel{\\mkern-1.2mu}\\vcentcolon}}{\\mathop{\\char"2255}}');
g("\\Eqqcolon", '\\html@mathml{\\mathrel{=\\mathrel{\\mkern-1.2mu}\\dblcolon}}{\\mathop{\\char"3d\\char"2237}}');
g("\\eqcolon", '\\html@mathml{\\mathrel{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\vcentcolon}}{\\mathop{\\char"2239}}');
g("\\Eqcolon", '\\html@mathml{\\mathrel{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\dblcolon}}{\\mathop{\\char"2212\\char"2237}}');
g("\\colonapprox", '\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\approx}}{\\mathop{\\char"3a\\char"2248}}');
g("\\Colonapprox", '\\html@mathml{\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}\\approx}}{\\mathop{\\char"2237\\char"2248}}');
g("\\colonsim", '\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\sim}}{\\mathop{\\char"3a\\char"223c}}');
g("\\Colonsim", '\\html@mathml{\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}\\sim}}{\\mathop{\\char"2237\\char"223c}}');
g("∷", "\\dblcolon");
g("∹", "\\eqcolon");
g("≔", "\\coloneqq");
g("≕", "\\eqqcolon");
g("⩴", "\\Coloneqq");
g("\\ratio", "\\vcentcolon");
g("\\coloncolon", "\\dblcolon");
g("\\colonequals", "\\coloneqq");
g("\\coloncolonequals", "\\Coloneqq");
g("\\equalscolon", "\\eqqcolon");
g("\\equalscoloncolon", "\\Eqqcolon");
g("\\colonminus", "\\coloneq");
g("\\coloncolonminus", "\\Coloneq");
g("\\minuscolon", "\\eqcolon");
g("\\minuscoloncolon", "\\Eqcolon");
g("\\coloncolonapprox", "\\Colonapprox");
g("\\coloncolonsim", "\\Colonsim");
g("\\simcolon", "\\mathrel{\\sim\\mathrel{\\mkern-1.2mu}\\vcentcolon}");
g("\\simcoloncolon", "\\mathrel{\\sim\\mathrel{\\mkern-1.2mu}\\dblcolon}");
g("\\approxcolon", "\\mathrel{\\approx\\mathrel{\\mkern-1.2mu}\\vcentcolon}");
g("\\approxcoloncolon", "\\mathrel{\\approx\\mathrel{\\mkern-1.2mu}\\dblcolon}");
g("\\notni", "\\html@mathml{\\not\\ni}{\\mathrel{\\char`∌}}");
g("\\limsup", "\\DOTSB\\operatorname*{lim\\,sup}");
g("\\liminf", "\\DOTSB\\operatorname*{lim\\,inf}");
g("\\injlim", "\\DOTSB\\operatorname*{inj\\,lim}");
g("\\projlim", "\\DOTSB\\operatorname*{proj\\,lim}");
g("\\varlimsup", "\\DOTSB\\operatorname*{\\overline{lim}}");
g("\\varliminf", "\\DOTSB\\operatorname*{\\underline{lim}}");
g("\\varinjlim", "\\DOTSB\\operatorname*{\\underrightarrow{lim}}");
g("\\varprojlim", "\\DOTSB\\operatorname*{\\underleftarrow{lim}}");
g("\\gvertneqq", "\\html@mathml{\\@gvertneqq}{≩}");
g("\\lvertneqq", "\\html@mathml{\\@lvertneqq}{≨}");
g("\\ngeqq", "\\html@mathml{\\@ngeqq}{≱}");
g("\\ngeqslant", "\\html@mathml{\\@ngeqslant}{≱}");
g("\\nleqq", "\\html@mathml{\\@nleqq}{≰}");
g("\\nleqslant", "\\html@mathml{\\@nleqslant}{≰}");
g("\\nshortmid", "\\html@mathml{\\@nshortmid}{∤}");
g("\\nshortparallel", "\\html@mathml{\\@nshortparallel}{∦}");
g("\\nsubseteqq", "\\html@mathml{\\@nsubseteqq}{⊈}");
g("\\nsupseteqq", "\\html@mathml{\\@nsupseteqq}{⊉}");
g("\\varsubsetneq", "\\html@mathml{\\@varsubsetneq}{⊊}");
g("\\varsubsetneqq", "\\html@mathml{\\@varsubsetneqq}{⫋}");
g("\\varsupsetneq", "\\html@mathml{\\@varsupsetneq}{⊋}");
g("\\varsupsetneqq", "\\html@mathml{\\@varsupsetneqq}{⫌}");
g("\\imath", "\\html@mathml{\\@imath}{ı}");
g("\\jmath", "\\html@mathml{\\@jmath}{ȷ}");
g("\\llbracket", "\\html@mathml{\\mathopen{[\\mkern-3.2mu[}}{\\mathopen{\\char`⟦}}");
g("\\rrbracket", "\\html@mathml{\\mathclose{]\\mkern-3.2mu]}}{\\mathclose{\\char`⟧}}");
g("⟦", "\\llbracket");
g("⟧", "\\rrbracket");
g("\\lBrace", "\\html@mathml{\\mathopen{\\{\\mkern-3.2mu[}}{\\mathopen{\\char`⦃}}");
g("\\rBrace", "\\html@mathml{\\mathclose{]\\mkern-3.2mu\\}}}{\\mathclose{\\char`⦄}}");
g("⦃", "\\lBrace");
g("⦄", "\\rBrace");
g("\\minuso", "\\mathbin{\\html@mathml{{\\mathrlap{\\mathchoice{\\kern{0.145em}}{\\kern{0.145em}}{\\kern{0.1015em}}{\\kern{0.0725em}}\\circ}{-}}}{\\char`⦵}}");
g("⦵", "\\minuso");
g("\\darr", "\\downarrow");
g("\\dArr", "\\Downarrow");
g("\\Darr", "\\Downarrow");
g("\\lang", "\\langle");
g("\\rang", "\\rangle");
g("\\uarr", "\\uparrow");
g("\\uArr", "\\Uparrow");
g("\\Uarr", "\\Uparrow");
g("\\N", "\\mathbb{N}");
g("\\R", "\\mathbb{R}");
g("\\Z", "\\mathbb{Z}");
g("\\alef", "\\aleph");
g("\\alefsym", "\\aleph");
g("\\Alpha", "\\mathrm{A}");
g("\\Beta", "\\mathrm{B}");
g("\\bull", "\\bullet");
g("\\Chi", "\\mathrm{X}");
g("\\clubs", "\\clubsuit");
g("\\cnums", "\\mathbb{C}");
g("\\Complex", "\\mathbb{C}");
g("\\Dagger", "\\ddagger");
g("\\diamonds", "\\diamondsuit");
g("\\empty", "\\emptyset");
g("\\Epsilon", "\\mathrm{E}");
g("\\Eta", "\\mathrm{H}");
g("\\exist", "\\exists");
g("\\harr", "\\leftrightarrow");
g("\\hArr", "\\Leftrightarrow");
g("\\Harr", "\\Leftrightarrow");
g("\\hearts", "\\heartsuit");
g("\\image", "\\Im");
g("\\infin", "\\infty");
g("\\Iota", "\\mathrm{I}");
g("\\isin", "\\in");
g("\\Kappa", "\\mathrm{K}");
g("\\larr", "\\leftarrow");
g("\\lArr", "\\Leftarrow");
g("\\Larr", "\\Leftarrow");
g("\\lrarr", "\\leftrightarrow");
g("\\lrArr", "\\Leftrightarrow");
g("\\Lrarr", "\\Leftrightarrow");
g("\\Mu", "\\mathrm{M}");
g("\\natnums", "\\mathbb{N}");
g("\\Nu", "\\mathrm{N}");
g("\\Omicron", "\\mathrm{O}");
g("\\plusmn", "\\pm");
g("\\rarr", "\\rightarrow");
g("\\rArr", "\\Rightarrow");
g("\\Rarr", "\\Rightarrow");
g("\\real", "\\Re");
g("\\reals", "\\mathbb{R}");
g("\\Reals", "\\mathbb{R}");
g("\\Rho", "\\mathrm{P}");
g("\\sdot", "\\cdot");
g("\\sect", "\\S");
g("\\spades", "\\spadesuit");
g("\\sub", "\\subset");
g("\\sube", "\\subseteq");
g("\\supe", "\\supseteq");
g("\\Tau", "\\mathrm{T}");
g("\\thetasym", "\\vartheta");
g("\\weierp", "\\wp");
g("\\Zeta", "\\mathrm{Z}");
g("\\argmin", "\\DOTSB\\operatorname*{arg\\,min}");
g("\\argmax", "\\DOTSB\\operatorname*{arg\\,max}");
g("\\plim", "\\DOTSB\\mathop{\\operatorname{plim}}\\limits");
g("\\bra", "\\mathinner{\\langle{#1}|}");
g("\\ket", "\\mathinner{|{#1}\\rangle}");
g("\\braket", "\\mathinner{\\langle{#1}\\rangle}");
g("\\Bra", "\\left\\langle#1\\right|");
g("\\Ket", "\\left|#1\\right\\rangle");
var $u = (e) => (t) => {
  var r = t.consumeArg().tokens, n = t.consumeArg().tokens, i = t.consumeArg().tokens, a = t.consumeArg().tokens, s = t.macros.get("|"), o = t.macros.get("\\|");
  t.macros.beginGroup();
  var l = (p) => (b) => {
    e && (b.macros.set("|", s), i.length && b.macros.set("\\|", o));
    var m = p;
    if (!p && i.length) {
      var _ = b.future();
      _.text === "|" && (b.popToken(), m = !0);
    }
    return {
      tokens: m ? i : n,
      numArgs: 0
    };
  };
  t.macros.set("|", l(!1)), i.length && t.macros.set("\\|", l(!0));
  var u = t.consumeArg().tokens, d = t.expandTokens([
    ...a,
    ...u,
    ...r
    // reversed
  ]);
  return t.macros.endGroup(), {
    tokens: d.reverse(),
    numArgs: 0
  };
};
g("\\bra@ket", $u(!1));
g("\\bra@set", $u(!0));
g("\\Braket", "\\bra@ket{\\left\\langle}{\\,\\middle\\vert\\,}{\\,\\middle\\vert\\,}{\\right\\rangle}");
g("\\Set", "\\bra@set{\\left\\{\\:}{\\;\\middle\\vert\\;}{\\;\\middle\\Vert\\;}{\\:\\right\\}}");
g("\\set", "\\bra@set{\\{\\,}{\\mid}{}{\\,\\}}");
g("\\angln", "{\\angl n}");
g("\\blue", "\\textcolor{##6495ed}{#1}");
g("\\orange", "\\textcolor{##ffa500}{#1}");
g("\\pink", "\\textcolor{##ff00af}{#1}");
g("\\red", "\\textcolor{##df0030}{#1}");
g("\\green", "\\textcolor{##28ae7b}{#1}");
g("\\gray", "\\textcolor{gray}{#1}");
g("\\purple", "\\textcolor{##9d38bd}{#1}");
g("\\blueA", "\\textcolor{##ccfaff}{#1}");
g("\\blueB", "\\textcolor{##80f6ff}{#1}");
g("\\blueC", "\\textcolor{##63d9ea}{#1}");
g("\\blueD", "\\textcolor{##11accd}{#1}");
g("\\blueE", "\\textcolor{##0c7f99}{#1}");
g("\\tealA", "\\textcolor{##94fff5}{#1}");
g("\\tealB", "\\textcolor{##26edd5}{#1}");
g("\\tealC", "\\textcolor{##01d1c1}{#1}");
g("\\tealD", "\\textcolor{##01a995}{#1}");
g("\\tealE", "\\textcolor{##208170}{#1}");
g("\\greenA", "\\textcolor{##b6ffb0}{#1}");
g("\\greenB", "\\textcolor{##8af281}{#1}");
g("\\greenC", "\\textcolor{##74cf70}{#1}");
g("\\greenD", "\\textcolor{##1fab54}{#1}");
g("\\greenE", "\\textcolor{##0d923f}{#1}");
g("\\goldA", "\\textcolor{##ffd0a9}{#1}");
g("\\goldB", "\\textcolor{##ffbb71}{#1}");
g("\\goldC", "\\textcolor{##ff9c39}{#1}");
g("\\goldD", "\\textcolor{##e07d10}{#1}");
g("\\goldE", "\\textcolor{##a75a05}{#1}");
g("\\redA", "\\textcolor{##fca9a9}{#1}");
g("\\redB", "\\textcolor{##ff8482}{#1}");
g("\\redC", "\\textcolor{##f9685d}{#1}");
g("\\redD", "\\textcolor{##e84d39}{#1}");
g("\\redE", "\\textcolor{##bc2612}{#1}");
g("\\maroonA", "\\textcolor{##ffbde0}{#1}");
g("\\maroonB", "\\textcolor{##ff92c6}{#1}");
g("\\maroonC", "\\textcolor{##ed5fa6}{#1}");
g("\\maroonD", "\\textcolor{##ca337c}{#1}");
g("\\maroonE", "\\textcolor{##9e034e}{#1}");
g("\\purpleA", "\\textcolor{##ddd7ff}{#1}");
g("\\purpleB", "\\textcolor{##c6b9fc}{#1}");
g("\\purpleC", "\\textcolor{##aa87ff}{#1}");
g("\\purpleD", "\\textcolor{##7854ab}{#1}");
g("\\purpleE", "\\textcolor{##543b78}{#1}");
g("\\mintA", "\\textcolor{##f5f9e8}{#1}");
g("\\mintB", "\\textcolor{##edf2df}{#1}");
g("\\mintC", "\\textcolor{##e0e5cc}{#1}");
g("\\grayA", "\\textcolor{##f6f7f7}{#1}");
g("\\grayB", "\\textcolor{##f0f1f2}{#1}");
g("\\grayC", "\\textcolor{##e3e5e6}{#1}");
g("\\grayD", "\\textcolor{##d6d8da}{#1}");
g("\\grayE", "\\textcolor{##babec2}{#1}");
g("\\grayF", "\\textcolor{##888d93}{#1}");
g("\\grayG", "\\textcolor{##626569}{#1}");
g("\\grayH", "\\textcolor{##3b3e40}{#1}");
g("\\grayI", "\\textcolor{##21242c}{#1}");
g("\\kaBlue", "\\textcolor{##314453}{#1}");
g("\\kaGreen", "\\textcolor{##71B307}{#1}");
var zu = {
  "^": !0,
  // Parser.js
  _: !0,
  // Parser.js
  "\\limits": !0,
  // Parser.js
  "\\nolimits": !0
  // Parser.js
};
class Ff {
  constructor(t, r, n) {
    this.settings = void 0, this.expansionCount = void 0, this.lexer = void 0, this.macros = void 0, this.stack = void 0, this.mode = void 0, this.settings = r, this.expansionCount = 0, this.feed(t), this.macros = new Bf(Df, r.macros), this.mode = n, this.stack = [];
  }
  /**
   * Feed a new input string to the same MacroExpander
   * (with existing macros etc.).
   */
  feed(t) {
    this.lexer = new Cl(t, this.settings);
  }
  /**
   * Switches between "text" and "math" modes.
   */
  switchMode(t) {
    this.mode = t;
  }
  /**
   * Start a new group nesting within all namespaces.
   */
  beginGroup() {
    this.macros.beginGroup();
  }
  /**
   * End current group nesting within all namespaces.
   */
  endGroup() {
    this.macros.endGroup();
  }
  /**
   * Ends all currently nested groups (if any), restoring values before the
   * groups began.  Useful in case of an error in the middle of parsing.
   */
  endGroups() {
    this.macros.endGroups();
  }
  /**
   * Returns the topmost token on the stack, without expanding it.
   * Similar in behavior to TeX's `\futurelet`.
   */
  future() {
    return this.stack.length === 0 && this.pushToken(this.lexer.lex()), this.stack[this.stack.length - 1];
  }
  /**
   * Remove and return the next unexpanded token.
   */
  popToken() {
    return this.future(), this.stack.pop();
  }
  /**
   * Add a given token to the token stack.  In particular, this get be used
   * to put back a token returned from one of the other methods.
   */
  pushToken(t) {
    this.stack.push(t);
  }
  /**
   * Append an array of tokens to the token stack.
   */
  pushTokens(t) {
    this.stack.push(...t);
  }
  /**
   * Find an macro argument without expanding tokens and append the array of
   * tokens to the token stack. Uses Token as a container for the result.
   */
  scanArgument(t) {
    var r, n, i;
    if (t) {
      if (this.consumeSpaces(), this.future().text !== "[")
        return null;
      r = this.popToken(), {
        tokens: i,
        end: n
      } = this.consumeArg(["]"]);
    } else
      ({
        tokens: i,
        start: r,
        end: n
      } = this.consumeArg());
    return this.pushToken(new Ot("EOF", n.loc)), this.pushTokens(i), r.range(n, "");
  }
  /**
   * Consume all following space tokens, without expansion.
   */
  consumeSpaces() {
    for (; ; ) {
      var t = this.future();
      if (t.text === " ")
        this.stack.pop();
      else
        break;
    }
  }
  /**
   * Consume an argument from the token stream, and return the resulting array
   * of tokens and start/end token.
   */
  consumeArg(t) {
    var r = [], n = t && t.length > 0;
    n || this.consumeSpaces();
    var i = this.future(), a, s = 0, o = 0;
    do {
      if (a = this.popToken(), r.push(a), a.text === "{")
        ++s;
      else if (a.text === "}") {
        if (--s, s === -1)
          throw new U("Extra }", a);
      } else if (a.text === "EOF")
        throw new U("Unexpected end of input in a macro argument, expected '" + (t && n ? t[o] : "}") + "'", a);
      if (t && n)
        if ((s === 0 || s === 1 && t[o] === "{") && a.text === t[o]) {
          if (++o, o === t.length) {
            r.splice(-o, o);
            break;
          }
        } else
          o = 0;
    } while (s !== 0 || n);
    return i.text === "{" && r[r.length - 1].text === "}" && (r.pop(), r.shift()), r.reverse(), {
      tokens: r,
      start: i,
      end: a
    };
  }
  /**
   * Consume the specified number of (delimited) arguments from the token
   * stream and return the resulting array of arguments.
   */
  consumeArgs(t, r) {
    if (r) {
      if (r.length !== t + 1)
        throw new U("The length of delimiters doesn't match the number of args!");
      for (var n = r[0], i = 0; i < n.length; i++) {
        var a = this.popToken();
        if (n[i] !== a.text)
          throw new U("Use of the macro doesn't match its definition", a);
      }
    }
    for (var s = [], o = 0; o < t; o++)
      s.push(this.consumeArg(r && r[o + 1]).tokens);
    return s;
  }
  /**
   * Expand the next token only once if possible.
   *
   * If the token is expanded, the resulting tokens will be pushed onto
   * the stack in reverse order and will be returned as an array,
   * also in reverse order.
   *
   * If not, the next token will be returned without removing it
   * from the stack.  This case can be detected by a `Token` return value
   * instead of an `Array` return value.
   *
   * In either case, the next token will be on the top of the stack,
   * or the stack will be empty.
   *
   * Used to implement `expandAfterFuture` and `expandNextToken`.
   *
   * If expandableOnly, only expandable tokens are expanded and
   * an undefined control sequence results in an error.
   */
  expandOnce(t) {
    var r = this.popToken(), n = r.text, i = r.noexpand ? null : this._getExpansion(n);
    if (i == null || t && i.unexpandable) {
      if (t && i == null && n[0] === "\\" && !this.isDefined(n))
        throw new U("Undefined control sequence: " + n);
      return this.pushToken(r), r;
    }
    if (this.expansionCount++, this.expansionCount > this.settings.maxExpand)
      throw new U("Too many expansions: infinite loop or need to increase maxExpand setting");
    var a = i.tokens, s = this.consumeArgs(i.numArgs, i.delimiters);
    if (i.numArgs) {
      a = a.slice();
      for (var o = a.length - 1; o >= 0; --o) {
        var l = a[o];
        if (l.text === "#") {
          if (o === 0)
            throw new U("Incomplete placeholder at end of macro body", l);
          if (l = a[--o], l.text === "#")
            a.splice(o + 1, 1);
          else if (/^[1-9]$/.test(l.text))
            a.splice(o, 2, ...s[+l.text - 1]);
          else
            throw new U("Not a valid argument number", l);
        }
      }
    }
    return this.pushTokens(a), a;
  }
  /**
   * Expand the next token only once (if possible), and return the resulting
   * top token on the stack (without removing anything from the stack).
   * Similar in behavior to TeX's `\expandafter\futurelet`.
   * Equivalent to expandOnce() followed by future().
   */
  expandAfterFuture() {
    return this.expandOnce(), this.future();
  }
  /**
   * Recursively expand first token, then return first non-expandable token.
   */
  expandNextToken() {
    for (; ; ) {
      var t = this.expandOnce();
      if (t instanceof Ot)
        return t.treatAsRelax && (t.text = "\\relax"), this.stack.pop();
    }
    throw new Error();
  }
  /**
   * Fully expand the given macro name and return the resulting list of
   * tokens, or return `undefined` if no such macro is defined.
   */
  expandMacro(t) {
    return this.macros.has(t) ? this.expandTokens([new Ot(t)]) : void 0;
  }
  /**
   * Fully expand the given token stream and return the resulting list of
   * tokens.  Note that the input tokens are in reverse order, but the
   * output tokens are in forward order.
   */
  expandTokens(t) {
    var r = [], n = this.stack.length;
    for (this.pushTokens(t); this.stack.length > n; ) {
      var i = this.expandOnce(!0);
      i instanceof Ot && (i.treatAsRelax && (i.noexpand = !1, i.treatAsRelax = !1), r.push(this.stack.pop()));
    }
    return r;
  }
  /**
   * Fully expand the given macro name and return the result as a string,
   * or return `undefined` if no such macro is defined.
   */
  expandMacroAsText(t) {
    var r = this.expandMacro(t);
    return r && r.map((n) => n.text).join("");
  }
  /**
   * Returns the expanded macro as a reversed array of tokens and a macro
   * argument count.  Or returns `null` if no such macro.
   */
  _getExpansion(t) {
    var r = this.macros.get(t);
    if (r == null)
      return r;
    if (t.length === 1) {
      var n = this.lexer.catcodes[t];
      if (n != null && n !== 13)
        return;
    }
    var i = typeof r == "function" ? r(this) : r;
    if (typeof i == "string") {
      var a = 0;
      if (i.indexOf("#") !== -1)
        for (var s = i.replace(/##/g, ""); s.indexOf("#" + (a + 1)) !== -1; )
          ++a;
      for (var o = new Cl(i, this.settings), l = [], u = o.lex(); u.text !== "EOF"; )
        l.push(u), u = o.lex();
      l.reverse();
      var d = {
        tokens: l,
        numArgs: a
      };
      return d;
    }
    return i;
  }
  /**
   * Determine whether a command is currently "defined" (has some
   * functionality), meaning that it's a macro (in the current group),
   * a function, a symbol, or one of the special commands listed in
   * `implicitCommands`.
   */
  isDefined(t) {
    return this.macros.has(t) || Dr.hasOwnProperty(t) || $e.math.hasOwnProperty(t) || $e.text.hasOwnProperty(t) || zu.hasOwnProperty(t);
  }
  /**
   * Determine whether a command is expandable.
   */
  isExpandable(t) {
    var r = this.macros.get(t);
    return r != null ? typeof r == "string" || typeof r == "function" || !r.unexpandable : Dr.hasOwnProperty(t) && !Dr[t].primitive;
  }
}
var Il = /^[₊₋₌₍₎₀₁₂₃₄₅₆₇₈₉ₐₑₕᵢⱼₖₗₘₙₒₚᵣₛₜᵤᵥₓᵦᵧᵨᵩᵪ]/, Di = Object.freeze({
  "₊": "+",
  "₋": "-",
  "₌": "=",
  "₍": "(",
  "₎": ")",
  "₀": "0",
  "₁": "1",
  "₂": "2",
  "₃": "3",
  "₄": "4",
  "₅": "5",
  "₆": "6",
  "₇": "7",
  "₈": "8",
  "₉": "9",
  "ₐ": "a",
  "ₑ": "e",
  "ₕ": "h",
  "ᵢ": "i",
  "ⱼ": "j",
  "ₖ": "k",
  "ₗ": "l",
  "ₘ": "m",
  "ₙ": "n",
  "ₒ": "o",
  "ₚ": "p",
  "ᵣ": "r",
  "ₛ": "s",
  "ₜ": "t",
  "ᵤ": "u",
  "ᵥ": "v",
  "ₓ": "x",
  "ᵦ": "β",
  "ᵧ": "γ",
  "ᵨ": "ρ",
  "ᵩ": "ϕ",
  "ᵪ": "χ",
  "⁺": "+",
  "⁻": "-",
  "⁼": "=",
  "⁽": "(",
  "⁾": ")",
  "⁰": "0",
  "¹": "1",
  "²": "2",
  "³": "3",
  "⁴": "4",
  "⁵": "5",
  "⁶": "6",
  "⁷": "7",
  "⁸": "8",
  "⁹": "9",
  "ᴬ": "A",
  "ᴮ": "B",
  "ᴰ": "D",
  "ᴱ": "E",
  "ᴳ": "G",
  "ᴴ": "H",
  "ᴵ": "I",
  "ᴶ": "J",
  "ᴷ": "K",
  "ᴸ": "L",
  "ᴹ": "M",
  "ᴺ": "N",
  "ᴼ": "O",
  "ᴾ": "P",
  "ᴿ": "R",
  "ᵀ": "T",
  "ᵁ": "U",
  "ⱽ": "V",
  "ᵂ": "W",
  "ᵃ": "a",
  "ᵇ": "b",
  "ᶜ": "c",
  "ᵈ": "d",
  "ᵉ": "e",
  "ᶠ": "f",
  "ᵍ": "g",
  ʰ: "h",
  "ⁱ": "i",
  ʲ: "j",
  "ᵏ": "k",
  ˡ: "l",
  "ᵐ": "m",
  ⁿ: "n",
  "ᵒ": "o",
  "ᵖ": "p",
  ʳ: "r",
  ˢ: "s",
  "ᵗ": "t",
  "ᵘ": "u",
  "ᵛ": "v",
  ʷ: "w",
  ˣ: "x",
  ʸ: "y",
  "ᶻ": "z",
  "ᵝ": "β",
  "ᵞ": "γ",
  "ᵟ": "δ",
  "ᵠ": "ϕ",
  "ᵡ": "χ",
  "ᶿ": "θ"
}), Ds = {
  "́": {
    text: "\\'",
    math: "\\acute"
  },
  "̀": {
    text: "\\`",
    math: "\\grave"
  },
  "̈": {
    text: '\\"',
    math: "\\ddot"
  },
  "̃": {
    text: "\\~",
    math: "\\tilde"
  },
  "̄": {
    text: "\\=",
    math: "\\bar"
  },
  "̆": {
    text: "\\u",
    math: "\\breve"
  },
  "̌": {
    text: "\\v",
    math: "\\check"
  },
  "̂": {
    text: "\\^",
    math: "\\hat"
  },
  "̇": {
    text: "\\.",
    math: "\\dot"
  },
  "̊": {
    text: "\\r",
    math: "\\mathring"
  },
  "̋": {
    text: "\\H"
  },
  "̧": {
    text: "\\c"
  }
}, Rl = {
  á: "á",
  à: "à",
  ä: "ä",
  ǟ: "ǟ",
  ã: "ã",
  ā: "ā",
  ă: "ă",
  ắ: "ắ",
  ằ: "ằ",
  ẵ: "ẵ",
  ǎ: "ǎ",
  â: "â",
  ấ: "ấ",
  ầ: "ầ",
  ẫ: "ẫ",
  ȧ: "ȧ",
  ǡ: "ǡ",
  å: "å",
  ǻ: "ǻ",
  ḃ: "ḃ",
  ć: "ć",
  ḉ: "ḉ",
  č: "č",
  ĉ: "ĉ",
  ċ: "ċ",
  ç: "ç",
  ď: "ď",
  ḋ: "ḋ",
  ḑ: "ḑ",
  é: "é",
  è: "è",
  ë: "ë",
  ẽ: "ẽ",
  ē: "ē",
  ḗ: "ḗ",
  ḕ: "ḕ",
  ĕ: "ĕ",
  ḝ: "ḝ",
  ě: "ě",
  ê: "ê",
  ế: "ế",
  ề: "ề",
  ễ: "ễ",
  ė: "ė",
  ȩ: "ȩ",
  ḟ: "ḟ",
  ǵ: "ǵ",
  ḡ: "ḡ",
  ğ: "ğ",
  ǧ: "ǧ",
  ĝ: "ĝ",
  ġ: "ġ",
  ģ: "ģ",
  ḧ: "ḧ",
  ȟ: "ȟ",
  ĥ: "ĥ",
  ḣ: "ḣ",
  ḩ: "ḩ",
  í: "í",
  ì: "ì",
  ï: "ï",
  ḯ: "ḯ",
  ĩ: "ĩ",
  ī: "ī",
  ĭ: "ĭ",
  ǐ: "ǐ",
  î: "î",
  ǰ: "ǰ",
  ĵ: "ĵ",
  ḱ: "ḱ",
  ǩ: "ǩ",
  ķ: "ķ",
  ĺ: "ĺ",
  ľ: "ľ",
  ļ: "ļ",
  ḿ: "ḿ",
  ṁ: "ṁ",
  ń: "ń",
  ǹ: "ǹ",
  ñ: "ñ",
  ň: "ň",
  ṅ: "ṅ",
  ņ: "ņ",
  ó: "ó",
  ò: "ò",
  ö: "ö",
  ȫ: "ȫ",
  õ: "õ",
  ṍ: "ṍ",
  ṏ: "ṏ",
  ȭ: "ȭ",
  ō: "ō",
  ṓ: "ṓ",
  ṑ: "ṑ",
  ŏ: "ŏ",
  ǒ: "ǒ",
  ô: "ô",
  ố: "ố",
  ồ: "ồ",
  ỗ: "ỗ",
  ȯ: "ȯ",
  ȱ: "ȱ",
  ő: "ő",
  ṕ: "ṕ",
  ṗ: "ṗ",
  ŕ: "ŕ",
  ř: "ř",
  ṙ: "ṙ",
  ŗ: "ŗ",
  ś: "ś",
  ṥ: "ṥ",
  š: "š",
  ṧ: "ṧ",
  ŝ: "ŝ",
  ṡ: "ṡ",
  ş: "ş",
  ẗ: "ẗ",
  ť: "ť",
  ṫ: "ṫ",
  ţ: "ţ",
  ú: "ú",
  ù: "ù",
  ü: "ü",
  ǘ: "ǘ",
  ǜ: "ǜ",
  ǖ: "ǖ",
  ǚ: "ǚ",
  ũ: "ũ",
  ṹ: "ṹ",
  ū: "ū",
  ṻ: "ṻ",
  ŭ: "ŭ",
  ǔ: "ǔ",
  û: "û",
  ů: "ů",
  ű: "ű",
  ṽ: "ṽ",
  ẃ: "ẃ",
  ẁ: "ẁ",
  ẅ: "ẅ",
  ŵ: "ŵ",
  ẇ: "ẇ",
  ẘ: "ẘ",
  ẍ: "ẍ",
  ẋ: "ẋ",
  ý: "ý",
  ỳ: "ỳ",
  ÿ: "ÿ",
  ỹ: "ỹ",
  ȳ: "ȳ",
  ŷ: "ŷ",
  ẏ: "ẏ",
  ẙ: "ẙ",
  ź: "ź",
  ž: "ž",
  ẑ: "ẑ",
  ż: "ż",
  Á: "Á",
  À: "À",
  Ä: "Ä",
  Ǟ: "Ǟ",
  Ã: "Ã",
  Ā: "Ā",
  Ă: "Ă",
  Ắ: "Ắ",
  Ằ: "Ằ",
  Ẵ: "Ẵ",
  Ǎ: "Ǎ",
  Â: "Â",
  Ấ: "Ấ",
  Ầ: "Ầ",
  Ẫ: "Ẫ",
  Ȧ: "Ȧ",
  Ǡ: "Ǡ",
  Å: "Å",
  Ǻ: "Ǻ",
  Ḃ: "Ḃ",
  Ć: "Ć",
  Ḉ: "Ḉ",
  Č: "Č",
  Ĉ: "Ĉ",
  Ċ: "Ċ",
  Ç: "Ç",
  Ď: "Ď",
  Ḋ: "Ḋ",
  Ḑ: "Ḑ",
  É: "É",
  È: "È",
  Ë: "Ë",
  Ẽ: "Ẽ",
  Ē: "Ē",
  Ḗ: "Ḗ",
  Ḕ: "Ḕ",
  Ĕ: "Ĕ",
  Ḝ: "Ḝ",
  Ě: "Ě",
  Ê: "Ê",
  Ế: "Ế",
  Ề: "Ề",
  Ễ: "Ễ",
  Ė: "Ė",
  Ȩ: "Ȩ",
  Ḟ: "Ḟ",
  Ǵ: "Ǵ",
  Ḡ: "Ḡ",
  Ğ: "Ğ",
  Ǧ: "Ǧ",
  Ĝ: "Ĝ",
  Ġ: "Ġ",
  Ģ: "Ģ",
  Ḧ: "Ḧ",
  Ȟ: "Ȟ",
  Ĥ: "Ĥ",
  Ḣ: "Ḣ",
  Ḩ: "Ḩ",
  Í: "Í",
  Ì: "Ì",
  Ï: "Ï",
  Ḯ: "Ḯ",
  Ĩ: "Ĩ",
  Ī: "Ī",
  Ĭ: "Ĭ",
  Ǐ: "Ǐ",
  Î: "Î",
  İ: "İ",
  Ĵ: "Ĵ",
  Ḱ: "Ḱ",
  Ǩ: "Ǩ",
  Ķ: "Ķ",
  Ĺ: "Ĺ",
  Ľ: "Ľ",
  Ļ: "Ļ",
  Ḿ: "Ḿ",
  Ṁ: "Ṁ",
  Ń: "Ń",
  Ǹ: "Ǹ",
  Ñ: "Ñ",
  Ň: "Ň",
  Ṅ: "Ṅ",
  Ņ: "Ņ",
  Ó: "Ó",
  Ò: "Ò",
  Ö: "Ö",
  Ȫ: "Ȫ",
  Õ: "Õ",
  Ṍ: "Ṍ",
  Ṏ: "Ṏ",
  Ȭ: "Ȭ",
  Ō: "Ō",
  Ṓ: "Ṓ",
  Ṑ: "Ṑ",
  Ŏ: "Ŏ",
  Ǒ: "Ǒ",
  Ô: "Ô",
  Ố: "Ố",
  Ồ: "Ồ",
  Ỗ: "Ỗ",
  Ȯ: "Ȯ",
  Ȱ: "Ȱ",
  Ő: "Ő",
  Ṕ: "Ṕ",
  Ṗ: "Ṗ",
  Ŕ: "Ŕ",
  Ř: "Ř",
  Ṙ: "Ṙ",
  Ŗ: "Ŗ",
  Ś: "Ś",
  Ṥ: "Ṥ",
  Š: "Š",
  Ṧ: "Ṧ",
  Ŝ: "Ŝ",
  Ṡ: "Ṡ",
  Ş: "Ş",
  Ť: "Ť",
  Ṫ: "Ṫ",
  Ţ: "Ţ",
  Ú: "Ú",
  Ù: "Ù",
  Ü: "Ü",
  Ǘ: "Ǘ",
  Ǜ: "Ǜ",
  Ǖ: "Ǖ",
  Ǚ: "Ǚ",
  Ũ: "Ũ",
  Ṹ: "Ṹ",
  Ū: "Ū",
  Ṻ: "Ṻ",
  Ŭ: "Ŭ",
  Ǔ: "Ǔ",
  Û: "Û",
  Ů: "Ů",
  Ű: "Ű",
  Ṽ: "Ṽ",
  Ẃ: "Ẃ",
  Ẁ: "Ẁ",
  Ẅ: "Ẅ",
  Ŵ: "Ŵ",
  Ẇ: "Ẇ",
  Ẍ: "Ẍ",
  Ẋ: "Ẋ",
  Ý: "Ý",
  Ỳ: "Ỳ",
  Ÿ: "Ÿ",
  Ỹ: "Ỹ",
  Ȳ: "Ȳ",
  Ŷ: "Ŷ",
  Ẏ: "Ẏ",
  Ź: "Ź",
  Ž: "Ž",
  Ẑ: "Ẑ",
  Ż: "Ż",
  ά: "ά",
  ὰ: "ὰ",
  ᾱ: "ᾱ",
  ᾰ: "ᾰ",
  έ: "έ",
  ὲ: "ὲ",
  ή: "ή",
  ὴ: "ὴ",
  ί: "ί",
  ὶ: "ὶ",
  ϊ: "ϊ",
  ΐ: "ΐ",
  ῒ: "ῒ",
  ῑ: "ῑ",
  ῐ: "ῐ",
  ό: "ό",
  ὸ: "ὸ",
  ύ: "ύ",
  ὺ: "ὺ",
  ϋ: "ϋ",
  ΰ: "ΰ",
  ῢ: "ῢ",
  ῡ: "ῡ",
  ῠ: "ῠ",
  ώ: "ώ",
  ὼ: "ὼ",
  Ύ: "Ύ",
  Ὺ: "Ὺ",
  Ϋ: "Ϋ",
  Ῡ: "Ῡ",
  Ῠ: "Ῠ",
  Ώ: "Ώ",
  Ὼ: "Ὼ"
};
class ni {
  constructor(t, r) {
    this.mode = void 0, this.gullet = void 0, this.settings = void 0, this.leftrightDepth = void 0, this.nextToken = void 0, this.mode = "math", this.gullet = new Ff(t, r, this.mode), this.settings = r, this.leftrightDepth = 0;
  }
  /**
   * Checks a result to make sure it has the right type, and throws an
   * appropriate error otherwise.
   */
  expect(t, r) {
    if (r === void 0 && (r = !0), this.fetch().text !== t)
      throw new U("Expected '" + t + "', got '" + this.fetch().text + "'", this.fetch());
    r && this.consume();
  }
  /**
   * Discards the current lookahead token, considering it consumed.
   */
  consume() {
    this.nextToken = null;
  }
  /**
   * Return the current lookahead token, or if there isn't one (at the
   * beginning, or if the previous lookahead token was consume()d),
   * fetch the next token as the new lookahead token and return it.
   */
  fetch() {
    return this.nextToken == null && (this.nextToken = this.gullet.expandNextToken()), this.nextToken;
  }
  /**
   * Switches between "text" and "math" modes.
   */
  switchMode(t) {
    this.mode = t, this.gullet.switchMode(t);
  }
  /**
   * Main parsing function, which parses an entire input.
   */
  parse() {
    this.settings.globalGroup || this.gullet.beginGroup(), this.settings.colorIsTextColor && this.gullet.macros.set("\\color", "\\textcolor");
    try {
      var t = this.parseExpression(!1);
      return this.expect("EOF"), this.settings.globalGroup || this.gullet.endGroup(), t;
    } finally {
      this.gullet.endGroups();
    }
  }
  /**
   * Fully parse a separate sequence of tokens as a separate job.
   * Tokens should be specified in reverse order, as in a MacroDefinition.
   */
  subparse(t) {
    var r = this.nextToken;
    this.consume(), this.gullet.pushToken(new Ot("}")), this.gullet.pushTokens(t);
    var n = this.parseExpression(!1);
    return this.expect("}"), this.nextToken = r, n;
  }
  /**
   * Parses an "expression", which is a list of atoms.
   *
   * `breakOnInfix`: Should the parsing stop when we hit infix nodes? This
   *                 happens when functions have higher precendence han infix
   *                 nodes in implicit parses.
   *
   * `breakOnTokenText`: The text of the token that the expression should end
   *                     with, or `null` if something else should end the
   *                     expression.
   */
  parseExpression(t, r) {
    for (var n = []; ; ) {
      this.mode === "math" && this.consumeSpaces();
      var i = this.fetch();
      if (ni.endOfExpression.indexOf(i.text) !== -1 || r && i.text === r || t && Dr[i.text] && Dr[i.text].infix)
        break;
      var a = this.parseAtom(r);
      if (a) {
        if (a.type === "internal")
          continue;
      } else
        break;
      n.push(a);
    }
    return this.mode === "text" && this.formLigatures(n), this.handleInfixNodes(n);
  }
  /**
   * Rewrites infix operators such as \over with corresponding commands such
   * as \frac.
   *
   * There can only be one infix operator per group.  If there's more than one
   * then the expression is ambiguous.  This can be resolved by adding {}.
   */
  handleInfixNodes(t) {
    for (var r = -1, n, i = 0; i < t.length; i++)
      if (t[i].type === "infix") {
        if (r !== -1)
          throw new U("only one infix operator per group", t[i].token);
        r = i, n = t[i].replaceWith;
      }
    if (r !== -1 && n) {
      var a, s, o = t.slice(0, r), l = t.slice(r + 1);
      o.length === 1 && o[0].type === "ordgroup" ? a = o[0] : a = {
        type: "ordgroup",
        mode: this.mode,
        body: o
      }, l.length === 1 && l[0].type === "ordgroup" ? s = l[0] : s = {
        type: "ordgroup",
        mode: this.mode,
        body: l
      };
      var u;
      return n === "\\\\abovefrac" ? u = this.callFunction(n, [a, t[r], s], []) : u = this.callFunction(n, [a, s], []), [u];
    } else
      return t;
  }
  /**
   * Handle a subscript or superscript with nice errors.
   */
  handleSupSubscript(t) {
    var r = this.fetch(), n = r.text;
    this.consume(), this.consumeSpaces();
    var i = this.parseGroup(t);
    if (!i)
      throw new U("Expected group after '" + n + "'", r);
    return i;
  }
  /**
   * Converts the textual input of an unsupported command into a text node
   * contained within a color node whose color is determined by errorColor
   */
  formatUnsupportedCmd(t) {
    for (var r = [], n = 0; n < t.length; n++)
      r.push({
        type: "textord",
        mode: "text",
        text: t[n]
      });
    var i = {
      type: "text",
      mode: this.mode,
      body: r
    }, a = {
      type: "color",
      mode: this.mode,
      color: this.settings.errorColor,
      body: [i]
    };
    return a;
  }
  /**
   * Parses a group with optional super/subscripts.
   */
  parseAtom(t) {
    var r = this.parseGroup("atom", t);
    if (this.mode === "text")
      return r;
    for (var n, i; ; ) {
      this.consumeSpaces();
      var a = this.fetch();
      if (a.text === "\\limits" || a.text === "\\nolimits") {
        if (r && r.type === "op") {
          var s = a.text === "\\limits";
          r.limits = s, r.alwaysHandleSupSub = !0;
        } else if (r && r.type === "operatorname")
          r.alwaysHandleSupSub && (r.limits = a.text === "\\limits");
        else
          throw new U("Limit controls must follow a math operator", a);
        this.consume();
      } else if (a.text === "^") {
        if (n)
          throw new U("Double superscript", a);
        n = this.handleSupSubscript("superscript");
      } else if (a.text === "_") {
        if (i)
          throw new U("Double subscript", a);
        i = this.handleSupSubscript("subscript");
      } else if (a.text === "'") {
        if (n)
          throw new U("Double superscript", a);
        var o = {
          type: "textord",
          mode: this.mode,
          text: "\\prime"
        }, l = [o];
        for (this.consume(); this.fetch().text === "'"; )
          l.push(o), this.consume();
        this.fetch().text === "^" && l.push(this.handleSupSubscript("superscript")), n = {
          type: "ordgroup",
          mode: this.mode,
          body: l
        };
      } else if (Di[a.text]) {
        var u = Di[a.text], d = Il.test(a.text);
        for (this.consume(); ; ) {
          var p = this.fetch().text;
          if (!Di[p] || Il.test(p) !== d)
            break;
          this.consume(), u += Di[p];
        }
        var b = new ni(u, this.settings).parse();
        d ? i = {
          type: "ordgroup",
          mode: "math",
          body: b
        } : n = {
          type: "ordgroup",
          mode: "math",
          body: b
        };
      } else
        break;
    }
    return n || i ? {
      type: "supsub",
      mode: this.mode,
      base: r,
      sup: n,
      sub: i
    } : r;
  }
  /**
   * Parses an entire function, including its base and all of its arguments.
   */
  parseFunction(t, r) {
    var n = this.fetch(), i = n.text, a = Dr[i];
    if (!a)
      return null;
    if (this.consume(), r && r !== "atom" && !a.allowedInArgument)
      throw new U("Got function '" + i + "' with no arguments" + (r ? " as " + r : ""), n);
    if (this.mode === "text" && !a.allowedInText)
      throw new U("Can't use function '" + i + "' in text mode", n);
    if (this.mode === "math" && a.allowedInMath === !1)
      throw new U("Can't use function '" + i + "' in math mode", n);
    var {
      args: s,
      optArgs: o
    } = this.parseArguments(i, a);
    return this.callFunction(i, s, o, n, t);
  }
  /**
   * Call a function handler with a suitable context and arguments.
   */
  callFunction(t, r, n, i, a) {
    var s = {
      funcName: t,
      parser: this,
      token: i,
      breakOnTokenText: a
    }, o = Dr[t];
    if (o && o.handler)
      return o.handler(s, r, n);
    throw new U("No function handler for " + t);
  }
  /**
   * Parses the arguments of a function or environment
   */
  parseArguments(t, r) {
    var n = r.numArgs + r.numOptionalArgs;
    if (n === 0)
      return {
        args: [],
        optArgs: []
      };
    for (var i = [], a = [], s = 0; s < n; s++) {
      var o = r.argTypes && r.argTypes[s], l = s < r.numOptionalArgs;
      (r.primitive && o == null || // \sqrt expands into primitive if optional argument doesn't exist
      r.type === "sqrt" && s === 1 && a[0] == null) && (o = "primitive");
      var u = this.parseGroupOfType("argument to '" + t + "'", o, l);
      if (l)
        a.push(u);
      else if (u != null)
        i.push(u);
      else
        throw new U("Null argument, please report this as a bug");
    }
    return {
      args: i,
      optArgs: a
    };
  }
  /**
   * Parses a group when the mode is changing.
   */
  parseGroupOfType(t, r, n) {
    switch (r) {
      case "color":
        return this.parseColorGroup(n);
      case "size":
        return this.parseSizeGroup(n);
      case "url":
        return this.parseUrlGroup(n);
      case "math":
      case "text":
        return this.parseArgumentGroup(n, r);
      case "hbox": {
        var i = this.parseArgumentGroup(n, "text");
        return i != null ? {
          type: "styling",
          mode: i.mode,
          body: [i],
          style: "text"
          // simulate \textstyle
        } : null;
      }
      case "raw": {
        var a = this.parseStringGroup("raw", n);
        return a != null ? {
          type: "raw",
          mode: "text",
          string: a.text
        } : null;
      }
      case "primitive": {
        if (n)
          throw new U("A primitive argument cannot be optional");
        var s = this.parseGroup(t);
        if (s == null)
          throw new U("Expected group as " + t, this.fetch());
        return s;
      }
      case "original":
      case null:
      case void 0:
        return this.parseArgumentGroup(n);
      default:
        throw new U("Unknown group type as " + t, this.fetch());
    }
  }
  /**
   * Discard any space tokens, fetching the next non-space token.
   */
  consumeSpaces() {
    for (; this.fetch().text === " "; )
      this.consume();
  }
  /**
   * Parses a group, essentially returning the string formed by the
   * brace-enclosed tokens plus some position information.
   */
  parseStringGroup(t, r) {
    var n = this.gullet.scanArgument(r);
    if (n == null)
      return null;
    for (var i = "", a; (a = this.fetch()).text !== "EOF"; )
      i += a.text, this.consume();
    return this.consume(), n.text = i, n;
  }
  /**
   * Parses a regex-delimited group: the largest sequence of tokens
   * whose concatenated strings match `regex`. Returns the string
   * formed by the tokens plus some position information.
   */
  parseRegexGroup(t, r) {
    for (var n = this.fetch(), i = n, a = "", s; (s = this.fetch()).text !== "EOF" && t.test(a + s.text); )
      i = s, a += i.text, this.consume();
    if (a === "")
      throw new U("Invalid " + r + ": '" + n.text + "'", n);
    return n.range(i, a);
  }
  /**
   * Parses a color description.
   */
  parseColorGroup(t) {
    var r = this.parseStringGroup("color", t);
    if (r == null)
      return null;
    var n = /^(#[a-f0-9]{3}|#?[a-f0-9]{6}|[a-z]+)$/i.exec(r.text);
    if (!n)
      throw new U("Invalid color: '" + r.text + "'", r);
    var i = n[0];
    return /^[0-9a-f]{6}$/i.test(i) && (i = "#" + i), {
      type: "color-token",
      mode: this.mode,
      color: i
    };
  }
  /**
   * Parses a size specification, consisting of magnitude and unit.
   */
  parseSizeGroup(t) {
    var r, n = !1;
    if (this.gullet.consumeSpaces(), !t && this.gullet.future().text !== "{" ? r = this.parseRegexGroup(/^[-+]? *(?:$|\d+|\d+\.\d*|\.\d*) *[a-z]{0,2} *$/, "size") : r = this.parseStringGroup("size", t), !r)
      return null;
    !t && r.text.length === 0 && (r.text = "0pt", n = !0);
    var i = /([-+]?) *(\d+(?:\.\d*)?|\.\d+) *([a-z]{2})/.exec(r.text);
    if (!i)
      throw new U("Invalid size: '" + r.text + "'", r);
    var a = {
      number: +(i[1] + i[2]),
      // sign + magnitude, cast to number
      unit: i[3]
    };
    if (!Xc(a))
      throw new U("Invalid unit: '" + a.unit + "'", r);
    return {
      type: "size",
      mode: this.mode,
      value: a,
      isBlank: n
    };
  }
  /**
   * Parses an URL, checking escaped letters and allowed protocols,
   * and setting the catcode of % as an active character (as in \hyperref).
   */
  parseUrlGroup(t) {
    this.gullet.lexer.setCatcode("%", 13), this.gullet.lexer.setCatcode("~", 12);
    var r = this.parseStringGroup("url", t);
    if (this.gullet.lexer.setCatcode("%", 14), this.gullet.lexer.setCatcode("~", 13), r == null)
      return null;
    var n = r.text.replace(/\\([#$%&~_^{}])/g, "$1");
    return {
      type: "url",
      mode: this.mode,
      url: n
    };
  }
  /**
   * Parses an argument with the mode specified.
   */
  parseArgumentGroup(t, r) {
    var n = this.gullet.scanArgument(t);
    if (n == null)
      return null;
    var i = this.mode;
    r && this.switchMode(r), this.gullet.beginGroup();
    var a = this.parseExpression(!1, "EOF");
    this.expect("EOF"), this.gullet.endGroup();
    var s = {
      type: "ordgroup",
      mode: this.mode,
      loc: n.loc,
      body: a
    };
    return r && this.switchMode(i), s;
  }
  /**
   * Parses an ordinary group, which is either a single nucleus (like "x")
   * or an expression in braces (like "{x+y}") or an implicit group, a group
   * that starts at the current position, and ends right before a higher explicit
   * group ends, or at EOF.
   */
  parseGroup(t, r) {
    var n = this.fetch(), i = n.text, a;
    if (i === "{" || i === "\\begingroup") {
      this.consume();
      var s = i === "{" ? "}" : "\\endgroup";
      this.gullet.beginGroup();
      var o = this.parseExpression(!1, s), l = this.fetch();
      this.expect(s), this.gullet.endGroup(), a = {
        type: "ordgroup",
        mode: this.mode,
        loc: Ct.range(n, l),
        body: o,
        // A group formed by \begingroup...\endgroup is a semi-simple group
        // which doesn't affect spacing in math mode, i.e., is transparent.
        // https://tex.stackexchange.com/questions/1930/when-should-one-
        // use-begingroup-instead-of-bgroup
        semisimple: i === "\\begingroup" || void 0
      };
    } else if (a = this.parseFunction(r, t) || this.parseSymbol(), a == null && i[0] === "\\" && !zu.hasOwnProperty(i)) {
      if (this.settings.throwOnError)
        throw new U("Undefined control sequence: " + i, n);
      a = this.formatUnsupportedCmd(i), this.consume();
    }
    return a;
  }
  /**
   * Form ligature-like combinations of characters for text mode.
   * This includes inputs like "--", "---", "``" and "''".
   * The result will simply replace multiple textord nodes with a single
   * character in each value by a single textord node having multiple
   * characters in its value.  The representation is still ASCII source.
   * The group will be modified in place.
   */
  formLigatures(t) {
    for (var r = t.length - 1, n = 0; n < r; ++n) {
      var i = t[n], a = i.text;
      a === "-" && t[n + 1].text === "-" && (n + 1 < r && t[n + 2].text === "-" ? (t.splice(n, 3, {
        type: "textord",
        mode: "text",
        loc: Ct.range(i, t[n + 2]),
        text: "---"
      }), r -= 2) : (t.splice(n, 2, {
        type: "textord",
        mode: "text",
        loc: Ct.range(i, t[n + 1]),
        text: "--"
      }), r -= 1)), (a === "'" || a === "`") && t[n + 1].text === a && (t.splice(n, 2, {
        type: "textord",
        mode: "text",
        loc: Ct.range(i, t[n + 1]),
        text: a + a
      }), r -= 1);
    }
  }
  /**
   * Parse a single symbol out of the string. Here, we handle single character
   * symbols and special functions like \verb.
   */
  parseSymbol() {
    var t = this.fetch(), r = t.text;
    if (/^\\verb[^a-zA-Z]/.test(r)) {
      this.consume();
      var n = r.slice(5), i = n.charAt(0) === "*";
      if (i && (n = n.slice(1)), n.length < 2 || n.charAt(0) !== n.slice(-1))
        throw new U(`\\verb assertion failed --
                    please report what input caused this bug`);
      return n = n.slice(1, -1), {
        type: "verb",
        mode: "text",
        body: n,
        star: i
      };
    }
    Rl.hasOwnProperty(r[0]) && !$e[this.mode][r[0]] && (this.settings.strict && this.mode === "math" && this.settings.reportNonstrict("unicodeTextInMathMode", 'Accented Unicode text character "' + r[0] + '" used in math mode', t), r = Rl[r[0]] + r.slice(1));
    var a = Nf.exec(r);
    a && (r = r.substring(0, a.index), r === "i" ? r = "ı" : r === "j" && (r = "ȷ"));
    var s;
    if ($e[this.mode][r]) {
      this.settings.strict && this.mode === "math" && ao.indexOf(r) >= 0 && this.settings.reportNonstrict("unicodeTextInMathMode", 'Latin-1/Unicode text character "' + r[0] + '" used in math mode', t);
      var o = $e[this.mode][r].group, l = Ct.range(t), u;
      if (kp.hasOwnProperty(o)) {
        var d = o;
        u = {
          type: "atom",
          mode: this.mode,
          family: d,
          loc: l,
          text: r
        };
      } else
        u = {
          type: o,
          mode: this.mode,
          loc: l,
          text: r
        };
      s = u;
    } else if (r.charCodeAt(0) >= 128)
      this.settings.strict && (Vc(r.charCodeAt(0)) ? this.mode === "math" && this.settings.reportNonstrict("unicodeTextInMathMode", 'Unicode text character "' + r[0] + '" used in math mode', t) : this.settings.reportNonstrict("unknownSymbol", 'Unrecognized Unicode character "' + r[0] + '"' + (" (" + r.charCodeAt(0) + ")"), t)), s = {
        type: "textord",
        mode: "text",
        loc: Ct.range(t),
        text: r
      };
    else
      return null;
    if (this.consume(), a)
      for (var p = 0; p < a[0].length; p++) {
        var b = a[0][p];
        if (!Ds[b])
          throw new U("Unknown accent ' " + b + "'", t);
        var m = Ds[b][this.mode] || Ds[b].text;
        if (!m)
          throw new U("Accent " + b + " unsupported in " + this.mode + " mode", t);
        s = {
          type: "accent",
          mode: this.mode,
          loc: Ct.range(t),
          label: m,
          isStretchy: !1,
          isShifty: !0,
          // $FlowFixMe
          base: s
        };
      }
    return s;
  }
}
ni.endOfExpression = ["}", "\\endgroup", "\\end", "\\right", "&"];
var t0 = function(t, r) {
  if (!(typeof t == "string" || t instanceof String))
    throw new TypeError("KaTeX can only parse string typed expression");
  var n = new ni(t, r);
  delete n.gullet.macros.current["\\df@tag"];
  var i = n.parse();
  if (delete n.gullet.macros.current["\\current@color"], delete n.gullet.macros.current["\\color"], n.gullet.macros.get("\\df@tag")) {
    if (!r.displayMode)
      throw new U("\\tag works only in display equations");
    i = [{
      type: "tag",
      mode: "text",
      body: i,
      tag: n.subparse([new Ot("\\df@tag")])
    }];
  }
  return i;
}, Pu = function(t, r, n) {
  r.textContent = "";
  var i = r0(t, n).toNode();
  r.appendChild(i);
};
typeof document < "u" && document.compatMode !== "CSS1Compat" && (typeof console < "u" && console.warn("Warning: KaTeX doesn't work in quirks mode. Make sure your website has a suitable doctype."), Pu = function() {
  throw new U("KaTeX doesn't work in quirks mode.");
});
var $f = function(t, r) {
  var n = r0(t, r).toMarkup();
  return n;
}, zf = function(t, r) {
  var n = new Fo(r);
  return t0(t, n);
}, Uu = function(t, r, n) {
  if (n.throwOnError || !(t instanceof U))
    throw t;
  var i = E.makeSpan(["katex-error"], [new Mt(r)]);
  return i.setAttribute("title", t.toString()), i.setAttribute("style", "color:" + n.errorColor), i;
}, r0 = function(t, r) {
  var n = new Fo(r);
  try {
    var i = t0(t, n);
    return Yp(i, t, n);
  } catch (a) {
    return Uu(a, t, n);
  }
}, Pf = function(t, r) {
  var n = new Fo(r);
  try {
    var i = t0(t, n);
    return Vp(i, t, n);
  } catch (a) {
    return Uu(a, t, n);
  }
}, Hu = {
  /**
   * Current KaTeX version
   */
  version: "0.16.4",
  /**
   * Renders the given LaTeX into an HTML+MathML combination, and adds
   * it as a child to the specified DOM node.
   */
  render: Pu,
  /**
   * Renders the given LaTeX into an HTML+MathML combination string,
   * for sending to the client.
   */
  renderToString: $f,
  /**
   * KaTeX error, usually during parsing.
   */
  ParseError: U,
  /**
   * The shema of Settings
   */
  SETTINGS_SCHEMA: Xi,
  /**
   * Parses the given LaTeX into KaTeX's internal parse tree structure,
   * without rendering to HTML or MathML.
   *
   * NOTE: This method is not currently recommended for public use.
   * The internal tree representation is unstable and is very likely
   * to change. Use at your own risk.
   */
  __parse: zf,
  /**
   * Renders the given LaTeX into an HTML+MathML internal DOM tree
   * representation, without flattening that representation to a string.
   *
   * NOTE: This method is not currently recommended for public use.
   * The internal tree representation is unstable and is very likely
   * to change. Use at your own risk.
   */
  __renderToDomTree: r0,
  /**
   * Renders the given LaTeX into an HTML internal DOM tree representation,
   * without MathML and without flattening that representation to a string.
   *
   * NOTE: This method is not currently recommended for public use.
   * The internal tree representation is unstable and is very likely
   * to change. Use at your own risk.
   */
  __renderToHTMLTree: Pf,
  /**
   * extends internal font metrics object with a new object
   * each key in the new object represents a font name
  */
  __setFontMetrics: bp,
  /**
   * adds a new symbol to builtin symbols table
   */
  __defineSymbol: c,
  /**
   * adds a new macro to builtin macro list
   */
  __defineMacro: g,
  /**
   * Expose the dom tree node types, which can be useful for type checking nodes.
   *
   * NOTE: This method is not currently recommended for public use.
   * The internal tree representation is unstable and is very likely
   * to change. Use at your own risk.
   */
  __domTree: {
    Span: mi,
    Anchor: Po,
    SymbolNode: Mt,
    SvgNode: _r,
    PathNode: Pr,
    LineNode: io
  }
};
ue.TokenizerAndRendererExtension;
const Uf = {
  level: "block",
  name: "math_block",
  start(e) {
    var t;
    return (t = e.match(/\$\$([\s\S]*?)\$\$/)) == null ? void 0 : t.index;
  },
  tokenizer(e) {
    const r = /^\$\$([\s\S]*?)\$\$/.exec(e);
    if (r)
      try {
        return {
          type: "math_block",
          raw: r[0],
          text: r[1].trim()
        };
      } catch (n) {
        console.warn(n);
        return;
      }
  },
  renderer(e) {
    try {
      return Hu.renderToString(e.text);
    } catch {
      return `<span style='color: red'>[数学算式解析错误]</span><br>${e.text}`;
    }
  }
}, Hf = {
  level: "inline",
  name: "math_inline",
  start(e) {
    var t;
    return (t = e.match(/\$([\s\S]*?)\$/)) == null ? void 0 : t.index;
  },
  tokenizer(e) {
    const r = /^\$([\s\S]*?)\$/.exec(e);
    if (r)
      try {
        return {
          type: "math_inline",
          raw: r[0],
          text: r[1].trim()
        };
      } catch (n) {
        console.warn(n);
        return;
      }
  },
  renderer(e) {
    try {
      return Hu.renderToString(e.text);
    } catch {
      return `<span style='color: red'>[数学算式解析错误]</span><br>${e.text}`;
    }
  }
}, qf = {
  level: "inline",
  name: "warning_inline",
  start(e) {
    var t;
    return (t = e.match(/!(\(.*\))?([\s\S]*?)!/)) == null ? void 0 : t.index;
  },
  tokenizer(e) {
    const r = /^!(\(.*\))?([\s\S]*?)!/.exec(e);
    if (r)
      try {
        return {
          type: "warning_inline",
          raw: r[0],
          text: r[2].trim(),
          color: r[1] ? r[1].slice(1, -1).trim() : "red"
        };
      } catch (n) {
        console.warn(n);
        return;
      }
  },
  renderer(e) {
    return `<span style='color: ${e.color}'>${e.text}</span>`;
  }
}, Gf = {
  level: "block",
  name: "detail",
  start(e) {
    var t;
    return (t = e.match(/:::([\s\S]*?):::/)) == null ? void 0 : t.index;
  },
  tokenizer(e) {
    const r = /^:::(.*)\n([\s\S]*?):::/.exec(e);
    if (r)
      try {
        return {
          type: "detail",
          raw: r[0],
          summary: r[1].trim(),
          detail: r[2].trim()
        };
      } catch (n) {
        console.warn(n);
        return;
      }
  },
  renderer(e) {
    const t = this.parser.options;
    return e.summary.startsWith("+") ? `<details open><summary>${e.summary.substring(1)}</summary>${ue(e.detail, t)}</details>` : `<details><summary>${e.summary}</summary>${ue(e.detail, t)}</details>`;
  }
};
var ho = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function X9(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var po = {}, Wf = {
  get exports() {
    return po;
  },
  set exports(e) {
    po = e;
  }
};
(function(e) {
  var t = typeof window < "u" ? window : typeof WorkerGlobalScope < "u" && self instanceof WorkerGlobalScope ? self : {};
  /**
   * Prism: Lightweight, robust, elegant syntax highlighting
   *
   * @license MIT <https://opensource.org/licenses/MIT>
   * @author Lea Verou <https://lea.verou.me>
   * @namespace
   * @public
   */
  var r = function(n) {
    var i = /(?:^|\s)lang(?:uage)?-([\w-]+)(?=\s|$)/i, a = 0, s = {}, o = {
      /**
       * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the
       * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load
       * additional languages or plugins yourself.
       *
       * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.
       *
       * You obviously have to change this value before the automatic highlighting started. To do this, you can add an
       * empty Prism object into the global scope before loading the Prism script like this:
       *
       * ```js
       * window.Prism = window.Prism || {};
       * Prism.manual = true;
       * // add a new <script> to load Prism's script
       * ```
       *
       * @default false
       * @type {boolean}
       * @memberof Prism
       * @public
       */
      manual: n.Prism && n.Prism.manual,
      /**
       * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses
       * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your
       * own worker, you don't want it to do this.
       *
       * By setting this value to `true`, Prism will not add its own listeners to the worker.
       *
       * You obviously have to change this value before Prism executes. To do this, you can add an
       * empty Prism object into the global scope before loading the Prism script like this:
       *
       * ```js
       * window.Prism = window.Prism || {};
       * Prism.disableWorkerMessageHandler = true;
       * // Load Prism's script
       * ```
       *
       * @default false
       * @type {boolean}
       * @memberof Prism
       * @public
       */
      disableWorkerMessageHandler: n.Prism && n.Prism.disableWorkerMessageHandler,
      /**
       * A namespace for utility methods.
       *
       * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may
       * change or disappear at any time.
       *
       * @namespace
       * @memberof Prism
       */
      util: {
        encode: function v(S) {
          return S instanceof l ? new l(S.type, v(S.content), S.alias) : Array.isArray(S) ? S.map(v) : S.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/\u00a0/g, " ");
        },
        /**
         * Returns the name of the type of the given value.
         *
         * @param {any} o
         * @returns {string}
         * @example
         * type(null)      === 'Null'
         * type(undefined) === 'Undefined'
         * type(123)       === 'Number'
         * type('foo')     === 'String'
         * type(true)      === 'Boolean'
         * type([1, 2])    === 'Array'
         * type({})        === 'Object'
         * type(String)    === 'Function'
         * type(/abc+/)    === 'RegExp'
         */
        type: function(v) {
          return Object.prototype.toString.call(v).slice(8, -1);
        },
        /**
         * Returns a unique number for the given object. Later calls will still return the same number.
         *
         * @param {Object} obj
         * @returns {number}
         */
        objId: function(v) {
          return v.__id || Object.defineProperty(v, "__id", { value: ++a }), v.__id;
        },
        /**
         * Creates a deep clone of the given object.
         *
         * The main intended use of this function is to clone language definitions.
         *
         * @param {T} o
         * @param {Record<number, any>} [visited]
         * @returns {T}
         * @template T
         */
        clone: function v(S, C) {
          C = C || {};
          var I, R;
          switch (o.util.type(S)) {
            case "Object":
              if (R = o.util.objId(S), C[R])
                return C[R];
              I = /** @type {Record<string, any>} */
              {}, C[R] = I;
              for (var N in S)
                S.hasOwnProperty(N) && (I[N] = v(S[N], C));
              return (
                /** @type {any} */
                I
              );
            case "Array":
              return R = o.util.objId(S), C[R] ? C[R] : (I = [], C[R] = I, /** @type {Array} */
              /** @type {any} */
              S.forEach(function(K, B) {
                I[B] = v(K, C);
              }), /** @type {any} */
              I);
            default:
              return S;
          }
        },
        /**
         * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.
         *
         * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.
         *
         * @param {Element} element
         * @returns {string}
         */
        getLanguage: function(v) {
          for (; v; ) {
            var S = i.exec(v.className);
            if (S)
              return S[1].toLowerCase();
            v = v.parentElement;
          }
          return "none";
        },
        /**
         * Sets the Prism `language-xxxx` class of the given element.
         *
         * @param {Element} element
         * @param {string} language
         * @returns {void}
         */
        setLanguage: function(v, S) {
          v.className = v.className.replace(RegExp(i, "gi"), ""), v.classList.add("language-" + S);
        },
        /**
         * Returns the script element that is currently executing.
         *
         * This does __not__ work for line script element.
         *
         * @returns {HTMLScriptElement | null}
         */
        currentScript: function() {
          if (typeof document > "u")
            return null;
          if ("currentScript" in document && 1 < 2)
            return (
              /** @type {any} */
              document.currentScript
            );
          try {
            throw new Error();
          } catch (I) {
            var v = (/at [^(\r\n]*\((.*):[^:]+:[^:]+\)$/i.exec(I.stack) || [])[1];
            if (v) {
              var S = document.getElementsByTagName("script");
              for (var C in S)
                if (S[C].src == v)
                  return S[C];
            }
            return null;
          }
        },
        /**
         * Returns whether a given class is active for `element`.
         *
         * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated
         * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the
         * given class is just the given class with a `no-` prefix.
         *
         * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is
         * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its
         * ancestors have the given class or the negated version of it, then the default activation will be returned.
         *
         * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated
         * version of it, the class is considered active.
         *
         * @param {Element} element
         * @param {string} className
         * @param {boolean} [defaultActivation=false]
         * @returns {boolean}
         */
        isActive: function(v, S, C) {
          for (var I = "no-" + S; v; ) {
            var R = v.classList;
            if (R.contains(S))
              return !0;
            if (R.contains(I))
              return !1;
            v = v.parentElement;
          }
          return !!C;
        }
      },
      /**
       * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.
       *
       * @namespace
       * @memberof Prism
       * @public
       */
      languages: {
        /**
         * The grammar for plain, unformatted text.
         */
        plain: s,
        plaintext: s,
        text: s,
        txt: s,
        /**
         * Creates a deep copy of the language with the given id and appends the given tokens.
         *
         * If a token in `redef` also appears in the copied language, then the existing token in the copied language
         * will be overwritten at its original position.
         *
         * ## Best practices
         *
         * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)
         * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to
         * understand the language definition because, normally, the order of tokens matters in Prism grammars.
         *
         * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.
         * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.
         *
         * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.
         * @param {Grammar} redef The new tokens to append.
         * @returns {Grammar} The new language created.
         * @public
         * @example
         * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {
         *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token
         *     // at its original position
         *     'comment': { ... },
         *     // CSS doesn't have a 'color' token, so this token will be appended
         *     'color': /\b(?:red|green|blue)\b/
         * });
         */
        extend: function(v, S) {
          var C = o.util.clone(o.languages[v]);
          for (var I in S)
            C[I] = S[I];
          return C;
        },
        /**
         * Inserts tokens _before_ another token in a language definition or any other grammar.
         *
         * ## Usage
         *
         * This helper method makes it easy to modify existing languages. For example, the CSS language definition
         * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded
         * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the
         * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do
         * this:
         *
         * ```js
         * Prism.languages.markup.style = {
         *     // token
         * };
         * ```
         *
         * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens
         * before existing tokens. For the CSS example above, you would use it like this:
         *
         * ```js
         * Prism.languages.insertBefore('markup', 'cdata', {
         *     'style': {
         *         // token
         *     }
         * });
         * ```
         *
         * ## Special cases
         *
         * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar
         * will be ignored.
         *
         * This behavior can be used to insert tokens after `before`:
         *
         * ```js
         * Prism.languages.insertBefore('markup', 'comment', {
         *     'comment': Prism.languages.markup.comment,
         *     // tokens after 'comment'
         * });
         * ```
         *
         * ## Limitations
         *
         * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object
         * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave
         * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily
         * deleting properties which is necessary to insert at arbitrary positions.
         *
         * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.
         * Instead, it will create a new object and replace all references to the target object with the new one. This
         * can be done without temporarily deleting properties, so the iteration order is well-defined.
         *
         * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if
         * you hold the target object in a variable, then the value of the variable will not change.
         *
         * ```js
         * var oldMarkup = Prism.languages.markup;
         * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });
         *
         * assert(oldMarkup !== Prism.languages.markup);
         * assert(newMarkup === Prism.languages.markup);
         * ```
         *
         * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the
         * object to be modified.
         * @param {string} before The key to insert before.
         * @param {Grammar} insert An object containing the key-value pairs to be inserted.
         * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the
         * object to be modified.
         *
         * Defaults to `Prism.languages`.
         * @returns {Grammar} The new grammar object.
         * @public
         */
        insertBefore: function(v, S, C, I) {
          I = I || /** @type {any} */
          o.languages;
          var R = I[v], N = {};
          for (var K in R)
            if (R.hasOwnProperty(K)) {
              if (K == S)
                for (var B in C)
                  C.hasOwnProperty(B) && (N[B] = C[B]);
              C.hasOwnProperty(K) || (N[K] = R[K]);
            }
          var ie = I[v];
          return I[v] = N, o.languages.DFS(o.languages, function(ge, ce) {
            ce === ie && ge != v && (this[ge] = N);
          }), N;
        },
        // Traverse a language definition with Depth First Search
        DFS: function v(S, C, I, R) {
          R = R || {};
          var N = o.util.objId;
          for (var K in S)
            if (S.hasOwnProperty(K)) {
              C.call(S, K, S[K], I || K);
              var B = S[K], ie = o.util.type(B);
              ie === "Object" && !R[N(B)] ? (R[N(B)] = !0, v(B, C, null, R)) : ie === "Array" && !R[N(B)] && (R[N(B)] = !0, v(B, C, K, R));
            }
        }
      },
      plugins: {},
      /**
       * This is the most high-level function in Prism’s API.
       * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on
       * each one of them.
       *
       * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.
       *
       * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.
       * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.
       * @memberof Prism
       * @public
       */
      highlightAll: function(v, S) {
        o.highlightAllUnder(document, v, S);
      },
      /**
       * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls
       * {@link Prism.highlightElement} on each one of them.
       *
       * The following hooks will be run:
       * 1. `before-highlightall`
       * 2. `before-all-elements-highlight`
       * 3. All hooks of {@link Prism.highlightElement} for each element.
       *
       * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.
       * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.
       * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.
       * @memberof Prism
       * @public
       */
      highlightAllUnder: function(v, S, C) {
        var I = {
          callback: C,
          container: v,
          selector: 'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'
        };
        o.hooks.run("before-highlightall", I), I.elements = Array.prototype.slice.apply(I.container.querySelectorAll(I.selector)), o.hooks.run("before-all-elements-highlight", I);
        for (var R = 0, N; N = I.elements[R++]; )
          o.highlightElement(N, S === !0, I.callback);
      },
      /**
       * Highlights the code inside a single element.
       *
       * The following hooks will be run:
       * 1. `before-sanity-check`
       * 2. `before-highlight`
       * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.
       * 4. `before-insert`
       * 5. `after-highlight`
       * 6. `complete`
       *
       * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for
       * the element's language.
       *
       * @param {Element} element The element containing the code.
       * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.
       * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers
       * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is
       * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).
       *
       * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for
       * asynchronous highlighting to work. You can build your own bundle on the
       * [Download page](https://prismjs.com/download.html).
       * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.
       * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.
       * @memberof Prism
       * @public
       */
      highlightElement: function(v, S, C) {
        var I = o.util.getLanguage(v), R = o.languages[I];
        o.util.setLanguage(v, I);
        var N = v.parentElement;
        N && N.nodeName.toLowerCase() === "pre" && o.util.setLanguage(N, I);
        var K = v.textContent, B = {
          element: v,
          language: I,
          grammar: R,
          code: K
        };
        function ie(ce) {
          B.highlightedCode = ce, o.hooks.run("before-insert", B), B.element.innerHTML = B.highlightedCode, o.hooks.run("after-highlight", B), o.hooks.run("complete", B), C && C.call(B.element);
        }
        if (o.hooks.run("before-sanity-check", B), N = B.element.parentElement, N && N.nodeName.toLowerCase() === "pre" && !N.hasAttribute("tabindex") && N.setAttribute("tabindex", "0"), !B.code) {
          o.hooks.run("complete", B), C && C.call(B.element);
          return;
        }
        if (o.hooks.run("before-highlight", B), !B.grammar) {
          ie(o.util.encode(B.code));
          return;
        }
        if (S && n.Worker) {
          var ge = new Worker(o.filename);
          ge.onmessage = function(ce) {
            ie(ce.data);
          }, ge.postMessage(JSON.stringify({
            language: B.language,
            code: B.code,
            immediateClose: !0
          }));
        } else
          ie(o.highlight(B.code, B.grammar, B.language));
      },
      /**
       * Low-level function, only use if you know what you’re doing. It accepts a string of text as input
       * and the language definitions to use, and returns a string with the HTML produced.
       *
       * The following hooks will be run:
       * 1. `before-tokenize`
       * 2. `after-tokenize`
       * 3. `wrap`: On each {@link Token}.
       *
       * @param {string} text A string with the code to be highlighted.
       * @param {Grammar} grammar An object containing the tokens to use.
       *
       * Usually a language definition like `Prism.languages.markup`.
       * @param {string} language The name of the language definition passed to `grammar`.
       * @returns {string} The highlighted HTML.
       * @memberof Prism
       * @public
       * @example
       * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');
       */
      highlight: function(v, S, C) {
        var I = {
          code: v,
          grammar: S,
          language: C
        };
        if (o.hooks.run("before-tokenize", I), !I.grammar)
          throw new Error('The language "' + I.language + '" has no grammar.');
        return I.tokens = o.tokenize(I.code, I.grammar), o.hooks.run("after-tokenize", I), l.stringify(o.util.encode(I.tokens), I.language);
      },
      /**
       * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input
       * and the language definitions to use, and returns an array with the tokenized code.
       *
       * When the language definition includes nested tokens, the function is called recursively on each of these tokens.
       *
       * This method could be useful in other contexts as well, as a very crude parser.
       *
       * @param {string} text A string with the code to be highlighted.
       * @param {Grammar} grammar An object containing the tokens to use.
       *
       * Usually a language definition like `Prism.languages.markup`.
       * @returns {TokenStream} An array of strings and tokens, a token stream.
       * @memberof Prism
       * @public
       * @example
       * let code = `var foo = 0;`;
       * let tokens = Prism.tokenize(code, Prism.languages.javascript);
       * tokens.forEach(token => {
       *     if (token instanceof Prism.Token && token.type === 'number') {
       *         console.log(`Found numeric literal: ${token.content}`);
       *     }
       * });
       */
      tokenize: function(v, S) {
        var C = S.rest;
        if (C) {
          for (var I in C)
            S[I] = C[I];
          delete S.rest;
        }
        var R = new p();
        return b(R, R.head, v), d(v, R, S, R.head, 0), _(R);
      },
      /**
       * @namespace
       * @memberof Prism
       * @public
       */
      hooks: {
        all: {},
        /**
         * Adds the given callback to the list of callbacks for the given hook.
         *
         * The callback will be invoked when the hook it is registered for is run.
         * Hooks are usually directly run by a highlight function but you can also run hooks yourself.
         *
         * One callback function can be registered to multiple hooks and the same hook multiple times.
         *
         * @param {string} name The name of the hook.
         * @param {HookCallback} callback The callback function which is given environment variables.
         * @public
         */
        add: function(v, S) {
          var C = o.hooks.all;
          C[v] = C[v] || [], C[v].push(S);
        },
        /**
         * Runs a hook invoking all registered callbacks with the given environment variables.
         *
         * Callbacks will be invoked synchronously and in the order in which they were registered.
         *
         * @param {string} name The name of the hook.
         * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.
         * @public
         */
        run: function(v, S) {
          var C = o.hooks.all[v];
          if (!(!C || !C.length))
            for (var I = 0, R; R = C[I++]; )
              R(S);
        }
      },
      Token: l
    };
    n.Prism = o;
    function l(v, S, C, I) {
      this.type = v, this.content = S, this.alias = C, this.length = (I || "").length | 0;
    }
    l.stringify = function v(S, C) {
      if (typeof S == "string")
        return S;
      if (Array.isArray(S)) {
        var I = "";
        return S.forEach(function(ie) {
          I += v(ie, C);
        }), I;
      }
      var R = {
        type: S.type,
        content: v(S.content, C),
        tag: "span",
        classes: ["token", S.type],
        attributes: {},
        language: C
      }, N = S.alias;
      N && (Array.isArray(N) ? Array.prototype.push.apply(R.classes, N) : R.classes.push(N)), o.hooks.run("wrap", R);
      var K = "";
      for (var B in R.attributes)
        K += " " + B + '="' + (R.attributes[B] || "").replace(/"/g, "&quot;") + '"';
      return "<" + R.tag + ' class="' + R.classes.join(" ") + '"' + K + ">" + R.content + "</" + R.tag + ">";
    };
    function u(v, S, C, I) {
      v.lastIndex = S;
      var R = v.exec(C);
      if (R && I && R[1]) {
        var N = R[1].length;
        R.index += N, R[0] = R[0].slice(N);
      }
      return R;
    }
    function d(v, S, C, I, R, N) {
      for (var K in C)
        if (!(!C.hasOwnProperty(K) || !C[K])) {
          var B = C[K];
          B = Array.isArray(B) ? B : [B];
          for (var ie = 0; ie < B.length; ++ie) {
            if (N && N.cause == K + "," + ie)
              return;
            var ge = B[ie], ce = ge.inside, V = !!ge.lookbehind, F = !!ge.greedy, $ = ge.alias;
            if (F && !ge.pattern.global) {
              var te = ge.pattern.toString().match(/[imsuy]*$/)[0];
              ge.pattern = RegExp(ge.pattern.source, te + "g");
            }
            for (var P = ge.pattern || ge, Z = I.next, G = R; Z !== S.tail && !(N && G >= N.reach); G += Z.value.length, Z = Z.next) {
              var ae = Z.value;
              if (S.length > v.length)
                return;
              if (!(ae instanceof l)) {
                var se = 1, Y;
                if (F) {
                  if (Y = u(P, G, v, V), !Y || Y.index >= v.length)
                    break;
                  var Ce = Y.index, Oe = Y.index + Y[0].length, _e = G;
                  for (_e += Z.value.length; Ce >= _e; )
                    Z = Z.next, _e += Z.value.length;
                  if (_e -= Z.value.length, G = _e, Z.value instanceof l)
                    continue;
                  for (var Me = Z; Me !== S.tail && (_e < Oe || typeof Me.value == "string"); Me = Me.next)
                    se++, _e += Me.value.length;
                  se--, ae = v.slice(G, _e), Y.index -= G;
                } else if (Y = u(P, 0, ae, V), !Y)
                  continue;
                var Ce = Y.index, ze = Y[0], He = ae.slice(0, Ce), Re = ae.slice(Ce + ze.length), we = G + ae.length;
                N && we > N.reach && (N.reach = we);
                var Ee = Z.prev;
                He && (Ee = b(S, Ee, He), G += He.length), m(S, Ee, se);
                var rt = new l(K, ce ? o.tokenize(ze, ce) : ze, $, ze);
                if (Z = b(S, Ee, rt), Re && b(S, Z, Re), se > 1) {
                  var ut = {
                    cause: K + "," + ie,
                    reach: we
                  };
                  d(v, S, C, Z.prev, G, ut), N && ut.reach > N.reach && (N.reach = ut.reach);
                }
              }
            }
          }
        }
    }
    function p() {
      var v = { value: null, prev: null, next: null }, S = { value: null, prev: v, next: null };
      v.next = S, this.head = v, this.tail = S, this.length = 0;
    }
    function b(v, S, C) {
      var I = S.next, R = { value: C, prev: S, next: I };
      return S.next = R, I.prev = R, v.length++, R;
    }
    function m(v, S, C) {
      for (var I = S.next, R = 0; R < C && I !== v.tail; R++)
        I = I.next;
      S.next = I, I.prev = S, v.length -= R;
    }
    function _(v) {
      for (var S = [], C = v.head.next; C !== v.tail; )
        S.push(C.value), C = C.next;
      return S;
    }
    if (!n.document)
      return n.addEventListener && (o.disableWorkerMessageHandler || n.addEventListener("message", function(v) {
        var S = JSON.parse(v.data), C = S.language, I = S.code, R = S.immediateClose;
        n.postMessage(o.highlight(I, o.languages[C], C)), R && n.close();
      }, !1)), o;
    var k = o.util.currentScript();
    k && (o.filename = k.src, k.hasAttribute("data-manual") && (o.manual = !0));
    function L() {
      o.manual || o.highlightAll();
    }
    if (!o.manual) {
      var A = document.readyState;
      A === "loading" || A === "interactive" && k && k.defer ? document.addEventListener("DOMContentLoaded", L) : window.requestAnimationFrame ? window.requestAnimationFrame(L) : window.setTimeout(L, 16);
    }
    return o;
  }(t);
  e.exports && (e.exports = r), typeof ho < "u" && (ho.Prism = r);
})(Wf);
const Ll = po;
Prism.languages.clike = {
  comment: [
    {
      pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
      lookbehind: !0,
      greedy: !0
    },
    {
      pattern: /(^|[^\\:])\/\/.*/,
      lookbehind: !0,
      greedy: !0
    }
  ],
  string: {
    pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
    greedy: !0
  },
  "class-name": {
    pattern: /(\b(?:class|extends|implements|instanceof|interface|new|trait)\s+|\bcatch\s+\()[\w.\\]+/i,
    lookbehind: !0,
    inside: {
      punctuation: /[.\\]/
    }
  },
  keyword: /\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\b/,
  boolean: /\b(?:false|true)\b/,
  function: /\b\w+(?=\()/,
  number: /\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,
  operator: /[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,
  punctuation: /[{}[\];(),.:]/
};
Prism.languages.markup = {
  comment: {
    pattern: /<!--(?:(?!<!--)[\s\S])*?-->/,
    greedy: !0
  },
  prolog: {
    pattern: /<\?[\s\S]+?\?>/,
    greedy: !0
  },
  doctype: {
    // https://www.w3.org/TR/xml/#NT-doctypedecl
    pattern: /<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i,
    greedy: !0,
    inside: {
      "internal-subset": {
        pattern: /(^[^\[]*\[)[\s\S]+(?=\]>$)/,
        lookbehind: !0,
        greedy: !0,
        inside: null
        // see below
      },
      string: {
        pattern: /"[^"]*"|'[^']*'/,
        greedy: !0
      },
      punctuation: /^<!|>$|[[\]]/,
      "doctype-tag": /^DOCTYPE/i,
      name: /[^\s<>'"]+/
    }
  },
  cdata: {
    pattern: /<!\[CDATA\[[\s\S]*?\]\]>/i,
    greedy: !0
  },
  tag: {
    pattern: /<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/,
    greedy: !0,
    inside: {
      tag: {
        pattern: /^<\/?[^\s>\/]+/,
        inside: {
          punctuation: /^<\/?/,
          namespace: /^[^\s>\/:]+:/
        }
      },
      "special-attr": [],
      "attr-value": {
        pattern: /=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,
        inside: {
          punctuation: [
            {
              pattern: /^=/,
              alias: "attr-equals"
            },
            {
              pattern: /^(\s*)["']|["']$/,
              lookbehind: !0
            }
          ]
        }
      },
      punctuation: /\/?>/,
      "attr-name": {
        pattern: /[^\s>\/]+/,
        inside: {
          namespace: /^[^\s>\/:]+:/
        }
      }
    }
  },
  entity: [
    {
      pattern: /&[\da-z]{1,8};/i,
      alias: "named-entity"
    },
    /&#x?[\da-f]{1,8};/i
  ]
};
Prism.languages.markup.tag.inside["attr-value"].inside.entity = Prism.languages.markup.entity;
Prism.languages.markup.doctype.inside["internal-subset"].inside = Prism.languages.markup;
Prism.hooks.add("wrap", function(e) {
  e.type === "entity" && (e.attributes.title = e.content.replace(/&amp;/, "&"));
});
Object.defineProperty(Prism.languages.markup.tag, "addInlined", {
  /**
   * Adds an inlined language to markup.
   *
   * An example of an inlined language is CSS with `<style>` tags.
   *
   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as
   * case insensitive.
   * @param {string} lang The language key.
   * @example
   * addInlined('style', 'css');
   */
  value: function(t, r) {
    var n = {};
    n["language-" + r] = {
      pattern: /(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,
      lookbehind: !0,
      inside: Prism.languages[r]
    }, n.cdata = /^<!\[CDATA\[|\]\]>$/i;
    var i = {
      "included-cdata": {
        pattern: /<!\[CDATA\[[\s\S]*?\]\]>/i,
        inside: n
      }
    };
    i["language-" + r] = {
      pattern: /[\s\S]+/,
      inside: Prism.languages[r]
    };
    var a = {};
    a[t] = {
      pattern: RegExp(/(<__[^>]*>)(?:<!\[CDATA\[(?:[^\]]|\](?!\]>))*\]\]>|(?!<!\[CDATA\[)[\s\S])*?(?=<\/__>)/.source.replace(/__/g, function() {
        return t;
      }), "i"),
      lookbehind: !0,
      greedy: !0,
      inside: i
    }, Prism.languages.insertBefore("markup", "cdata", a);
  }
});
Object.defineProperty(Prism.languages.markup.tag, "addAttribute", {
  /**
   * Adds an pattern to highlight languages embedded in HTML attributes.
   *
   * An example of an inlined language is CSS with `style` attributes.
   *
   * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as
   * case insensitive.
   * @param {string} lang The language key.
   * @example
   * addAttribute('style', 'css');
   */
  value: function(e, t) {
    Prism.languages.markup.tag.inside["special-attr"].push({
      pattern: RegExp(
        /(^|["'\s])/.source + "(?:" + e + ")" + /\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))/.source,
        "i"
      ),
      lookbehind: !0,
      inside: {
        "attr-name": /^[^\s=]+/,
        "attr-value": {
          pattern: /=[\s\S]+/,
          inside: {
            value: {
              pattern: /(^=\s*(["']|(?!["'])))\S[\s\S]*(?=\2$)/,
              lookbehind: !0,
              alias: [t, "language-" + t],
              inside: Prism.languages[t]
            },
            punctuation: [
              {
                pattern: /^=/,
                alias: "attr-equals"
              },
              /"|'/
            ]
          }
        }
      }
    });
  }
});
Prism.languages.html = Prism.languages.markup;
Prism.languages.mathml = Prism.languages.markup;
Prism.languages.svg = Prism.languages.markup;
Prism.languages.xml = Prism.languages.extend("markup", {});
Prism.languages.ssml = Prism.languages.xml;
Prism.languages.atom = Prism.languages.xml;
Prism.languages.rss = Prism.languages.xml;
Prism.languages.javascript = Prism.languages.extend("clike", {
  "class-name": [
    Prism.languages.clike["class-name"],
    {
      pattern: /(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:constructor|prototype))/,
      lookbehind: !0
    }
  ],
  keyword: [
    {
      pattern: /((?:^|\})\s*)catch\b/,
      lookbehind: !0
    },
    {
      pattern: /(^|[^.]|\.\.\.\s*)\b(?:as|assert(?=\s*\{)|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\s*(?:\{|$))|for|from(?=\s*(?:['"]|$))|function|(?:get|set)(?=\s*(?:[#\[$\w\xA0-\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,
      lookbehind: !0
    }
  ],
  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)
  function: /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,
  number: {
    pattern: RegExp(
      /(^|[^\w$])/.source + "(?:" + // constant
      (/NaN|Infinity/.source + "|" + // binary integer
      /0[bB][01]+(?:_[01]+)*n?/.source + "|" + // octal integer
      /0[oO][0-7]+(?:_[0-7]+)*n?/.source + "|" + // hexadecimal integer
      /0[xX][\dA-Fa-f]+(?:_[\dA-Fa-f]+)*n?/.source + "|" + // decimal bigint
      /\d+(?:_\d+)*n/.source + "|" + // decimal number (integer or float) but no bigint
      /(?:\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[Ee][+-]?\d+(?:_\d+)*)?/.source) + ")" + /(?![\w$])/.source
    ),
    lookbehind: !0
  },
  operator: /--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/
});
Prism.languages.javascript["class-name"][0].pattern = /(\b(?:class|extends|implements|instanceof|interface|new)\s+)[\w.\\]+/;
Prism.languages.insertBefore("javascript", "keyword", {
  regex: {
    pattern: RegExp(
      // lookbehind
      // eslint-disable-next-line regexp/no-dupe-characters-character-class
      /((?:^|[^$\w\xA0-\uFFFF."'\])\s]|\b(?:return|yield))\s*)/.source + // Regex pattern:
      // There are 2 regex patterns here. The RegExp set notation proposal added support for nested character
      // classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible
      // with the only syntax, so we have to define 2 different regex patterns.
      /\//.source + "(?:" + /(?:\[(?:[^\]\\\r\n]|\\.)*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}/.source + "|" + // `v` flag syntax. This supports 3 levels of nested character classes.
      /(?:\[(?:[^[\]\\\r\n]|\\.|\[(?:[^[\]\\\r\n]|\\.|\[(?:[^[\]\\\r\n]|\\.)*\])*\])*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source + ")" + // lookahead
      /(?=(?:\s|\/\*(?:[^*]|\*(?!\/))*\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/.source
    ),
    lookbehind: !0,
    greedy: !0,
    inside: {
      "regex-source": {
        pattern: /^(\/)[\s\S]+(?=\/[a-z]*$)/,
        lookbehind: !0,
        alias: "language-regex",
        inside: Prism.languages.regex
      },
      "regex-delimiter": /^\/|\/$/,
      "regex-flags": /^[a-z]+$/
    }
  },
  // This must be declared before keyword because we use "function" inside the look-forward
  "function-variable": {
    pattern: /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,
    alias: "function"
  },
  parameter: [
    {
      pattern: /(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))/,
      lookbehind: !0,
      inside: Prism.languages.javascript
    },
    {
      pattern: /(^|[^$\w\xA0-\uFFFF])(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)/i,
      lookbehind: !0,
      inside: Prism.languages.javascript
    },
    {
      pattern: /(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)/,
      lookbehind: !0,
      inside: Prism.languages.javascript
    },
    {
      pattern: /((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)/,
      lookbehind: !0,
      inside: Prism.languages.javascript
    }
  ],
  constant: /\b[A-Z](?:[A-Z_]|\dx?)*\b/
});
Prism.languages.insertBefore("javascript", "string", {
  hashbang: {
    pattern: /^#!.*/,
    greedy: !0,
    alias: "comment"
  },
  "template-string": {
    pattern: /`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`/,
    greedy: !0,
    inside: {
      "template-punctuation": {
        pattern: /^`|`$/,
        alias: "string"
      },
      interpolation: {
        pattern: /((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,
        lookbehind: !0,
        inside: {
          "interpolation-punctuation": {
            pattern: /^\$\{|\}$/,
            alias: "punctuation"
          },
          rest: Prism.languages.javascript
        }
      },
      string: /[\s\S]+/
    }
  },
  "string-property": {
    pattern: /((?:^|[,{])[ \t]*)(["'])(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2(?=\s*:)/m,
    lookbehind: !0,
    greedy: !0,
    alias: "property"
  }
});
Prism.languages.insertBefore("javascript", "operator", {
  "literal-property": {
    pattern: /((?:^|[,{])[ \t]*)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/m,
    lookbehind: !0,
    alias: "property"
  }
});
Prism.languages.markup && (Prism.languages.markup.tag.addInlined("script", "javascript"), Prism.languages.markup.tag.addAttribute(
  /on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,
  "javascript"
));
Prism.languages.js = Prism.languages.javascript;
(function(e) {
  var t = /(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/;
  e.languages.css = {
    comment: /\/\*[\s\S]*?\*\//,
    atrule: {
      pattern: RegExp("@[\\w-](?:" + /[^;{\s"']|\s+(?!\s)/.source + "|" + t.source + ")*?" + /(?:;|(?=\s*\{))/.source),
      inside: {
        rule: /^@[\w-]+/,
        "selector-function-argument": {
          pattern: /(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/,
          lookbehind: !0,
          alias: "selector"
        },
        keyword: {
          pattern: /(^|[^\w-])(?:and|not|only|or)(?![\w-])/,
          lookbehind: !0
        }
        // See rest below
      }
    },
    url: {
      // https://drafts.csswg.org/css-values-3/#urls
      pattern: RegExp("\\burl\\((?:" + t.source + "|" + /(?:[^\\\r\n()"']|\\[\s\S])*/.source + ")\\)", "i"),
      greedy: !0,
      inside: {
        function: /^url/i,
        punctuation: /^\(|\)$/,
        string: {
          pattern: RegExp("^" + t.source + "$"),
          alias: "url"
        }
      }
    },
    selector: {
      pattern: RegExp(`(^|[{}\\s])[^{}\\s](?:[^{};"'\\s]|\\s+(?![\\s{])|` + t.source + ")*(?=\\s*\\{)"),
      lookbehind: !0
    },
    string: {
      pattern: t,
      greedy: !0
    },
    property: {
      pattern: /(^|[^-\w\xA0-\uFFFF])(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i,
      lookbehind: !0
    },
    important: /!important\b/i,
    function: {
      pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\()/i,
      lookbehind: !0
    },
    punctuation: /[(){};:,]/
  }, e.languages.css.atrule.inside.rest = e.languages.css;
  var r = e.languages.markup;
  r && (r.tag.addInlined("style", "css"), r.tag.addAttribute("style", "css"));
})(Prism);
(function(e) {
  var t = /("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/, r;
  e.languages.css.selector = {
    pattern: e.languages.css.selector.pattern,
    lookbehind: !0,
    inside: r = {
      "pseudo-element": /:(?:after|before|first-letter|first-line|selection)|::[-\w]+/,
      "pseudo-class": /:[-\w]+/,
      class: /\.[-\w]+/,
      id: /#[-\w]+/,
      attribute: {
        pattern: RegExp(`\\[(?:[^[\\]"']|` + t.source + ")*\\]"),
        greedy: !0,
        inside: {
          punctuation: /^\[|\]$/,
          "case-sensitivity": {
            pattern: /(\s)[si]$/i,
            lookbehind: !0,
            alias: "keyword"
          },
          namespace: {
            pattern: /^(\s*)(?:(?!\s)[-*\w\xA0-\uFFFF])*\|(?!=)/,
            lookbehind: !0,
            inside: {
              punctuation: /\|$/
            }
          },
          "attr-name": {
            pattern: /^(\s*)(?:(?!\s)[-\w\xA0-\uFFFF])+/,
            lookbehind: !0
          },
          "attr-value": [
            t,
            {
              pattern: /(=\s*)(?:(?!\s)[-\w\xA0-\uFFFF])+(?=\s*$)/,
              lookbehind: !0
            }
          ],
          operator: /[|~*^$]?=/
        }
      },
      "n-th": [
        {
          pattern: /(\(\s*)[+-]?\d*[\dn](?:\s*[+-]\s*\d+)?(?=\s*\))/,
          lookbehind: !0,
          inside: {
            number: /[\dn]+/,
            operator: /[+-]/
          }
        },
        {
          pattern: /(\(\s*)(?:even|odd)(?=\s*\))/i,
          lookbehind: !0
        }
      ],
      combinator: />|\+|~|\|\|/,
      // the `tag` token has been existed and removed.
      // because we can't find a perfect tokenize to match it.
      // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.
      punctuation: /[(),]/
    }
  }, e.languages.css.atrule.inside["selector-function-argument"].inside = r, e.languages.insertBefore("css", "property", {
    variable: {
      pattern: /(^|[^-\w\xA0-\uFFFF])--(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*/i,
      lookbehind: !0
    }
  });
  var n = {
    pattern: /(\b\d+)(?:%|[a-z]+(?![\w-]))/,
    lookbehind: !0
  }, i = {
    pattern: /(^|[^\w.-])-?(?:\d+(?:\.\d+)?|\.\d+)/,
    lookbehind: !0
  };
  e.languages.insertBefore("css", "function", {
    operator: {
      pattern: /(\s)[+\-*\/](?=\s)/,
      lookbehind: !0
    },
    // CAREFUL!
    // Previewers and Inline color use hexcode and color.
    hexcode: {
      pattern: /\B#[\da-f]{3,8}\b/i,
      alias: "color"
    },
    color: [
      {
        pattern: /(^|[^\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|RebeccaPurple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\w-])/i,
        lookbehind: !0
      },
      {
        pattern: /\b(?:hsl|rgb)\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*\)\B|\b(?:hsl|rgb)a\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*,\s*(?:0|0?\.\d+|1)\s*\)\B/i,
        inside: {
          unit: n,
          number: i,
          function: /[\w-]+(?=\()/,
          punctuation: /[(),]/
        }
      }
    ],
    // it's important that there is no boundary assertion after the hex digits
    entity: /\\[\da-f]{1,8}/i,
    unit: n,
    number: i
  });
})(Prism);
(function(e) {
  var t = /[*&][^\s[\]{},]+/, r = /!(?:<[\w\-%#;/?:@&=+$,.!~*'()[\]]+>|(?:[a-zA-Z\d-]*!)?[\w\-%#;/?:@&=+$.~*'()]+)?/, n = "(?:" + r.source + "(?:[ 	]+" + t.source + ")?|" + t.source + "(?:[ 	]+" + r.source + ")?)", i = /(?:[^\s\x00-\x08\x0e-\x1f!"#%&'*,\-:>?@[\]`{|}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]|[?:-]<PLAIN>)(?:[ \t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g, function() {
    return /[^\s\x00-\x08\x0e-\x1f,[\]{}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]/.source;
  }), a = /"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\\\r\n]|\\.)*'/.source;
  function s(o, l) {
    l = (l || "").replace(/m/g, "") + "m";
    var u = /([:\-,[{]\s*(?:\s<<prop>>[ \t]+)?)(?:<<value>>)(?=[ \t]*(?:$|,|\]|\}|(?:[\r\n]\s*)?#))/.source.replace(/<<prop>>/g, function() {
      return n;
    }).replace(/<<value>>/g, function() {
      return o;
    });
    return RegExp(u, l);
  }
  e.languages.yaml = {
    scalar: {
      pattern: RegExp(/([\-:]\s*(?:\s<<prop>>[ \t]+)?[|>])[ \t]*(?:((?:\r?\n|\r)[ \t]+)\S[^\r\n]*(?:\2[^\r\n]+)*)/.source.replace(/<<prop>>/g, function() {
        return n;
      })),
      lookbehind: !0,
      alias: "string"
    },
    comment: /#.*/,
    key: {
      pattern: RegExp(/((?:^|[:\-,[{\r\n?])[ \t]*(?:<<prop>>[ \t]+)?)<<key>>(?=\s*:\s)/.source.replace(/<<prop>>/g, function() {
        return n;
      }).replace(/<<key>>/g, function() {
        return "(?:" + i + "|" + a + ")";
      })),
      lookbehind: !0,
      greedy: !0,
      alias: "atrule"
    },
    directive: {
      pattern: /(^[ \t]*)%.+/m,
      lookbehind: !0,
      alias: "important"
    },
    datetime: {
      pattern: s(/\d{4}-\d\d?-\d\d?(?:[tT]|[ \t]+)\d\d?:\d{2}:\d{2}(?:\.\d*)?(?:[ \t]*(?:Z|[-+]\d\d?(?::\d{2})?))?|\d{4}-\d{2}-\d{2}|\d\d?:\d{2}(?::\d{2}(?:\.\d*)?)?/.source),
      lookbehind: !0,
      alias: "number"
    },
    boolean: {
      pattern: s(/false|true/.source, "i"),
      lookbehind: !0,
      alias: "important"
    },
    null: {
      pattern: s(/null|~/.source, "i"),
      lookbehind: !0,
      alias: "important"
    },
    string: {
      pattern: s(a),
      lookbehind: !0,
      greedy: !0
    },
    number: {
      pattern: s(/[+-]?(?:0x[\da-f]+|0o[0-7]+|(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?|\.inf|\.nan)/.source, "i"),
      lookbehind: !0
    },
    tag: r,
    important: t,
    punctuation: /---|[:[\]{}\-,|>?]|\.\.\./
  }, e.languages.yml = e.languages.yaml;
})(Prism);
Prism.languages.graphql = {
  comment: /#.*/,
  description: {
    pattern: /(?:"""(?:[^"]|(?!""")")*"""|"(?:\\.|[^\\"\r\n])*")(?=\s*[a-z_])/i,
    greedy: !0,
    alias: "string",
    inside: {
      "language-markdown": {
        pattern: /(^"(?:"")?)(?!\1)[\s\S]+(?=\1$)/,
        lookbehind: !0,
        inside: Prism.languages.markdown
      }
    }
  },
  string: {
    pattern: /"""(?:[^"]|(?!""")")*"""|"(?:\\.|[^\\"\r\n])*"/,
    greedy: !0
  },
  number: /(?:\B-|\b)\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,
  boolean: /\b(?:false|true)\b/,
  variable: /\$[a-z_]\w*/i,
  directive: {
    pattern: /@[a-z_]\w*/i,
    alias: "function"
  },
  "attr-name": {
    pattern: /\b[a-z_]\w*(?=\s*(?:\((?:[^()"]|"(?:\\.|[^\\"\r\n])*")*\))?:)/i,
    greedy: !0
  },
  "atom-input": {
    pattern: /\b[A-Z]\w*Input\b/,
    alias: "class-name"
  },
  scalar: /\b(?:Boolean|Float|ID|Int|String)\b/,
  constant: /\b[A-Z][A-Z_\d]*\b/,
  "class-name": {
    pattern: /(\b(?:enum|implements|interface|on|scalar|type|union)\s+|&\s*|:\s*|\[)[A-Z_]\w*/,
    lookbehind: !0
  },
  fragment: {
    pattern: /(\bfragment\s+|\.{3}\s*(?!on\b))[a-zA-Z_]\w*/,
    lookbehind: !0,
    alias: "function"
  },
  "definition-mutation": {
    pattern: /(\bmutation\s+)[a-zA-Z_]\w*/,
    lookbehind: !0,
    alias: "function"
  },
  "definition-query": {
    pattern: /(\bquery\s+)[a-zA-Z_]\w*/,
    lookbehind: !0,
    alias: "function"
  },
  keyword: /\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\b/,
  operator: /[!=|&]|\.{3}/,
  "property-query": /\w+(?=\s*\()/,
  object: /\w+(?=\s*\{)/,
  punctuation: /[!(){}\[\]:=,]/,
  property: /\w+/
};
Prism.hooks.add("after-tokenize", function(t) {
  if (t.language !== "graphql")
    return;
  var r = t.tokens.filter(function(k) {
    return typeof k != "string" && k.type !== "comment" && k.type !== "scalar";
  }), n = 0;
  function i(k) {
    return r[n + k];
  }
  function a(k, L) {
    L = L || 0;
    for (var A = 0; A < k.length; A++) {
      var v = i(A + L);
      if (!v || v.type !== k[A])
        return !1;
    }
    return !0;
  }
  function s(k, L) {
    for (var A = 1, v = n; v < r.length; v++) {
      var S = r[v], C = S.content;
      if (S.type === "punctuation" && typeof C == "string") {
        if (k.test(C))
          A++;
        else if (L.test(C) && (A--, A === 0))
          return v;
      }
    }
    return -1;
  }
  function o(k, L) {
    var A = k.alias;
    A ? Array.isArray(A) || (k.alias = A = [A]) : k.alias = A = [], A.push(L);
  }
  for (; n < r.length; ) {
    var l = r[n++];
    if (l.type === "keyword" && l.content === "mutation") {
      var u = [];
      if (a(["definition-mutation", "punctuation"]) && i(1).content === "(") {
        n += 2;
        var d = s(/^\($/, /^\)$/);
        if (d === -1)
          continue;
        for (; n < d; n++) {
          var p = i(0);
          p.type === "variable" && (o(p, "variable-input"), u.push(p.content));
        }
        n = d + 1;
      }
      if (a(["punctuation", "property-query"]) && i(0).content === "{" && (n++, o(i(0), "property-mutation"), u.length > 0)) {
        var b = s(/^\{$/, /^\}$/);
        if (b === -1)
          continue;
        for (var m = n; m < b; m++) {
          var _ = r[m];
          _.type === "variable" && u.indexOf(_.content) >= 0 && o(_, "variable-input");
        }
      }
    }
  }
});
Prism.languages.sql = {
  comment: {
    pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/|#).*)/,
    lookbehind: !0
  },
  variable: [
    {
      pattern: /@(["'`])(?:\\[\s\S]|(?!\1)[^\\])+\1/,
      greedy: !0
    },
    /@[\w.$]+/
  ],
  string: {
    pattern: /(^|[^@\\])("|')(?:\\[\s\S]|(?!\2)[^\\]|\2\2)*\2/,
    greedy: !0,
    lookbehind: !0
  },
  identifier: {
    pattern: /(^|[^@\\])`(?:\\[\s\S]|[^`\\]|``)*`/,
    greedy: !0,
    lookbehind: !0,
    inside: {
      punctuation: /^`|`$/
    }
  },
  function: /\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\s*\()/i,
  // Should we highlight user defined functions too?
  keyword: /\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\b/i,
  boolean: /\b(?:FALSE|NULL|TRUE)\b/i,
  number: /\b0x[\da-f]+\b|\b\d+(?:\.\d*)?|\B\.\d+\b/i,
  operator: /[-+*\/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\b/i,
  punctuation: /[;[\]()`,.]/
};
(function(e) {
  e.languages.typescript = e.languages.extend("javascript", {
    "class-name": {
      pattern: /(\b(?:class|extends|implements|instanceof|interface|new|type)\s+)(?!keyof\b)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?:\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,
      lookbehind: !0,
      greedy: !0,
      inside: null
      // see below
    },
    builtin: /\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\b/
  }), e.languages.typescript.keyword.push(
    /\b(?:abstract|declare|is|keyof|readonly|require)\b/,
    // keywords that have to be followed by an identifier
    /\b(?:asserts|infer|interface|module|namespace|type)\b(?=\s*(?:[{_$a-zA-Z\xA0-\uFFFF]|$))/,
    // This is for `import type *, {}`
    /\btype\b(?=\s*(?:[\{*]|$))/
  ), delete e.languages.typescript.parameter, delete e.languages.typescript["literal-property"];
  var t = e.languages.extend("typescript", {});
  delete t["class-name"], e.languages.typescript["class-name"].inside = t, e.languages.insertBefore("typescript", "function", {
    decorator: {
      pattern: /@[$\w\xA0-\uFFFF]+/,
      inside: {
        at: {
          pattern: /^@/,
          alias: "operator"
        },
        function: /^[\s\S]+/
      }
    },
    "generic-function": {
      // e.g. foo<T extends "bar" | "baz">( ...
      pattern: /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\s*\()/,
      greedy: !0,
      inside: {
        function: /^#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/,
        generic: {
          pattern: /<[\s\S]+/,
          // everything after the first <
          alias: "class-name",
          inside: t
        }
      }
    }
  }), e.languages.ts = e.languages.typescript;
})(Prism);
Prism.languages.less = Prism.languages.extend("css", {
  comment: [
    /\/\*[\s\S]*?\*\//,
    {
      pattern: /(^|[^\\])\/\/.*/,
      lookbehind: !0
    }
  ],
  atrule: {
    pattern: /@[\w-](?:\((?:[^(){}]|\([^(){}]*\))*\)|[^(){};\s]|\s+(?!\s))*?(?=\s*\{)/,
    inside: {
      punctuation: /[:()]/
    }
  },
  // selectors and mixins are considered the same
  selector: {
    pattern: /(?:@\{[\w-]+\}|[^{};\s@])(?:@\{[\w-]+\}|\((?:[^(){}]|\([^(){}]*\))*\)|[^(){};@\s]|\s+(?!\s))*?(?=\s*\{)/,
    inside: {
      // mixin parameters
      variable: /@+[\w-]+/
    }
  },
  property: /(?:@\{[\w-]+\}|[\w-])+(?:\+_?)?(?=\s*:)/,
  operator: /[+\-*\/]/
});
Prism.languages.insertBefore("less", "property", {
  variable: [
    // Variable declaration (the colon must be consumed!)
    {
      pattern: /@[\w-]+\s*:/,
      inside: {
        punctuation: /:/
      }
    },
    // Variable usage
    /@@?[\w-]+/
  ],
  "mixin-usage": {
    pattern: /([{;]\s*)[.#](?!\d)[\w-].*?(?=[(;])/,
    lookbehind: !0,
    alias: "function"
  }
});
(function(e) {
  e.languages.sass = e.languages.extend("css", {
    // Sass comments don't need to be closed, only indented
    comment: {
      pattern: /^([ \t]*)\/[\/*].*(?:(?:\r?\n|\r)\1[ \t].+)*/m,
      lookbehind: !0,
      greedy: !0
    }
  }), e.languages.insertBefore("sass", "atrule", {
    // We want to consume the whole line
    "atrule-line": {
      // Includes support for = and + shortcuts
      pattern: /^(?:[ \t]*)[@+=].+/m,
      greedy: !0,
      inside: {
        atrule: /(?:@[\w-]+|[+=])/
      }
    }
  }), delete e.languages.sass.atrule;
  var t = /\$[-\w]+|#\{\$[-\w]+\}/, r = [
    /[+*\/%]|[=!]=|<=?|>=?|\b(?:and|not|or)\b/,
    {
      pattern: /(\s)-(?=\s)/,
      lookbehind: !0
    }
  ];
  e.languages.insertBefore("sass", "property", {
    // We want to consume the whole line
    "variable-line": {
      pattern: /^[ \t]*\$.+/m,
      greedy: !0,
      inside: {
        punctuation: /:/,
        variable: t,
        operator: r
      }
    },
    // We want to consume the whole line
    "property-line": {
      pattern: /^[ \t]*(?:[^:\s]+ *:.*|:[^:\s].*)/m,
      greedy: !0,
      inside: {
        property: [
          /[^:\s]+(?=\s*:)/,
          {
            pattern: /(:)[^:\s]+/,
            lookbehind: !0
          }
        ],
        punctuation: /:/,
        variable: t,
        operator: r,
        important: e.languages.sass.important
      }
    }
  }), delete e.languages.sass.property, delete e.languages.sass.important, e.languages.insertBefore("sass", "punctuation", {
    selector: {
      pattern: /^([ \t]*)\S(?:,[^,\r\n]+|[^,\r\n]*)(?:,[^,\r\n]+)*(?:,(?:\r?\n|\r)\1[ \t]+\S(?:,[^,\r\n]+|[^,\r\n]*)(?:,[^,\r\n]+)*)*/m,
      lookbehind: !0,
      greedy: !0
    }
  });
})(Prism);
Prism.languages.scss = Prism.languages.extend("css", {
  comment: {
    pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,
    lookbehind: !0
  },
  atrule: {
    pattern: /@[\w-](?:\([^()]+\)|[^()\s]|\s+(?!\s))*?(?=\s+[{;])/,
    inside: {
      rule: /@[\w-]+/
      // See rest below
    }
  },
  // url, compassified
  url: /(?:[-a-z]+-)?url(?=\()/i,
  // CSS selector regex is not appropriate for Sass
  // since there can be lot more things (var, @ directive, nesting..)
  // a selector must start at the end of a property or after a brace (end of other rules or nesting)
  // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable
  // the end of a selector is found when there is no rules in it ( {} or {\s}) or if there is a property (because an interpolated var
  // can "pass" as a selector- e.g: proper#{$erty})
  // this one was hard to do, so please be careful if you edit this one :)
  selector: {
    // Initial look-ahead is used to prevent matching of blank selectors
    pattern: /(?=\S)[^@;{}()]?(?:[^@;{}()\s]|\s+(?!\s)|#\{\$[-\w]+\})+(?=\s*\{(?:\}|\s|[^}][^:{}]*[:{][^}]))/,
    inside: {
      parent: {
        pattern: /&/,
        alias: "important"
      },
      placeholder: /%[-\w]+/,
      variable: /\$[-\w]+|#\{\$[-\w]+\}/
    }
  },
  property: {
    pattern: /(?:[-\w]|\$[-\w]|#\{\$[-\w]+\})+(?=\s*:)/,
    inside: {
      variable: /\$[-\w]+|#\{\$[-\w]+\}/
    }
  }
});
Prism.languages.insertBefore("scss", "atrule", {
  keyword: [
    /@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\b/i,
    {
      pattern: /( )(?:from|through)(?= )/,
      lookbehind: !0
    }
  ]
});
Prism.languages.insertBefore("scss", "important", {
  // var and interpolated vars
  variable: /\$[-\w]+|#\{\$[-\w]+\}/
});
Prism.languages.insertBefore("scss", "function", {
  "module-modifier": {
    pattern: /\b(?:as|hide|show|with)\b/i,
    alias: "keyword"
  },
  placeholder: {
    pattern: /%[-\w]+/,
    alias: "selector"
  },
  statement: {
    pattern: /\B!(?:default|optional)\b/i,
    alias: "keyword"
  },
  boolean: /\b(?:false|true)\b/,
  null: {
    pattern: /\bnull\b/,
    alias: "keyword"
  },
  operator: {
    pattern: /(\s)(?:[-+*\/%]|[=!]=|<=?|>=?|and|not|or)(?=\s)/,
    lookbehind: !0
  }
});
Prism.languages.scss.atrule.inside.rest = Prism.languages.scss;
Prism.languages.icon = {
  comment: /#.*/,
  string: {
    pattern: /(["'])(?:(?!\1)[^\\\r\n_]|\\.|_(?!\1)(?:\r\n|[\s\S]))*\1/,
    greedy: !0
  },
  number: /\b(?:\d+r[a-z\d]+|\d+(?:\.\d+)?(?:e[+-]?\d+)?)\b|\.\d+\b/i,
  "builtin-keyword": {
    pattern: /&(?:allocated|ascii|clock|collections|cset|current|date|dateline|digits|dump|e|error(?:number|text|value)?|errout|fail|features|file|host|input|lcase|letters|level|line|main|null|output|phi|pi|pos|progname|random|regions|source|storage|subject|time|trace|ucase|version)\b/,
    alias: "variable"
  },
  directive: {
    pattern: /\$\w+/,
    alias: "builtin"
  },
  keyword: /\b(?:break|by|case|create|default|do|else|end|every|fail|global|if|initial|invocable|link|local|next|not|of|procedure|record|repeat|return|static|suspend|then|to|until|while)\b/,
  function: /\b(?!\d)\w+(?=\s*[({]|\s*!\s*\[)/,
  operator: /[+-]:(?!=)|(?:[\/?@^%&]|\+\+?|--?|==?=?|~==?=?|\*\*?|\|\|\|?|<(?:->?|<?=?)|>>?=?)(?::=)?|:(?:=:?)?|[!.\\|~]/,
  punctuation: /[\[\](){},;]/
};
Prism.languages.json = {
  property: {
    pattern: /(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?=\s*:)/,
    lookbehind: !0,
    greedy: !0
  },
  string: {
    pattern: /(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?!\s*:)/,
    lookbehind: !0,
    greedy: !0
  },
  comment: {
    pattern: /\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,
    greedy: !0
  },
  number: /-?\b\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,
  punctuation: /[{}[\],]/,
  operator: /:/,
  boolean: /\b(?:false|true)\b/,
  null: {
    pattern: /\bnull\b/,
    alias: "keyword"
  }
};
Prism.languages.webmanifest = Prism.languages.json;
Prism.languages.uri = {
  scheme: {
    pattern: /^[a-z][a-z0-9+.-]*:/im,
    greedy: !0,
    inside: {
      "scheme-delimiter": /:$/
    }
  },
  fragment: {
    pattern: /#[\w\-.~!$&'()*+,;=%:@/?]*/,
    inside: {
      "fragment-delimiter": /^#/
    }
  },
  query: {
    pattern: /\?[\w\-.~!$&'()*+,;=%:@/?]*/,
    inside: {
      "query-delimiter": {
        pattern: /^\?/,
        greedy: !0
      },
      "pair-delimiter": /[&;]/,
      pair: {
        pattern: /^[^=][\s\S]*/,
        inside: {
          key: /^[^=]+/,
          value: {
            pattern: /(^=)[\s\S]+/,
            lookbehind: !0
          }
        }
      }
    }
  },
  authority: {
    pattern: RegExp(
      /^\/\//.source + /(?:[\w\-.~!$&'()*+,;=%:]*@)?/.source + ("(?:" + /\[(?:[0-9a-fA-F:.]{2,48}|v[0-9a-fA-F]+\.[\w\-.~!$&'()*+,;=]+)\]/.source + "|" + /[\w\-.~!$&'()*+,;=%]*/.source + ")") + /(?::\d*)?/.source,
      "m"
    ),
    inside: {
      "authority-delimiter": /^\/\//,
      "user-info-segment": {
        pattern: /^[\w\-.~!$&'()*+,;=%:]*@/,
        inside: {
          "user-info-delimiter": /@$/,
          "user-info": /^[\w\-.~!$&'()*+,;=%:]+/
        }
      },
      "port-segment": {
        pattern: /:\d*$/,
        inside: {
          "port-delimiter": /^:/,
          port: /^\d+/
        }
      },
      host: {
        pattern: /[\s\S]+/,
        inside: {
          "ip-literal": {
            pattern: /^\[[\s\S]+\]$/,
            inside: {
              "ip-literal-delimiter": /^\[|\]$/,
              "ipv-future": /^v[\s\S]+/,
              "ipv6-address": /^[\s\S]+/
            }
          },
          "ipv4-address": /^(?:(?:[03-9]\d?|[12]\d{0,2})\.){3}(?:[03-9]\d?|[12]\d{0,2})$/
        }
      }
    }
  },
  path: {
    pattern: /^[\w\-.~!$&'()*+,;=%:@/]+/m,
    inside: {
      "path-separator": /\//
    }
  }
};
Prism.languages.url = Prism.languages.uri;
(function(e) {
  function t(u) {
    return RegExp("(^(?:" + u + "):[ 	]*(?![ 	]))[^]+", "i");
  }
  e.languages.http = {
    "request-line": {
      pattern: /^(?:CONNECT|DELETE|GET|HEAD|OPTIONS|PATCH|POST|PRI|PUT|SEARCH|TRACE)\s(?:https?:\/\/|\/)\S*\sHTTP\/[\d.]+/m,
      inside: {
        // HTTP Method
        method: {
          pattern: /^[A-Z]+\b/,
          alias: "property"
        },
        // Request Target e.g. http://example.com, /path/to/file
        "request-target": {
          pattern: /^(\s)(?:https?:\/\/|\/)\S*(?=\s)/,
          lookbehind: !0,
          alias: "url",
          inside: e.languages.uri
        },
        // HTTP Version
        "http-version": {
          pattern: /^(\s)HTTP\/[\d.]+/,
          lookbehind: !0,
          alias: "property"
        }
      }
    },
    "response-status": {
      pattern: /^HTTP\/[\d.]+ \d+ .+/m,
      inside: {
        // HTTP Version
        "http-version": {
          pattern: /^HTTP\/[\d.]+/,
          alias: "property"
        },
        // Status Code
        "status-code": {
          pattern: /^(\s)\d+(?=\s)/,
          lookbehind: !0,
          alias: "number"
        },
        // Reason Phrase
        "reason-phrase": {
          pattern: /^(\s).+/,
          lookbehind: !0,
          alias: "string"
        }
      }
    },
    header: {
      pattern: /^[\w-]+:.+(?:(?:\r\n?|\n)[ \t].+)*/m,
      inside: {
        "header-value": [
          {
            pattern: t(/Content-Security-Policy/.source),
            lookbehind: !0,
            alias: ["csp", "languages-csp"],
            inside: e.languages.csp
          },
          {
            pattern: t(/Public-Key-Pins(?:-Report-Only)?/.source),
            lookbehind: !0,
            alias: ["hpkp", "languages-hpkp"],
            inside: e.languages.hpkp
          },
          {
            pattern: t(/Strict-Transport-Security/.source),
            lookbehind: !0,
            alias: ["hsts", "languages-hsts"],
            inside: e.languages.hsts
          },
          {
            pattern: t(/[^:]+/.source),
            lookbehind: !0
          }
        ],
        "header-name": {
          pattern: /^[^:]+/,
          alias: "keyword"
        },
        punctuation: /^:/
      }
    }
  };
  var r = e.languages, n = {
    "application/javascript": r.javascript,
    "application/json": r.json || r.javascript,
    "application/xml": r.xml,
    "text/xml": r.xml,
    "text/html": r.html,
    "text/css": r.css,
    "text/plain": r.plain
  }, i = {
    "application/json": !0,
    "application/xml": !0
  };
  function a(u) {
    var d = u.replace(/^[a-z]+\//, ""), p = "\\w+/(?:[\\w.-]+\\+)+" + d + "(?![+\\w.-])";
    return "(?:" + u + "|" + p + ")";
  }
  var s;
  for (var o in n)
    if (n[o]) {
      s = s || {};
      var l = i[o] ? a(o) : o;
      s[o.replace(/\//g, "-")] = {
        pattern: RegExp(
          "(" + /content-type:\s*/.source + l + /(?:(?:\r\n?|\n)[\w-].*)*(?:\r(?:\n|(?!\n))|\n)/.source + ")" + // This is a little interesting:
          // The HTTP format spec required 1 empty line before the body to make everything unambiguous.
          // However, when writing code by hand (e.g. to display on a website) people can forget about this,
          // so we want to be liberal here. We will allow the empty line to be omitted if the first line of
          // the body does not start with a [\w-] character (as headers do).
          /[^ \t\w-][\s\S]*/.source,
          "i"
        ),
        lookbehind: !0,
        inside: n[o]
      };
    }
  s && e.languages.insertBefore("http", "header", s);
})(Prism);
Prism.languages.c = Prism.languages.extend("clike", {
  comment: {
    pattern: /\/\/(?:[^\r\n\\]|\\(?:\r\n?|\n|(?![\r\n])))*|\/\*[\s\S]*?(?:\*\/|$)/,
    greedy: !0
  },
  string: {
    // https://en.cppreference.com/w/c/language/string_literal
    pattern: /"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,
    greedy: !0
  },
  "class-name": {
    pattern: /(\b(?:enum|struct)\s+(?:__attribute__\s*\(\([\s\S]*?\)\)\s*)?)\w+|\b[a-z]\w*_t\b/,
    lookbehind: !0
  },
  keyword: /\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\b/,
  function: /\b[a-z_]\w*(?=\s*\()/i,
  number: /(?:\b0x(?:[\da-f]+(?:\.[\da-f]*)?|\.[\da-f]+)(?:p[+-]?\d+)?|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)[ful]{0,4}/i,
  operator: />>=?|<<=?|->|([-+&|:])\1|[?:~]|[-+*/%&|^!=<>]=?/
});
Prism.languages.insertBefore("c", "string", {
  char: {
    // https://en.cppreference.com/w/c/language/character_constant
    pattern: /'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n]){0,32}'/,
    greedy: !0
  }
});
Prism.languages.insertBefore("c", "string", {
  macro: {
    // allow for multiline macro definitions
    // spaces after the # character compile fine with gcc
    pattern: /(^[\t ]*)#\s*[a-z](?:[^\r\n\\/]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|\\(?:\r\n|[\s\S]))*/im,
    lookbehind: !0,
    greedy: !0,
    alias: "property",
    inside: {
      string: [
        {
          // highlight the path of the include statement as a string
          pattern: /^(#\s*include\s*)<[^>]+>/,
          lookbehind: !0
        },
        Prism.languages.c.string
      ],
      char: Prism.languages.c.char,
      comment: Prism.languages.c.comment,
      "macro-name": [
        {
          pattern: /(^#\s*define\s+)\w+\b(?!\()/i,
          lookbehind: !0
        },
        {
          pattern: /(^#\s*define\s+)\w+\b(?=\()/i,
          lookbehind: !0,
          alias: "function"
        }
      ],
      // highlight macro directives as keywords
      directive: {
        pattern: /^(#\s*)[a-z]+/,
        lookbehind: !0,
        alias: "keyword"
      },
      "directive-hash": /^#/,
      punctuation: /##|\\(?=[\r\n])/,
      expression: {
        pattern: /\S[\s\S]*/,
        inside: Prism.languages.c
      }
    }
  }
});
Prism.languages.insertBefore("c", "function", {
  // highlight predefined macros as constants
  constant: /\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\b/
});
delete Prism.languages.c.boolean;
(function(e) {
  var t = /\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\b/, r = /\b(?!<keyword>)\w+(?:\s*\.\s*\w+)*\b/.source.replace(/<keyword>/g, function() {
    return t.source;
  });
  e.languages.cpp = e.languages.extend("c", {
    "class-name": [
      {
        pattern: RegExp(/(\b(?:class|concept|enum|struct|typename)\s+)(?!<keyword>)\w+/.source.replace(/<keyword>/g, function() {
          return t.source;
        })),
        lookbehind: !0
      },
      // This is intended to capture the class name of method implementations like:
      //   void foo::bar() const {}
      // However! The `foo` in the above example could also be a namespace, so we only capture the class name if
      // it starts with an uppercase letter. This approximation should give decent results.
      /\b[A-Z]\w*(?=\s*::\s*\w+\s*\()/,
      // This will capture the class name before destructors like:
      //   Foo::~Foo() {}
      /\b[A-Z_]\w*(?=\s*::\s*~\w+\s*\()/i,
      // This also intends to capture the class name of method implementations but here the class has template
      // parameters, so it can't be a namespace (until C++ adds generic namespaces).
      /\b\w+(?=\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\s*::\s*\w+\s*\()/
    ],
    keyword: t,
    number: {
      pattern: /(?:\b0b[01']+|\b0x(?:[\da-f']+(?:\.[\da-f']*)?|\.[\da-f']+)(?:p[+-]?[\d']+)?|(?:\b[\d']+(?:\.[\d']*)?|\B\.[\d']+)(?:e[+-]?[\d']+)?)[ful]{0,4}/i,
      greedy: !0
    },
    operator: />>=?|<<=?|->|--|\+\+|&&|\|\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\b/,
    boolean: /\b(?:false|true)\b/
  }), e.languages.insertBefore("cpp", "string", {
    module: {
      // https://en.cppreference.com/w/cpp/language/modules
      pattern: RegExp(
        /(\b(?:import|module)\s+)/.source + "(?:" + // header-name
        /"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|<[^<>\r\n]*>/.source + "|" + // module name or partition or both
        /<mod-name>(?:\s*:\s*<mod-name>)?|:\s*<mod-name>/.source.replace(/<mod-name>/g, function() {
          return r;
        }) + ")"
      ),
      lookbehind: !0,
      greedy: !0,
      inside: {
        string: /^[<"][\s\S]+/,
        operator: /:/,
        punctuation: /\./
      }
    },
    "raw-string": {
      pattern: /R"([^()\\ ]{0,16})\([\s\S]*?\)\1"/,
      alias: "string",
      greedy: !0
    }
  }), e.languages.insertBefore("cpp", "keyword", {
    "generic-function": {
      pattern: /\b(?!operator\b)[a-z_]\w*\s*<(?:[^<>]|<[^<>]*>)*>(?=\s*\()/i,
      inside: {
        function: /^\w+/,
        generic: {
          pattern: /<[\s\S]+/,
          alias: "class-name",
          inside: e.languages.cpp
        }
      }
    }
  }), e.languages.insertBefore("cpp", "operator", {
    "double-colon": {
      pattern: /::/,
      alias: "punctuation"
    }
  }), e.languages.insertBefore("cpp", "class-name", {
    // the base clause is an optional list of parent classes
    // https://en.cppreference.com/w/cpp/language/class
    "base-clause": {
      pattern: /(\b(?:class|struct)\s+\w+\s*:\s*)[^;{}"'\s]+(?:\s+[^;{}"'\s]+)*(?=\s*[;{])/,
      lookbehind: !0,
      greedy: !0,
      inside: e.languages.extend("cpp", {})
    }
  }), e.languages.insertBefore("inside", "double-colon", {
    // All untokenized words that are not namespaces should be class names
    "class-name": /\b[a-z_]\w*\b(?!\s*::)/i
  }, e.languages.cpp["base-clause"]);
})(Prism);
Prism.languages.cmake = {
  comment: /#.*/,
  string: {
    pattern: /"(?:[^\\"]|\\.)*"/,
    greedy: !0,
    inside: {
      interpolation: {
        pattern: /\$\{(?:[^{}$]|\$\{[^{}$]*\})*\}/,
        inside: {
          punctuation: /\$\{|\}/,
          variable: /\w+/
        }
      }
    }
  },
  variable: /\b(?:CMAKE_\w+|\w+_(?:(?:BINARY|SOURCE)_DIR|DESCRIPTION|HOMEPAGE_URL|ROOT|VERSION(?:_MAJOR|_MINOR|_PATCH|_TWEAK)?)|(?:ANDROID|APPLE|BORLAND|BUILD_SHARED_LIBS|CACHE|CPACK_(?:ABSOLUTE_DESTINATION_FILES|COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY|ERROR_ON_ABSOLUTE_INSTALL_DESTINATION|INCLUDE_TOPLEVEL_DIRECTORY|INSTALL_DEFAULT_DIRECTORY_PERMISSIONS|INSTALL_SCRIPT|PACKAGING_INSTALL_PREFIX|SET_DESTDIR|WARN_ON_ABSOLUTE_INSTALL_DESTINATION)|CTEST_(?:BINARY_DIRECTORY|BUILD_COMMAND|BUILD_NAME|BZR_COMMAND|BZR_UPDATE_OPTIONS|CHANGE_ID|CHECKOUT_COMMAND|CONFIGURATION_TYPE|CONFIGURE_COMMAND|COVERAGE_COMMAND|COVERAGE_EXTRA_FLAGS|CURL_OPTIONS|CUSTOM_(?:COVERAGE_EXCLUDE|ERROR_EXCEPTION|ERROR_MATCH|ERROR_POST_CONTEXT|ERROR_PRE_CONTEXT|MAXIMUM_FAILED_TEST_OUTPUT_SIZE|MAXIMUM_NUMBER_OF_(?:ERRORS|WARNINGS)|MAXIMUM_PASSED_TEST_OUTPUT_SIZE|MEMCHECK_IGNORE|POST_MEMCHECK|POST_TEST|PRE_MEMCHECK|PRE_TEST|TESTS_IGNORE|WARNING_EXCEPTION|WARNING_MATCH)|CVS_CHECKOUT|CVS_COMMAND|CVS_UPDATE_OPTIONS|DROP_LOCATION|DROP_METHOD|DROP_SITE|DROP_SITE_CDASH|DROP_SITE_PASSWORD|DROP_SITE_USER|EXTRA_COVERAGE_GLOB|GIT_COMMAND|GIT_INIT_SUBMODULES|GIT_UPDATE_CUSTOM|GIT_UPDATE_OPTIONS|HG_COMMAND|HG_UPDATE_OPTIONS|LABELS_FOR_SUBPROJECTS|MEMORYCHECK_(?:COMMAND|COMMAND_OPTIONS|SANITIZER_OPTIONS|SUPPRESSIONS_FILE|TYPE)|NIGHTLY_START_TIME|P4_CLIENT|P4_COMMAND|P4_OPTIONS|P4_UPDATE_OPTIONS|RUN_CURRENT_SCRIPT|SCP_COMMAND|SITE|SOURCE_DIRECTORY|SUBMIT_URL|SVN_COMMAND|SVN_OPTIONS|SVN_UPDATE_OPTIONS|TEST_LOAD|TEST_TIMEOUT|TRIGGER_SITE|UPDATE_COMMAND|UPDATE_OPTIONS|UPDATE_VERSION_ONLY|USE_LAUNCHERS)|CYGWIN|ENV|EXECUTABLE_OUTPUT_PATH|GHS-MULTI|IOS|LIBRARY_OUTPUT_PATH|MINGW|MSVC(?:10|11|12|14|60|70|71|80|90|_IDE|_TOOLSET_VERSION|_VERSION)?|MSYS|PROJECT_NAME|UNIX|WIN32|WINCE|WINDOWS_PHONE|WINDOWS_STORE|XCODE))\b/,
  property: /\b(?:cxx_\w+|(?:ARCHIVE_OUTPUT_(?:DIRECTORY|NAME)|COMPILE_DEFINITIONS|COMPILE_PDB_NAME|COMPILE_PDB_OUTPUT_DIRECTORY|EXCLUDE_FROM_DEFAULT_BUILD|IMPORTED_(?:IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_LANGUAGES|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|NO_SONAME|OBJECTS|SONAME)|INTERPROCEDURAL_OPTIMIZATION|LIBRARY_OUTPUT_DIRECTORY|LIBRARY_OUTPUT_NAME|LINK_FLAGS|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|MAP_IMPORTED_CONFIG|OSX_ARCHITECTURES|OUTPUT_NAME|PDB_NAME|PDB_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_NAME|STATIC_LIBRARY_FLAGS|VS_CSHARP|VS_DOTNET_REFERENCEPROP|VS_DOTNET_REFERENCE|VS_GLOBAL_SECTION_POST|VS_GLOBAL_SECTION_PRE|VS_GLOBAL|XCODE_ATTRIBUTE)_\w+|\w+_(?:CLANG_TIDY|COMPILER_LAUNCHER|CPPCHECK|CPPLINT|INCLUDE_WHAT_YOU_USE|OUTPUT_NAME|POSTFIX|VISIBILITY_PRESET)|ABSTRACT|ADDITIONAL_MAKE_CLEAN_FILES|ADVANCED|ALIASED_TARGET|ALLOW_DUPLICATE_CUSTOM_TARGETS|ANDROID_(?:ANT_ADDITIONAL_OPTIONS|API|API_MIN|ARCH|ASSETS_DIRECTORIES|GUI|JAR_DEPENDENCIES|NATIVE_LIB_DEPENDENCIES|NATIVE_LIB_DIRECTORIES|PROCESS_MAX|PROGUARD|PROGUARD_CONFIG_PATH|SECURE_PROPS_PATH|SKIP_ANT_STEP|STL_TYPE)|ARCHIVE_OUTPUT_DIRECTORY|ATTACHED_FILES|ATTACHED_FILES_ON_FAIL|AUTOGEN_(?:BUILD_DIR|ORIGIN_DEPENDS|PARALLEL|SOURCE_GROUP|TARGETS_FOLDER|TARGET_DEPENDS)|AUTOMOC|AUTOMOC_(?:COMPILER_PREDEFINES|DEPEND_FILTERS|EXECUTABLE|MACRO_NAMES|MOC_OPTIONS|SOURCE_GROUP|TARGETS_FOLDER)|AUTORCC|AUTORCC_EXECUTABLE|AUTORCC_OPTIONS|AUTORCC_SOURCE_GROUP|AUTOUIC|AUTOUIC_EXECUTABLE|AUTOUIC_OPTIONS|AUTOUIC_SEARCH_PATHS|BINARY_DIR|BUILDSYSTEM_TARGETS|BUILD_RPATH|BUILD_RPATH_USE_ORIGIN|BUILD_WITH_INSTALL_NAME_DIR|BUILD_WITH_INSTALL_RPATH|BUNDLE|BUNDLE_EXTENSION|CACHE_VARIABLES|CLEAN_NO_CUSTOM|COMMON_LANGUAGE_RUNTIME|COMPATIBLE_INTERFACE_(?:BOOL|NUMBER_MAX|NUMBER_MIN|STRING)|COMPILE_(?:DEFINITIONS|FEATURES|FLAGS|OPTIONS|PDB_NAME|PDB_OUTPUT_DIRECTORY)|COST|CPACK_DESKTOP_SHORTCUTS|CPACK_NEVER_OVERWRITE|CPACK_PERMANENT|CPACK_STARTUP_SHORTCUTS|CPACK_START_MENU_SHORTCUTS|CPACK_WIX_ACL|CROSSCOMPILING_EMULATOR|CUDA_EXTENSIONS|CUDA_PTX_COMPILATION|CUDA_RESOLVE_DEVICE_SYMBOLS|CUDA_SEPARABLE_COMPILATION|CUDA_STANDARD|CUDA_STANDARD_REQUIRED|CXX_EXTENSIONS|CXX_STANDARD|CXX_STANDARD_REQUIRED|C_EXTENSIONS|C_STANDARD|C_STANDARD_REQUIRED|DEBUG_CONFIGURATIONS|DEFINE_SYMBOL|DEFINITIONS|DEPENDS|DEPLOYMENT_ADDITIONAL_FILES|DEPLOYMENT_REMOTE_DIRECTORY|DISABLED|DISABLED_FEATURES|ECLIPSE_EXTRA_CPROJECT_CONTENTS|ECLIPSE_EXTRA_NATURES|ENABLED_FEATURES|ENABLED_LANGUAGES|ENABLE_EXPORTS|ENVIRONMENT|EXCLUDE_FROM_ALL|EXCLUDE_FROM_DEFAULT_BUILD|EXPORT_NAME|EXPORT_PROPERTIES|EXTERNAL_OBJECT|EchoString|FAIL_REGULAR_EXPRESSION|FIND_LIBRARY_USE_LIB32_PATHS|FIND_LIBRARY_USE_LIB64_PATHS|FIND_LIBRARY_USE_LIBX32_PATHS|FIND_LIBRARY_USE_OPENBSD_VERSIONING|FIXTURES_CLEANUP|FIXTURES_REQUIRED|FIXTURES_SETUP|FOLDER|FRAMEWORK|Fortran_FORMAT|Fortran_MODULE_DIRECTORY|GENERATED|GENERATOR_FILE_NAME|GENERATOR_IS_MULTI_CONFIG|GHS_INTEGRITY_APP|GHS_NO_SOURCE_GROUP_FILE|GLOBAL_DEPENDS_DEBUG_MODE|GLOBAL_DEPENDS_NO_CYCLES|GNUtoMS|HAS_CXX|HEADER_FILE_ONLY|HELPSTRING|IMPLICIT_DEPENDS_INCLUDE_TRANSFORM|IMPORTED|IMPORTED_(?:COMMON_LANGUAGE_RUNTIME|CONFIGURATIONS|GLOBAL|IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_(?:LANGUAGES|LIBRARIES|MULTIPLICITY)|LOCATION|NO_SONAME|OBJECTS|SONAME)|IMPORT_PREFIX|IMPORT_SUFFIX|INCLUDE_DIRECTORIES|INCLUDE_REGULAR_EXPRESSION|INSTALL_NAME_DIR|INSTALL_RPATH|INSTALL_RPATH_USE_LINK_PATH|INTERFACE_(?:AUTOUIC_OPTIONS|COMPILE_DEFINITIONS|COMPILE_FEATURES|COMPILE_OPTIONS|INCLUDE_DIRECTORIES|LINK_DEPENDS|LINK_DIRECTORIES|LINK_LIBRARIES|LINK_OPTIONS|POSITION_INDEPENDENT_CODE|SOURCES|SYSTEM_INCLUDE_DIRECTORIES)|INTERPROCEDURAL_OPTIMIZATION|IN_TRY_COMPILE|IOS_INSTALL_COMBINED|JOB_POOLS|JOB_POOL_COMPILE|JOB_POOL_LINK|KEEP_EXTENSION|LABELS|LANGUAGE|LIBRARY_OUTPUT_DIRECTORY|LINKER_LANGUAGE|LINK_(?:DEPENDS|DEPENDS_NO_SHARED|DIRECTORIES|FLAGS|INTERFACE_LIBRARIES|INTERFACE_MULTIPLICITY|LIBRARIES|OPTIONS|SEARCH_END_STATIC|SEARCH_START_STATIC|WHAT_YOU_USE)|LISTFILE_STACK|LOCATION|MACOSX_BUNDLE|MACOSX_BUNDLE_INFO_PLIST|MACOSX_FRAMEWORK_INFO_PLIST|MACOSX_PACKAGE_LOCATION|MACOSX_RPATH|MACROS|MANUALLY_ADDED_DEPENDENCIES|MEASUREMENT|MODIFIED|NAME|NO_SONAME|NO_SYSTEM_FROM_IMPORTED|OBJECT_DEPENDS|OBJECT_OUTPUTS|OSX_ARCHITECTURES|OUTPUT_NAME|PACKAGES_FOUND|PACKAGES_NOT_FOUND|PARENT_DIRECTORY|PASS_REGULAR_EXPRESSION|PDB_NAME|PDB_OUTPUT_DIRECTORY|POSITION_INDEPENDENT_CODE|POST_INSTALL_SCRIPT|PREDEFINED_TARGETS_FOLDER|PREFIX|PRE_INSTALL_SCRIPT|PRIVATE_HEADER|PROCESSORS|PROCESSOR_AFFINITY|PROJECT_LABEL|PUBLIC_HEADER|REPORT_UNDEFINED_PROPERTIES|REQUIRED_FILES|RESOURCE|RESOURCE_LOCK|RULE_LAUNCH_COMPILE|RULE_LAUNCH_CUSTOM|RULE_LAUNCH_LINK|RULE_MESSAGES|RUNTIME_OUTPUT_DIRECTORY|RUN_SERIAL|SKIP_AUTOGEN|SKIP_AUTOMOC|SKIP_AUTORCC|SKIP_AUTOUIC|SKIP_BUILD_RPATH|SKIP_RETURN_CODE|SOURCES|SOURCE_DIR|SOVERSION|STATIC_LIBRARY_FLAGS|STATIC_LIBRARY_OPTIONS|STRINGS|SUBDIRECTORIES|SUFFIX|SYMBOLIC|TARGET_ARCHIVES_MAY_BE_SHARED_LIBS|TARGET_MESSAGES|TARGET_SUPPORTS_SHARED_LIBS|TESTS|TEST_INCLUDE_FILE|TEST_INCLUDE_FILES|TIMEOUT|TIMEOUT_AFTER_MATCH|TYPE|USE_FOLDERS|VALUE|VARIABLES|VERSION|VISIBILITY_INLINES_HIDDEN|VS_(?:CONFIGURATION_TYPE|COPY_TO_OUT_DIR|DEBUGGER_(?:COMMAND|COMMAND_ARGUMENTS|ENVIRONMENT|WORKING_DIRECTORY)|DEPLOYMENT_CONTENT|DEPLOYMENT_LOCATION|DOTNET_REFERENCES|DOTNET_REFERENCES_COPY_LOCAL|INCLUDE_IN_VSIX|IOT_STARTUP_TASK|KEYWORD|RESOURCE_GENERATOR|SCC_AUXPATH|SCC_LOCALPATH|SCC_PROJECTNAME|SCC_PROVIDER|SDK_REFERENCES|SHADER_(?:DISABLE_OPTIMIZATIONS|ENABLE_DEBUG|ENTRYPOINT|FLAGS|MODEL|OBJECT_FILE_NAME|OUTPUT_HEADER_FILE|TYPE|VARIABLE_NAME)|STARTUP_PROJECT|TOOL_OVERRIDE|USER_PROPS|WINRT_COMPONENT|WINRT_EXTENSIONS|WINRT_REFERENCES|XAML_TYPE)|WILL_FAIL|WIN32_EXECUTABLE|WINDOWS_EXPORT_ALL_SYMBOLS|WORKING_DIRECTORY|WRAP_EXCLUDE|XCODE_(?:EMIT_EFFECTIVE_PLATFORM_NAME|EXPLICIT_FILE_TYPE|FILE_ATTRIBUTES|LAST_KNOWN_FILE_TYPE|PRODUCT_TYPE|SCHEME_(?:ADDRESS_SANITIZER|ADDRESS_SANITIZER_USE_AFTER_RETURN|ARGUMENTS|DISABLE_MAIN_THREAD_CHECKER|DYNAMIC_LIBRARY_LOADS|DYNAMIC_LINKER_API_USAGE|ENVIRONMENT|EXECUTABLE|GUARD_MALLOC|MAIN_THREAD_CHECKER_STOP|MALLOC_GUARD_EDGES|MALLOC_SCRIBBLE|MALLOC_STACK|THREAD_SANITIZER(?:_STOP)?|UNDEFINED_BEHAVIOUR_SANITIZER(?:_STOP)?|ZOMBIE_OBJECTS))|XCTEST)\b/,
  keyword: /\b(?:add_compile_definitions|add_compile_options|add_custom_command|add_custom_target|add_definitions|add_dependencies|add_executable|add_library|add_link_options|add_subdirectory|add_test|aux_source_directory|break|build_command|build_name|cmake_host_system_information|cmake_minimum_required|cmake_parse_arguments|cmake_policy|configure_file|continue|create_test_sourcelist|ctest_build|ctest_configure|ctest_coverage|ctest_empty_binary_directory|ctest_memcheck|ctest_read_custom_files|ctest_run_script|ctest_sleep|ctest_start|ctest_submit|ctest_test|ctest_update|ctest_upload|define_property|else|elseif|enable_language|enable_testing|endforeach|endfunction|endif|endmacro|endwhile|exec_program|execute_process|export|export_library_dependencies|file|find_file|find_library|find_package|find_path|find_program|fltk_wrap_ui|foreach|function|get_cmake_property|get_directory_property|get_filename_component|get_property|get_source_file_property|get_target_property|get_test_property|if|include|include_directories|include_external_msproject|include_guard|include_regular_expression|install|install_files|install_programs|install_targets|link_directories|link_libraries|list|load_cache|load_command|macro|make_directory|mark_as_advanced|math|message|option|output_required_files|project|qt_wrap_cpp|qt_wrap_ui|remove|remove_definitions|return|separate_arguments|set|set_directory_properties|set_property|set_source_files_properties|set_target_properties|set_tests_properties|site_name|source_group|string|subdir_depends|subdirs|target_compile_definitions|target_compile_features|target_compile_options|target_include_directories|target_link_directories|target_link_libraries|target_link_options|target_sources|try_compile|try_run|unset|use_mangled_mesa|utility_source|variable_requires|variable_watch|while|write_file)(?=\s*\()\b/,
  boolean: /\b(?:FALSE|OFF|ON|TRUE)\b/,
  namespace: /\b(?:INTERFACE|PRIVATE|PROPERTIES|PUBLIC|SHARED|STATIC|TARGET_OBJECTS)\b/,
  operator: /\b(?:AND|DEFINED|EQUAL|GREATER|LESS|MATCHES|NOT|OR|STREQUAL|STRGREATER|STRLESS|VERSION_EQUAL|VERSION_GREATER|VERSION_LESS)\b/,
  inserted: {
    pattern: /\b\w+::\w+\b/,
    alias: "class-name"
  },
  number: /\b\d+(?:\.\d+)*\b/,
  function: /\b[a-z_]\w*(?=\s*\()\b/i,
  punctuation: /[()>}]|\$[<{]/
};
Prism.languages.objectivec = Prism.languages.extend("c", {
  string: {
    pattern: /@?"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,
    greedy: !0
  },
  keyword: /\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\b/,
  operator: /-[->]?|\+\+?|!=?|<<?=?|>>?=?|==?|&&?|\|\|?|[~^%?*\/@]/
});
delete Prism.languages.objectivec["class-name"];
Prism.languages.objc = Prism.languages.objectivec;
(function(e) {
  for (var t = /\/\*(?:[^*/]|\*(?!\/)|\/(?!\*)|<self>)*\*\//.source, r = 0; r < 2; r++)
    t = t.replace(/<self>/g, function() {
      return t;
    });
  t = t.replace(/<self>/g, function() {
    return /[^\s\S]/.source;
  }), e.languages.rust = {
    comment: [
      {
        pattern: RegExp(/(^|[^\\])/.source + t),
        lookbehind: !0,
        greedy: !0
      },
      {
        pattern: /(^|[^\\:])\/\/.*/,
        lookbehind: !0,
        greedy: !0
      }
    ],
    string: {
      pattern: /b?"(?:\\[\s\S]|[^\\"])*"|b?r(#*)"(?:[^"]|"(?!\1))*"\1/,
      greedy: !0
    },
    char: {
      pattern: /b?'(?:\\(?:x[0-7][\da-fA-F]|u\{(?:[\da-fA-F]_*){1,6}\}|.)|[^\\\r\n\t'])'/,
      greedy: !0
    },
    attribute: {
      pattern: /#!?\[(?:[^\[\]"]|"(?:\\[\s\S]|[^\\"])*")*\]/,
      greedy: !0,
      alias: "attr-name",
      inside: {
        string: null
        // see below
      }
    },
    // Closure params should not be confused with bitwise OR |
    "closure-params": {
      pattern: /([=(,:]\s*|\bmove\s*)\|[^|]*\||\|[^|]*\|(?=\s*(?:\{|->))/,
      lookbehind: !0,
      greedy: !0,
      inside: {
        "closure-punctuation": {
          pattern: /^\||\|$/,
          alias: "punctuation"
        },
        rest: null
        // see below
      }
    },
    "lifetime-annotation": {
      pattern: /'\w+/,
      alias: "symbol"
    },
    "fragment-specifier": {
      pattern: /(\$\w+:)[a-z]+/,
      lookbehind: !0,
      alias: "punctuation"
    },
    variable: /\$\w+/,
    "function-definition": {
      pattern: /(\bfn\s+)\w+/,
      lookbehind: !0,
      alias: "function"
    },
    "type-definition": {
      pattern: /(\b(?:enum|struct|trait|type|union)\s+)\w+/,
      lookbehind: !0,
      alias: "class-name"
    },
    "module-declaration": [
      {
        pattern: /(\b(?:crate|mod)\s+)[a-z][a-z_\d]*/,
        lookbehind: !0,
        alias: "namespace"
      },
      {
        pattern: /(\b(?:crate|self|super)\s*)::\s*[a-z][a-z_\d]*\b(?:\s*::(?:\s*[a-z][a-z_\d]*\s*::)*)?/,
        lookbehind: !0,
        alias: "namespace",
        inside: {
          punctuation: /::/
        }
      }
    ],
    keyword: [
      // https://github.com/rust-lang/reference/blob/master/src/keywords.md
      /\b(?:Self|abstract|as|async|await|become|box|break|const|continue|crate|do|dyn|else|enum|extern|final|fn|for|if|impl|in|let|loop|macro|match|mod|move|mut|override|priv|pub|ref|return|self|static|struct|super|trait|try|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\b/,
      // primitives and str
      // https://doc.rust-lang.org/stable/rust-by-example/primitives.html
      /\b(?:bool|char|f(?:32|64)|[ui](?:8|16|32|64|128|size)|str)\b/
    ],
    // functions can technically start with an upper-case letter, but this will introduce a lot of false positives
    // and Rust's naming conventions recommend snake_case anyway.
    // https://doc.rust-lang.org/1.0.0/style/style/naming/README.html
    function: /\b[a-z_]\w*(?=\s*(?:::\s*<|\())/,
    macro: {
      pattern: /\b\w+!/,
      alias: "property"
    },
    constant: /\b[A-Z_][A-Z_\d]+\b/,
    "class-name": /\b[A-Z]\w*\b/,
    namespace: {
      pattern: /(?:\b[a-z][a-z_\d]*\s*::\s*)*\b[a-z][a-z_\d]*\s*::(?!\s*<)/,
      inside: {
        punctuation: /::/
      }
    },
    // Hex, oct, bin, dec numbers with visual separators and type suffix
    number: /\b(?:0x[\dA-Fa-f](?:_?[\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(?:(?:\d(?:_?\d)*)?\.)?\d(?:_?\d)*(?:[Ee][+-]?\d+)?)(?:_?(?:f32|f64|[iu](?:8|16|32|64|size)?))?\b/,
    boolean: /\b(?:false|true)\b/,
    punctuation: /->|\.\.=|\.{1,3}|::|[{}[\];(),:]/,
    operator: /[-+*\/%!^]=?|=[=>]?|&[&=]?|\|[|=]?|<<?=?|>>?=?|[@?]/
  }, e.languages.rust["closure-params"].inside.rest = e.languages.rust, e.languages.rust.attribute.inside.string = e.languages.rust.string;
})(Prism);
Prism.languages.go = Prism.languages.extend("clike", {
  string: {
    pattern: /(^|[^\\])"(?:\\.|[^"\\\r\n])*"|`[^`]*`/,
    lookbehind: !0,
    greedy: !0
  },
  keyword: /\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\b/,
  boolean: /\b(?:_|false|iota|nil|true)\b/,
  number: [
    // binary and octal integers
    /\b0(?:b[01_]+|o[0-7_]+)i?\b/i,
    // hexadecimal integers and floats
    /\b0x(?:[a-f\d_]+(?:\.[a-f\d_]*)?|\.[a-f\d_]+)(?:p[+-]?\d+(?:_\d+)*)?i?(?!\w)/i,
    // decimal integers and floats
    /(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.\d[\d_]*)(?:e[+-]?[\d_]+)?i?(?!\w)/i
  ],
  operator: /[*\/%^!=]=?|\+[=+]?|-[=-]?|\|[=|]?|&(?:=|&|\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\.\.\./,
  builtin: /\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\b/
});
Prism.languages.insertBefore("go", "string", {
  char: {
    pattern: /'(?:\\.|[^'\\\r\n]){0,10}'/,
    greedy: !0
  }
});
delete Prism.languages.go["class-name"];
(function(e) {
  function t(r, n) {
    return "___" + r.toUpperCase() + n + "___";
  }
  Object.defineProperties(e.languages["markup-templating"] = {}, {
    buildPlaceholders: {
      /**
       * Tokenize all inline templating expressions matching `placeholderPattern`.
       *
       * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns
       * `true` will be replaced.
       *
       * @param {object} env The environment of the `before-tokenize` hook.
       * @param {string} language The language id.
       * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.
       * @param {(match: string) => boolean} [replaceFilter]
       */
      value: function(r, n, i, a) {
        if (r.language === n) {
          var s = r.tokenStack = [];
          r.code = r.code.replace(i, function(o) {
            if (typeof a == "function" && !a(o))
              return o;
            for (var l = s.length, u; r.code.indexOf(u = t(n, l)) !== -1; )
              ++l;
            return s[l] = o, u;
          }), r.grammar = e.languages.markup;
        }
      }
    },
    tokenizePlaceholders: {
      /**
       * Replace placeholders with proper tokens after tokenizing.
       *
       * @param {object} env The environment of the `after-tokenize` hook.
       * @param {string} language The language id.
       */
      value: function(r, n) {
        if (r.language !== n || !r.tokenStack)
          return;
        r.grammar = e.languages[n];
        var i = 0, a = Object.keys(r.tokenStack);
        function s(o) {
          for (var l = 0; l < o.length && !(i >= a.length); l++) {
            var u = o[l];
            if (typeof u == "string" || u.content && typeof u.content == "string") {
              var d = a[i], p = r.tokenStack[d], b = typeof u == "string" ? u : u.content, m = t(n, d), _ = b.indexOf(m);
              if (_ > -1) {
                ++i;
                var k = b.substring(0, _), L = new e.Token(n, e.tokenize(p, r.grammar), "language-" + n, p), A = b.substring(_ + m.length), v = [];
                k && v.push.apply(v, s([k])), v.push(L), A && v.push.apply(v, s([A])), typeof u == "string" ? o.splice.apply(o, [l, 1].concat(v)) : u.content = v;
              }
            } else
              u.content && s(u.content);
          }
          return o;
        }
        s(r.tokens);
      }
    }
  });
})(Prism);
(function(e) {
  var t = /\/\*[\s\S]*?\*\/|\/\/.*|#(?!\[).*/, r = [
    {
      pattern: /\b(?:false|true)\b/i,
      alias: "boolean"
    },
    {
      pattern: /(::\s*)\b[a-z_]\w*\b(?!\s*\()/i,
      greedy: !0,
      lookbehind: !0
    },
    {
      pattern: /(\b(?:case|const)\s+)\b[a-z_]\w*(?=\s*[;=])/i,
      greedy: !0,
      lookbehind: !0
    },
    /\b(?:null)\b/i,
    /\b[A-Z_][A-Z0-9_]*\b(?!\s*\()/
  ], n = /\b0b[01]+(?:_[01]+)*\b|\b0o[0-7]+(?:_[0-7]+)*\b|\b0x[\da-f]+(?:_[\da-f]+)*\b|(?:\b\d+(?:_\d+)*\.?(?:\d+(?:_\d+)*)?|\B\.\d+)(?:e[+-]?\d+)?/i, i = /<?=>|\?\?=?|\.{3}|\??->|[!=]=?=?|::|\*\*=?|--|\+\+|&&|\|\||<<|>>|[?~]|[/^|%*&<>.+-]=?/, a = /[{}\[\](),:;]/;
  e.languages.php = {
    delimiter: {
      pattern: /\?>$|^<\?(?:php(?=\s)|=)?/i,
      alias: "important"
    },
    comment: t,
    variable: /\$+(?:\w+\b|(?=\{))/,
    package: {
      pattern: /(namespace\s+|use\s+(?:function\s+)?)(?:\\?\b[a-z_]\w*)+\b(?!\\)/i,
      lookbehind: !0,
      inside: {
        punctuation: /\\/
      }
    },
    "class-name-definition": {
      pattern: /(\b(?:class|enum|interface|trait)\s+)\b[a-z_]\w*(?!\\)\b/i,
      lookbehind: !0,
      alias: "class-name"
    },
    "function-definition": {
      pattern: /(\bfunction\s+)[a-z_]\w*(?=\s*\()/i,
      lookbehind: !0,
      alias: "function"
    },
    keyword: [
      {
        pattern: /(\(\s*)\b(?:array|bool|boolean|float|int|integer|object|string)\b(?=\s*\))/i,
        alias: "type-casting",
        greedy: !0,
        lookbehind: !0
      },
      {
        pattern: /([(,?]\s*)\b(?:array(?!\s*\()|bool|callable|(?:false|null)(?=\s*\|)|float|int|iterable|mixed|object|self|static|string)\b(?=\s*\$)/i,
        alias: "type-hint",
        greedy: !0,
        lookbehind: !0
      },
      {
        pattern: /(\)\s*:\s*(?:\?\s*)?)\b(?:array(?!\s*\()|bool|callable|(?:false|null)(?=\s*\|)|float|int|iterable|mixed|never|object|self|static|string|void)\b/i,
        alias: "return-type",
        greedy: !0,
        lookbehind: !0
      },
      {
        pattern: /\b(?:array(?!\s*\()|bool|float|int|iterable|mixed|object|string|void)\b/i,
        alias: "type-declaration",
        greedy: !0
      },
      {
        pattern: /(\|\s*)(?:false|null)\b|\b(?:false|null)(?=\s*\|)/i,
        alias: "type-declaration",
        greedy: !0,
        lookbehind: !0
      },
      {
        pattern: /\b(?:parent|self|static)(?=\s*::)/i,
        alias: "static-context",
        greedy: !0
      },
      {
        // yield from
        pattern: /(\byield\s+)from\b/i,
        lookbehind: !0
      },
      // `class` is always a keyword unlike other keywords
      /\bclass\b/i,
      {
        // https://www.php.net/manual/en/reserved.keywords.php
        //
        // keywords cannot be preceded by "->"
        // the complex lookbehind means `(?<!(?:->|::)\s*)`
        pattern: /((?:^|[^\s>:]|(?:^|[^-])>|(?:^|[^:]):)\s*)\b(?:abstract|and|array|as|break|callable|case|catch|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|enum|eval|exit|extends|final|finally|fn|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|match|namespace|never|new|or|parent|print|private|protected|public|readonly|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield|__halt_compiler)\b/i,
        lookbehind: !0
      }
    ],
    "argument-name": {
      pattern: /([(,]\s*)\b[a-z_]\w*(?=\s*:(?!:))/i,
      lookbehind: !0
    },
    "class-name": [
      {
        pattern: /(\b(?:extends|implements|instanceof|new(?!\s+self|\s+static))\s+|\bcatch\s*\()\b[a-z_]\w*(?!\\)\b/i,
        greedy: !0,
        lookbehind: !0
      },
      {
        pattern: /(\|\s*)\b[a-z_]\w*(?!\\)\b/i,
        greedy: !0,
        lookbehind: !0
      },
      {
        pattern: /\b[a-z_]\w*(?!\\)\b(?=\s*\|)/i,
        greedy: !0
      },
      {
        pattern: /(\|\s*)(?:\\?\b[a-z_]\w*)+\b/i,
        alias: "class-name-fully-qualified",
        greedy: !0,
        lookbehind: !0,
        inside: {
          punctuation: /\\/
        }
      },
      {
        pattern: /(?:\\?\b[a-z_]\w*)+\b(?=\s*\|)/i,
        alias: "class-name-fully-qualified",
        greedy: !0,
        inside: {
          punctuation: /\\/
        }
      },
      {
        pattern: /(\b(?:extends|implements|instanceof|new(?!\s+self\b|\s+static\b))\s+|\bcatch\s*\()(?:\\?\b[a-z_]\w*)+\b(?!\\)/i,
        alias: "class-name-fully-qualified",
        greedy: !0,
        lookbehind: !0,
        inside: {
          punctuation: /\\/
        }
      },
      {
        pattern: /\b[a-z_]\w*(?=\s*\$)/i,
        alias: "type-declaration",
        greedy: !0
      },
      {
        pattern: /(?:\\?\b[a-z_]\w*)+(?=\s*\$)/i,
        alias: ["class-name-fully-qualified", "type-declaration"],
        greedy: !0,
        inside: {
          punctuation: /\\/
        }
      },
      {
        pattern: /\b[a-z_]\w*(?=\s*::)/i,
        alias: "static-context",
        greedy: !0
      },
      {
        pattern: /(?:\\?\b[a-z_]\w*)+(?=\s*::)/i,
        alias: ["class-name-fully-qualified", "static-context"],
        greedy: !0,
        inside: {
          punctuation: /\\/
        }
      },
      {
        pattern: /([(,?]\s*)[a-z_]\w*(?=\s*\$)/i,
        alias: "type-hint",
        greedy: !0,
        lookbehind: !0
      },
      {
        pattern: /([(,?]\s*)(?:\\?\b[a-z_]\w*)+(?=\s*\$)/i,
        alias: ["class-name-fully-qualified", "type-hint"],
        greedy: !0,
        lookbehind: !0,
        inside: {
          punctuation: /\\/
        }
      },
      {
        pattern: /(\)\s*:\s*(?:\?\s*)?)\b[a-z_]\w*(?!\\)\b/i,
        alias: "return-type",
        greedy: !0,
        lookbehind: !0
      },
      {
        pattern: /(\)\s*:\s*(?:\?\s*)?)(?:\\?\b[a-z_]\w*)+\b(?!\\)/i,
        alias: ["class-name-fully-qualified", "return-type"],
        greedy: !0,
        lookbehind: !0,
        inside: {
          punctuation: /\\/
        }
      }
    ],
    constant: r,
    function: {
      pattern: /(^|[^\\\w])\\?[a-z_](?:[\w\\]*\w)?(?=\s*\()/i,
      lookbehind: !0,
      inside: {
        punctuation: /\\/
      }
    },
    property: {
      pattern: /(->\s*)\w+/,
      lookbehind: !0
    },
    number: n,
    operator: i,
    punctuation: a
  };
  var s = {
    pattern: /\{\$(?:\{(?:\{[^{}]+\}|[^{}]+)\}|[^{}])+\}|(^|[^\\{])\$+(?:\w+(?:\[[^\r\n\[\]]+\]|->\w+)?)/,
    lookbehind: !0,
    inside: e.languages.php
  }, o = [
    {
      pattern: /<<<'([^']+)'[\r\n](?:.*[\r\n])*?\1;/,
      alias: "nowdoc-string",
      greedy: !0,
      inside: {
        delimiter: {
          pattern: /^<<<'[^']+'|[a-z_]\w*;$/i,
          alias: "symbol",
          inside: {
            punctuation: /^<<<'?|[';]$/
          }
        }
      }
    },
    {
      pattern: /<<<(?:"([^"]+)"[\r\n](?:.*[\r\n])*?\1;|([a-z_]\w*)[\r\n](?:.*[\r\n])*?\2;)/i,
      alias: "heredoc-string",
      greedy: !0,
      inside: {
        delimiter: {
          pattern: /^<<<(?:"[^"]+"|[a-z_]\w*)|[a-z_]\w*;$/i,
          alias: "symbol",
          inside: {
            punctuation: /^<<<"?|[";]$/
          }
        },
        interpolation: s
      }
    },
    {
      pattern: /`(?:\\[\s\S]|[^\\`])*`/,
      alias: "backtick-quoted-string",
      greedy: !0
    },
    {
      pattern: /'(?:\\[\s\S]|[^\\'])*'/,
      alias: "single-quoted-string",
      greedy: !0
    },
    {
      pattern: /"(?:\\[\s\S]|[^\\"])*"/,
      alias: "double-quoted-string",
      greedy: !0,
      inside: {
        interpolation: s
      }
    }
  ];
  e.languages.insertBefore("php", "variable", {
    string: o,
    attribute: {
      pattern: /#\[(?:[^"'\/#]|\/(?![*/])|\/\/.*$|#(?!\[).*$|\/\*(?:[^*]|\*(?!\/))*\*\/|"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*')+\](?=\s*[a-z$#])/im,
      greedy: !0,
      inside: {
        "attribute-content": {
          pattern: /^(#\[)[\s\S]+(?=\]$)/,
          lookbehind: !0,
          // inside can appear subset of php
          inside: {
            comment: t,
            string: o,
            "attribute-class-name": [
              {
                pattern: /([^:]|^)\b[a-z_]\w*(?!\\)\b/i,
                alias: "class-name",
                greedy: !0,
                lookbehind: !0
              },
              {
                pattern: /([^:]|^)(?:\\?\b[a-z_]\w*)+/i,
                alias: [
                  "class-name",
                  "class-name-fully-qualified"
                ],
                greedy: !0,
                lookbehind: !0,
                inside: {
                  punctuation: /\\/
                }
              }
            ],
            constant: r,
            number: n,
            operator: i,
            punctuation: a
          }
        },
        delimiter: {
          pattern: /^#\[|\]$/,
          alias: "punctuation"
        }
      }
    }
  }), e.hooks.add("before-tokenize", function(l) {
    if (/<\?/.test(l.code)) {
      var u = /<\?(?:[^"'/#]|\/(?![*/])|("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|(?:\/\/|#(?!\[))(?:[^?\n\r]|\?(?!>))*(?=$|\?>|[\r\n])|#\[|\/\*(?:[^*]|\*(?!\/))*(?:\*\/|$))*?(?:\?>|$)/g;
      e.languages["markup-templating"].buildPlaceholders(l, "php", u);
    }
  }), e.hooks.add("after-tokenize", function(l) {
    e.languages["markup-templating"].tokenizePlaceholders(l, "php");
  });
})(Prism);
(function(e) {
  var t = /\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record(?!\s*[(){}[\]<>=%~.:,;?+\-*/&|^])|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\b/, r = /(?:[a-z]\w*\s*\.\s*)*(?:[A-Z]\w*\s*\.\s*)*/.source, n = {
    pattern: RegExp(/(^|[^\w.])/.source + r + /[A-Z](?:[\d_A-Z]*[a-z]\w*)?\b/.source),
    lookbehind: !0,
    inside: {
      namespace: {
        pattern: /^[a-z]\w*(?:\s*\.\s*[a-z]\w*)*(?:\s*\.)?/,
        inside: {
          punctuation: /\./
        }
      },
      punctuation: /\./
    }
  };
  e.languages.java = e.languages.extend("clike", {
    string: {
      pattern: /(^|[^\\])"(?:\\.|[^"\\\r\n])*"/,
      lookbehind: !0,
      greedy: !0
    },
    "class-name": [
      n,
      {
        // variables, parameters, and constructor references
        // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)
        pattern: RegExp(/(^|[^\w.])/.source + r + /[A-Z]\w*(?=\s+\w+\s*[;,=()]|\s*(?:\[[\s,]*\]\s*)?::\s*new\b)/.source),
        lookbehind: !0,
        inside: n.inside
      },
      {
        // class names based on keyword
        // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)
        pattern: RegExp(/(\b(?:class|enum|extends|implements|instanceof|interface|new|record|throws)\s+)/.source + r + /[A-Z]\w*\b/.source),
        lookbehind: !0,
        inside: n.inside
      }
    ],
    keyword: t,
    function: [
      e.languages.clike.function,
      {
        pattern: /(::\s*)[a-z_]\w*/,
        lookbehind: !0
      }
    ],
    number: /\b0b[01][01_]*L?\b|\b0x(?:\.[\da-f_p+-]+|[\da-f_]+(?:\.[\da-f_p+-]+)?)\b|(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.\d[\d_]*)(?:e[+-]?\d[\d_]*)?[dfl]?/i,
    operator: {
      pattern: /(^|[^.])(?:<<=?|>>>?=?|->|--|\+\+|&&|\|\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,
      lookbehind: !0
    },
    constant: /\b[A-Z][A-Z_\d]+\b/
  }), e.languages.insertBefore("java", "string", {
    "triple-quoted-string": {
      // http://openjdk.java.net/jeps/355#Description
      pattern: /"""[ \t]*[\r\n](?:(?:"|"")?(?:\\.|[^"\\]))*"""/,
      greedy: !0,
      alias: "string"
    },
    char: {
      pattern: /'(?:\\.|[^'\\\r\n]){1,6}'/,
      greedy: !0
    }
  }), e.languages.insertBefore("java", "class-name", {
    annotation: {
      pattern: /(^|[^.])@\w+(?:\s*\.\s*\w+)*/,
      lookbehind: !0,
      alias: "punctuation"
    },
    generics: {
      pattern: /<(?:[\w\s,.?]|&(?!&)|<(?:[\w\s,.?]|&(?!&)|<(?:[\w\s,.?]|&(?!&)|<(?:[\w\s,.?]|&(?!&))*>)*>)*>)*>/,
      inside: {
        "class-name": n,
        keyword: t,
        punctuation: /[<>(),.:]/,
        operator: /[?&|]/
      }
    },
    import: [
      {
        pattern: RegExp(/(\bimport\s+)/.source + r + /(?:[A-Z]\w*|\*)(?=\s*;)/.source),
        lookbehind: !0,
        inside: {
          namespace: n.inside.namespace,
          punctuation: /\./,
          operator: /\*/,
          "class-name": /\w+/
        }
      },
      {
        pattern: RegExp(/(\bimport\s+static\s+)/.source + r + /(?:\w+|\*)(?=\s*;)/.source),
        lookbehind: !0,
        alias: "static",
        inside: {
          namespace: n.inside.namespace,
          static: /\b\w+$/,
          punctuation: /\./,
          operator: /\*/,
          "class-name": /\w+/
        }
      }
    ],
    namespace: {
      pattern: RegExp(
        /(\b(?:exports|import(?:\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\s+)(?!<keyword>)[a-z]\w*(?:\.[a-z]\w*)*\.?/.source.replace(/<keyword>/g, function() {
          return t.source;
        })
      ),
      lookbehind: !0,
      inside: {
        punctuation: /\./
      }
    }
  });
})(Prism);
(function(e) {
  var t = e.languages.javadoclike = {
    parameter: {
      pattern: /(^[\t ]*(?:\/{3}|\*|\/\*\*)\s*@(?:arg|arguments|param)\s+)\w+/m,
      lookbehind: !0
    },
    keyword: {
      // keywords are the first word in a line preceded be an `@` or surrounded by curly braces.
      // @word, {@word}
      pattern: /(^[\t ]*(?:\/{3}|\*|\/\*\*)\s*|\{)@[a-z][a-zA-Z-]+\b/m,
      lookbehind: !0
    },
    punctuation: /[{}]/
  };
  function r(i, a) {
    var s = "doc-comment", o = e.languages[i];
    if (o) {
      var l = o[s];
      if (!l) {
        var u = {};
        u[s] = {
          pattern: /(^|[^\\])\/\*\*[^/][\s\S]*?(?:\*\/|$)/,
          lookbehind: !0,
          alias: "comment"
        }, o = e.languages.insertBefore(i, "comment", u), l = o[s];
      }
      if (l instanceof RegExp && (l = o[s] = { pattern: l }), Array.isArray(l))
        for (var d = 0, p = l.length; d < p; d++)
          l[d] instanceof RegExp && (l[d] = { pattern: l[d] }), a(l[d]);
      else
        a(l);
    }
  }
  function n(i, a) {
    typeof i == "string" && (i = [i]), i.forEach(function(s) {
      r(s, function(o) {
        o.inside || (o.inside = {}), o.inside.rest = a;
      });
    });
  }
  Object.defineProperty(t, "addSupport", { value: n }), t.addSupport(["java", "javascript", "php"], t);
})(Prism);
(function(e) {
  var t = /(?:\b[a-zA-Z]\w*|[|\\[\]])+/.source;
  e.languages.phpdoc = e.languages.extend("javadoclike", {
    parameter: {
      pattern: RegExp("(@(?:global|param|property(?:-read|-write)?|var)\\s+(?:" + t + "\\s+)?)\\$\\w+"),
      lookbehind: !0
    }
  }), e.languages.insertBefore("phpdoc", "keyword", {
    "class-name": [
      {
        pattern: RegExp("(@(?:global|package|param|property(?:-read|-write)?|return|subpackage|throws|var)\\s+)" + t),
        lookbehind: !0,
        inside: {
          keyword: /\b(?:array|bool|boolean|callback|double|false|float|int|integer|mixed|null|object|resource|self|string|true|void)\b/,
          punctuation: /[|\\[\]()]/
        }
      }
    ]
  }), e.languages.javadoclike.addSupport("php", e.languages.phpdoc);
})(Prism);
(function(e) {
  var t = /(?:\((?:[^()\\]|\\[\s\S])*\)|\{(?:[^{}\\]|\\[\s\S])*\}|\[(?:[^[\]\\]|\\[\s\S])*\]|<(?:[^<>\\]|\\[\s\S])*>)/.source;
  e.languages.perl = {
    comment: [
      {
        // POD
        pattern: /(^\s*)=\w[\s\S]*?=cut.*/m,
        lookbehind: !0,
        greedy: !0
      },
      {
        pattern: /(^|[^\\$])#.*/,
        lookbehind: !0,
        greedy: !0
      }
    ],
    // TODO Could be nice to handle Heredoc too.
    string: [
      {
        pattern: RegExp(
          /\b(?:q|qq|qw|qx)(?![a-zA-Z0-9])\s*/.source + "(?:" + [
            // q/.../
            /([^a-zA-Z0-9\s{(\[<])(?:(?!\1)[^\\]|\\[\s\S])*\1/.source,
            // q a...a
            // eslint-disable-next-line regexp/strict
            /([a-zA-Z0-9])(?:(?!\2)[^\\]|\\[\s\S])*\2/.source,
            // q(...)
            // q{...}
            // q[...]
            // q<...>
            t
          ].join("|") + ")"
        ),
        greedy: !0
      },
      // "...", `...`
      {
        pattern: /("|`)(?:(?!\1)[^\\]|\\[\s\S])*\1/,
        greedy: !0
      },
      // '...'
      // FIXME Multi-line single-quoted strings are not supported as they would break variables containing '
      {
        pattern: /'(?:[^'\\\r\n]|\\.)*'/,
        greedy: !0
      }
    ],
    regex: [
      {
        pattern: RegExp(
          /\b(?:m|qr)(?![a-zA-Z0-9])\s*/.source + "(?:" + [
            // m/.../
            /([^a-zA-Z0-9\s{(\[<])(?:(?!\1)[^\\]|\\[\s\S])*\1/.source,
            // m a...a
            // eslint-disable-next-line regexp/strict
            /([a-zA-Z0-9])(?:(?!\2)[^\\]|\\[\s\S])*\2/.source,
            // m(...)
            // m{...}
            // m[...]
            // m<...>
            t
          ].join("|") + ")" + /[msixpodualngc]*/.source
        ),
        greedy: !0
      },
      // The lookbehinds prevent -s from breaking
      {
        pattern: RegExp(
          /(^|[^-])\b(?:s|tr|y)(?![a-zA-Z0-9])\s*/.source + "(?:" + [
            // s/.../.../
            // eslint-disable-next-line regexp/strict
            /([^a-zA-Z0-9\s{(\[<])(?:(?!\2)[^\\]|\\[\s\S])*\2(?:(?!\2)[^\\]|\\[\s\S])*\2/.source,
            // s a...a...a
            // eslint-disable-next-line regexp/strict
            /([a-zA-Z0-9])(?:(?!\3)[^\\]|\\[\s\S])*\3(?:(?!\3)[^\\]|\\[\s\S])*\3/.source,
            // s(...)(...)
            // s{...}{...}
            // s[...][...]
            // s<...><...>
            // s(...)[...]
            t + /\s*/.source + t
          ].join("|") + ")" + /[msixpodualngcer]*/.source
        ),
        lookbehind: !0,
        greedy: !0
      },
      // /.../
      // The look-ahead tries to prevent two divisions on
      // the same line from being highlighted as regex.
      // This does not support multi-line regex.
      {
        pattern: /\/(?:[^\/\\\r\n]|\\.)*\/[msixpodualngc]*(?=\s*(?:$|[\r\n,.;})&|\-+*~<>!?^]|(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|x|xor)\b))/,
        greedy: !0
      }
    ],
    // FIXME Not sure about the handling of ::, ', and #
    variable: [
      // ${^POSTMATCH}
      /[&*$@%]\{\^[A-Z]+\}/,
      // $^V
      /[&*$@%]\^[A-Z_]/,
      // ${...}
      /[&*$@%]#?(?=\{)/,
      // $foo
      /[&*$@%]#?(?:(?:::)*'?(?!\d)[\w$]+(?![\w$]))+(?:::)*/,
      // $1
      /[&*$@%]\d+/,
      // $_, @_, %!
      // The negative lookahead prevents from breaking the %= operator
      /(?!%=)[$@%][!"#$%&'()*+,\-.\/:;<=>?@[\\\]^_`{|}~]/
    ],
    filehandle: {
      // <>, <FOO>, _
      pattern: /<(?![<=])\S*?>|\b_\b/,
      alias: "symbol"
    },
    "v-string": {
      // v1.2, 1.2.3
      pattern: /v\d+(?:\.\d+)*|\d+(?:\.\d+){2,}/,
      alias: "string"
    },
    function: {
      pattern: /(\bsub[ \t]+)\w+/,
      lookbehind: !0
    },
    keyword: /\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|return|say|state|sub|switch|undef|unless|until|use|when|while)\b/,
    number: /\b(?:0x[\dA-Fa-f](?:_?[\dA-Fa-f])*|0b[01](?:_?[01])*|(?:(?:\d(?:_?\d)*)?\.)?\d(?:_?\d)*(?:[Ee][+-]?\d+)?)\b/,
    operator: /-[rwxoRWXOezsfdlpSbctugkTBMAC]\b|\+[+=]?|-[-=>]?|\*\*?=?|\/\/?=?|=[=~>]?|~[~=]?|\|\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\.(?:=|\.\.?)?|[\\?]|\bx(?:=|\b)|\b(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|xor)\b/,
    punctuation: /[{}[\];(),:]/
  };
})(Prism);
Prism.languages.scala = Prism.languages.extend("java", {
  "triple-quoted-string": {
    pattern: /"""[\s\S]*?"""/,
    greedy: !0,
    alias: "string"
  },
  string: {
    pattern: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
    greedy: !0
  },
  keyword: /<-|=>|\b(?:abstract|case|catch|class|def|derives|do|else|enum|extends|extension|final|finally|for|forSome|given|if|implicit|import|infix|inline|lazy|match|new|null|object|opaque|open|override|package|private|protected|return|sealed|self|super|this|throw|trait|transparent|try|type|using|val|var|while|with|yield)\b/,
  number: /\b0x(?:[\da-f]*\.)?[\da-f]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e\d+)?[dfl]?/i,
  builtin: /\b(?:Any|AnyRef|AnyVal|Boolean|Byte|Char|Double|Float|Int|Long|Nothing|Short|String|Unit)\b/,
  symbol: /'[^\d\s\\]\w*/
});
Prism.languages.insertBefore("scala", "triple-quoted-string", {
  "string-interpolation": {
    pattern: /\b[a-z]\w*(?:"""(?:[^$]|\$(?:[^{]|\{(?:[^{}]|\{[^{}]*\})*\}))*?"""|"(?:[^$"\r\n]|\$(?:[^{]|\{(?:[^{}]|\{[^{}]*\})*\}))*")/i,
    greedy: !0,
    inside: {
      id: {
        pattern: /^\w+/,
        greedy: !0,
        alias: "function"
      },
      escape: {
        pattern: /\\\$"|\$[$"]/,
        greedy: !0,
        alias: "symbol"
      },
      interpolation: {
        pattern: /\$(?:\w+|\{(?:[^{}]|\{[^{}]*\})*\})/,
        greedy: !0,
        inside: {
          punctuation: /^\$\{?|\}$/,
          expression: {
            pattern: /[\s\S]+/,
            inside: Prism.languages.scala
          }
        }
      },
      string: /[\s\S]+/
    }
  }
});
delete Prism.languages.scala["class-name"];
delete Prism.languages.scala.function;
delete Prism.languages.scala.constant;
(function(e) {
  var t = /(^(?:[\t ]*(?:\*\s*)*))[^*\s].*$/m, r = /#\s*\w+(?:\s*\([^()]*\))?/.source, n = /(?:\b[a-zA-Z]\w+\s*\.\s*)*\b[A-Z]\w*(?:\s*<mem>)?|<mem>/.source.replace(/<mem>/g, function() {
    return r;
  });
  e.languages.javadoc = e.languages.extend("javadoclike", {}), e.languages.insertBefore("javadoc", "keyword", {
    reference: {
      pattern: RegExp(/(@(?:exception|link|linkplain|see|throws|value)\s+(?:\*\s*)?)/.source + "(?:" + n + ")"),
      lookbehind: !0,
      inside: {
        function: {
          pattern: /(#\s*)\w+(?=\s*\()/,
          lookbehind: !0
        },
        field: {
          pattern: /(#\s*)\w+/,
          lookbehind: !0
        },
        namespace: {
          pattern: /\b(?:[a-z]\w*\s*\.\s*)+/,
          inside: {
            punctuation: /\./
          }
        },
        "class-name": /\b[A-Z]\w*/,
        keyword: e.languages.java.keyword,
        punctuation: /[#()[\],.]/
      }
    },
    "class-name": {
      // @param <T> the first generic type parameter
      pattern: /(@param\s+)<[A-Z]\w*>/,
      lookbehind: !0,
      inside: {
        punctuation: /[.<>]/
      }
    },
    "code-section": [
      {
        pattern: /(\{@code\s+(?!\s))(?:[^\s{}]|\s+(?![\s}])|\{(?:[^{}]|\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})*\})*\})+(?=\s*\})/,
        lookbehind: !0,
        inside: {
          code: {
            // there can't be any HTML inside of {@code} tags
            pattern: t,
            lookbehind: !0,
            inside: e.languages.java,
            alias: "language-java"
          }
        }
      },
      {
        pattern: /(<(code|pre|tt)>(?!<code>)\s*)\S(?:\S|\s+\S)*?(?=\s*<\/\2>)/,
        lookbehind: !0,
        inside: {
          line: {
            pattern: t,
            lookbehind: !0,
            inside: {
              // highlight HTML tags and entities
              tag: e.languages.markup.tag,
              entity: e.languages.markup.entity,
              code: {
                // everything else is Java code
                pattern: /.+/,
                inside: e.languages.java,
                alias: "language-java"
              }
            }
          }
        }
      }
    ],
    tag: e.languages.markup.tag,
    entity: e.languages.markup.entity
  }), e.languages.javadoclike.addSupport("java", e.languages.javadoc);
})(Prism);
(function(e) {
  var t = {
    pattern: /((?:^|[^\\$])(?:\\{2})*)\$(?:\w+|\{[^{}]*\})/,
    lookbehind: !0,
    inside: {
      "interpolation-punctuation": {
        pattern: /^\$\{?|\}$/,
        alias: "punctuation"
      },
      expression: {
        pattern: /[\s\S]+/,
        inside: null
        // see below
      }
    }
  };
  e.languages.groovy = e.languages.extend("clike", {
    string: {
      // https://groovy-lang.org/syntax.html#_dollar_slashy_string
      pattern: /'''(?:[^\\]|\\[\s\S])*?'''|'(?:\\.|[^\\'\r\n])*'/,
      greedy: !0
    },
    keyword: /\b(?:abstract|as|assert|boolean|break|byte|case|catch|char|class|const|continue|def|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|in|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\b/,
    number: /\b(?:0b[01_]+|0x[\da-f_]+(?:\.[\da-f_p\-]+)?|[\d_]+(?:\.[\d_]+)?(?:e[+-]?\d+)?)[glidf]?\b/i,
    operator: {
      pattern: /(^|[^.])(?:~|==?~?|\?[.:]?|\*(?:[.=]|\*=?)?|\.[@&]|\.\.<|\.\.(?!\.)|-[-=>]?|\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\|[|=]?|\/=?|\^=?|%=?)/,
      lookbehind: !0
    },
    punctuation: /\.+|[{}[\];(),:$]/
  }), e.languages.insertBefore("groovy", "string", {
    shebang: {
      pattern: /#!.+/,
      alias: "comment",
      greedy: !0
    },
    "interpolation-string": {
      // TODO: Slash strings (e.g. /foo/) can contain line breaks but this will cause a lot of trouble with
      // simple division (see JS regex), so find a fix maybe?
      pattern: /"""(?:[^\\]|\\[\s\S])*?"""|(["/])(?:\\.|(?!\1)[^\\\r\n])*\1|\$\/(?:[^/$]|\$(?:[/$]|(?![/$]))|\/(?!\$))*\/\$/,
      greedy: !0,
      inside: {
        interpolation: t,
        string: /[\s\S]+/
      }
    }
  }), e.languages.insertBefore("groovy", "punctuation", {
    "spock-block": /\b(?:and|cleanup|expect|given|setup|then|when|where):/
  }), e.languages.insertBefore("groovy", "function", {
    annotation: {
      pattern: /(^|[^.])@\w+/,
      lookbehind: !0,
      alias: "punctuation"
    }
  }), t.inside.expression.inside = e.languages.groovy;
})(Prism);
(function(e) {
  e.languages.kotlin = e.languages.extend("clike", {
    keyword: {
      // The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get
      pattern: /(^|[^.])\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\b/,
      lookbehind: !0
    },
    function: [
      {
        pattern: /(?:`[^\r\n`]+`|\b\w+)(?=\s*\()/,
        greedy: !0
      },
      {
        pattern: /(\.)(?:`[^\r\n`]+`|\w+)(?=\s*\{)/,
        lookbehind: !0,
        greedy: !0
      }
    ],
    number: /\b(?:0[xX][\da-fA-F]+(?:_[\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\d+(?:_\d+)*(?:\.\d+(?:_\d+)*)?(?:[eE][+-]?\d+(?:_\d+)*)?[fFL]?)\b/,
    operator: /\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\/*%<>]=?|[?:]:?|\.\.|&&|\|\||\b(?:and|inv|or|shl|shr|ushr|xor)\b/
  }), delete e.languages.kotlin["class-name"];
  var t = {
    "interpolation-punctuation": {
      pattern: /^\$\{?|\}$/,
      alias: "punctuation"
    },
    expression: {
      pattern: /[\s\S]+/,
      inside: e.languages.kotlin
    }
  };
  e.languages.insertBefore("kotlin", "string", {
    // https://kotlinlang.org/spec/expressions.html#string-interpolation-expressions
    "string-literal": [
      {
        pattern: /"""(?:[^$]|\$(?:(?!\{)|\{[^{}]*\}))*?"""/,
        alias: "multiline",
        inside: {
          interpolation: {
            pattern: /\$(?:[a-z_]\w*|\{[^{}]*\})/i,
            inside: t
          },
          string: /[\s\S]+/
        }
      },
      {
        pattern: /"(?:[^"\\\r\n$]|\\.|\$(?:(?!\{)|\{[^{}]*\}))*"/,
        alias: "singleline",
        inside: {
          interpolation: {
            pattern: /((?:^|[^\\])(?:\\{2})*)\$(?:[a-z_]\w*|\{[^{}]*\})/i,
            lookbehind: !0,
            inside: t
          },
          string: /[\s\S]+/
        }
      }
    ],
    char: {
      // https://kotlinlang.org/spec/expressions.html#character-literals
      pattern: /'(?:[^'\\\r\n]|\\(?:.|u[a-fA-F0-9]{0,4}))'/,
      greedy: !0
    }
  }), delete e.languages.kotlin.string, e.languages.insertBefore("kotlin", "keyword", {
    annotation: {
      pattern: /\B@(?:\w+:)?(?:[A-Z]\w*|\[[^\]]+\])/,
      alias: "builtin"
    }
  }), e.languages.insertBefore("kotlin", "function", {
    label: {
      pattern: /\b\w+@|@\w+\b/,
      alias: "symbol"
    }
  }), e.languages.kt = e.languages.kotlin, e.languages.kts = e.languages.kotlin;
})(Prism);
(function(e) {
  var t = /\\(?:[^a-z()[\]]|[a-z*]+)/i, r = {
    "equation-command": {
      pattern: t,
      alias: "regex"
    }
  };
  e.languages.latex = {
    comment: /%.*/,
    // the verbatim environment prints whitespace to the document
    cdata: {
      pattern: /(\\begin\{((?:lstlisting|verbatim)\*?)\})[\s\S]*?(?=\\end\{\2\})/,
      lookbehind: !0
    },
    /*
     * equations can be between $$ $$ or $ $ or \( \) or \[ \]
     * (all are multiline)
     */
    equation: [
      {
        pattern: /\$\$(?:\\[\s\S]|[^\\$])+\$\$|\$(?:\\[\s\S]|[^\\$])+\$|\\\([\s\S]*?\\\)|\\\[[\s\S]*?\\\]/,
        inside: r,
        alias: "string"
      },
      {
        pattern: /(\\begin\{((?:align|eqnarray|equation|gather|math|multline)\*?)\})[\s\S]*?(?=\\end\{\2\})/,
        lookbehind: !0,
        inside: r,
        alias: "string"
      }
    ],
    /*
     * arguments which are keywords or references are highlighted
     * as keywords
     */
    keyword: {
      pattern: /(\\(?:begin|cite|documentclass|end|label|ref|usepackage)(?:\[[^\]]+\])?\{)[^}]+(?=\})/,
      lookbehind: !0
    },
    url: {
      pattern: /(\\url\{)[^}]+(?=\})/,
      lookbehind: !0
    },
    /*
     * section or chapter headlines are highlighted as bold so that
     * they stand out more
     */
    headline: {
      pattern: /(\\(?:chapter|frametitle|paragraph|part|section|subparagraph|subsection|subsubparagraph|subsubsection|subsubsubparagraph)\*?(?:\[[^\]]+\])?\{)[^}]+(?=\})/,
      lookbehind: !0,
      alias: "class-name"
    },
    function: {
      pattern: t,
      alias: "selector"
    },
    punctuation: /[[\]{}&]/
  }, e.languages.tex = e.languages.latex, e.languages.context = e.languages.latex;
})(Prism);
Prism.languages.matlab = {
  comment: [
    /%\{[\s\S]*?\}%/,
    /%.+/
  ],
  string: {
    pattern: /\B'(?:''|[^'\r\n])*'/,
    greedy: !0
  },
  // FIXME We could handle imaginary numbers as a whole
  number: /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[eE][+-]?\d+)?(?:[ij])?|\b[ij]\b/,
  keyword: /\b(?:NaN|break|case|catch|continue|else|elseif|end|for|function|if|inf|otherwise|parfor|pause|pi|return|switch|try|while)\b/,
  function: /\b(?!\d)\w+(?=\s*\()/,
  operator: /\.?[*^\/\\']|[+\-:@]|[<>=~]=?|&&?|\|\|?/,
  punctuation: /\.{3}|[.,;\[\](){}!]/
};
(function(e) {
  var t = [
    // query and projection
    "$eq",
    "$gt",
    "$gte",
    "$in",
    "$lt",
    "$lte",
    "$ne",
    "$nin",
    "$and",
    "$not",
    "$nor",
    "$or",
    "$exists",
    "$type",
    "$expr",
    "$jsonSchema",
    "$mod",
    "$regex",
    "$text",
    "$where",
    "$geoIntersects",
    "$geoWithin",
    "$near",
    "$nearSphere",
    "$all",
    "$elemMatch",
    "$size",
    "$bitsAllClear",
    "$bitsAllSet",
    "$bitsAnyClear",
    "$bitsAnySet",
    "$comment",
    "$elemMatch",
    "$meta",
    "$slice",
    // update
    "$currentDate",
    "$inc",
    "$min",
    "$max",
    "$mul",
    "$rename",
    "$set",
    "$setOnInsert",
    "$unset",
    "$addToSet",
    "$pop",
    "$pull",
    "$push",
    "$pullAll",
    "$each",
    "$position",
    "$slice",
    "$sort",
    "$bit",
    // aggregation pipeline stages
    "$addFields",
    "$bucket",
    "$bucketAuto",
    "$collStats",
    "$count",
    "$currentOp",
    "$facet",
    "$geoNear",
    "$graphLookup",
    "$group",
    "$indexStats",
    "$limit",
    "$listLocalSessions",
    "$listSessions",
    "$lookup",
    "$match",
    "$merge",
    "$out",
    "$planCacheStats",
    "$project",
    "$redact",
    "$replaceRoot",
    "$replaceWith",
    "$sample",
    "$set",
    "$skip",
    "$sort",
    "$sortByCount",
    "$unionWith",
    "$unset",
    "$unwind",
    "$setWindowFields",
    // aggregation pipeline operators
    "$abs",
    "$accumulator",
    "$acos",
    "$acosh",
    "$add",
    "$addToSet",
    "$allElementsTrue",
    "$and",
    "$anyElementTrue",
    "$arrayElemAt",
    "$arrayToObject",
    "$asin",
    "$asinh",
    "$atan",
    "$atan2",
    "$atanh",
    "$avg",
    "$binarySize",
    "$bsonSize",
    "$ceil",
    "$cmp",
    "$concat",
    "$concatArrays",
    "$cond",
    "$convert",
    "$cos",
    "$dateFromParts",
    "$dateToParts",
    "$dateFromString",
    "$dateToString",
    "$dayOfMonth",
    "$dayOfWeek",
    "$dayOfYear",
    "$degreesToRadians",
    "$divide",
    "$eq",
    "$exp",
    "$filter",
    "$first",
    "$floor",
    "$function",
    "$gt",
    "$gte",
    "$hour",
    "$ifNull",
    "$in",
    "$indexOfArray",
    "$indexOfBytes",
    "$indexOfCP",
    "$isArray",
    "$isNumber",
    "$isoDayOfWeek",
    "$isoWeek",
    "$isoWeekYear",
    "$last",
    "$last",
    "$let",
    "$literal",
    "$ln",
    "$log",
    "$log10",
    "$lt",
    "$lte",
    "$ltrim",
    "$map",
    "$max",
    "$mergeObjects",
    "$meta",
    "$min",
    "$millisecond",
    "$minute",
    "$mod",
    "$month",
    "$multiply",
    "$ne",
    "$not",
    "$objectToArray",
    "$or",
    "$pow",
    "$push",
    "$radiansToDegrees",
    "$range",
    "$reduce",
    "$regexFind",
    "$regexFindAll",
    "$regexMatch",
    "$replaceOne",
    "$replaceAll",
    "$reverseArray",
    "$round",
    "$rtrim",
    "$second",
    "$setDifference",
    "$setEquals",
    "$setIntersection",
    "$setIsSubset",
    "$setUnion",
    "$size",
    "$sin",
    "$slice",
    "$split",
    "$sqrt",
    "$stdDevPop",
    "$stdDevSamp",
    "$strcasecmp",
    "$strLenBytes",
    "$strLenCP",
    "$substr",
    "$substrBytes",
    "$substrCP",
    "$subtract",
    "$sum",
    "$switch",
    "$tan",
    "$toBool",
    "$toDate",
    "$toDecimal",
    "$toDouble",
    "$toInt",
    "$toLong",
    "$toObjectId",
    "$toString",
    "$toLower",
    "$toUpper",
    "$trim",
    "$trunc",
    "$type",
    "$week",
    "$year",
    "$zip",
    "$count",
    "$dateAdd",
    "$dateDiff",
    "$dateSubtract",
    "$dateTrunc",
    "$getField",
    "$rand",
    "$sampleRate",
    "$setField",
    "$unsetField",
    // aggregation pipeline query modifiers
    "$comment",
    "$explain",
    "$hint",
    "$max",
    "$maxTimeMS",
    "$min",
    "$orderby",
    "$query",
    "$returnKey",
    "$showDiskLoc",
    "$natural"
  ], r = [
    "ObjectId",
    "Code",
    "BinData",
    "DBRef",
    "Timestamp",
    "NumberLong",
    "NumberDecimal",
    "MaxKey",
    "MinKey",
    "RegExp",
    "ISODate",
    "UUID"
  ];
  t = t.map(function(i) {
    return i.replace("$", "\\$");
  });
  var n = "(?:" + t.join("|") + ")\\b";
  e.languages.mongodb = e.languages.extend("javascript", {}), e.languages.insertBefore("mongodb", "string", {
    property: {
      pattern: /(?:(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)(?=\s*:)/,
      greedy: !0,
      inside: {
        keyword: RegExp(`^(['"])?` + n + "(?:\\1)?$")
      }
    }
  }), e.languages.mongodb.string.inside = {
    url: {
      // url pattern
      pattern: /https?:\/\/[-\w@:%.+~#=]{1,256}\.[a-z0-9()]{1,6}\b[-\w()@:%+.~#?&/=]*/i,
      greedy: !0
    },
    entity: {
      // ipv4
      pattern: /\b(?:(?:[01]?\d\d?|2[0-4]\d|25[0-5])\.){3}(?:[01]?\d\d?|2[0-4]\d|25[0-5])\b/,
      greedy: !0
    }
  }, e.languages.insertBefore("mongodb", "constant", {
    builtin: {
      pattern: RegExp("\\b(?:" + r.join("|") + ")\\b"),
      alias: "keyword"
    }
  });
})(Prism);
Prism.languages.erlang = {
  comment: /%.+/,
  string: {
    pattern: /"(?:\\.|[^\\"\r\n])*"/,
    greedy: !0
  },
  "quoted-function": {
    pattern: /'(?:\\.|[^\\'\r\n])+'(?=\()/,
    alias: "function"
  },
  "quoted-atom": {
    pattern: /'(?:\\.|[^\\'\r\n])+'/,
    alias: "atom"
  },
  boolean: /\b(?:false|true)\b/,
  keyword: /\b(?:after|begin|case|catch|end|fun|if|of|receive|try|when)\b/,
  number: [
    /\$\\?./,
    /\b\d+#[a-z0-9]+/i,
    /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i
  ],
  function: /\b[a-z][\w@]*(?=\()/,
  variable: {
    // Look-behind is used to prevent wrong highlighting of atoms containing "@"
    pattern: /(^|[^@])(?:\b|\?)[A-Z_][\w@]*/,
    lookbehind: !0
  },
  operator: [
    /[=\/<>:]=|=[:\/]=|\+\+?|--?|[=*\/!]|\b(?:and|andalso|band|bnot|bor|bsl|bsr|bxor|div|not|or|orelse|rem|xor)\b/,
    {
      // We don't want to match <<
      pattern: /(^|[^<])<(?!<)/,
      lookbehind: !0
    },
    {
      // We don't want to match >>
      pattern: /(^|[^>])>(?!>)/,
      lookbehind: !0
    }
  ],
  atom: /\b[a-z][\w@]*/,
  punctuation: /[()[\]{}:;,.#|]|<<|>>/
};
Prism.languages.lua = {
  comment: /^#!.+|--(?:\[(=*)\[[\s\S]*?\]\1\]|.*)/m,
  // \z may be used to skip the following space
  string: {
    pattern: /(["'])(?:(?!\1)[^\\\r\n]|\\z(?:\r\n|\s)|\\(?:\r\n|[^z]))*\1|\[(=*)\[[\s\S]*?\]\2\]/,
    greedy: !0
  },
  number: /\b0x[a-f\d]+(?:\.[a-f\d]*)?(?:p[+-]?\d+)?\b|\b\d+(?:\.\B|(?:\.\d*)?(?:e[+-]?\d+)?\b)|\B\.\d+(?:e[+-]?\d+)?\b/i,
  keyword: /\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\b/,
  function: /(?!\d)\w+(?=\s*(?:[({]))/,
  operator: [
    /[-+*%^&|#]|\/\/?|<[<=]?|>[>=]?|[=~]=?/,
    {
      // Match ".." but don't break "..."
      pattern: /(^|[^.])\.\.(?!\.)/,
      lookbehind: !0
    }
  ],
  punctuation: /[\[\](){},;]|\.+|:+/
};
Prism.languages.python = {
  comment: {
    pattern: /(^|[^\\])#.*/,
    lookbehind: !0,
    greedy: !0
  },
  "string-interpolation": {
    pattern: /(?:f|fr|rf)(?:("""|''')[\s\S]*?\1|("|')(?:\\.|(?!\2)[^\\\r\n])*\2)/i,
    greedy: !0,
    inside: {
      interpolation: {
        // "{" <expression> <optional "!s", "!r", or "!a"> <optional ":" format specifier> "}"
        pattern: /((?:^|[^{])(?:\{\{)*)\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}])+\})+\})+\}/,
        lookbehind: !0,
        inside: {
          "format-spec": {
            pattern: /(:)[^:(){}]+(?=\}$)/,
            lookbehind: !0
          },
          "conversion-option": {
            pattern: /![sra](?=[:}]$)/,
            alias: "punctuation"
          },
          rest: null
        }
      },
      string: /[\s\S]+/
    }
  },
  "triple-quoted-string": {
    pattern: /(?:[rub]|br|rb)?("""|''')[\s\S]*?\1/i,
    greedy: !0,
    alias: "string"
  },
  string: {
    pattern: /(?:[rub]|br|rb)?("|')(?:\\.|(?!\1)[^\\\r\n])*\1/i,
    greedy: !0
  },
  function: {
    pattern: /((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/g,
    lookbehind: !0
  },
  "class-name": {
    pattern: /(\bclass\s+)\w+/i,
    lookbehind: !0
  },
  decorator: {
    pattern: /(^[\t ]*)@\w+(?:\.\w+)*/m,
    lookbehind: !0,
    alias: ["annotation", "punctuation"],
    inside: {
      punctuation: /\./
    }
  },
  keyword: /\b(?:_(?=\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\b/,
  builtin: /\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\b/,
  boolean: /\b(?:False|None|True)\b/,
  number: /\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\b|(?:\b\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\B\.\d+(?:_\d+)*)(?:e[+-]?\d+(?:_\d+)*)?j?(?!\w)/i,
  operator: /[-+%=]=?|!=|:=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,
  punctuation: /[{}[\];(),.:]/
};
Prism.languages.python["string-interpolation"].inside.interpolation.inside.rest = Prism.languages.python;
Prism.languages.py = Prism.languages.python;
(function(e) {
  e.languages.django = {
    comment: /^\{#[\s\S]*?#\}$/,
    tag: {
      pattern: /(^\{%[+-]?\s*)\w+/,
      lookbehind: !0,
      alias: "keyword"
    },
    delimiter: {
      pattern: /^\{[{%][+-]?|[+-]?[}%]\}$/,
      alias: "punctuation"
    },
    string: {
      pattern: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
      greedy: !0
    },
    filter: {
      pattern: /(\|)\w+/,
      lookbehind: !0,
      alias: "function"
    },
    test: {
      pattern: /(\bis\s+(?:not\s+)?)(?!not\b)\w+/,
      lookbehind: !0,
      alias: "function"
    },
    function: /\b[a-z_]\w+(?=\s*\()/i,
    keyword: /\b(?:and|as|by|else|for|if|import|in|is|loop|not|or|recursive|with|without)\b/,
    operator: /[-+%=]=?|!=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,
    number: /\b\d+(?:\.\d+)?\b/,
    boolean: /[Ff]alse|[Nn]one|[Tt]rue/,
    variable: /\b\w+\b/,
    punctuation: /[{}[\](),.:;]/
  };
  var t = /\{\{[\s\S]*?\}\}|\{%[\s\S]*?%\}|\{#[\s\S]*?#\}/g, r = e.languages["markup-templating"];
  e.hooks.add("before-tokenize", function(n) {
    r.buildPlaceholders(n, "django", t);
  }), e.hooks.add("after-tokenize", function(n) {
    r.tokenizePlaceholders(n, "django");
  }), e.languages.jinja2 = e.languages.django, e.hooks.add("before-tokenize", function(n) {
    r.buildPlaceholders(n, "jinja2", t);
  }), e.hooks.add("after-tokenize", function(n) {
    r.tokenizePlaceholders(n, "jinja2");
  });
})(Prism);
(function(e) {
  function t(G, ae) {
    return G.replace(/<<(\d+)>>/g, function(se, Y) {
      return "(?:" + ae[+Y] + ")";
    });
  }
  function r(G, ae, se) {
    return RegExp(t(G, ae), se || "");
  }
  function n(G, ae) {
    for (var se = 0; se < ae; se++)
      G = G.replace(/<<self>>/g, function() {
        return "(?:" + G + ")";
      });
    return G.replace(/<<self>>/g, "[^\\s\\S]");
  }
  var i = {
    // keywords which represent a return or variable type
    type: "bool byte char decimal double dynamic float int long object sbyte short string uint ulong ushort var void",
    // keywords which are used to declare a type
    typeDeclaration: "class enum interface record struct",
    // contextual keywords
    // ("var" and "dynamic" are missing because they are used like types)
    contextual: "add alias and ascending async await by descending from(?=\\s*(?:\\w|$)) get global group into init(?=\\s*;) join let nameof not notnull on or orderby partial remove select set unmanaged value when where with(?=\\s*{)",
    // all other keywords
    other: "abstract as base break case catch checked const continue default delegate do else event explicit extern finally fixed for foreach goto if implicit in internal is lock namespace new null operator out override params private protected public readonly ref return sealed sizeof stackalloc static switch this throw try typeof unchecked unsafe using virtual volatile while yield"
  };
  function a(G) {
    return "\\b(?:" + G.trim().replace(/ /g, "|") + ")\\b";
  }
  var s = a(i.typeDeclaration), o = RegExp(a(i.type + " " + i.typeDeclaration + " " + i.contextual + " " + i.other)), l = a(i.typeDeclaration + " " + i.contextual + " " + i.other), u = a(i.type + " " + i.typeDeclaration + " " + i.other), d = n(/<(?:[^<>;=+\-*/%&|^]|<<self>>)*>/.source, 2), p = n(/\((?:[^()]|<<self>>)*\)/.source, 2), b = /@?\b[A-Za-z_]\w*\b/.source, m = t(/<<0>>(?:\s*<<1>>)?/.source, [b, d]), _ = t(/(?!<<0>>)<<1>>(?:\s*\.\s*<<1>>)*/.source, [l, m]), k = /\[\s*(?:,\s*)*\]/.source, L = t(/<<0>>(?:\s*(?:\?\s*)?<<1>>)*(?:\s*\?)?/.source, [_, k]), A = t(/[^,()<>[\];=+\-*/%&|^]|<<0>>|<<1>>|<<2>>/.source, [d, p, k]), v = t(/\(<<0>>+(?:,<<0>>+)+\)/.source, [A]), S = t(/(?:<<0>>|<<1>>)(?:\s*(?:\?\s*)?<<2>>)*(?:\s*\?)?/.source, [v, _, k]), C = {
    keyword: o,
    punctuation: /[<>()?,.:[\]]/
  }, I = /'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'/.source, R = /"(?:\\.|[^\\"\r\n])*"/.source, N = /@"(?:""|\\[\s\S]|[^\\"])*"(?!")/.source;
  e.languages.csharp = e.languages.extend("clike", {
    string: [
      {
        pattern: r(/(^|[^$\\])<<0>>/.source, [N]),
        lookbehind: !0,
        greedy: !0
      },
      {
        pattern: r(/(^|[^@$\\])<<0>>/.source, [R]),
        lookbehind: !0,
        greedy: !0
      }
    ],
    "class-name": [
      {
        // Using static
        // using static System.Math;
        pattern: r(/(\busing\s+static\s+)<<0>>(?=\s*;)/.source, [_]),
        lookbehind: !0,
        inside: C
      },
      {
        // Using alias (type)
        // using Project = PC.MyCompany.Project;
        pattern: r(/(\busing\s+<<0>>\s*=\s*)<<1>>(?=\s*;)/.source, [b, S]),
        lookbehind: !0,
        inside: C
      },
      {
        // Using alias (alias)
        // using Project = PC.MyCompany.Project;
        pattern: r(/(\busing\s+)<<0>>(?=\s*=)/.source, [b]),
        lookbehind: !0
      },
      {
        // Type declarations
        // class Foo<A, B>
        // interface Foo<out A, B>
        pattern: r(/(\b<<0>>\s+)<<1>>/.source, [s, m]),
        lookbehind: !0,
        inside: C
      },
      {
        // Single catch exception declaration
        // catch(Foo)
        // (things like catch(Foo e) is covered by variable declaration)
        pattern: r(/(\bcatch\s*\(\s*)<<0>>/.source, [_]),
        lookbehind: !0,
        inside: C
      },
      {
        // Name of the type parameter of generic constraints
        // where Foo : class
        pattern: r(/(\bwhere\s+)<<0>>/.source, [b]),
        lookbehind: !0
      },
      {
        // Casts and checks via as and is.
        // as Foo<A>, is Bar<B>
        // (things like if(a is Foo b) is covered by variable declaration)
        pattern: r(/(\b(?:is(?:\s+not)?|as)\s+)<<0>>/.source, [L]),
        lookbehind: !0,
        inside: C
      },
      {
        // Variable, field and parameter declaration
        // (Foo bar, Bar baz, Foo[,,] bay, Foo<Bar, FooBar<Bar>> bax)
        pattern: r(/\b<<0>>(?=\s+(?!<<1>>|with\s*\{)<<2>>(?:\s*[=,;:{)\]]|\s+(?:in|when)\b))/.source, [S, u, b]),
        inside: C
      }
    ],
    keyword: o,
    // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#literals
    number: /(?:\b0(?:x[\da-f_]*[\da-f]|b[01_]*[01])|(?:\B\.\d+(?:_+\d+)*|\b\d+(?:_+\d+)*(?:\.\d+(?:_+\d+)*)?)(?:e[-+]?\d+(?:_+\d+)*)?)(?:[dflmu]|lu|ul)?\b/i,
    operator: />>=?|<<=?|[-=]>|([-+&|])\1|~|\?\?=?|[-+*/%&|^!=<>]=?/,
    punctuation: /\?\.?|::|[{}[\];(),.:]/
  }), e.languages.insertBefore("csharp", "number", {
    range: {
      pattern: /\.\./,
      alias: "operator"
    }
  }), e.languages.insertBefore("csharp", "punctuation", {
    "named-parameter": {
      pattern: r(/([(,]\s*)<<0>>(?=\s*:)/.source, [b]),
      lookbehind: !0,
      alias: "punctuation"
    }
  }), e.languages.insertBefore("csharp", "class-name", {
    namespace: {
      // namespace Foo.Bar {}
      // using Foo.Bar;
      pattern: r(/(\b(?:namespace|using)\s+)<<0>>(?:\s*\.\s*<<0>>)*(?=\s*[;{])/.source, [b]),
      lookbehind: !0,
      inside: {
        punctuation: /\./
      }
    },
    "type-expression": {
      // default(Foo), typeof(Foo<Bar>), sizeof(int)
      pattern: r(/(\b(?:default|sizeof|typeof)\s*\(\s*(?!\s))(?:[^()\s]|\s(?!\s)|<<0>>)*(?=\s*\))/.source, [p]),
      lookbehind: !0,
      alias: "class-name",
      inside: C
    },
    "return-type": {
      // Foo<Bar> ForBar(); Foo IFoo.Bar() => 0
      // int this[int index] => 0; T IReadOnlyList<T>.this[int index] => this[index];
      // int Foo => 0; int Foo { get; set } = 0;
      pattern: r(/<<0>>(?=\s+(?:<<1>>\s*(?:=>|[({]|\.\s*this\s*\[)|this\s*\[))/.source, [S, _]),
      inside: C,
      alias: "class-name"
    },
    "constructor-invocation": {
      // new List<Foo<Bar[]>> { }
      pattern: r(/(\bnew\s+)<<0>>(?=\s*[[({])/.source, [S]),
      lookbehind: !0,
      inside: C,
      alias: "class-name"
    },
    /*'explicit-implementation': {
    	// int IFoo<Foo>.Bar => 0; void IFoo<Foo<Foo>>.Foo<T>();
    	pattern: replace(/\b<<0>>(?=\.<<1>>)/, className, methodOrPropertyDeclaration),
    	inside: classNameInside,
    	alias: 'class-name'
    },*/
    "generic-method": {
      // foo<Bar>()
      pattern: r(/<<0>>\s*<<1>>(?=\s*\()/.source, [b, d]),
      inside: {
        function: r(/^<<0>>/.source, [b]),
        generic: {
          pattern: RegExp(d),
          alias: "class-name",
          inside: C
        }
      }
    },
    "type-list": {
      // The list of types inherited or of generic constraints
      // class Foo<F> : Bar, IList<FooBar>
      // where F : Bar, IList<int>
      pattern: r(
        /\b((?:<<0>>\s+<<1>>|record\s+<<1>>\s*<<5>>|where\s+<<2>>)\s*:\s*)(?:<<3>>|<<4>>|<<1>>\s*<<5>>|<<6>>)(?:\s*,\s*(?:<<3>>|<<4>>|<<6>>))*(?=\s*(?:where|[{;]|=>|$))/.source,
        [s, m, b, S, o.source, p, /\bnew\s*\(\s*\)/.source]
      ),
      lookbehind: !0,
      inside: {
        "record-arguments": {
          pattern: r(/(^(?!new\s*\()<<0>>\s*)<<1>>/.source, [m, p]),
          lookbehind: !0,
          greedy: !0,
          inside: e.languages.csharp
        },
        keyword: o,
        "class-name": {
          pattern: RegExp(S),
          greedy: !0,
          inside: C
        },
        punctuation: /[,()]/
      }
    },
    preprocessor: {
      pattern: /(^[\t ]*)#.*/m,
      lookbehind: !0,
      alias: "property",
      inside: {
        // highlight preprocessor directives as keywords
        directive: {
          pattern: /(#)\b(?:define|elif|else|endif|endregion|error|if|line|nullable|pragma|region|undef|warning)\b/,
          lookbehind: !0,
          alias: "keyword"
        }
      }
    }
  });
  var K = R + "|" + I, B = t(/\/(?![*/])|\/\/[^\r\n]*[\r\n]|\/\*(?:[^*]|\*(?!\/))*\*\/|<<0>>/.source, [K]), ie = n(t(/[^"'/()]|<<0>>|\(<<self>>*\)/.source, [B]), 2), ge = /\b(?:assembly|event|field|method|module|param|property|return|type)\b/.source, ce = t(/<<0>>(?:\s*\(<<1>>*\))?/.source, [_, ie]);
  e.languages.insertBefore("csharp", "class-name", {
    attribute: {
      // Attributes
      // [Foo], [Foo(1), Bar(2, Prop = "foo")], [return: Foo(1), Bar(2)], [assembly: Foo(Bar)]
      pattern: r(/((?:^|[^\s\w>)?])\s*\[\s*)(?:<<0>>\s*:\s*)?<<1>>(?:\s*,\s*<<1>>)*(?=\s*\])/.source, [ge, ce]),
      lookbehind: !0,
      greedy: !0,
      inside: {
        target: {
          pattern: r(/^<<0>>(?=\s*:)/.source, [ge]),
          alias: "keyword"
        },
        "attribute-arguments": {
          pattern: r(/\(<<0>>*\)/.source, [ie]),
          inside: e.languages.csharp
        },
        "class-name": {
          pattern: RegExp(_),
          inside: {
            punctuation: /\./
          }
        },
        punctuation: /[:,]/
      }
    }
  });
  var V = /:[^}\r\n]+/.source, F = n(t(/[^"'/()]|<<0>>|\(<<self>>*\)/.source, [B]), 2), $ = t(/\{(?!\{)(?:(?![}:])<<0>>)*<<1>>?\}/.source, [F, V]), te = n(t(/[^"'/()]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|<<0>>|\(<<self>>*\)/.source, [K]), 2), P = t(/\{(?!\{)(?:(?![}:])<<0>>)*<<1>>?\}/.source, [te, V]);
  function Z(G, ae) {
    return {
      interpolation: {
        pattern: r(/((?:^|[^{])(?:\{\{)*)<<0>>/.source, [G]),
        lookbehind: !0,
        inside: {
          "format-string": {
            pattern: r(/(^\{(?:(?![}:])<<0>>)*)<<1>>(?=\}$)/.source, [ae, V]),
            lookbehind: !0,
            inside: {
              punctuation: /^:/
            }
          },
          punctuation: /^\{|\}$/,
          expression: {
            pattern: /[\s\S]+/,
            alias: "language-csharp",
            inside: e.languages.csharp
          }
        }
      },
      string: /[\s\S]+/
    };
  }
  e.languages.insertBefore("csharp", "string", {
    "interpolation-string": [
      {
        pattern: r(/(^|[^\\])(?:\$@|@\$)"(?:""|\\[\s\S]|\{\{|<<0>>|[^\\{"])*"/.source, [$]),
        lookbehind: !0,
        greedy: !0,
        inside: Z($, F)
      },
      {
        pattern: r(/(^|[^@\\])\$"(?:\\.|\{\{|<<0>>|[^\\"{])*"/.source, [P]),
        lookbehind: !0,
        greedy: !0,
        inside: Z(P, te)
      }
    ],
    char: {
      pattern: RegExp(I),
      greedy: !0
    }
  }), e.languages.dotnet = e.languages.cs = e.languages.csharp;
})(Prism);
Prism.languages.cobol = {
  comment: {
    pattern: /\*>.*|(^[ \t]*)\*.*/m,
    lookbehind: !0,
    greedy: !0
  },
  string: {
    pattern: /[xzgn]?(?:"(?:[^\r\n"]|"")*"(?!")|'(?:[^\r\n']|'')*'(?!'))/i,
    greedy: !0
  },
  level: {
    pattern: /(^[ \t]*)\d+\b/m,
    lookbehind: !0,
    greedy: !0,
    alias: "number"
  },
  "class-name": {
    // https://github.com/antlr/grammars-v4/blob/42edd5b687d183b5fa679e858a82297bd27141e7/cobol85/Cobol85.g4#L1015
    pattern: /(\bpic(?:ture)?\s+)(?:(?:[-\w$/,:*+<>]|\.(?!\s|$))(?:\(\d+\))?)+/i,
    lookbehind: !0,
    inside: {
      number: {
        pattern: /(\()\d+/,
        lookbehind: !0
      },
      punctuation: /[()]/
    }
  },
  keyword: {
    pattern: /(^|[^\w-])(?:ABORT|ACCEPT|ACCESS|ADD|ADDRESS|ADVANCING|AFTER|ALIGNED|ALL|ALPHABET|ALPHABETIC|ALPHABETIC-LOWER|ALPHABETIC-UPPER|ALPHANUMERIC|ALPHANUMERIC-EDITED|ALSO|ALTER|ALTERNATE|ANY|ARE|AREA|AREAS|AS|ASCENDING|ASCII|ASSIGN|ASSOCIATED-DATA|ASSOCIATED-DATA-LENGTH|AT|ATTRIBUTE|AUTHOR|AUTO|AUTO-SKIP|BACKGROUND-COLOR|BACKGROUND-COLOUR|BASIS|BEEP|BEFORE|BEGINNING|BELL|BINARY|BIT|BLANK|BLINK|BLOCK|BOTTOM|BOUNDS|BY|BYFUNCTION|BYTITLE|CALL|CANCEL|CAPABLE|CCSVERSION|CD|CF|CH|CHAINING|CHANGED|CHANNEL|CHARACTER|CHARACTERS|CLASS|CLASS-ID|CLOCK-UNITS|CLOSE|CLOSE-DISPOSITION|COBOL|CODE|CODE-SET|COL|COLLATING|COLUMN|COM-REG|COMMA|COMMITMENT|COMMON|COMMUNICATION|COMP|COMP-1|COMP-2|COMP-3|COMP-4|COMP-5|COMPUTATIONAL|COMPUTATIONAL-1|COMPUTATIONAL-2|COMPUTATIONAL-3|COMPUTATIONAL-4|COMPUTATIONAL-5|COMPUTE|CONFIGURATION|CONTAINS|CONTENT|CONTINUE|CONTROL|CONTROL-POINT|CONTROLS|CONVENTION|CONVERTING|COPY|CORR|CORRESPONDING|COUNT|CRUNCH|CURRENCY|CURSOR|DATA|DATA-BASE|DATE|DATE-COMPILED|DATE-WRITTEN|DAY|DAY-OF-WEEK|DBCS|DE|DEBUG-CONTENTS|DEBUG-ITEM|DEBUG-LINE|DEBUG-NAME|DEBUG-SUB-1|DEBUG-SUB-2|DEBUG-SUB-3|DEBUGGING|DECIMAL-POINT|DECLARATIVES|DEFAULT|DEFAULT-DISPLAY|DEFINITION|DELETE|DELIMITED|DELIMITER|DEPENDING|DESCENDING|DESTINATION|DETAIL|DFHRESP|DFHVALUE|DISABLE|DISK|DISPLAY|DISPLAY-1|DIVIDE|DIVISION|DONTCARE|DOUBLE|DOWN|DUPLICATES|DYNAMIC|EBCDIC|EGCS|EGI|ELSE|EMI|EMPTY-CHECK|ENABLE|END|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-OF-PAGE|END-PERFORM|END-READ|END-RECEIVE|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ENDING|ENTER|ENTRY|ENTRY-PROCEDURE|ENVIRONMENT|EOL|EOP|EOS|ERASE|ERROR|ESCAPE|ESI|EVALUATE|EVENT|EVERY|EXCEPTION|EXCLUSIVE|EXHIBIT|EXIT|EXPORT|EXTEND|EXTENDED|EXTERNAL|FD|FILE|FILE-CONTROL|FILLER|FINAL|FIRST|FOOTING|FOR|FOREGROUND-COLOR|FOREGROUND-COLOUR|FROM|FULL|FUNCTION|FUNCTION-POINTER|FUNCTIONNAME|GENERATE|GIVING|GLOBAL|GO|GOBACK|GRID|GROUP|HEADING|HIGH-VALUE|HIGH-VALUES|HIGHLIGHT|I-O|I-O-CONTROL|ID|IDENTIFICATION|IF|IMPLICIT|IMPORT|IN|INDEX|INDEXED|INDICATE|INITIAL|INITIALIZE|INITIATE|INPUT|INPUT-OUTPUT|INSPECT|INSTALLATION|INTEGER|INTO|INVALID|INVOKE|IS|JUST|JUSTIFIED|KANJI|KEPT|KEY|KEYBOARD|LABEL|LANGUAGE|LAST|LB|LD|LEADING|LEFT|LEFTLINE|LENGTH|LENGTH-CHECK|LIBACCESS|LIBPARAMETER|LIBRARY|LIMIT|LIMITS|LINAGE|LINAGE-COUNTER|LINE|LINE-COUNTER|LINES|LINKAGE|LIST|LOCAL|LOCAL-STORAGE|LOCK|LONG-DATE|LONG-TIME|LOW-VALUE|LOW-VALUES|LOWER|LOWLIGHT|MEMORY|MERGE|MESSAGE|MMDDYYYY|MODE|MODULES|MORE-LABELS|MOVE|MULTIPLE|MULTIPLY|NAMED|NATIONAL|NATIONAL-EDITED|NATIVE|NEGATIVE|NETWORK|NEXT|NO|NO-ECHO|NULL|NULLS|NUMBER|NUMERIC|NUMERIC-DATE|NUMERIC-EDITED|NUMERIC-TIME|OBJECT-COMPUTER|OCCURS|ODT|OF|OFF|OMITTED|ON|OPEN|OPTIONAL|ORDER|ORDERLY|ORGANIZATION|OTHER|OUTPUT|OVERFLOW|OVERLINE|OWN|PACKED-DECIMAL|PADDING|PAGE|PAGE-COUNTER|PASSWORD|PERFORM|PF|PH|PIC|PICTURE|PLUS|POINTER|PORT|POSITION|POSITIVE|PRINTER|PRINTING|PRIVATE|PROCEDURE|PROCEDURE-POINTER|PROCEDURES|PROCEED|PROCESS|PROGRAM|PROGRAM-ID|PROGRAM-LIBRARY|PROMPT|PURGE|QUEUE|QUOTE|QUOTES|RANDOM|RD|READ|READER|REAL|RECEIVE|RECEIVED|RECORD|RECORDING|RECORDS|RECURSIVE|REDEFINES|REEL|REF|REFERENCE|REFERENCES|RELATIVE|RELEASE|REMAINDER|REMARKS|REMOTE|REMOVAL|REMOVE|RENAMES|REPLACE|REPLACING|REPORT|REPORTING|REPORTS|REQUIRED|RERUN|RESERVE|RESET|RETURN|RETURN-CODE|RETURNING|REVERSE-VIDEO|REVERSED|REWIND|REWRITE|RF|RH|RIGHT|ROUNDED|RUN|SAME|SAVE|SCREEN|SD|SEARCH|SECTION|SECURE|SECURITY|SEGMENT|SEGMENT-LIMIT|SELECT|SEND|SENTENCE|SEPARATE|SEQUENCE|SEQUENTIAL|SET|SHARED|SHAREDBYALL|SHAREDBYRUNUNIT|SHARING|SHIFT-IN|SHIFT-OUT|SHORT-DATE|SIGN|SIZE|SORT|SORT-CONTROL|SORT-CORE-SIZE|SORT-FILE-SIZE|SORT-MERGE|SORT-MESSAGE|SORT-MODE-SIZE|SORT-RETURN|SOURCE|SOURCE-COMPUTER|SPACE|SPACES|SPECIAL-NAMES|STANDARD|STANDARD-1|STANDARD-2|START|STATUS|STOP|STRING|SUB-QUEUE-1|SUB-QUEUE-2|SUB-QUEUE-3|SUBTRACT|SUM|SUPPRESS|SYMBOL|SYMBOLIC|SYNC|SYNCHRONIZED|TABLE|TALLY|TALLYING|TAPE|TASK|TERMINAL|TERMINATE|TEST|TEXT|THEN|THREAD|THREAD-LOCAL|THROUGH|THRU|TIME|TIMER|TIMES|TITLE|TO|TODAYS-DATE|TODAYS-NAME|TOP|TRAILING|TRUNCATED|TYPE|TYPEDEF|UNDERLINE|UNIT|UNSTRING|UNTIL|UP|UPON|USAGE|USE|USING|VALUE|VALUES|VARYING|VIRTUAL|WAIT|WHEN|WHEN-COMPILED|WITH|WORDS|WORKING-STORAGE|WRITE|YEAR|YYYYDDD|YYYYMMDD|ZERO-FILL|ZEROES|ZEROS)(?![\w-])/i,
    lookbehind: !0
  },
  boolean: {
    pattern: /(^|[^\w-])(?:false|true)(?![\w-])/i,
    lookbehind: !0
  },
  number: {
    pattern: /(^|[^\w-])(?:[+-]?(?:(?:\d+(?:[.,]\d+)?|[.,]\d+)(?:e[+-]?\d+)?|zero))(?![\w-])/i,
    lookbehind: !0
  },
  operator: [
    /<>|[<>]=?|[=+*/&]/,
    {
      pattern: /(^|[^\w-])(?:-|and|equal|greater|less|not|or|than)(?![\w-])/i,
      lookbehind: !0
    }
  ],
  punctuation: /[.:,()]/
};
Prism.languages.makefile = {
  comment: {
    pattern: /(^|[^\\])#(?:\\(?:\r\n|[\s\S])|[^\\\r\n])*/,
    lookbehind: !0
  },
  string: {
    pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
    greedy: !0
  },
  "builtin-target": {
    pattern: /\.[A-Z][^:#=\s]+(?=\s*:(?!=))/,
    alias: "builtin"
  },
  target: {
    pattern: /^(?:[^:=\s]|[ \t]+(?![\s:]))+(?=\s*:(?!=))/m,
    alias: "symbol",
    inside: {
      variable: /\$+(?:(?!\$)[^(){}:#=\s]+|(?=[({]))/
    }
  },
  variable: /\$+(?:(?!\$)[^(){}:#=\s]+|\([@*%<^+?][DF]\)|(?=[({]))/,
  // Directives
  keyword: /-include\b|\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\b/,
  function: {
    pattern: /(\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \t])/,
    lookbehind: !0
  },
  operator: /(?:::|[?:+!])?=|[|@]/,
  punctuation: /[:;(){}]/
};
(function(e) {
  var t = /("|')(?:\\(?:\r\n?|\n|.)|(?!\1)[^\\\r\n])*\1/;
  e.languages.json5 = e.languages.extend("json", {
    property: [
      {
        pattern: RegExp(t.source + "(?=\\s*:)"),
        greedy: !0
      },
      {
        pattern: /(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/,
        alias: "unquoted"
      }
    ],
    string: {
      pattern: t,
      greedy: !0
    },
    number: /[+-]?\b(?:NaN|Infinity|0x[a-fA-F\d]+)\b|[+-]?(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[eE][+-]?\d+\b)?/
  });
})(Prism);
Prism.languages.jsonp = Prism.languages.extend("json", {
  punctuation: /[{}[\]();,.]/
});
Prism.languages.insertBefore("jsonp", "punctuation", {
  function: /(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*\()/
});
Prism.languages.ini = {
  /**
   * The component mimics the behavior of the Win32 API parser.
   *
   * @see {@link https://github.com/PrismJS/prism/issues/2775#issuecomment-787477723}
   */
  comment: {
    pattern: /(^[ \f\t\v]*)[#;][^\n\r]*/m,
    lookbehind: !0
  },
  section: {
    pattern: /(^[ \f\t\v]*)\[[^\n\r\]]*\]?/m,
    lookbehind: !0,
    inside: {
      "section-name": {
        pattern: /(^\[[ \f\t\v]*)[^ \f\t\v\]]+(?:[ \f\t\v]+[^ \f\t\v\]]+)*/,
        lookbehind: !0,
        alias: "selector"
      },
      punctuation: /\[|\]/
    }
  },
  key: {
    pattern: /(^[ \f\t\v]*)[^ \f\n\r\t\v=]+(?:[ \f\t\v]+[^ \f\n\r\t\v=]+)*(?=[ \f\t\v]*=)/m,
    lookbehind: !0,
    alias: "attr-name"
  },
  value: {
    pattern: /(=[ \f\t\v]*)[^ \f\n\r\t\v]+(?:[ \f\t\v]+[^ \f\n\r\t\v]+)*/,
    lookbehind: !0,
    alias: "attr-value",
    inside: {
      "inner-value": {
        pattern: /^("|').+(?=\1$)/,
        lookbehind: !0
      }
    }
  },
  punctuation: /=/
};
(function(e) {
  var t = /(?:[\w-]+|'[^'\n\r]*'|"(?:\\.|[^\\"\r\n])*")/.source;
  function r(n) {
    return n.replace(/__/g, function() {
      return t;
    });
  }
  e.languages.toml = {
    comment: {
      pattern: /#.*/,
      greedy: !0
    },
    table: {
      pattern: RegExp(r(/(^[\t ]*\[\s*(?:\[\s*)?)__(?:\s*\.\s*__)*(?=\s*\])/.source), "m"),
      lookbehind: !0,
      greedy: !0,
      alias: "class-name"
    },
    key: {
      pattern: RegExp(r(/(^[\t ]*|[{,]\s*)__(?:\s*\.\s*__)*(?=\s*=)/.source), "m"),
      lookbehind: !0,
      greedy: !0,
      alias: "property"
    },
    string: {
      pattern: /"""(?:\\[\s\S]|[^\\])*?"""|'''[\s\S]*?'''|'[^'\n\r]*'|"(?:\\.|[^\\"\r\n])*"/,
      greedy: !0
    },
    date: [
      {
        // Offset Date-Time, Local Date-Time, Local Date
        pattern: /\b\d{4}-\d{2}-\d{2}(?:[T\s]\d{2}:\d{2}:\d{2}(?:\.\d+)?(?:Z|[+-]\d{2}:\d{2})?)?\b/i,
        alias: "number"
      },
      {
        // Local Time
        pattern: /\b\d{2}:\d{2}:\d{2}(?:\.\d+)?\b/,
        alias: "number"
      }
    ],
    number: /(?:\b0(?:x[\da-zA-Z]+(?:_[\da-zA-Z]+)*|o[0-7]+(?:_[0-7]+)*|b[10]+(?:_[10]+)*))\b|[-+]?\b\d+(?:_\d+)*(?:\.\d+(?:_\d+)*)?(?:[eE][+-]?\d+(?:_\d+)*)?\b|[-+]?\b(?:inf|nan)\b/,
    boolean: /\b(?:false|true)\b/,
    punctuation: /[.,=[\]{}]/
  };
})(Prism);
(function(e) {
  var t = "\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\b", r = {
    pattern: /(^(["']?)\w+\2)[ \t]+\S.*/,
    lookbehind: !0,
    alias: "punctuation",
    // this looks reasonably well in all themes
    inside: null
    // see below
  }, n = {
    bash: r,
    environment: {
      pattern: RegExp("\\$" + t),
      alias: "constant"
    },
    variable: [
      // [0]: Arithmetic Environment
      {
        pattern: /\$?\(\([\s\S]+?\)\)/,
        greedy: !0,
        inside: {
          // If there is a $ sign at the beginning highlight $(( and )) as variable
          variable: [
            {
              pattern: /(^\$\(\([\s\S]+)\)\)/,
              lookbehind: !0
            },
            /^\$\(\(/
          ],
          number: /\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee]-?\d+)?/,
          // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic
          operator: /--|\+\+|\*\*=?|<<=?|>>=?|&&|\|\||[=!+\-*/%<>^&|]=?|[?~:]/,
          // If there is no $ sign at the beginning highlight (( and )) as punctuation
          punctuation: /\(\(?|\)\)?|,|;/
        }
      },
      // [1]: Command Substitution
      {
        pattern: /\$\((?:\([^)]+\)|[^()])+\)|`[^`]+`/,
        greedy: !0,
        inside: {
          variable: /^\$\(|^`|\)$|`$/
        }
      },
      // [2]: Brace expansion
      {
        pattern: /\$\{[^}]+\}/,
        greedy: !0,
        inside: {
          operator: /:[-=?+]?|[!\/]|##?|%%?|\^\^?|,,?/,
          punctuation: /[\[\]]/,
          environment: {
            pattern: RegExp("(\\{)" + t),
            lookbehind: !0,
            alias: "constant"
          }
        }
      },
      /\$(?:\w+|[#?*!@$])/
    ],
    // Escape sequences from echo and printf's manuals, and escaped quotes.
    entity: /\\(?:[abceEfnrtv\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/
  };
  e.languages.bash = {
    shebang: {
      pattern: /^#!\s*\/.*/,
      alias: "important"
    },
    comment: {
      pattern: /(^|[^"{\\$])#.*/,
      lookbehind: !0
    },
    "function-name": [
      // a) function foo {
      // b) foo() {
      // c) function foo() {
      // but not “foo {”
      {
        // a) and c)
        pattern: /(\bfunction\s+)[\w-]+(?=(?:\s*\(?:\s*\))?\s*\{)/,
        lookbehind: !0,
        alias: "function"
      },
      {
        // b)
        pattern: /\b[\w-]+(?=\s*\(\s*\)\s*\{)/,
        alias: "function"
      }
    ],
    // Highlight variable names as variables in for and select beginnings.
    "for-or-select": {
      pattern: /(\b(?:for|select)\s+)\w+(?=\s+in\s)/,
      alias: "variable",
      lookbehind: !0
    },
    // Highlight variable names as variables in the left-hand part
    // of assignments (“=” and “+=”).
    "assign-left": {
      pattern: /(^|[\s;|&]|[<>]\()\w+(?:\.\w+)*(?=\+?=)/,
      inside: {
        environment: {
          pattern: RegExp("(^|[\\s;|&]|[<>]\\()" + t),
          lookbehind: !0,
          alias: "constant"
        }
      },
      alias: "variable",
      lookbehind: !0
    },
    // Highlight parameter names as variables
    parameter: {
      pattern: /(^|\s)-{1,2}(?:\w+:[+-]?)?\w+(?:\.\w+)*(?=[=\s]|$)/,
      alias: "variable",
      lookbehind: !0
    },
    string: [
      // Support for Here-documents https://en.wikipedia.org/wiki/Here_document
      {
        pattern: /((?:^|[^<])<<-?\s*)(\w+)\s[\s\S]*?(?:\r?\n|\r)\2/,
        lookbehind: !0,
        greedy: !0,
        inside: n
      },
      // Here-document with quotes around the tag
      // → No expansion (so no “inside”).
      {
        pattern: /((?:^|[^<])<<-?\s*)(["'])(\w+)\2\s[\s\S]*?(?:\r?\n|\r)\3/,
        lookbehind: !0,
        greedy: !0,
        inside: {
          bash: r
        }
      },
      // “Normal” string
      {
        // https://www.gnu.org/software/bash/manual/html_node/Double-Quotes.html
        pattern: /(^|[^\\](?:\\\\)*)"(?:\\[\s\S]|\$\([^)]+\)|\$(?!\()|`[^`]+`|[^"\\`$])*"/,
        lookbehind: !0,
        greedy: !0,
        inside: n
      },
      {
        // https://www.gnu.org/software/bash/manual/html_node/Single-Quotes.html
        pattern: /(^|[^$\\])'[^']*'/,
        lookbehind: !0,
        greedy: !0
      },
      {
        // https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html
        pattern: /\$'(?:[^'\\]|\\[\s\S])*'/,
        greedy: !0,
        inside: {
          entity: n.entity
        }
      }
    ],
    environment: {
      pattern: RegExp("\\$?" + t),
      alias: "constant"
    },
    variable: n.variable,
    function: {
      pattern: /(^|[\s;|&]|[<>]\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cargo|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|java|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|sysctl|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\s;|&])/,
      lookbehind: !0
    },
    keyword: {
      pattern: /(^|[\s;|&]|[<>]\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\s;|&])/,
      lookbehind: !0
    },
    // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html
    builtin: {
      pattern: /(^|[\s;|&]|[<>]\()(?:\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\s;|&])/,
      lookbehind: !0,
      // Alias added to make those easier to distinguish from strings.
      alias: "class-name"
    },
    boolean: {
      pattern: /(^|[\s;|&]|[<>]\()(?:false|true)(?=$|[)\s;|&])/,
      lookbehind: !0
    },
    "file-descriptor": {
      pattern: /\B&\d\b/,
      alias: "important"
    },
    operator: {
      // Lots of redirections here, but not just that.
      pattern: /\d?<>|>\||\+=|=[=~]?|!=?|<<[<-]?|[&\d]?>>|\d[<>]&?|[<>][&=]?|&[>&]?|\|[&|]?/,
      inside: {
        "file-descriptor": {
          pattern: /^\d/,
          alias: "important"
        }
      }
    },
    punctuation: /\$?\(\(?|\)\)?|\.\.|[{}[\];\\]/,
    number: {
      pattern: /(^|\s)(?:[1-9]\d*|0)(?:[.,]\d+)?\b/,
      lookbehind: !0
    }
  }, r.inside = e.languages.bash;
  for (var i = [
    "comment",
    "function-name",
    "for-or-select",
    "assign-left",
    "parameter",
    "string",
    "environment",
    "function",
    "keyword",
    "builtin",
    "boolean",
    "file-descriptor",
    "operator",
    "punctuation",
    "number"
  ], a = n.variable[1].inside, s = 0; s < i.length; s++)
    a[i[s]] = e.languages.bash[i[s]];
  e.languages.sh = e.languages.bash, e.languages.shell = e.languages.bash;
})(Prism);
(function(e) {
  var t = /%%?[~:\w]+%?|!\S+!/, r = {
    pattern: /\/[a-z?]+(?=[ :]|$):?|-[a-z]\b|--[a-z-]+\b/im,
    alias: "attr-name",
    inside: {
      punctuation: /:/
    }
  }, n = /"(?:[\\"]"|[^"])*"(?!")/, i = /(?:\b|-)\d+\b/;
  e.languages.batch = {
    comment: [
      /^::.*/m,
      {
        pattern: /((?:^|[&(])[ \t]*)rem\b(?:[^^&)\r\n]|\^(?:\r\n|[\s\S]))*/im,
        lookbehind: !0
      }
    ],
    label: {
      pattern: /^:.*/m,
      alias: "property"
    },
    command: [
      {
        // FOR command
        pattern: /((?:^|[&(])[ \t]*)for(?: \/[a-z?](?:[ :](?:"[^"]*"|[^\s"/]\S*))?)* \S+ in \([^)]+\) do/im,
        lookbehind: !0,
        inside: {
          keyword: /\b(?:do|in)\b|^for\b/i,
          string: n,
          parameter: r,
          variable: t,
          number: i,
          punctuation: /[()',]/
        }
      },
      {
        // IF command
        pattern: /((?:^|[&(])[ \t]*)if(?: \/[a-z?](?:[ :](?:"[^"]*"|[^\s"/]\S*))?)* (?:not )?(?:cmdextversion \d+|defined \w+|errorlevel \d+|exist \S+|(?:"[^"]*"|(?!")(?:(?!==)\S)+)?(?:==| (?:equ|geq|gtr|leq|lss|neq) )(?:"[^"]*"|[^\s"]\S*))/im,
        lookbehind: !0,
        inside: {
          keyword: /\b(?:cmdextversion|defined|errorlevel|exist|not)\b|^if\b/i,
          string: n,
          parameter: r,
          variable: t,
          number: i,
          operator: /\^|==|\b(?:equ|geq|gtr|leq|lss|neq)\b/i
        }
      },
      {
        // ELSE command
        pattern: /((?:^|[&()])[ \t]*)else\b/im,
        lookbehind: !0,
        inside: {
          keyword: /^else\b/i
        }
      },
      {
        // SET command
        pattern: /((?:^|[&(])[ \t]*)set(?: \/[a-z](?:[ :](?:"[^"]*"|[^\s"/]\S*))?)* (?:[^^&)\r\n]|\^(?:\r\n|[\s\S]))*/im,
        lookbehind: !0,
        inside: {
          keyword: /^set\b/i,
          string: n,
          parameter: r,
          variable: [
            t,
            /\w+(?=(?:[*\/%+\-&^|]|<<|>>)?=)/
          ],
          number: i,
          operator: /[*\/%+\-&^|]=?|<<=?|>>=?|[!~_=]/,
          punctuation: /[()',]/
        }
      },
      {
        // Other commands
        pattern: /((?:^|[&(])[ \t]*@?)\w+\b(?:"(?:[\\"]"|[^"])*"(?!")|[^"^&)\r\n]|\^(?:\r\n|[\s\S]))*/m,
        lookbehind: !0,
        inside: {
          keyword: /^\w+\b/,
          string: n,
          parameter: r,
          label: {
            pattern: /(^\s*):\S+/m,
            lookbehind: !0,
            alias: "property"
          },
          variable: t,
          number: i,
          operator: /\^/
        }
      }
    ],
    operator: /[&@]/,
    punctuation: /[()']/
  };
})(Prism);
(function(e) {
  var t = /\\[\r\n](?:\s|\\[\r\n]|#.*(?!.))*(?![\s#]|\\[\r\n])/.source, r = /(?:[ \t]+(?![ \t])(?:<SP_BS>)?|<SP_BS>)/.source.replace(/<SP_BS>/g, function() {
    return t;
  }), n = /"(?:[^"\\\r\n]|\\(?:\r\n|[\s\S]))*"|'(?:[^'\\\r\n]|\\(?:\r\n|[\s\S]))*'/.source, i = /--[\w-]+=(?:<STR>|(?!["'])(?:[^\s\\]|\\.)+)/.source.replace(/<STR>/g, function() {
    return n;
  }), a = {
    pattern: RegExp(n),
    greedy: !0
  }, s = {
    pattern: /(^[ \t]*)#.*/m,
    lookbehind: !0,
    greedy: !0
  };
  function o(l, u) {
    return l = l.replace(/<OPT>/g, function() {
      return i;
    }).replace(/<SP>/g, function() {
      return r;
    }), RegExp(l, u);
  }
  e.languages.docker = {
    instruction: {
      pattern: /(^[ \t]*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\s)(?:\\.|[^\r\n\\])*(?:\\$(?:\s|#.*$)*(?![\s#])(?:\\.|[^\r\n\\])*)*/im,
      lookbehind: !0,
      greedy: !0,
      inside: {
        options: {
          pattern: o(/(^(?:ONBUILD<SP>)?\w+<SP>)<OPT>(?:<SP><OPT>)*/.source, "i"),
          lookbehind: !0,
          greedy: !0,
          inside: {
            property: {
              pattern: /(^|\s)--[\w-]+/,
              lookbehind: !0
            },
            string: [
              a,
              {
                pattern: /(=)(?!["'])(?:[^\s\\]|\\.)+/,
                lookbehind: !0
              }
            ],
            operator: /\\$/m,
            punctuation: /=/
          }
        },
        keyword: [
          {
            // https://docs.docker.com/engine/reference/builder/#healthcheck
            pattern: o(/(^(?:ONBUILD<SP>)?HEALTHCHECK<SP>(?:<OPT><SP>)*)(?:CMD|NONE)\b/.source, "i"),
            lookbehind: !0,
            greedy: !0
          },
          {
            // https://docs.docker.com/engine/reference/builder/#from
            pattern: o(/(^(?:ONBUILD<SP>)?FROM<SP>(?:<OPT><SP>)*(?!--)[^ \t\\]+<SP>)AS/.source, "i"),
            lookbehind: !0,
            greedy: !0
          },
          {
            // https://docs.docker.com/engine/reference/builder/#onbuild
            pattern: o(/(^ONBUILD<SP>)\w+/.source, "i"),
            lookbehind: !0,
            greedy: !0
          },
          {
            pattern: /^\w+/,
            greedy: !0
          }
        ],
        comment: s,
        string: a,
        variable: /\$(?:\w+|\{[^{}"'\\]*\})/,
        operator: /\\$/m
      }
    },
    comment: s
  }, e.languages.dockerfile = e.languages.docker;
})(Prism);
Prism.languages.git = {
  /*
   * A simple one line comment like in a git status command
   * For instance:
   * $ git status
   * # On branch infinite-scroll
   * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,
   * # and have 1 and 2 different commits each, respectively.
   * nothing to commit (working directory clean)
   */
  comment: /^#.*/m,
  /*
   * Regexp to match the changed lines in a git diff output. Check the example below.
   */
  deleted: /^[-–].*/m,
  inserted: /^\+.*/m,
  /*
   * a string (double and simple quote)
   */
  string: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
  /*
   * a git command. It starts with a random prompt finishing by a $, then "git" then some other parameters
   * For instance:
   * $ git add file.txt
   */
  command: {
    pattern: /^.*\$ git .*$/m,
    inside: {
      /*
       * A git command can contain a parameter starting by a single or a double dash followed by a string
       * For instance:
       * $ git diff --cached
       * $ git log -p
       */
      parameter: /\s--?\w+/
    }
  },
  /*
   * Coordinates displayed in a git diff command
   * For instance:
   * $ git diff
   * diff --git file.txt file.txt
   * index 6214953..1d54a52 100644
   * --- file.txt
   * +++ file.txt
   * @@ -1 +1,2 @@
   * -Here's my tetx file
   * +Here's my text file
   * +And this is the second line
   */
  coord: /^@@.*@@$/m,
  /*
   * Match a "commit [SHA1]" line in a git log output.
   * For instance:
   * $ git log
   * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09
   * Author: lgiraudel
   * Date:   Mon Feb 17 11:18:34 2014 +0100
   *
   *     Add of a new line
   */
  "commit-sha1": /^commit \w{40}$/m
};
Prism.languages.vim = {
  string: /"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\r\n]|'')*'/,
  comment: /".*/,
  function: /\b\w+(?=\()/,
  keyword: /\b(?:N|Next|P|Print|X|XMLent|XMLns|ab|abbreviate|abc|abclear|abo|aboveleft|al|all|ar|arga|argadd|argd|argdelete|argdo|arge|argedit|argg|argglobal|argl|arglocal|args|argu|argument|as|ascii|b|bN|bNext|ba|bad|badd|ball|bd|bdelete|be|bel|belowright|bf|bfirst|bl|blast|bm|bmodified|bn|bnext|bo|botright|bp|bprevious|br|brea|break|breaka|breakadd|breakd|breakdel|breakl|breaklist|brewind|bro|browse|bufdo|buffer|buffers|bun|bunload|bw|bwipeout|c|cN|cNext|cNfcNfile|ca|cabbrev|cabc|cabclear|cad|caddb|caddbuffer|caddexpr|caddf|caddfile|cal|call|cat|catch|cb|cbuffer|cc|ccl|cclose|cd|ce|center|cex|cexpr|cf|cfile|cfir|cfirst|cg|cgetb|cgetbuffer|cgete|cgetexpr|cgetfile|change|changes|chd|chdir|che|checkpath|checkt|checktime|cl|cla|clast|clist|clo|close|cmapc|cmapclear|cn|cnew|cnewer|cnext|cnf|cnfile|cnorea|cnoreabbrev|co|col|colder|colo|colorscheme|comc|comclear|comp|compiler|con|conf|confirm|continue|cope|copen|copy|cp|cpf|cpfile|cprevious|cq|cquit|cr|crewind|cu|cuna|cunabbrev|cunmap|cw|cwindow|d|debugg|debuggreedy|delc|delcommand|delete|delf|delfunction|delm|delmarks|di|diffg|diffget|diffoff|diffpatch|diffpu|diffput|diffsplit|diffthis|diffu|diffupdate|dig|digraphs|display|dj|djump|dl|dlist|dr|drop|ds|dsearch|dsp|dsplit|e|earlier|echoe|echoerr|echom|echomsg|echon|edit|el|else|elsei|elseif|em|emenu|en|endf|endfo|endfor|endfun|endfunction|endif|endt|endtry|endw|endwhile|ene|enew|ex|exi|exit|exu|exusage|f|file|files|filetype|fin|fina|finally|find|fini|finish|fir|first|fix|fixdel|fo|fold|foldc|foldclose|foldd|folddoc|folddoclosed|folddoopen|foldo|foldopen|for|fu|fun|function|go|goto|gr|grep|grepa|grepadd|h|ha|hardcopy|help|helpf|helpfind|helpg|helpgrep|helpt|helptags|hid|hide|his|history|ia|iabbrev|iabc|iabclear|if|ij|ijump|il|ilist|imapc|imapclear|in|inorea|inoreabbrev|isearch|isp|isplit|iu|iuna|iunabbrev|iunmap|j|join|ju|jumps|k|kee|keepalt|keepj|keepjumps|keepmarks|l|lN|lNext|lNf|lNfile|la|lad|laddb|laddbuffer|laddexpr|laddf|laddfile|lan|language|last|later|lb|lbuffer|lc|lcd|lch|lchdir|lcl|lclose|left|lefta|leftabove|let|lex|lexpr|lf|lfile|lfir|lfirst|lg|lgetb|lgetbuffer|lgete|lgetexpr|lgetfile|lgr|lgrep|lgrepa|lgrepadd|lh|lhelpgrep|list|ll|lla|llast|lli|llist|lm|lmak|lmake|lmap|lmapc|lmapclear|ln|lne|lnew|lnewer|lnext|lnf|lnfile|lnoremap|lo|loadview|loc|lockmarks|lockv|lockvar|lol|lolder|lop|lopen|lp|lpf|lpfile|lprevious|lr|lrewind|ls|lt|ltag|lu|lunmap|lv|lvimgrep|lvimgrepa|lvimgrepadd|lw|lwindow|m|ma|mak|make|mark|marks|mat|match|menut|menutranslate|mk|mkexrc|mks|mksession|mksp|mkspell|mkv|mkvie|mkview|mkvimrc|mod|mode|move|mz|mzf|mzfile|mzscheme|n|nbkey|new|next|nmapc|nmapclear|noh|nohlsearch|norea|noreabbrev|nu|number|nun|nunmap|o|omapc|omapclear|on|only|open|opt|options|ou|ounmap|p|pc|pclose|pe|ped|pedit|perl|perld|perldo|po|pop|popu|popup|pp|ppop|pre|preserve|prev|previous|print|prof|profd|profdel|profile|promptf|promptfind|promptr|promptrepl|ps|psearch|ptN|ptNext|pta|ptag|ptf|ptfirst|ptj|ptjump|ptl|ptlast|ptn|ptnext|ptp|ptprevious|ptr|ptrewind|pts|ptselect|pu|put|pw|pwd|py|pyf|pyfile|python|q|qa|qall|quit|quita|quitall|r|read|rec|recover|red|redi|redir|redo|redr|redraw|redraws|redrawstatus|reg|registers|res|resize|ret|retab|retu|return|rew|rewind|ri|right|rightb|rightbelow|ru|rub|ruby|rubyd|rubydo|rubyf|rubyfile|runtime|rv|rviminfo|sN|sNext|sa|sal|sall|san|sandbox|sargument|sav|saveas|sb|sbN|sbNext|sba|sball|sbf|sbfirst|sbl|sblast|sbm|sbmodified|sbn|sbnext|sbp|sbprevious|sbr|sbrewind|sbuffer|scrip|scripte|scriptencoding|scriptnames|se|set|setf|setfiletype|setg|setglobal|setl|setlocal|sf|sfind|sfir|sfirst|sh|shell|sign|sil|silent|sim|simalt|sl|sla|slast|sleep|sm|smagic|smap|smapc|smapclear|sme|smenu|sn|snext|sni|sniff|sno|snomagic|snor|snoremap|snoreme|snoremenu|so|sor|sort|source|sp|spe|spelld|spelldump|spellgood|spelli|spellinfo|spellr|spellrepall|spellu|spellundo|spellw|spellwrong|split|spr|sprevious|sre|srewind|st|sta|stag|star|startg|startgreplace|startinsert|startr|startreplace|stj|stjump|stop|stopi|stopinsert|sts|stselect|sun|sunhide|sunm|sunmap|sus|suspend|sv|sview|syncbind|t|tN|tNext|ta|tab|tabN|tabNext|tabc|tabclose|tabd|tabdo|tabe|tabedit|tabf|tabfind|tabfir|tabfirst|tabl|tablast|tabm|tabmove|tabn|tabnew|tabnext|tabo|tabonly|tabp|tabprevious|tabr|tabrewind|tabs|tag|tags|tc|tcl|tcld|tcldo|tclf|tclfile|te|tearoff|tf|tfirst|th|throw|tj|tjump|tl|tlast|tm|tmenu|tn|tnext|to|topleft|tp|tprevious|tr|trewind|try|ts|tselect|tu|tunmenu|u|una|unabbreviate|undo|undoj|undojoin|undol|undolist|unh|unhide|unlet|unlo|unlockvar|unm|unmap|up|update|ve|verb|verbose|version|vert|vertical|vi|vie|view|vim|vimgrep|vimgrepa|vimgrepadd|visual|viu|viusage|vmapc|vmapclear|vne|vnew|vs|vsplit|vu|vunmap|w|wN|wNext|wa|wall|wh|while|win|winc|wincmd|windo|winp|winpos|winsize|wn|wnext|wp|wprevious|wq|wqa|wqall|write|ws|wsverb|wv|wviminfo|x|xa|xall|xit|xm|xmap|xmapc|xmapclear|xme|xmenu|xn|xnoremap|xnoreme|xnoremenu|xu|xunmap|y|yank)\b/,
  builtin: /\b(?:acd|ai|akm|aleph|allowrevins|altkeymap|ambiwidth|ambw|anti|antialias|arab|arabic|arabicshape|ari|arshape|autochdir|autocmd|autoindent|autoread|autowrite|autowriteall|aw|awa|background|backspace|backup|backupcopy|backupdir|backupext|backupskip|balloondelay|ballooneval|balloonexpr|bdir|bdlay|beval|bex|bexpr|bg|bh|bin|binary|biosk|bioskey|bk|bkc|bomb|breakat|brk|browsedir|bs|bsdir|bsk|bt|bufhidden|buflisted|buftype|casemap|ccv|cdpath|cedit|cfu|ch|charconvert|ci|cin|cindent|cink|cinkeys|cino|cinoptions|cinw|cinwords|clipboard|cmdheight|cmdwinheight|cmp|cms|columns|com|comments|commentstring|compatible|complete|completefunc|completeopt|consk|conskey|copyindent|cot|cpo|cpoptions|cpt|cscopepathcomp|cscopeprg|cscopequickfix|cscopetag|cscopetagorder|cscopeverbose|cspc|csprg|csqf|cst|csto|csverb|cuc|cul|cursorcolumn|cursorline|cwh|debug|deco|def|define|delcombine|dex|dg|dict|dictionary|diff|diffexpr|diffopt|digraph|dip|dir|directory|dy|ea|ead|eadirection|eb|ed|edcompatible|ef|efm|ei|ek|enc|encoding|endofline|eol|ep|equalalways|equalprg|errorbells|errorfile|errorformat|esckeys|et|eventignore|expandtab|exrc|fcl|fcs|fdc|fde|fdi|fdl|fdls|fdm|fdn|fdo|fdt|fen|fenc|fencs|fex|ff|ffs|fileencoding|fileencodings|fileformat|fileformats|fillchars|fk|fkmap|flp|fml|fmr|foldcolumn|foldenable|foldexpr|foldignore|foldlevel|foldlevelstart|foldmarker|foldmethod|foldminlines|foldnestmax|foldtext|formatexpr|formatlistpat|formatoptions|formatprg|fp|fs|fsync|ft|gcr|gd|gdefault|gfm|gfn|gfs|gfw|ghr|gp|grepformat|grepprg|gtl|gtt|guicursor|guifont|guifontset|guifontwide|guiheadroom|guioptions|guipty|guitablabel|guitabtooltip|helpfile|helpheight|helplang|hf|hh|hi|hidden|highlight|hk|hkmap|hkmapp|hkp|hl|hlg|hls|hlsearch|ic|icon|iconstring|ignorecase|im|imactivatekey|imak|imc|imcmdline|imd|imdisable|imi|iminsert|ims|imsearch|inc|include|includeexpr|incsearch|inde|indentexpr|indentkeys|indk|inex|inf|infercase|insertmode|invacd|invai|invakm|invallowrevins|invaltkeymap|invanti|invantialias|invar|invarab|invarabic|invarabicshape|invari|invarshape|invautochdir|invautoindent|invautoread|invautowrite|invautowriteall|invaw|invawa|invbackup|invballooneval|invbeval|invbin|invbinary|invbiosk|invbioskey|invbk|invbl|invbomb|invbuflisted|invcf|invci|invcin|invcindent|invcompatible|invconfirm|invconsk|invconskey|invcopyindent|invcp|invcscopetag|invcscopeverbose|invcst|invcsverb|invcuc|invcul|invcursorcolumn|invcursorline|invdeco|invdelcombine|invdg|invdiff|invdigraph|invdisable|invea|inveb|inved|invedcompatible|invek|invendofline|inveol|invequalalways|inverrorbells|invesckeys|invet|invex|invexpandtab|invexrc|invfen|invfk|invfkmap|invfoldenable|invgd|invgdefault|invguipty|invhid|invhidden|invhk|invhkmap|invhkmapp|invhkp|invhls|invhlsearch|invic|invicon|invignorecase|invim|invimc|invimcmdline|invimd|invincsearch|invinf|invinfercase|invinsertmode|invis|invjoinspaces|invjs|invlazyredraw|invlbr|invlinebreak|invlisp|invlist|invloadplugins|invlpl|invlz|invma|invmacatsui|invmagic|invmh|invml|invmod|invmodeline|invmodifiable|invmodified|invmore|invmousef|invmousefocus|invmousehide|invnu|invnumber|invodev|invopendevice|invpaste|invpi|invpreserveindent|invpreviewwindow|invprompt|invpvw|invreadonly|invremap|invrestorescreen|invrevins|invri|invrightleft|invrightleftcmd|invrl|invrlc|invro|invrs|invru|invruler|invsb|invsc|invscb|invscrollbind|invscs|invsecure|invsft|invshellslash|invshelltemp|invshiftround|invshortname|invshowcmd|invshowfulltag|invshowmatch|invshowmode|invsi|invsm|invsmartcase|invsmartindent|invsmarttab|invsmd|invsn|invsol|invspell|invsplitbelow|invsplitright|invspr|invsr|invssl|invsta|invstartofline|invstmp|invswapfile|invswf|invta|invtagbsearch|invtagrelative|invtagstack|invtbi|invtbidi|invtbs|invtermbidi|invterse|invtextauto|invtextmode|invtf|invtgst|invtildeop|invtimeout|invtitle|invto|invtop|invtr|invttimeout|invttybuiltin|invttyfast|invtx|invvb|invvisualbell|invwa|invwarn|invwb|invweirdinvert|invwfh|invwfw|invwildmenu|invwinfixheight|invwinfixwidth|invwiv|invwmnu|invwrap|invwrapscan|invwrite|invwriteany|invwritebackup|invws|isf|isfname|isi|isident|isk|iskeyword|isprint|joinspaces|js|key|keymap|keymodel|keywordprg|km|kmp|kp|langmap|langmenu|laststatus|lazyredraw|lbr|lcs|linebreak|lines|linespace|lisp|lispwords|listchars|loadplugins|lpl|lsp|lz|macatsui|magic|makeef|makeprg|matchpairs|matchtime|maxcombine|maxfuncdepth|maxmapdepth|maxmem|maxmempattern|maxmemtot|mco|mef|menuitems|mfd|mh|mis|mkspellmem|ml|mls|mm|mmd|mmp|mmt|modeline|modelines|modifiable|modified|more|mouse|mousef|mousefocus|mousehide|mousem|mousemodel|mouses|mouseshape|mouset|mousetime|mp|mps|msm|mzq|mzquantum|nf|noacd|noai|noakm|noallowrevins|noaltkeymap|noanti|noantialias|noar|noarab|noarabic|noarabicshape|noari|noarshape|noautochdir|noautoindent|noautoread|noautowrite|noautowriteall|noaw|noawa|nobackup|noballooneval|nobeval|nobin|nobinary|nobiosk|nobioskey|nobk|nobl|nobomb|nobuflisted|nocf|noci|nocin|nocindent|nocompatible|noconfirm|noconsk|noconskey|nocopyindent|nocp|nocscopetag|nocscopeverbose|nocst|nocsverb|nocuc|nocul|nocursorcolumn|nocursorline|nodeco|nodelcombine|nodg|nodiff|nodigraph|nodisable|noea|noeb|noed|noedcompatible|noek|noendofline|noeol|noequalalways|noerrorbells|noesckeys|noet|noex|noexpandtab|noexrc|nofen|nofk|nofkmap|nofoldenable|nogd|nogdefault|noguipty|nohid|nohidden|nohk|nohkmap|nohkmapp|nohkp|nohls|noic|noicon|noignorecase|noim|noimc|noimcmdline|noimd|noincsearch|noinf|noinfercase|noinsertmode|nois|nojoinspaces|nojs|nolazyredraw|nolbr|nolinebreak|nolisp|nolist|noloadplugins|nolpl|nolz|noma|nomacatsui|nomagic|nomh|noml|nomod|nomodeline|nomodifiable|nomodified|nomore|nomousef|nomousefocus|nomousehide|nonu|nonumber|noodev|noopendevice|nopaste|nopi|nopreserveindent|nopreviewwindow|noprompt|nopvw|noreadonly|noremap|norestorescreen|norevins|nori|norightleft|norightleftcmd|norl|norlc|noro|nors|noru|noruler|nosb|nosc|noscb|noscrollbind|noscs|nosecure|nosft|noshellslash|noshelltemp|noshiftround|noshortname|noshowcmd|noshowfulltag|noshowmatch|noshowmode|nosi|nosm|nosmartcase|nosmartindent|nosmarttab|nosmd|nosn|nosol|nospell|nosplitbelow|nosplitright|nospr|nosr|nossl|nosta|nostartofline|nostmp|noswapfile|noswf|nota|notagbsearch|notagrelative|notagstack|notbi|notbidi|notbs|notermbidi|noterse|notextauto|notextmode|notf|notgst|notildeop|notimeout|notitle|noto|notop|notr|nottimeout|nottybuiltin|nottyfast|notx|novb|novisualbell|nowa|nowarn|nowb|noweirdinvert|nowfh|nowfw|nowildmenu|nowinfixheight|nowinfixwidth|nowiv|nowmnu|nowrap|nowrapscan|nowrite|nowriteany|nowritebackup|nows|nrformats|numberwidth|nuw|odev|oft|ofu|omnifunc|opendevice|operatorfunc|opfunc|osfiletype|pa|para|paragraphs|paste|pastetoggle|patchexpr|patchmode|path|pdev|penc|pex|pexpr|pfn|ph|pheader|pi|pm|pmbcs|pmbfn|popt|preserveindent|previewheight|previewwindow|printdevice|printencoding|printexpr|printfont|printheader|printmbcharset|printmbfont|printoptions|prompt|pt|pumheight|pvh|pvw|qe|quoteescape|readonly|remap|report|restorescreen|revins|rightleft|rightleftcmd|rl|rlc|ro|rs|rtp|ruf|ruler|rulerformat|runtimepath|sbo|sc|scb|scr|scroll|scrollbind|scrolljump|scrolloff|scrollopt|scs|sect|sections|secure|sel|selection|selectmode|sessionoptions|sft|shcf|shellcmdflag|shellpipe|shellquote|shellredir|shellslash|shelltemp|shelltype|shellxquote|shiftround|shiftwidth|shm|shortmess|shortname|showbreak|showcmd|showfulltag|showmatch|showmode|showtabline|shq|si|sidescroll|sidescrolloff|siso|sj|slm|smartcase|smartindent|smarttab|smc|smd|softtabstop|sol|spc|spell|spellcapcheck|spellfile|spelllang|spellsuggest|spf|spl|splitbelow|splitright|sps|sr|srr|ss|ssl|ssop|stal|startofline|statusline|stl|stmp|su|sua|suffixes|suffixesadd|sw|swapfile|swapsync|swb|swf|switchbuf|sws|sxq|syn|synmaxcol|syntax|t_AB|t_AF|t_AL|t_CS|t_CV|t_Ce|t_Co|t_Cs|t_DL|t_EI|t_F1|t_F2|t_F3|t_F4|t_F5|t_F6|t_F7|t_F8|t_F9|t_IE|t_IS|t_K1|t_K3|t_K4|t_K5|t_K6|t_K7|t_K8|t_K9|t_KA|t_KB|t_KC|t_KD|t_KE|t_KF|t_KG|t_KH|t_KI|t_KJ|t_KK|t_KL|t_RI|t_RV|t_SI|t_Sb|t_Sf|t_WP|t_WS|t_ZH|t_ZR|t_al|t_bc|t_cd|t_ce|t_cl|t_cm|t_cs|t_da|t_db|t_dl|t_fs|t_k1|t_k2|t_k3|t_k4|t_k5|t_k6|t_k7|t_k8|t_k9|t_kB|t_kD|t_kI|t_kN|t_kP|t_kb|t_kd|t_ke|t_kh|t_kl|t_kr|t_ks|t_ku|t_le|t_mb|t_md|t_me|t_mr|t_ms|t_nd|t_op|t_se|t_so|t_sr|t_te|t_ti|t_ts|t_ue|t_us|t_ut|t_vb|t_ve|t_vi|t_vs|t_xs|tabline|tabpagemax|tabstop|tagbsearch|taglength|tagrelative|tagstack|tal|tb|tbi|tbidi|tbis|tbs|tenc|term|termbidi|termencoding|terse|textauto|textmode|textwidth|tgst|thesaurus|tildeop|timeout|timeoutlen|title|titlelen|titleold|titlestring|toolbar|toolbariconsize|top|tpm|tsl|tsr|ttimeout|ttimeoutlen|ttm|tty|ttybuiltin|ttyfast|ttym|ttymouse|ttyscroll|ttytype|tw|tx|uc|ul|undolevels|updatecount|updatetime|ut|vb|vbs|vdir|verbosefile|vfile|viewdir|viewoptions|viminfo|virtualedit|visualbell|vop|wak|warn|wb|wc|wcm|wd|weirdinvert|wfh|wfw|whichwrap|wi|wig|wildchar|wildcharm|wildignore|wildmenu|wildmode|wildoptions|wim|winaltkeys|window|winfixheight|winfixwidth|winheight|winminheight|winminwidth|winwidth|wiv|wiw|wm|wmh|wmnu|wmw|wop|wrap|wrapmargin|wrapscan|writeany|writebackup|writedelay|ww)\b/,
  number: /\b(?:0x[\da-f]+|\d+(?:\.\d+)?)\b/i,
  operator: /\|\||&&|[-+.]=?|[=!](?:[=~][#?]?)?|[<>]=?[#?]?|[*\/%?]|\b(?:is(?:not)?)\b/,
  punctuation: /[{}[\](),;:]/
};
Prism.languages["dns-zone-file"] = {
  comment: /;.*/,
  string: {
    pattern: /"(?:\\.|[^"\\\r\n])*"/,
    greedy: !0
  },
  variable: [
    {
      pattern: /(^\$ORIGIN[ \t]+)\S+/m,
      lookbehind: !0
    },
    {
      pattern: /(^|\s)@(?=\s|$)/,
      lookbehind: !0
    }
  ],
  keyword: /^\$(?:INCLUDE|ORIGIN|TTL)(?=\s|$)/m,
  class: {
    // https://tools.ietf.org/html/rfc1035#page-13
    pattern: /(^|\s)(?:CH|CS|HS|IN)(?=\s|$)/,
    lookbehind: !0,
    alias: "keyword"
  },
  type: {
    // https://en.wikipedia.org/wiki/List_of_DNS_record_types
    pattern: /(^|\s)(?:A|A6|AAAA|AFSDB|APL|ATMA|CAA|CDNSKEY|CDS|CERT|CNAME|DHCID|DLV|DNAME|DNSKEY|DS|EID|GID|GPOS|HINFO|HIP|IPSECKEY|ISDN|KEY|KX|LOC|MAILA|MAILB|MB|MD|MF|MG|MINFO|MR|MX|NAPTR|NB|NBSTAT|NIMLOC|NINFO|NS|NSAP|NSAP-PTR|NSEC|NSEC3|NSEC3PARAM|NULL|NXT|OPENPGPKEY|PTR|PX|RKEY|RP|RRSIG|RT|SIG|SINK|SMIMEA|SOA|SPF|SRV|SSHFP|TA|TKEY|TLSA|TSIG|TXT|UID|UINFO|UNSPEC|URI|WKS|X25)(?=\s|$)/,
    lookbehind: !0,
    alias: "keyword"
  },
  punctuation: /[()]/
};
Prism.languages["dns-zone"] = Prism.languages["dns-zone-file"];
Prism.languages.log = {
  string: {
    // Single-quoted strings must not be confused with plain text. E.g. Can't isn't Susan's Chris' toy
    pattern: /"(?:[^"\\\r\n]|\\.)*"|'(?![st] | \w)(?:[^'\\\r\n]|\\.)*'/,
    greedy: !0
  },
  exception: {
    pattern: /(^|[^\w.])[a-z][\w.]*(?:Error|Exception):.*(?:(?:\r\n?|\n)[ \t]*(?:at[ \t].+|\.{3}.*|Caused by:.*))+(?:(?:\r\n?|\n)[ \t]*\.\.\. .*)?/,
    lookbehind: !0,
    greedy: !0,
    alias: ["javastacktrace", "language-javastacktrace"],
    inside: Prism.languages.javastacktrace || {
      keyword: /\bat\b/,
      function: /[a-z_][\w$]*(?=\()/,
      punctuation: /[.:()]/
    }
  },
  level: [
    {
      pattern: /\b(?:ALERT|CRIT|CRITICAL|EMERG|EMERGENCY|ERR|ERROR|FAILURE|FATAL|SEVERE)\b/,
      alias: ["error", "important"]
    },
    {
      pattern: /\b(?:WARN|WARNING|WRN)\b/,
      alias: ["warning", "important"]
    },
    {
      pattern: /\b(?:DISPLAY|INF|INFO|NOTICE|STATUS)\b/,
      alias: ["info", "keyword"]
    },
    {
      pattern: /\b(?:DBG|DEBUG|FINE)\b/,
      alias: ["debug", "keyword"]
    },
    {
      pattern: /\b(?:FINER|FINEST|TRACE|TRC|VERBOSE|VRB)\b/,
      alias: ["trace", "comment"]
    }
  ],
  property: {
    pattern: /((?:^|[\]|])[ \t]*)[a-z_](?:[\w-]|\b\/\b)*(?:[. ]\(?\w(?:[\w-]|\b\/\b)*\)?)*:(?=\s)/im,
    lookbehind: !0
  },
  separator: {
    pattern: /(^|[^-+])-{3,}|={3,}|\*{3,}|- - /m,
    lookbehind: !0,
    alias: "comment"
  },
  url: /\b(?:file|ftp|https?):\/\/[^\s|,;'"]*[^\s|,;'">.]/,
  email: {
    pattern: /(^|\s)[-\w+.]+@[a-z][a-z0-9-]*(?:\.[a-z][a-z0-9-]*)+(?=\s)/,
    lookbehind: !0,
    alias: "url"
  },
  "ip-address": {
    pattern: /\b(?:\d{1,3}(?:\.\d{1,3}){3})\b/,
    alias: "constant"
  },
  "mac-address": {
    pattern: /\b[a-f0-9]{2}(?::[a-f0-9]{2}){5}\b/i,
    alias: "constant"
  },
  domain: {
    pattern: /(^|\s)[a-z][a-z0-9-]*(?:\.[a-z][a-z0-9-]*)*\.[a-z][a-z0-9-]+(?=\s)/,
    lookbehind: !0,
    alias: "constant"
  },
  uuid: {
    pattern: /\b[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\b/i,
    alias: "constant"
  },
  hash: {
    pattern: /\b(?:[a-f0-9]{32}){1,2}\b/i,
    alias: "constant"
  },
  "file-path": {
    pattern: /\b[a-z]:[\\/][^\s|,;:(){}\[\]"']+|(^|[\s:\[\](>|])\.{0,2}\/\w[^\s|,;:(){}\[\]"']*/i,
    lookbehind: !0,
    greedy: !0,
    alias: "string"
  },
  date: {
    pattern: RegExp(
      /\b\d{4}[-/]\d{2}[-/]\d{2}(?:T(?=\d{1,2}:)|(?=\s\d{1,2}:))/.source + "|" + /\b\d{1,4}[-/ ](?:\d{1,2}|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)[-/ ]\d{2,4}T?\b/.source + "|" + /\b(?:(?:Fri|Mon|Sat|Sun|Thu|Tue|Wed)(?:\s{1,2}(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep))?|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)\s{1,2}\d{1,2}\b/.source,
      "i"
    ),
    alias: "number"
  },
  time: {
    pattern: /\b\d{1,2}:\d{1,2}:\d{1,2}(?:[.,:]\d+)?(?:\s?[+-]\d{2}:?\d{2}|Z)?\b/,
    alias: "number"
  },
  boolean: /\b(?:false|null|true)\b/i,
  number: {
    pattern: /(^|[^.\w])(?:0x[a-f0-9]+|0o[0-7]+|0b[01]+|v?\d[\da-f]*(?:\.\d+)*(?:e[+-]?\d+)?[a-z]{0,3}\b)\b(?!\.\w)/i,
    lookbehind: !0
  },
  operator: /[;:?<=>~/@!$%&+\-|^(){}*#]/,
  punctuation: /[\[\].,]/
};
(function(e) {
  for (var t = /"(?:\\.|[^\\"\r\n])*"|'(?:\\.|[^\\'\r\n])*'/.source, r = /\/\/.*(?!.)|\/\*(?:[^*]|\*(?!\/))*\*\//.source, n = /(?:[^\\()[\]{}"'/]|<string>|\/(?![*/])|<comment>|\(<expr>*\)|\[<expr>*\]|\{<expr>*\}|\\[\s\S])/.source.replace(/<string>/g, function() {
    return t;
  }).replace(/<comment>/g, function() {
    return r;
  }), i = 0; i < 2; i++)
    n = n.replace(/<expr>/g, function() {
      return n;
    });
  n = n.replace(/<expr>/g, "[^\\s\\S]"), e.languages.qml = {
    comment: {
      pattern: /\/\/.*|\/\*[\s\S]*?\*\//,
      greedy: !0
    },
    "javascript-function": {
      pattern: RegExp(/((?:^|;)[ \t]*)function\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*\(<js>*\)\s*\{<js>*\}/.source.replace(/<js>/g, function() {
        return n;
      }), "m"),
      lookbehind: !0,
      greedy: !0,
      alias: "language-javascript",
      inside: e.languages.javascript
    },
    "class-name": {
      pattern: /((?:^|[:;])[ \t]*)(?!\d)\w+(?=[ \t]*\{|[ \t]+on\b)/m,
      lookbehind: !0
    },
    property: [
      {
        pattern: /((?:^|[;{])[ \t]*)(?!\d)\w+(?:\.\w+)*(?=[ \t]*:)/m,
        lookbehind: !0
      },
      {
        pattern: /((?:^|[;{])[ \t]*)property[ \t]+(?!\d)\w+(?:\.\w+)*[ \t]+(?!\d)\w+(?:\.\w+)*(?=[ \t]*:)/m,
        lookbehind: !0,
        inside: {
          keyword: /^property/,
          property: /\w+(?:\.\w+)*/
        }
      }
    ],
    "javascript-expression": {
      pattern: RegExp(/(:[ \t]*)(?![\s;}[])(?:(?!$|[;}])<js>)+/.source.replace(/<js>/g, function() {
        return n;
      }), "m"),
      lookbehind: !0,
      greedy: !0,
      alias: "language-javascript",
      inside: e.languages.javascript
    },
    string: {
      pattern: /"(?:\\.|[^\\"\r\n])*"/,
      greedy: !0
    },
    keyword: /\b(?:as|import|on)\b/,
    punctuation: /[{}[\]:;,]/
  };
})(Prism);
(function(e) {
  e.languages.scheme = {
    // this supports "normal" single-line comments:
    //   ; comment
    // and (potentially nested) multiline comments:
    //   #| comment #| nested |# still comment |#
    // (only 1 level of nesting is supported)
    comment: /;.*|#;\s*(?:\((?:[^()]|\([^()]*\))*\)|\[(?:[^\[\]]|\[[^\[\]]*\])*\])|#\|(?:[^#|]|#(?!\|)|\|(?!#)|#\|(?:[^#|]|#(?!\|)|\|(?!#))*\|#)*\|#/,
    string: {
      pattern: /"(?:[^"\\]|\\.)*"/,
      greedy: !0
    },
    symbol: {
      pattern: /'[^()\[\]#'\s]+/,
      greedy: !0
    },
    char: {
      pattern: /#\\(?:[ux][a-fA-F\d]+\b|[-a-zA-Z]+\b|[\uD800-\uDBFF][\uDC00-\uDFFF]|\S)/,
      greedy: !0
    },
    "lambda-parameter": [
      // https://www.cs.cmu.edu/Groups/AI/html/r4rs/r4rs_6.html#SEC30
      {
        pattern: /((?:^|[^'`#])[(\[]lambda\s+)(?:[^|()\[\]'\s]+|\|(?:[^\\|]|\\.)*\|)/,
        lookbehind: !0
      },
      {
        pattern: /((?:^|[^'`#])[(\[]lambda\s+[(\[])[^()\[\]']+/,
        lookbehind: !0
      }
    ],
    keyword: {
      pattern: /((?:^|[^'`#])[(\[])(?:begin|case(?:-lambda)?|cond(?:-expand)?|define(?:-library|-macro|-record-type|-syntax|-values)?|defmacro|delay(?:-force)?|do|else|except|export|guard|if|import|include(?:-ci|-library-declarations)?|lambda|let(?:rec)?(?:-syntax|-values|\*)?|let\*-values|only|parameterize|prefix|(?:quasi-?)?quote|rename|set!|syntax-(?:case|rules)|unless|unquote(?:-splicing)?|when)(?=[()\[\]\s]|$)/,
      lookbehind: !0
    },
    builtin: {
      // all functions of the base library of R7RS plus some of built-ins of R5Rs
      pattern: /((?:^|[^'`#])[(\[])(?:abs|and|append|apply|assoc|ass[qv]|binary-port\?|boolean=?\?|bytevector(?:-append|-copy|-copy!|-length|-u8-ref|-u8-set!|\?)?|caar|cadr|call-with-(?:current-continuation|port|values)|call\/cc|car|cdar|cddr|cdr|ceiling|char(?:->integer|-ready\?|\?|<\?|<=\?|=\?|>\?|>=\?)|close-(?:input-port|output-port|port)|complex\?|cons|current-(?:error|input|output)-port|denominator|dynamic-wind|eof-object\??|eq\?|equal\?|eqv\?|error|error-object(?:-irritants|-message|\?)|eval|even\?|exact(?:-integer-sqrt|-integer\?|\?)?|expt|features|file-error\?|floor(?:-quotient|-remainder|\/)?|flush-output-port|for-each|gcd|get-output-(?:bytevector|string)|inexact\??|input-port(?:-open\?|\?)|integer(?:->char|\?)|lcm|length|list(?:->string|->vector|-copy|-ref|-set!|-tail|\?)?|make-(?:bytevector|list|parameter|string|vector)|map|max|member|memq|memv|min|modulo|negative\?|newline|not|null\?|number(?:->string|\?)|numerator|odd\?|open-(?:input|output)-(?:bytevector|string)|or|output-port(?:-open\?|\?)|pair\?|peek-char|peek-u8|port\?|positive\?|procedure\?|quotient|raise|raise-continuable|rational\?|rationalize|read-(?:bytevector|bytevector!|char|error\?|line|string|u8)|real\?|remainder|reverse|round|set-c[ad]r!|square|string(?:->list|->number|->symbol|->utf8|->vector|-append|-copy|-copy!|-fill!|-for-each|-length|-map|-ref|-set!|\?|<\?|<=\?|=\?|>\?|>=\?)?|substring|symbol(?:->string|\?|=\?)|syntax-error|textual-port\?|truncate(?:-quotient|-remainder|\/)?|u8-ready\?|utf8->string|values|vector(?:->list|->string|-append|-copy|-copy!|-fill!|-for-each|-length|-map|-ref|-set!|\?)?|with-exception-handler|write-(?:bytevector|char|string|u8)|zero\?)(?=[()\[\]\s]|$)/,
      lookbehind: !0
    },
    operator: {
      pattern: /((?:^|[^'`#])[(\[])(?:[-+*%/]|[<>]=?|=>?)(?=[()\[\]\s]|$)/,
      lookbehind: !0
    },
    number: {
      // The number pattern from [the R7RS spec](https://small.r7rs.org/attachment/r7rs.pdf).
      //
      // <number>      := <num 2>|<num 8>|<num 10>|<num 16>
      // <num R>       := <prefix R><complex R>
      // <complex R>   := <real R>(?:@<real R>|<imaginary R>)?|<imaginary R>
      // <imaginary R> := [+-](?:<ureal R>|(?:inf|nan)\.0)?i
      // <real R>      := [+-]?<ureal R>|[+-](?:inf|nan)\.0
      // <ureal R>     := <uint R>(?:\/<uint R>)?
      //                | <decimal R>
      //
      // <decimal 10>  := (?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?
      // <uint R>      := <digit R>+
      // <prefix R>    := <radix R>(?:#[ei])?|(?:#[ei])?<radix R>
      // <radix 2>     := #b
      // <radix 8>     := #o
      // <radix 10>    := (?:#d)?
      // <radix 16>    := #x
      // <digit 2>     := [01]
      // <digit 8>     := [0-7]
      // <digit 10>    := \d
      // <digit 16>    := [0-9a-f]
      //
      // The problem with this grammar is that the resulting regex is way to complex, so we simplify by grouping all
      // non-decimal bases together. This results in a decimal (dec) and combined binary, octal, and hexadecimal (box)
      // pattern:
      pattern: RegExp(t({
        "<ureal dec>": /\d+(?:\/\d+)|(?:\d+(?:\.\d*)?|\.\d+)(?:[esfdl][+-]?\d+)?/.source,
        "<real dec>": /[+-]?<ureal dec>|[+-](?:inf|nan)\.0/.source,
        "<imaginary dec>": /[+-](?:<ureal dec>|(?:inf|nan)\.0)?i/.source,
        "<complex dec>": /<real dec>(?:@<real dec>|<imaginary dec>)?|<imaginary dec>/.source,
        "<num dec>": /(?:#d(?:#[ei])?|#[ei](?:#d)?)?<complex dec>/.source,
        "<ureal box>": /[0-9a-f]+(?:\/[0-9a-f]+)?/.source,
        "<real box>": /[+-]?<ureal box>|[+-](?:inf|nan)\.0/.source,
        "<imaginary box>": /[+-](?:<ureal box>|(?:inf|nan)\.0)?i/.source,
        "<complex box>": /<real box>(?:@<real box>|<imaginary box>)?|<imaginary box>/.source,
        "<num box>": /#[box](?:#[ei])?|(?:#[ei])?#[box]<complex box>/.source,
        "<number>": /(^|[()\[\]\s])(?:<num dec>|<num box>)(?=[()\[\]\s]|$)/.source
      }), "i"),
      lookbehind: !0
    },
    boolean: {
      pattern: /(^|[()\[\]\s])#(?:[ft]|false|true)(?=[()\[\]\s]|$)/,
      lookbehind: !0
    },
    function: {
      pattern: /((?:^|[^'`#])[(\[])(?:[^|()\[\]'\s]+|\|(?:[^\\|]|\\.)*\|)(?=[()\[\]\s]|$)/,
      lookbehind: !0
    },
    identifier: {
      pattern: /(^|[()\[\]\s])\|(?:[^\\|]|\\.)*\|(?=[()\[\]\s]|$)/,
      lookbehind: !0,
      greedy: !0
    },
    punctuation: /[()\[\]']/
  };
  function t(r) {
    for (var n in r)
      r[n] = r[n].replace(/<[\w\s]+>/g, function(i) {
        return "(?:" + r[i].trim() + ")";
      });
    return r[n];
  }
})(Prism);
Prism.languages.swift = {
  comment: {
    // Nested comments are supported up to 2 levels
    pattern: /(^|[^\\:])(?:\/\/.*|\/\*(?:[^/*]|\/(?!\*)|\*(?!\/)|\/\*(?:[^*]|\*(?!\/))*\*\/)*\*\/)/,
    lookbehind: !0,
    greedy: !0
  },
  "string-literal": [
    // https://docs.swift.org/swift-book/LanguageGuide/StringsAndCharacters.html
    {
      pattern: RegExp(
        /(^|[^"#])/.source + "(?:" + /"(?:\\(?:\((?:[^()]|\([^()]*\))*\)|\r\n|[^(])|[^\\\r\n"])*"/.source + "|" + /"""(?:\\(?:\((?:[^()]|\([^()]*\))*\)|[^(])|[^\\"]|"(?!""))*"""/.source + ")" + /(?!["#])/.source
      ),
      lookbehind: !0,
      greedy: !0,
      inside: {
        interpolation: {
          pattern: /(\\\()(?:[^()]|\([^()]*\))*(?=\))/,
          lookbehind: !0,
          inside: null
          // see below
        },
        "interpolation-punctuation": {
          pattern: /^\)|\\\($/,
          alias: "punctuation"
        },
        punctuation: /\\(?=[\r\n])/,
        string: /[\s\S]+/
      }
    },
    {
      pattern: RegExp(
        /(^|[^"#])(#+)/.source + "(?:" + /"(?:\\(?:#+\((?:[^()]|\([^()]*\))*\)|\r\n|[^#])|[^\\\r\n])*?"/.source + "|" + /"""(?:\\(?:#+\((?:[^()]|\([^()]*\))*\)|[^#])|[^\\])*?"""/.source + ")\\2"
      ),
      lookbehind: !0,
      greedy: !0,
      inside: {
        interpolation: {
          pattern: /(\\#+\()(?:[^()]|\([^()]*\))*(?=\))/,
          lookbehind: !0,
          inside: null
          // see below
        },
        "interpolation-punctuation": {
          pattern: /^\)|\\#+\($/,
          alias: "punctuation"
        },
        string: /[\s\S]+/
      }
    }
  ],
  directive: {
    // directives with conditions
    pattern: RegExp(
      /#/.source + "(?:" + (/(?:elseif|if)\b/.source + "(?:[ 	]*" + /(?:![ \t]*)?(?:\b\w+\b(?:[ \t]*\((?:[^()]|\([^()]*\))*\))?|\((?:[^()]|\([^()]*\))*\))(?:[ \t]*(?:&&|\|\|))?/.source + ")+") + "|" + /(?:else|endif)\b/.source + ")"
    ),
    alias: "property",
    inside: {
      "directive-name": /^#\w+/,
      boolean: /\b(?:false|true)\b/,
      number: /\b\d+(?:\.\d+)*\b/,
      operator: /!|&&|\|\||[<>]=?/,
      punctuation: /[(),]/
    }
  },
  literal: {
    pattern: /#(?:colorLiteral|column|dsohandle|file(?:ID|Literal|Path)?|function|imageLiteral|line)\b/,
    alias: "constant"
  },
  "other-directive": {
    pattern: /#\w+\b/,
    alias: "property"
  },
  attribute: {
    pattern: /@\w+/,
    alias: "atrule"
  },
  "function-definition": {
    pattern: /(\bfunc\s+)\w+/,
    lookbehind: !0,
    alias: "function"
  },
  label: {
    // https://docs.swift.org/swift-book/LanguageGuide/ControlFlow.html#ID141
    pattern: /\b(break|continue)\s+\w+|\b[a-zA-Z_]\w*(?=\s*:\s*(?:for|repeat|while)\b)/,
    lookbehind: !0,
    alias: "important"
  },
  keyword: /\b(?:Any|Protocol|Self|Type|actor|as|assignment|associatedtype|associativity|async|await|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|higherThan|if|import|in|indirect|infix|init|inout|internal|is|isolated|lazy|left|let|lowerThan|mutating|none|nonisolated|nonmutating|open|operator|optional|override|postfix|precedencegroup|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|set|some|static|struct|subscript|super|switch|throw|throws|try|typealias|unowned|unsafe|var|weak|where|while|willSet)\b/,
  boolean: /\b(?:false|true)\b/,
  nil: {
    pattern: /\bnil\b/,
    alias: "constant"
  },
  "short-argument": /\$\d+\b/,
  omit: {
    pattern: /\b_\b/,
    alias: "keyword"
  },
  number: /\b(?:[\d_]+(?:\.[\de_]+)?|0x[a-f0-9_]+(?:\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\b/i,
  // A class name must start with an upper-case letter and be either 1 letter long or contain a lower-case letter.
  "class-name": /\b[A-Z](?:[A-Z_\d]*[a-z]\w*)?\b/,
  function: /\b[a-z_]\w*(?=\s*\()/i,
  constant: /\b(?:[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\b/,
  // Operators are generic in Swift. Developers can even create new operators (e.g. +++).
  // https://docs.swift.org/swift-book/ReferenceManual/zzSummaryOfTheGrammar.html#ID481
  // This regex only supports ASCII operators.
  operator: /[-+*/%=!<>&|^~?]+|\.[.\-+*/%=!<>&|^~?]+/,
  punctuation: /[{}[\]();,.:\\]/
};
Prism.languages.swift["string-literal"].forEach(function(e) {
  e.inside.interpolation.inside = Prism.languages.swift;
});
const jf = (e) => {
  e[e.length - 1] == `
` && (e = e.slice(0, e.length - 1));
  let t = e.split(`
`), r = "";
  for (let n = 0; n < t.length; n++)
    r += '<span class="count"></span>' + t[n] + `
`;
  return r;
}, Yf = (e) => {
  const t = (r) => {
    r.preventDefault(), r.clipboardData && r.clipboardData.setData("text/plain", e), document.removeEventListener("copy", t);
  };
  document.addEventListener("copy", t), document.execCommand("copy");
}, Vf = (e) => {
  let t = e.target;
  try {
    let r = t.parentElement.getElementsByTagName("code")[0], n = r.textContent ? r.textContent : "";
    Yf(n), alert("已复制");
  } catch (r) {
    alert("复制失败:" + r);
  }
};
function Xf(e) {
  for (var t = [], r = 1; r < arguments.length; r++)
    t[r - 1] = arguments[r];
  var n = Array.from(typeof e == "string" ? [e] : e);
  n[n.length - 1] = n[n.length - 1].replace(/\r?\n([\t ]*)$/, "");
  var i = n.reduce(function(o, l) {
    var u = l.match(/\n([\t ]+|(?!\s).)/g);
    return u ? o.concat(u.map(function(d) {
      var p, b;
      return (b = (p = d.match(/[\t ]/g)) === null || p === void 0 ? void 0 : p.length) !== null && b !== void 0 ? b : 0;
    })) : o;
  }, []);
  if (i.length) {
    var a = new RegExp(`
[	 ]{` + Math.min.apply(Math, i) + "}", "g");
    n = n.map(function(o) {
      return o.replace(a, `
`);
    });
  }
  n[0] = n[0].replace(/^\r?\n/, "");
  var s = n[0];
  return t.forEach(function(o, l) {
    var u = s.match(/(?:^|\n)( *)$/), d = u ? u[1] : "", p = o;
    typeof o == "string" && o.includes(`
`) && (p = String(o).split(`
`).map(function(b, m) {
      return m === 0 ? b : "" + d + b;
    }).join(`
`)), s += p + n[l + 1];
  }), s;
}
/*! @license DOMPurify 2.4.5 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/2.4.5/LICENSE */
function Br(e) {
  return Br = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t) {
    return typeof t;
  } : function(t) {
    return t && typeof Symbol == "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
  }, Br(e);
}
function fo(e, t) {
  return fo = Object.setPrototypeOf || function(n, i) {
    return n.__proto__ = i, n;
  }, fo(e, t);
}
function Kf() {
  if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
    return !1;
  if (typeof Proxy == "function")
    return !0;
  try {
    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    })), !0;
  } catch {
    return !1;
  }
}
function Zi(e, t, r) {
  return Kf() ? Zi = Reflect.construct : Zi = function(i, a, s) {
    var o = [null];
    o.push.apply(o, a);
    var l = Function.bind.apply(i, o), u = new l();
    return s && fo(u, s.prototype), u;
  }, Zi.apply(null, arguments);
}
function qt(e) {
  return Zf(e) || Jf(e) || Qf(e) || em();
}
function Zf(e) {
  if (Array.isArray(e))
    return mo(e);
}
function Jf(e) {
  if (typeof Symbol < "u" && e[Symbol.iterator] != null || e["@@iterator"] != null)
    return Array.from(e);
}
function Qf(e, t) {
  if (e) {
    if (typeof e == "string")
      return mo(e, t);
    var r = Object.prototype.toString.call(e).slice(8, -1);
    if (r === "Object" && e.constructor && (r = e.constructor.name), r === "Map" || r === "Set")
      return Array.from(e);
    if (r === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))
      return mo(e, t);
  }
}
function mo(e, t) {
  (t == null || t > e.length) && (t = e.length);
  for (var r = 0, n = new Array(t); r < t; r++)
    n[r] = e[r];
  return n;
}
function em() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
var tm = Object.hasOwnProperty, Ol = Object.setPrototypeOf, rm = Object.isFrozen, nm = Object.getPrototypeOf, im = Object.getOwnPropertyDescriptor, mt = Object.freeze, Yt = Object.seal, am = Object.create, qu = typeof Reflect < "u" && Reflect, ya = qu.apply, go = qu.construct;
ya || (ya = function(t, r, n) {
  return t.apply(r, n);
});
mt || (mt = function(t) {
  return t;
});
Yt || (Yt = function(t) {
  return t;
});
go || (go = function(t, r) {
  return Zi(t, qt(r));
});
var sm = Dt(Array.prototype.forEach), Nl = Dt(Array.prototype.pop), Hn = Dt(Array.prototype.push), Ji = Dt(String.prototype.toLowerCase), Fs = Dt(String.prototype.toString), om = Dt(String.prototype.match), Ht = Dt(String.prototype.replace), lm = Dt(String.prototype.indexOf), cm = Dt(String.prototype.trim), ht = Dt(RegExp.prototype.test), $s = um(TypeError);
function Dt(e) {
  return function(t) {
    for (var r = arguments.length, n = new Array(r > 1 ? r - 1 : 0), i = 1; i < r; i++)
      n[i - 1] = arguments[i];
    return ya(e, t, n);
  };
}
function um(e) {
  return function() {
    for (var t = arguments.length, r = new Array(t), n = 0; n < t; n++)
      r[n] = arguments[n];
    return go(e, r);
  };
}
function Te(e, t, r) {
  r = r || Ji, Ol && Ol(e, null);
  for (var n = t.length; n--; ) {
    var i = t[n];
    if (typeof i == "string") {
      var a = r(i);
      a !== i && (rm(t) || (t[n] = a), i = a);
    }
    e[i] = !0;
  }
  return e;
}
function Zr(e) {
  var t = am(null), r;
  for (r in e)
    ya(tm, e, [r]) === !0 && (t[r] = e[r]);
  return t;
}
function Fi(e, t) {
  for (; e !== null; ) {
    var r = im(e, t);
    if (r) {
      if (r.get)
        return Dt(r.get);
      if (typeof r.value == "function")
        return Dt(r.value);
    }
    e = nm(e);
  }
  function n(i) {
    return console.warn("fallback value for", i), null;
  }
  return n;
}
var Ml = mt(["a", "abbr", "acronym", "address", "area", "article", "aside", "audio", "b", "bdi", "bdo", "big", "blink", "blockquote", "body", "br", "button", "canvas", "caption", "center", "cite", "code", "col", "colgroup", "content", "data", "datalist", "dd", "decorator", "del", "details", "dfn", "dialog", "dir", "div", "dl", "dt", "element", "em", "fieldset", "figcaption", "figure", "font", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "img", "input", "ins", "kbd", "label", "legend", "li", "main", "map", "mark", "marquee", "menu", "menuitem", "meter", "nav", "nobr", "ol", "optgroup", "option", "output", "p", "picture", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "section", "select", "shadow", "small", "source", "spacer", "span", "strike", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "time", "tr", "track", "tt", "u", "ul", "var", "video", "wbr"]), zs = mt(["svg", "a", "altglyph", "altglyphdef", "altglyphitem", "animatecolor", "animatemotion", "animatetransform", "circle", "clippath", "defs", "desc", "ellipse", "filter", "font", "g", "glyph", "glyphref", "hkern", "image", "line", "lineargradient", "marker", "mask", "metadata", "mpath", "path", "pattern", "polygon", "polyline", "radialgradient", "rect", "stop", "style", "switch", "symbol", "text", "textpath", "title", "tref", "tspan", "view", "vkern"]), Ps = mt(["feBlend", "feColorMatrix", "feComponentTransfer", "feComposite", "feConvolveMatrix", "feDiffuseLighting", "feDisplacementMap", "feDistantLight", "feFlood", "feFuncA", "feFuncB", "feFuncG", "feFuncR", "feGaussianBlur", "feImage", "feMerge", "feMergeNode", "feMorphology", "feOffset", "fePointLight", "feSpecularLighting", "feSpotLight", "feTile", "feTurbulence"]), hm = mt(["animate", "color-profile", "cursor", "discard", "fedropshadow", "font-face", "font-face-format", "font-face-name", "font-face-src", "font-face-uri", "foreignobject", "hatch", "hatchpath", "mesh", "meshgradient", "meshpatch", "meshrow", "missing-glyph", "script", "set", "solidcolor", "unknown", "use"]), Us = mt(["math", "menclose", "merror", "mfenced", "mfrac", "mglyph", "mi", "mlabeledtr", "mmultiscripts", "mn", "mo", "mover", "mpadded", "mphantom", "mroot", "mrow", "ms", "mspace", "msqrt", "mstyle", "msub", "msup", "msubsup", "mtable", "mtd", "mtext", "mtr", "munder", "munderover"]), dm = mt(["maction", "maligngroup", "malignmark", "mlongdiv", "mscarries", "mscarry", "msgroup", "mstack", "msline", "msrow", "semantics", "annotation", "annotation-xml", "mprescripts", "none"]), Bl = mt(["#text"]), Dl = mt(["accept", "action", "align", "alt", "autocapitalize", "autocomplete", "autopictureinpicture", "autoplay", "background", "bgcolor", "border", "capture", "cellpadding", "cellspacing", "checked", "cite", "class", "clear", "color", "cols", "colspan", "controls", "controlslist", "coords", "crossorigin", "datetime", "decoding", "default", "dir", "disabled", "disablepictureinpicture", "disableremoteplayback", "download", "draggable", "enctype", "enterkeyhint", "face", "for", "headers", "height", "hidden", "high", "href", "hreflang", "id", "inputmode", "integrity", "ismap", "kind", "label", "lang", "list", "loading", "loop", "low", "max", "maxlength", "media", "method", "min", "minlength", "multiple", "muted", "name", "nonce", "noshade", "novalidate", "nowrap", "open", "optimum", "pattern", "placeholder", "playsinline", "poster", "preload", "pubdate", "radiogroup", "readonly", "rel", "required", "rev", "reversed", "role", "rows", "rowspan", "spellcheck", "scope", "selected", "shape", "size", "sizes", "span", "srclang", "start", "src", "srcset", "step", "style", "summary", "tabindex", "title", "translate", "type", "usemap", "valign", "value", "width", "xmlns", "slot"]), Hs = mt(["accent-height", "accumulate", "additive", "alignment-baseline", "ascent", "attributename", "attributetype", "azimuth", "basefrequency", "baseline-shift", "begin", "bias", "by", "class", "clip", "clippathunits", "clip-path", "clip-rule", "color", "color-interpolation", "color-interpolation-filters", "color-profile", "color-rendering", "cx", "cy", "d", "dx", "dy", "diffuseconstant", "direction", "display", "divisor", "dur", "edgemode", "elevation", "end", "fill", "fill-opacity", "fill-rule", "filter", "filterunits", "flood-color", "flood-opacity", "font-family", "font-size", "font-size-adjust", "font-stretch", "font-style", "font-variant", "font-weight", "fx", "fy", "g1", "g2", "glyph-name", "glyphref", "gradientunits", "gradienttransform", "height", "href", "id", "image-rendering", "in", "in2", "k", "k1", "k2", "k3", "k4", "kerning", "keypoints", "keysplines", "keytimes", "lang", "lengthadjust", "letter-spacing", "kernelmatrix", "kernelunitlength", "lighting-color", "local", "marker-end", "marker-mid", "marker-start", "markerheight", "markerunits", "markerwidth", "maskcontentunits", "maskunits", "max", "mask", "media", "method", "mode", "min", "name", "numoctaves", "offset", "operator", "opacity", "order", "orient", "orientation", "origin", "overflow", "paint-order", "path", "pathlength", "patterncontentunits", "patterntransform", "patternunits", "points", "preservealpha", "preserveaspectratio", "primitiveunits", "r", "rx", "ry", "radius", "refx", "refy", "repeatcount", "repeatdur", "restart", "result", "rotate", "scale", "seed", "shape-rendering", "specularconstant", "specularexponent", "spreadmethod", "startoffset", "stddeviation", "stitchtiles", "stop-color", "stop-opacity", "stroke-dasharray", "stroke-dashoffset", "stroke-linecap", "stroke-linejoin", "stroke-miterlimit", "stroke-opacity", "stroke", "stroke-width", "style", "surfacescale", "systemlanguage", "tabindex", "targetx", "targety", "transform", "transform-origin", "text-anchor", "text-decoration", "text-rendering", "textlength", "type", "u1", "u2", "unicode", "values", "viewbox", "visibility", "version", "vert-adv-y", "vert-origin-x", "vert-origin-y", "width", "word-spacing", "wrap", "writing-mode", "xchannelselector", "ychannelselector", "x", "x1", "x2", "xmlns", "y", "y1", "y2", "z", "zoomandpan"]), Fl = mt(["accent", "accentunder", "align", "bevelled", "close", "columnsalign", "columnlines", "columnspan", "denomalign", "depth", "dir", "display", "displaystyle", "encoding", "fence", "frame", "height", "href", "id", "largeop", "length", "linethickness", "lspace", "lquote", "mathbackground", "mathcolor", "mathsize", "mathvariant", "maxsize", "minsize", "movablelimits", "notation", "numalign", "open", "rowalign", "rowlines", "rowspacing", "rowspan", "rspace", "rquote", "scriptlevel", "scriptminsize", "scriptsizemultiplier", "selection", "separator", "separators", "stretchy", "subscriptshift", "supscriptshift", "symmetric", "voffset", "width", "xmlns"]), $i = mt(["xlink:href", "xml:id", "xlink:title", "xml:space", "xmlns:xlink"]), pm = Yt(/\{\{[\w\W]*|[\w\W]*\}\}/gm), fm = Yt(/<%[\w\W]*|[\w\W]*%>/gm), mm = Yt(/\${[\w\W]*}/gm), gm = Yt(/^data-[\-\w.\u00B7-\uFFFF]/), bm = Yt(/^aria-[\-\w]+$/), vm = Yt(
  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i
  // eslint-disable-line no-useless-escape
), ym = Yt(/^(?:\w+script|data):/i), xm = Yt(
  /[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g
  // eslint-disable-line no-control-regex
), _m = Yt(/^html$/i), wm = function() {
  return typeof window > "u" ? null : window;
}, Sm = function(t, r) {
  if (Br(t) !== "object" || typeof t.createPolicy != "function")
    return null;
  var n = null, i = "data-tt-policy-suffix";
  r.currentScript && r.currentScript.hasAttribute(i) && (n = r.currentScript.getAttribute(i));
  var a = "dompurify" + (n ? "#" + n : "");
  try {
    return t.createPolicy(a, {
      createHTML: function(o) {
        return o;
      },
      createScriptURL: function(o) {
        return o;
      }
    });
  } catch {
    return console.warn("TrustedTypes policy " + a + " could not be created."), null;
  }
};
function Gu() {
  var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : wm(), t = function(T) {
    return Gu(T);
  };
  if (t.version = "2.4.5", t.removed = [], !e || !e.document || e.document.nodeType !== 9)
    return t.isSupported = !1, t;
  var r = e.document, n = e.document, i = e.DocumentFragment, a = e.HTMLTemplateElement, s = e.Node, o = e.Element, l = e.NodeFilter, u = e.NamedNodeMap, d = u === void 0 ? e.NamedNodeMap || e.MozNamedAttrMap : u, p = e.HTMLFormElement, b = e.DOMParser, m = e.trustedTypes, _ = o.prototype, k = Fi(_, "cloneNode"), L = Fi(_, "nextSibling"), A = Fi(_, "childNodes"), v = Fi(_, "parentNode");
  if (typeof a == "function") {
    var S = n.createElement("template");
    S.content && S.content.ownerDocument && (n = S.content.ownerDocument);
  }
  var C = Sm(m, r), I = C ? C.createHTML("") : "", R = n, N = R.implementation, K = R.createNodeIterator, B = R.createDocumentFragment, ie = R.getElementsByTagName, ge = r.importNode, ce = {};
  try {
    ce = Zr(n).documentMode ? n.documentMode : {};
  } catch {
  }
  var V = {};
  t.isSupported = typeof v == "function" && N && typeof N.createHTMLDocument < "u" && ce !== 9;
  var F = pm, $ = fm, te = mm, P = gm, Z = bm, G = ym, ae = xm, se = vm, Y = null, Oe = Te({}, [].concat(qt(Ml), qt(zs), qt(Ps), qt(Us), qt(Bl))), _e = null, Me = Te({}, [].concat(qt(Dl), qt(Hs), qt(Fl), qt($i))), Ce = Object.seal(Object.create(null, {
    tagNameCheck: {
      writable: !0,
      configurable: !1,
      enumerable: !0,
      value: null
    },
    attributeNameCheck: {
      writable: !0,
      configurable: !1,
      enumerable: !0,
      value: null
    },
    allowCustomizedBuiltInElements: {
      writable: !0,
      configurable: !1,
      enumerable: !0,
      value: !1
    }
  })), ze = null, He = null, Re = !0, we = !0, Ee = !1, rt = !0, ut = !1, bt = !1, sr = !1, Kt = !1, It = !1, zt = !1, Pt = !1, _i = !0, zn = !1, M = "user-content-", W = !0, q = !1, ye = {}, ke = null, Fe = Te({}, ["annotation-xml", "audio", "colgroup", "desc", "foreignobject", "head", "iframe", "math", "mi", "mn", "mo", "ms", "mtext", "noembed", "noframes", "noscript", "plaintext", "script", "style", "svg", "template", "thead", "title", "video", "xmp"]), Tt = null, or = Te({}, ["audio", "video", "img", "source", "image", "track"]), hs = null, O0 = Te({}, ["alt", "class", "for", "id", "label", "name", "pattern", "placeholder", "role", "summary", "title", "value", "style", "xmlns"]), wi = "http://www.w3.org/1998/Math/MathML", Si = "http://www.w3.org/2000/svg", lr = "http://www.w3.org/1999/xhtml", pn = lr, ds = !1, ps = null, c1 = Te({}, [wi, Si, lr], Fs), jr, u1 = ["application/xhtml+xml", "text/html"], h1 = "text/html", et, fn = null, d1 = n.createElement("form"), N0 = function(T) {
    return T instanceof RegExp || T instanceof Function;
  }, fs = function(T) {
    fn && fn === T || ((!T || Br(T) !== "object") && (T = {}), T = Zr(T), jr = // eslint-disable-next-line unicorn/prefer-includes
    u1.indexOf(T.PARSER_MEDIA_TYPE) === -1 ? jr = h1 : jr = T.PARSER_MEDIA_TYPE, et = jr === "application/xhtml+xml" ? Fs : Ji, Y = "ALLOWED_TAGS" in T ? Te({}, T.ALLOWED_TAGS, et) : Oe, _e = "ALLOWED_ATTR" in T ? Te({}, T.ALLOWED_ATTR, et) : Me, ps = "ALLOWED_NAMESPACES" in T ? Te({}, T.ALLOWED_NAMESPACES, Fs) : c1, hs = "ADD_URI_SAFE_ATTR" in T ? Te(
      Zr(O0),
      // eslint-disable-line indent
      T.ADD_URI_SAFE_ATTR,
      // eslint-disable-line indent
      et
      // eslint-disable-line indent
    ) : O0, Tt = "ADD_DATA_URI_TAGS" in T ? Te(
      Zr(or),
      // eslint-disable-line indent
      T.ADD_DATA_URI_TAGS,
      // eslint-disable-line indent
      et
      // eslint-disable-line indent
    ) : or, ke = "FORBID_CONTENTS" in T ? Te({}, T.FORBID_CONTENTS, et) : Fe, ze = "FORBID_TAGS" in T ? Te({}, T.FORBID_TAGS, et) : {}, He = "FORBID_ATTR" in T ? Te({}, T.FORBID_ATTR, et) : {}, ye = "USE_PROFILES" in T ? T.USE_PROFILES : !1, Re = T.ALLOW_ARIA_ATTR !== !1, we = T.ALLOW_DATA_ATTR !== !1, Ee = T.ALLOW_UNKNOWN_PROTOCOLS || !1, rt = T.ALLOW_SELF_CLOSE_IN_ATTR !== !1, ut = T.SAFE_FOR_TEMPLATES || !1, bt = T.WHOLE_DOCUMENT || !1, It = T.RETURN_DOM || !1, zt = T.RETURN_DOM_FRAGMENT || !1, Pt = T.RETURN_TRUSTED_TYPE || !1, Kt = T.FORCE_BODY || !1, _i = T.SANITIZE_DOM !== !1, zn = T.SANITIZE_NAMED_PROPS || !1, W = T.KEEP_CONTENT !== !1, q = T.IN_PLACE || !1, se = T.ALLOWED_URI_REGEXP || se, pn = T.NAMESPACE || lr, Ce = T.CUSTOM_ELEMENT_HANDLING || {}, T.CUSTOM_ELEMENT_HANDLING && N0(T.CUSTOM_ELEMENT_HANDLING.tagNameCheck) && (Ce.tagNameCheck = T.CUSTOM_ELEMENT_HANDLING.tagNameCheck), T.CUSTOM_ELEMENT_HANDLING && N0(T.CUSTOM_ELEMENT_HANDLING.attributeNameCheck) && (Ce.attributeNameCheck = T.CUSTOM_ELEMENT_HANDLING.attributeNameCheck), T.CUSTOM_ELEMENT_HANDLING && typeof T.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements == "boolean" && (Ce.allowCustomizedBuiltInElements = T.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements), ut && (we = !1), zt && (It = !0), ye && (Y = Te({}, qt(Bl)), _e = [], ye.html === !0 && (Te(Y, Ml), Te(_e, Dl)), ye.svg === !0 && (Te(Y, zs), Te(_e, Hs), Te(_e, $i)), ye.svgFilters === !0 && (Te(Y, Ps), Te(_e, Hs), Te(_e, $i)), ye.mathMl === !0 && (Te(Y, Us), Te(_e, Fl), Te(_e, $i))), T.ADD_TAGS && (Y === Oe && (Y = Zr(Y)), Te(Y, T.ADD_TAGS, et)), T.ADD_ATTR && (_e === Me && (_e = Zr(_e)), Te(_e, T.ADD_ATTR, et)), T.ADD_URI_SAFE_ATTR && Te(hs, T.ADD_URI_SAFE_ATTR, et), T.FORBID_CONTENTS && (ke === Fe && (ke = Zr(ke)), Te(ke, T.FORBID_CONTENTS, et)), W && (Y["#text"] = !0), bt && Te(Y, ["html", "head", "body"]), Y.table && (Te(Y, ["tbody"]), delete ze.tbody), mt && mt(T), fn = T);
  }, M0 = Te({}, ["mi", "mo", "mn", "ms", "mtext"]), B0 = Te({}, ["foreignobject", "desc", "title", "annotation-xml"]), p1 = Te({}, ["title", "style", "font", "a", "script"]), ki = Te({}, zs);
  Te(ki, Ps), Te(ki, hm);
  var ms = Te({}, Us);
  Te(ms, dm);
  var f1 = function(T) {
    var H = v(T);
    (!H || !H.tagName) && (H = {
      namespaceURI: pn,
      tagName: "template"
    });
    var J = Ji(T.tagName), Ie = Ji(H.tagName);
    return ps[T.namespaceURI] ? T.namespaceURI === Si ? H.namespaceURI === lr ? J === "svg" : H.namespaceURI === wi ? J === "svg" && (Ie === "annotation-xml" || M0[Ie]) : !!ki[J] : T.namespaceURI === wi ? H.namespaceURI === lr ? J === "math" : H.namespaceURI === Si ? J === "math" && B0[Ie] : !!ms[J] : T.namespaceURI === lr ? H.namespaceURI === Si && !B0[Ie] || H.namespaceURI === wi && !M0[Ie] ? !1 : !ms[J] && (p1[J] || !ki[J]) : !!(jr === "application/xhtml+xml" && ps[T.namespaceURI]) : !1;
  }, cr = function(T) {
    Hn(t.removed, {
      element: T
    });
    try {
      T.parentNode.removeChild(T);
    } catch {
      try {
        T.outerHTML = I;
      } catch {
        T.remove();
      }
    }
  }, gs = function(T, H) {
    try {
      Hn(t.removed, {
        attribute: H.getAttributeNode(T),
        from: H
      });
    } catch {
      Hn(t.removed, {
        attribute: null,
        from: H
      });
    }
    if (H.removeAttribute(T), T === "is" && !_e[T])
      if (It || zt)
        try {
          cr(H);
        } catch {
        }
      else
        try {
          H.setAttribute(T, "");
        } catch {
        }
  }, D0 = function(T) {
    var H, J;
    if (Kt)
      T = "<remove></remove>" + T;
    else {
      var Ie = om(T, /^[\r\n\t ]+/);
      J = Ie && Ie[0];
    }
    jr === "application/xhtml+xml" && pn === lr && (T = '<html xmlns="http://www.w3.org/1999/xhtml"><head></head><body>' + T + "</body></html>");
    var vt = C ? C.createHTML(T) : T;
    if (pn === lr)
      try {
        H = new b().parseFromString(vt, jr);
      } catch {
      }
    if (!H || !H.documentElement) {
      H = N.createDocument(pn, "template", null);
      try {
        H.documentElement.innerHTML = ds ? I : vt;
      } catch {
      }
    }
    var st = H.body || H.documentElement;
    return T && J && st.insertBefore(n.createTextNode(J), st.childNodes[0] || null), pn === lr ? ie.call(H, bt ? "html" : "body")[0] : bt ? H.documentElement : st;
  }, F0 = function(T) {
    return K.call(
      T.ownerDocument || T,
      T,
      // eslint-disable-next-line no-bitwise
      l.SHOW_ELEMENT | l.SHOW_COMMENT | l.SHOW_TEXT,
      null,
      !1
    );
  }, m1 = function(T) {
    return T instanceof p && (typeof T.nodeName != "string" || typeof T.textContent != "string" || typeof T.removeChild != "function" || !(T.attributes instanceof d) || typeof T.removeAttribute != "function" || typeof T.setAttribute != "function" || typeof T.namespaceURI != "string" || typeof T.insertBefore != "function" || typeof T.hasChildNodes != "function");
  }, Pn = function(T) {
    return Br(s) === "object" ? T instanceof s : T && Br(T) === "object" && typeof T.nodeType == "number" && typeof T.nodeName == "string";
  }, ur = function(T, H, J) {
    V[T] && sm(V[T], function(Ie) {
      Ie.call(t, H, J, fn);
    });
  }, $0 = function(T) {
    var H;
    if (ur("beforeSanitizeElements", T, null), m1(T) || ht(/[\u0080-\uFFFF]/, T.nodeName))
      return cr(T), !0;
    var J = et(T.nodeName);
    if (ur("uponSanitizeElement", T, {
      tagName: J,
      allowedTags: Y
    }), T.hasChildNodes() && !Pn(T.firstElementChild) && (!Pn(T.content) || !Pn(T.content.firstElementChild)) && ht(/<[/\w]/g, T.innerHTML) && ht(/<[/\w]/g, T.textContent) || J === "select" && ht(/<template/i, T.innerHTML))
      return cr(T), !0;
    if (!Y[J] || ze[J]) {
      if (!ze[J] && P0(J) && (Ce.tagNameCheck instanceof RegExp && ht(Ce.tagNameCheck, J) || Ce.tagNameCheck instanceof Function && Ce.tagNameCheck(J)))
        return !1;
      if (W && !ke[J]) {
        var Ie = v(T) || T.parentNode, vt = A(T) || T.childNodes;
        if (vt && Ie)
          for (var st = vt.length, nt = st - 1; nt >= 0; --nt)
            Ie.insertBefore(k(vt[nt], !0), L(T));
      }
      return cr(T), !0;
    }
    return T instanceof o && !f1(T) || (J === "noscript" || J === "noembed") && ht(/<\/no(script|embed)/i, T.innerHTML) ? (cr(T), !0) : (ut && T.nodeType === 3 && (H = T.textContent, H = Ht(H, F, " "), H = Ht(H, $, " "), H = Ht(H, te, " "), T.textContent !== H && (Hn(t.removed, {
      element: T.cloneNode()
    }), T.textContent = H)), ur("afterSanitizeElements", T, null), !1);
  }, z0 = function(T, H, J) {
    if (_i && (H === "id" || H === "name") && (J in n || J in d1))
      return !1;
    if (!(we && !He[H] && ht(P, H))) {
      if (!(Re && ht(Z, H))) {
        if (!_e[H] || He[H]) {
          if (
            // First condition does a very basic check if a) it's basically a valid custom element tagname AND
            // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck
            // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck
            !(P0(T) && (Ce.tagNameCheck instanceof RegExp && ht(Ce.tagNameCheck, T) || Ce.tagNameCheck instanceof Function && Ce.tagNameCheck(T)) && (Ce.attributeNameCheck instanceof RegExp && ht(Ce.attributeNameCheck, H) || Ce.attributeNameCheck instanceof Function && Ce.attributeNameCheck(H)) || // Alternative, second condition checks if it's an `is`-attribute, AND
            // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck
            H === "is" && Ce.allowCustomizedBuiltInElements && (Ce.tagNameCheck instanceof RegExp && ht(Ce.tagNameCheck, J) || Ce.tagNameCheck instanceof Function && Ce.tagNameCheck(J)))
          )
            return !1;
        } else if (!hs[H]) {
          if (!ht(se, Ht(J, ae, ""))) {
            if (!((H === "src" || H === "xlink:href" || H === "href") && T !== "script" && lm(J, "data:") === 0 && Tt[T])) {
              if (!(Ee && !ht(G, Ht(J, ae, "")))) {
                if (J)
                  return !1;
              }
            }
          }
        }
      }
    }
    return !0;
  }, P0 = function(T) {
    return T.indexOf("-") > 0;
  }, U0 = function(T) {
    var H, J, Ie, vt;
    ur("beforeSanitizeAttributes", T, null);
    var st = T.attributes;
    if (st) {
      var nt = {
        attrName: "",
        attrValue: "",
        keepAttr: !0,
        allowedAttributes: _e
      };
      for (vt = st.length; vt--; ) {
        H = st[vt];
        var Ti = H, tt = Ti.name, bs = Ti.namespaceURI;
        if (J = tt === "value" ? H.value : cm(H.value), Ie = et(tt), nt.attrName = Ie, nt.attrValue = J, nt.keepAttr = !0, nt.forceKeepAttr = void 0, ur("uponSanitizeAttribute", T, nt), J = nt.attrValue, !nt.forceKeepAttr && (gs(tt, T), !!nt.keepAttr)) {
          if (!rt && ht(/\/>/i, J)) {
            gs(tt, T);
            continue;
          }
          ut && (J = Ht(J, F, " "), J = Ht(J, $, " "), J = Ht(J, te, " "));
          var H0 = et(T.nodeName);
          if (z0(H0, Ie, J)) {
            if (zn && (Ie === "id" || Ie === "name") && (gs(tt, T), J = M + J), C && Br(m) === "object" && typeof m.getAttributeType == "function" && !bs)
              switch (m.getAttributeType(H0, Ie)) {
                case "TrustedHTML":
                  J = C.createHTML(J);
                  break;
                case "TrustedScriptURL":
                  J = C.createScriptURL(J);
                  break;
              }
            try {
              bs ? T.setAttributeNS(bs, tt, J) : T.setAttribute(tt, J), Nl(t.removed);
            } catch {
            }
          }
        }
      }
      ur("afterSanitizeAttributes", T, null);
    }
  }, g1 = function oe(T) {
    var H, J = F0(T);
    for (ur("beforeSanitizeShadowDOM", T, null); H = J.nextNode(); )
      ur("uponSanitizeShadowNode", H, null), !$0(H) && (H.content instanceof i && oe(H.content), U0(H));
    ur("afterSanitizeShadowDOM", T, null);
  };
  return t.sanitize = function(oe) {
    var T = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, H, J, Ie, vt, st;
    if (ds = !oe, ds && (oe = "<!-->"), typeof oe != "string" && !Pn(oe)) {
      if (typeof oe.toString != "function")
        throw $s("toString is not a function");
      if (oe = oe.toString(), typeof oe != "string")
        throw $s("dirty is not a string, aborting");
    }
    if (!t.isSupported) {
      if (Br(e.toStaticHTML) === "object" || typeof e.toStaticHTML == "function") {
        if (typeof oe == "string")
          return e.toStaticHTML(oe);
        if (Pn(oe))
          return e.toStaticHTML(oe.outerHTML);
      }
      return oe;
    }
    if (sr || fs(T), t.removed = [], typeof oe == "string" && (q = !1), q) {
      if (oe.nodeName) {
        var nt = et(oe.nodeName);
        if (!Y[nt] || ze[nt])
          throw $s("root node is forbidden and cannot be sanitized in-place");
      }
    } else if (oe instanceof s)
      H = D0("<!---->"), J = H.ownerDocument.importNode(oe, !0), J.nodeType === 1 && J.nodeName === "BODY" || J.nodeName === "HTML" ? H = J : H.appendChild(J);
    else {
      if (!It && !ut && !bt && // eslint-disable-next-line unicorn/prefer-includes
      oe.indexOf("<") === -1)
        return C && Pt ? C.createHTML(oe) : oe;
      if (H = D0(oe), !H)
        return It ? null : Pt ? I : "";
    }
    H && Kt && cr(H.firstChild);
    for (var Ti = F0(q ? oe : H); Ie = Ti.nextNode(); )
      Ie.nodeType === 3 && Ie === vt || $0(Ie) || (Ie.content instanceof i && g1(Ie.content), U0(Ie), vt = Ie);
    if (vt = null, q)
      return oe;
    if (It) {
      if (zt)
        for (st = B.call(H.ownerDocument); H.firstChild; )
          st.appendChild(H.firstChild);
      else
        st = H;
      return (_e.shadowroot || _e.shadowrootmod) && (st = ge.call(r, st, !0)), st;
    }
    var tt = bt ? H.outerHTML : H.innerHTML;
    return bt && Y["!doctype"] && H.ownerDocument && H.ownerDocument.doctype && H.ownerDocument.doctype.name && ht(_m, H.ownerDocument.doctype.name) && (tt = "<!DOCTYPE " + H.ownerDocument.doctype.name + `>
` + tt), ut && (tt = Ht(tt, F, " "), tt = Ht(tt, $, " "), tt = Ht(tt, te, " ")), C && Pt ? C.createHTML(tt) : tt;
  }, t.setConfig = function(oe) {
    fs(oe), sr = !0;
  }, t.clearConfig = function() {
    fn = null, sr = !1;
  }, t.isValidAttribute = function(oe, T, H) {
    fn || fs({});
    var J = et(oe), Ie = et(T);
    return z0(J, Ie, H);
  }, t.addHook = function(oe, T) {
    typeof T == "function" && (V[oe] = V[oe] || [], Hn(V[oe], T));
  }, t.removeHook = function(oe) {
    if (V[oe])
      return Nl(V[oe]);
  }, t.removeHooks = function(oe) {
    V[oe] && (V[oe] = []);
  }, t.removeAllHooks = function() {
    V = {};
  }, t;
}
var xa = Gu(), bo = {}, km = {
  get exports() {
    return bo;
  },
  set exports(e) {
    bo = e;
  }
};
(function(e, t) {
  (function(r, n) {
    e.exports = n();
  })(ho, function() {
    var r = 1e3, n = 6e4, i = 36e5, a = "millisecond", s = "second", o = "minute", l = "hour", u = "day", d = "week", p = "month", b = "quarter", m = "year", _ = "date", k = "Invalid Date", L = /^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/, A = /\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g, v = { name: "en", weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"), ordinal: function(V) {
      var F = ["th", "st", "nd", "rd"], $ = V % 100;
      return "[" + V + (F[($ - 20) % 10] || F[$] || F[0]) + "]";
    } }, S = function(V, F, $) {
      var te = String(V);
      return !te || te.length >= F ? V : "" + Array(F + 1 - te.length).join($) + V;
    }, C = { s: S, z: function(V) {
      var F = -V.utcOffset(), $ = Math.abs(F), te = Math.floor($ / 60), P = $ % 60;
      return (F <= 0 ? "+" : "-") + S(te, 2, "0") + ":" + S(P, 2, "0");
    }, m: function V(F, $) {
      if (F.date() < $.date())
        return -V($, F);
      var te = 12 * ($.year() - F.year()) + ($.month() - F.month()), P = F.clone().add(te, p), Z = $ - P < 0, G = F.clone().add(te + (Z ? -1 : 1), p);
      return +(-(te + ($ - P) / (Z ? P - G : G - P)) || 0);
    }, a: function(V) {
      return V < 0 ? Math.ceil(V) || 0 : Math.floor(V);
    }, p: function(V) {
      return { M: p, y: m, w: d, d: u, D: _, h: l, m: o, s, ms: a, Q: b }[V] || String(V || "").toLowerCase().replace(/s$/, "");
    }, u: function(V) {
      return V === void 0;
    } }, I = "en", R = {};
    R[I] = v;
    var N = function(V) {
      return V instanceof ge;
    }, K = function V(F, $, te) {
      var P;
      if (!F)
        return I;
      if (typeof F == "string") {
        var Z = F.toLowerCase();
        R[Z] && (P = Z), $ && (R[Z] = $, P = Z);
        var G = F.split("-");
        if (!P && G.length > 1)
          return V(G[0]);
      } else {
        var ae = F.name;
        R[ae] = F, P = ae;
      }
      return !te && P && (I = P), P || !te && I;
    }, B = function(V, F) {
      if (N(V))
        return V.clone();
      var $ = typeof F == "object" ? F : {};
      return $.date = V, $.args = arguments, new ge($);
    }, ie = C;
    ie.l = K, ie.i = N, ie.w = function(V, F) {
      return B(V, { locale: F.$L, utc: F.$u, x: F.$x, $offset: F.$offset });
    };
    var ge = function() {
      function V($) {
        this.$L = K($.locale, null, !0), this.parse($);
      }
      var F = V.prototype;
      return F.parse = function($) {
        this.$d = function(te) {
          var P = te.date, Z = te.utc;
          if (P === null)
            return /* @__PURE__ */ new Date(NaN);
          if (ie.u(P))
            return /* @__PURE__ */ new Date();
          if (P instanceof Date)
            return new Date(P);
          if (typeof P == "string" && !/Z$/i.test(P)) {
            var G = P.match(L);
            if (G) {
              var ae = G[2] - 1 || 0, se = (G[7] || "0").substring(0, 3);
              return Z ? new Date(Date.UTC(G[1], ae, G[3] || 1, G[4] || 0, G[5] || 0, G[6] || 0, se)) : new Date(G[1], ae, G[3] || 1, G[4] || 0, G[5] || 0, G[6] || 0, se);
            }
          }
          return new Date(P);
        }($), this.$x = $.x || {}, this.init();
      }, F.init = function() {
        var $ = this.$d;
        this.$y = $.getFullYear(), this.$M = $.getMonth(), this.$D = $.getDate(), this.$W = $.getDay(), this.$H = $.getHours(), this.$m = $.getMinutes(), this.$s = $.getSeconds(), this.$ms = $.getMilliseconds();
      }, F.$utils = function() {
        return ie;
      }, F.isValid = function() {
        return this.$d.toString() !== k;
      }, F.isSame = function($, te) {
        var P = B($);
        return this.startOf(te) <= P && P <= this.endOf(te);
      }, F.isAfter = function($, te) {
        return B($) < this.startOf(te);
      }, F.isBefore = function($, te) {
        return this.endOf(te) < B($);
      }, F.$g = function($, te, P) {
        return ie.u($) ? this[te] : this.set(P, $);
      }, F.unix = function() {
        return Math.floor(this.valueOf() / 1e3);
      }, F.valueOf = function() {
        return this.$d.getTime();
      }, F.startOf = function($, te) {
        var P = this, Z = !!ie.u(te) || te, G = ie.p($), ae = function(He, Re) {
          var we = ie.w(P.$u ? Date.UTC(P.$y, Re, He) : new Date(P.$y, Re, He), P);
          return Z ? we : we.endOf(u);
        }, se = function(He, Re) {
          return ie.w(P.toDate()[He].apply(P.toDate("s"), (Z ? [0, 0, 0, 0] : [23, 59, 59, 999]).slice(Re)), P);
        }, Y = this.$W, Oe = this.$M, _e = this.$D, Me = "set" + (this.$u ? "UTC" : "");
        switch (G) {
          case m:
            return Z ? ae(1, 0) : ae(31, 11);
          case p:
            return Z ? ae(1, Oe) : ae(0, Oe + 1);
          case d:
            var Ce = this.$locale().weekStart || 0, ze = (Y < Ce ? Y + 7 : Y) - Ce;
            return ae(Z ? _e - ze : _e + (6 - ze), Oe);
          case u:
          case _:
            return se(Me + "Hours", 0);
          case l:
            return se(Me + "Minutes", 1);
          case o:
            return se(Me + "Seconds", 2);
          case s:
            return se(Me + "Milliseconds", 3);
          default:
            return this.clone();
        }
      }, F.endOf = function($) {
        return this.startOf($, !1);
      }, F.$set = function($, te) {
        var P, Z = ie.p($), G = "set" + (this.$u ? "UTC" : ""), ae = (P = {}, P[u] = G + "Date", P[_] = G + "Date", P[p] = G + "Month", P[m] = G + "FullYear", P[l] = G + "Hours", P[o] = G + "Minutes", P[s] = G + "Seconds", P[a] = G + "Milliseconds", P)[Z], se = Z === u ? this.$D + (te - this.$W) : te;
        if (Z === p || Z === m) {
          var Y = this.clone().set(_, 1);
          Y.$d[ae](se), Y.init(), this.$d = Y.set(_, Math.min(this.$D, Y.daysInMonth())).$d;
        } else
          ae && this.$d[ae](se);
        return this.init(), this;
      }, F.set = function($, te) {
        return this.clone().$set($, te);
      }, F.get = function($) {
        return this[ie.p($)]();
      }, F.add = function($, te) {
        var P, Z = this;
        $ = Number($);
        var G = ie.p(te), ae = function(Oe) {
          var _e = B(Z);
          return ie.w(_e.date(_e.date() + Math.round(Oe * $)), Z);
        };
        if (G === p)
          return this.set(p, this.$M + $);
        if (G === m)
          return this.set(m, this.$y + $);
        if (G === u)
          return ae(1);
        if (G === d)
          return ae(7);
        var se = (P = {}, P[o] = n, P[l] = i, P[s] = r, P)[G] || 1, Y = this.$d.getTime() + $ * se;
        return ie.w(Y, this);
      }, F.subtract = function($, te) {
        return this.add(-1 * $, te);
      }, F.format = function($) {
        var te = this, P = this.$locale();
        if (!this.isValid())
          return P.invalidDate || k;
        var Z = $ || "YYYY-MM-DDTHH:mm:ssZ", G = ie.z(this), ae = this.$H, se = this.$m, Y = this.$M, Oe = P.weekdays, _e = P.months, Me = function(Re, we, Ee, rt) {
          return Re && (Re[we] || Re(te, Z)) || Ee[we].slice(0, rt);
        }, Ce = function(Re) {
          return ie.s(ae % 12 || 12, Re, "0");
        }, ze = P.meridiem || function(Re, we, Ee) {
          var rt = Re < 12 ? "AM" : "PM";
          return Ee ? rt.toLowerCase() : rt;
        }, He = { YY: String(this.$y).slice(-2), YYYY: this.$y, M: Y + 1, MM: ie.s(Y + 1, 2, "0"), MMM: Me(P.monthsShort, Y, _e, 3), MMMM: Me(_e, Y), D: this.$D, DD: ie.s(this.$D, 2, "0"), d: String(this.$W), dd: Me(P.weekdaysMin, this.$W, Oe, 2), ddd: Me(P.weekdaysShort, this.$W, Oe, 3), dddd: Oe[this.$W], H: String(ae), HH: ie.s(ae, 2, "0"), h: Ce(1), hh: Ce(2), a: ze(ae, se, !0), A: ze(ae, se, !1), m: String(se), mm: ie.s(se, 2, "0"), s: String(this.$s), ss: ie.s(this.$s, 2, "0"), SSS: ie.s(this.$ms, 3, "0"), Z: G };
        return Z.replace(A, function(Re, we) {
          return we || He[Re] || G.replace(":", "");
        });
      }, F.utcOffset = function() {
        return 15 * -Math.round(this.$d.getTimezoneOffset() / 15);
      }, F.diff = function($, te, P) {
        var Z, G = ie.p(te), ae = B($), se = (ae.utcOffset() - this.utcOffset()) * n, Y = this - ae, Oe = ie.m(this, ae);
        return Oe = (Z = {}, Z[m] = Oe / 12, Z[p] = Oe, Z[b] = Oe / 3, Z[d] = (Y - se) / 6048e5, Z[u] = (Y - se) / 864e5, Z[l] = Y / i, Z[o] = Y / n, Z[s] = Y / r, Z)[G] || Y, P ? Oe : ie.a(Oe);
      }, F.daysInMonth = function() {
        return this.endOf(p).$D;
      }, F.$locale = function() {
        return R[this.$L];
      }, F.locale = function($, te) {
        if (!$)
          return this.$L;
        var P = this.clone(), Z = K($, te, !0);
        return Z && (P.$L = Z), P;
      }, F.clone = function() {
        return ie.w(this.$d, this);
      }, F.toDate = function() {
        return new Date(this.valueOf());
      }, F.toJSON = function() {
        return this.isValid() ? this.toISOString() : null;
      }, F.toISOString = function() {
        return this.$d.toISOString();
      }, F.toString = function() {
        return this.$d.toUTCString();
      }, V;
    }(), ce = ge.prototype;
    return B.prototype = ce, [["$ms", a], ["$s", s], ["$m", o], ["$H", l], ["$W", u], ["$M", p], ["$y", m], ["$D", _]].forEach(function(V) {
      ce[V[1]] = function(F) {
        return this.$g(F, V[0], V[1]);
      };
    }), B.extend = function(V, F) {
      return V.$i || (V(F, ge, B), V.$i = !0), B;
    }, B.locale = K, B.isDayjs = N, B.unix = function(V) {
      return B(1e3 * V);
    }, B.en = R[I], B.Ls = R, B.p = {}, B;
  });
})(km);
const Tm = bo, Qi = {
  /* CLAMP */
  min: {
    r: 0,
    g: 0,
    b: 0,
    s: 0,
    l: 0,
    a: 0
  },
  max: {
    r: 255,
    g: 255,
    b: 255,
    h: 360,
    s: 100,
    l: 100,
    a: 1
  },
  clamp: {
    r: (e) => e >= 255 ? 255 : e < 0 ? 0 : e,
    g: (e) => e >= 255 ? 255 : e < 0 ? 0 : e,
    b: (e) => e >= 255 ? 255 : e < 0 ? 0 : e,
    h: (e) => e % 360,
    s: (e) => e >= 100 ? 100 : e < 0 ? 0 : e,
    l: (e) => e >= 100 ? 100 : e < 0 ? 0 : e,
    a: (e) => e >= 1 ? 1 : e < 0 ? 0 : e
  },
  /* CONVERSION */
  //SOURCE: https://planetcalc.com/7779
  toLinear: (e) => {
    const t = e / 255;
    return e > 0.03928 ? Math.pow((t + 0.055) / 1.055, 2.4) : t / 12.92;
  },
  //SOURCE: https://gist.github.com/mjackson/5311256
  hue2rgb: (e, t, r) => (r < 0 && (r += 1), r > 1 && (r -= 1), r < 1 / 6 ? e + (t - e) * 6 * r : r < 1 / 2 ? t : r < 2 / 3 ? e + (t - e) * (2 / 3 - r) * 6 : e),
  hsl2rgb: ({ h: e, s: t, l: r }, n) => {
    if (!t)
      return r * 2.55;
    e /= 360, t /= 100, r /= 100;
    const i = r < 0.5 ? r * (1 + t) : r + t - r * t, a = 2 * r - i;
    switch (n) {
      case "r":
        return Qi.hue2rgb(a, i, e + 1 / 3) * 255;
      case "g":
        return Qi.hue2rgb(a, i, e) * 255;
      case "b":
        return Qi.hue2rgb(a, i, e - 1 / 3) * 255;
    }
  },
  rgb2hsl: ({ r: e, g: t, b: r }, n) => {
    e /= 255, t /= 255, r /= 255;
    const i = Math.max(e, t, r), a = Math.min(e, t, r), s = (i + a) / 2;
    if (n === "l")
      return s * 100;
    if (i === a)
      return 0;
    const o = i - a, l = s > 0.5 ? o / (2 - i - a) : o / (i + a);
    if (n === "s")
      return l * 100;
    switch (i) {
      case e:
        return ((t - r) / o + (t < r ? 6 : 0)) * 60;
      case t:
        return ((r - e) / o + 2) * 60;
      case r:
        return ((e - t) / o + 4) * 60;
      default:
        return -1;
    }
  }
}, Cm = Qi, Em = {
  /* API */
  clamp: (e, t, r) => t > r ? Math.min(t, Math.max(r, e)) : Math.min(r, Math.max(t, e)),
  round: (e) => Math.round(e * 1e10) / 1e10
}, Am = Em, Im = {
  /* API */
  dec2hex: (e) => {
    const t = Math.round(e).toString(16);
    return t.length > 1 ? t : `0${t}`;
  }
}, Rm = Im, Lm = {
  channel: Cm,
  lang: Am,
  unit: Rm
}, xe = Lm, Or = {};
for (let e = 0; e <= 255; e++)
  Or[e] = xe.unit.dec2hex(e);
const ot = {
  ALL: 0,
  RGB: 1,
  HSL: 2
};
class Om {
  constructor() {
    this.type = ot.ALL;
  }
  /* API */
  get() {
    return this.type;
  }
  set(t) {
    if (this.type && this.type !== t)
      throw new Error("Cannot change both RGB and HSL channels at the same time");
    this.type = t;
  }
  reset() {
    this.type = ot.ALL;
  }
  is(t) {
    return this.type === t;
  }
}
const Nm = Om;
class Mm {
  /* CONSTRUCTOR */
  constructor(t, r) {
    this.color = r, this.changed = !1, this.data = t, this.type = new Nm();
  }
  /* API */
  set(t, r) {
    return this.color = r, this.changed = !1, this.data = t, this.type.type = ot.ALL, this;
  }
  /* HELPERS */
  _ensureHSL() {
    const t = this.data, { h: r, s: n, l: i } = t;
    r === void 0 && (t.h = xe.channel.rgb2hsl(t, "h")), n === void 0 && (t.s = xe.channel.rgb2hsl(t, "s")), i === void 0 && (t.l = xe.channel.rgb2hsl(t, "l"));
  }
  _ensureRGB() {
    const t = this.data, { r, g: n, b: i } = t;
    r === void 0 && (t.r = xe.channel.hsl2rgb(t, "r")), n === void 0 && (t.g = xe.channel.hsl2rgb(t, "g")), i === void 0 && (t.b = xe.channel.hsl2rgb(t, "b"));
  }
  /* GETTERS */
  get r() {
    const t = this.data, r = t.r;
    return !this.type.is(ot.HSL) && r !== void 0 ? r : (this._ensureHSL(), xe.channel.hsl2rgb(t, "r"));
  }
  get g() {
    const t = this.data, r = t.g;
    return !this.type.is(ot.HSL) && r !== void 0 ? r : (this._ensureHSL(), xe.channel.hsl2rgb(t, "g"));
  }
  get b() {
    const t = this.data, r = t.b;
    return !this.type.is(ot.HSL) && r !== void 0 ? r : (this._ensureHSL(), xe.channel.hsl2rgb(t, "b"));
  }
  get h() {
    const t = this.data, r = t.h;
    return !this.type.is(ot.RGB) && r !== void 0 ? r : (this._ensureRGB(), xe.channel.rgb2hsl(t, "h"));
  }
  get s() {
    const t = this.data, r = t.s;
    return !this.type.is(ot.RGB) && r !== void 0 ? r : (this._ensureRGB(), xe.channel.rgb2hsl(t, "s"));
  }
  get l() {
    const t = this.data, r = t.l;
    return !this.type.is(ot.RGB) && r !== void 0 ? r : (this._ensureRGB(), xe.channel.rgb2hsl(t, "l"));
  }
  get a() {
    return this.data.a;
  }
  /* SETTERS */
  set r(t) {
    this.type.set(ot.RGB), this.changed = !0, this.data.r = t;
  }
  set g(t) {
    this.type.set(ot.RGB), this.changed = !0, this.data.g = t;
  }
  set b(t) {
    this.type.set(ot.RGB), this.changed = !0, this.data.b = t;
  }
  set h(t) {
    this.type.set(ot.HSL), this.changed = !0, this.data.h = t;
  }
  set s(t) {
    this.type.set(ot.HSL), this.changed = !0, this.data.s = t;
  }
  set l(t) {
    this.type.set(ot.HSL), this.changed = !0, this.data.l = t;
  }
  set a(t) {
    this.changed = !0, this.data.a = t;
  }
}
const Bm = Mm, Dm = new Bm({ r: 0, g: 0, b: 0, a: 0 }, "transparent"), Va = Dm, Wu = {
  /* VARIABLES */
  re: /^#((?:[a-f0-9]{2}){2,4}|[a-f0-9]{3})$/i,
  /* API */
  parse: (e) => {
    if (e.charCodeAt(0) !== 35)
      return;
    const t = e.match(Wu.re);
    if (!t)
      return;
    const r = t[1], n = parseInt(r, 16), i = r.length, a = i % 4 === 0, s = i > 4, o = s ? 1 : 17, l = s ? 8 : 4, u = a ? 0 : -1, d = s ? 255 : 15;
    return Va.set({
      r: (n >> l * (u + 3) & d) * o,
      g: (n >> l * (u + 2) & d) * o,
      b: (n >> l * (u + 1) & d) * o,
      a: a ? (n & d) * o / 255 : 1
    }, e);
  },
  stringify: (e) => {
    const { r: t, g: r, b: n, a: i } = e;
    return i < 1 ? `#${Or[Math.round(t)]}${Or[Math.round(r)]}${Or[Math.round(n)]}${Or[Math.round(i * 255)]}` : `#${Or[Math.round(t)]}${Or[Math.round(r)]}${Or[Math.round(n)]}`;
  }
}, Zn = Wu, ea = {
  /* VARIABLES */
  re: /^hsla?\(\s*?(-?(?:\d+(?:\.\d+)?|(?:\.\d+))(?:e-?\d+)?(?:deg|grad|rad|turn)?)\s*?(?:,|\s)\s*?(-?(?:\d+(?:\.\d+)?|(?:\.\d+))(?:e-?\d+)?%)\s*?(?:,|\s)\s*?(-?(?:\d+(?:\.\d+)?|(?:\.\d+))(?:e-?\d+)?%)(?:\s*?(?:,|\/)\s*?\+?(-?(?:\d+(?:\.\d+)?|(?:\.\d+))(?:e-?\d+)?(%)?))?\s*?\)$/i,
  hueRe: /^(.+?)(deg|grad|rad|turn)$/i,
  /* HELPERS */
  _hue2deg: (e) => {
    const t = e.match(ea.hueRe);
    if (t) {
      const [, r, n] = t;
      switch (n) {
        case "grad":
          return xe.channel.clamp.h(parseFloat(r) * 0.9);
        case "rad":
          return xe.channel.clamp.h(parseFloat(r) * 180 / Math.PI);
        case "turn":
          return xe.channel.clamp.h(parseFloat(r) * 360);
      }
    }
    return xe.channel.clamp.h(parseFloat(e));
  },
  /* API */
  parse: (e) => {
    const t = e.charCodeAt(0);
    if (t !== 104 && t !== 72)
      return;
    const r = e.match(ea.re);
    if (!r)
      return;
    const [, n, i, a, s, o] = r;
    return Va.set({
      h: ea._hue2deg(n),
      s: xe.channel.clamp.s(parseFloat(i)),
      l: xe.channel.clamp.l(parseFloat(a)),
      a: s ? xe.channel.clamp.a(o ? parseFloat(s) / 100 : parseFloat(s)) : 1
    }, e);
  },
  stringify: (e) => {
    const { h: t, s: r, l: n, a: i } = e;
    return i < 1 ? `hsla(${xe.lang.round(t)}, ${xe.lang.round(r)}%, ${xe.lang.round(n)}%, ${i})` : `hsl(${xe.lang.round(t)}, ${xe.lang.round(r)}%, ${xe.lang.round(n)}%)`;
  }
}, zi = ea, ta = {
  /* VARIABLES */
  colors: {
    aliceblue: "#f0f8ff",
    antiquewhite: "#faebd7",
    aqua: "#00ffff",
    aquamarine: "#7fffd4",
    azure: "#f0ffff",
    beige: "#f5f5dc",
    bisque: "#ffe4c4",
    black: "#000000",
    blanchedalmond: "#ffebcd",
    blue: "#0000ff",
    blueviolet: "#8a2be2",
    brown: "#a52a2a",
    burlywood: "#deb887",
    cadetblue: "#5f9ea0",
    chartreuse: "#7fff00",
    chocolate: "#d2691e",
    coral: "#ff7f50",
    cornflowerblue: "#6495ed",
    cornsilk: "#fff8dc",
    crimson: "#dc143c",
    cyanaqua: "#00ffff",
    darkblue: "#00008b",
    darkcyan: "#008b8b",
    darkgoldenrod: "#b8860b",
    darkgray: "#a9a9a9",
    darkgreen: "#006400",
    darkgrey: "#a9a9a9",
    darkkhaki: "#bdb76b",
    darkmagenta: "#8b008b",
    darkolivegreen: "#556b2f",
    darkorange: "#ff8c00",
    darkorchid: "#9932cc",
    darkred: "#8b0000",
    darksalmon: "#e9967a",
    darkseagreen: "#8fbc8f",
    darkslateblue: "#483d8b",
    darkslategray: "#2f4f4f",
    darkslategrey: "#2f4f4f",
    darkturquoise: "#00ced1",
    darkviolet: "#9400d3",
    deeppink: "#ff1493",
    deepskyblue: "#00bfff",
    dimgray: "#696969",
    dimgrey: "#696969",
    dodgerblue: "#1e90ff",
    firebrick: "#b22222",
    floralwhite: "#fffaf0",
    forestgreen: "#228b22",
    fuchsia: "#ff00ff",
    gainsboro: "#dcdcdc",
    ghostwhite: "#f8f8ff",
    gold: "#ffd700",
    goldenrod: "#daa520",
    gray: "#808080",
    green: "#008000",
    greenyellow: "#adff2f",
    grey: "#808080",
    honeydew: "#f0fff0",
    hotpink: "#ff69b4",
    indianred: "#cd5c5c",
    indigo: "#4b0082",
    ivory: "#fffff0",
    khaki: "#f0e68c",
    lavender: "#e6e6fa",
    lavenderblush: "#fff0f5",
    lawngreen: "#7cfc00",
    lemonchiffon: "#fffacd",
    lightblue: "#add8e6",
    lightcoral: "#f08080",
    lightcyan: "#e0ffff",
    lightgoldenrodyellow: "#fafad2",
    lightgray: "#d3d3d3",
    lightgreen: "#90ee90",
    lightgrey: "#d3d3d3",
    lightpink: "#ffb6c1",
    lightsalmon: "#ffa07a",
    lightseagreen: "#20b2aa",
    lightskyblue: "#87cefa",
    lightslategray: "#778899",
    lightslategrey: "#778899",
    lightsteelblue: "#b0c4de",
    lightyellow: "#ffffe0",
    lime: "#00ff00",
    limegreen: "#32cd32",
    linen: "#faf0e6",
    magenta: "#ff00ff",
    maroon: "#800000",
    mediumaquamarine: "#66cdaa",
    mediumblue: "#0000cd",
    mediumorchid: "#ba55d3",
    mediumpurple: "#9370db",
    mediumseagreen: "#3cb371",
    mediumslateblue: "#7b68ee",
    mediumspringgreen: "#00fa9a",
    mediumturquoise: "#48d1cc",
    mediumvioletred: "#c71585",
    midnightblue: "#191970",
    mintcream: "#f5fffa",
    mistyrose: "#ffe4e1",
    moccasin: "#ffe4b5",
    navajowhite: "#ffdead",
    navy: "#000080",
    oldlace: "#fdf5e6",
    olive: "#808000",
    olivedrab: "#6b8e23",
    orange: "#ffa500",
    orangered: "#ff4500",
    orchid: "#da70d6",
    palegoldenrod: "#eee8aa",
    palegreen: "#98fb98",
    paleturquoise: "#afeeee",
    palevioletred: "#db7093",
    papayawhip: "#ffefd5",
    peachpuff: "#ffdab9",
    peru: "#cd853f",
    pink: "#ffc0cb",
    plum: "#dda0dd",
    powderblue: "#b0e0e6",
    purple: "#800080",
    rebeccapurple: "#663399",
    red: "#ff0000",
    rosybrown: "#bc8f8f",
    royalblue: "#4169e1",
    saddlebrown: "#8b4513",
    salmon: "#fa8072",
    sandybrown: "#f4a460",
    seagreen: "#2e8b57",
    seashell: "#fff5ee",
    sienna: "#a0522d",
    silver: "#c0c0c0",
    skyblue: "#87ceeb",
    slateblue: "#6a5acd",
    slategray: "#708090",
    slategrey: "#708090",
    snow: "#fffafa",
    springgreen: "#00ff7f",
    tan: "#d2b48c",
    teal: "#008080",
    thistle: "#d8bfd8",
    transparent: "#00000000",
    turquoise: "#40e0d0",
    violet: "#ee82ee",
    wheat: "#f5deb3",
    white: "#ffffff",
    whitesmoke: "#f5f5f5",
    yellow: "#ffff00",
    yellowgreen: "#9acd32"
  },
  /* API */
  parse: (e) => {
    e = e.toLowerCase();
    const t = ta.colors[e];
    if (t)
      return Zn.parse(t);
  },
  stringify: (e) => {
    const t = Zn.stringify(e);
    for (const r in ta.colors)
      if (ta.colors[r] === t)
        return r;
  }
}, $l = ta, ju = {
  /* VARIABLES */
  re: /^rgba?\(\s*?(-?(?:\d+(?:\.\d+)?|(?:\.\d+))(?:e\d+)?(%?))\s*?(?:,|\s)\s*?(-?(?:\d+(?:\.\d+)?|(?:\.\d+))(?:e\d+)?(%?))\s*?(?:,|\s)\s*?(-?(?:\d+(?:\.\d+)?|(?:\.\d+))(?:e\d+)?(%?))(?:\s*?(?:,|\/)\s*?\+?(-?(?:\d+(?:\.\d+)?|(?:\.\d+))(?:e\d+)?(%?)))?\s*?\)$/i,
  /* API */
  parse: (e) => {
    const t = e.charCodeAt(0);
    if (t !== 114 && t !== 82)
      return;
    const r = e.match(ju.re);
    if (!r)
      return;
    const [, n, i, a, s, o, l, u, d] = r;
    return Va.set({
      r: xe.channel.clamp.r(i ? parseFloat(n) * 2.55 : parseFloat(n)),
      g: xe.channel.clamp.g(s ? parseFloat(a) * 2.55 : parseFloat(a)),
      b: xe.channel.clamp.b(l ? parseFloat(o) * 2.55 : parseFloat(o)),
      a: u ? xe.channel.clamp.a(d ? parseFloat(u) / 100 : parseFloat(u)) : 1
    }, e);
  },
  stringify: (e) => {
    const { r: t, g: r, b: n, a: i } = e;
    return i < 1 ? `rgba(${xe.lang.round(t)}, ${xe.lang.round(r)}, ${xe.lang.round(n)}, ${xe.lang.round(i)})` : `rgb(${xe.lang.round(t)}, ${xe.lang.round(r)}, ${xe.lang.round(n)})`;
  }
}, Pi = ju, Fm = {
  /* VARIABLES */
  format: {
    keyword: $l,
    hex: Zn,
    rgb: Pi,
    rgba: Pi,
    hsl: zi,
    hsla: zi
  },
  /* API */
  parse: (e) => {
    if (typeof e != "string")
      return e;
    const t = Zn.parse(e) || Pi.parse(e) || zi.parse(e) || $l.parse(e);
    if (t)
      return t;
    throw new Error(`Unsupported color format: "${e}"`);
  },
  stringify: (e) => !e.changed && e.color ? e.color : e.type.is(ot.HSL) || e.data.r === void 0 ? zi.stringify(e) : e.a < 1 || !Number.isInteger(e.r) || !Number.isInteger(e.g) || !Number.isInteger(e.b) ? Pi.stringify(e) : Zn.stringify(e)
}, kr = Fm, $m = (e, t) => {
  const r = kr.parse(e);
  for (const n in t)
    r[n] = xe.channel.clamp[n](t[n]);
  return kr.stringify(r);
}, Yu = $m, zm = (e, t, r = 0, n = 1) => {
  if (typeof e != "number")
    return Yu(e, { a: t });
  const i = Va.set({
    r: xe.channel.clamp.r(e),
    g: xe.channel.clamp.g(t),
    b: xe.channel.clamp.b(r),
    a: xe.channel.clamp.a(n)
  });
  return kr.stringify(i);
}, Jn = zm, Pm = (e, t, r) => {
  const n = kr.parse(e), i = n[t], a = xe.channel.clamp[t](i + r);
  return i !== a && (n[t] = a), kr.stringify(n);
}, Vu = Pm, Um = (e, t) => Vu(e, "l", t), pe = Um, Hm = (e, t) => Vu(e, "l", -t), be = Hm, qm = (e, t) => {
  const r = kr.parse(e), n = {};
  for (const i in t)
    t[i] && (n[i] = r[i] + t[i]);
  return Yu(e, n);
}, O = qm, Gm = (e, t, r = 50) => {
  const { r: n, g: i, b: a, a: s } = kr.parse(e), { r: o, g: l, b: u, a: d } = kr.parse(t), p = r / 100, b = p * 2 - 1, m = s - d, k = ((b * m === -1 ? b : (b + m) / (1 + b * m)) + 1) / 2, L = 1 - k, A = n * k + o * L, v = i * k + l * L, S = a * k + u * L, C = s * p + d * (1 - p);
  return Jn(A, v, S, C);
}, Wm = Gm, jm = (e, t = 100) => {
  const r = kr.parse(e);
  return r.r = 255 - r.r, r.g = 255 - r.g, r.b = 255 - r.b, Wm(r, e, t);
}, X = jm, pr = {
  trace: 0,
  debug: 1,
  info: 2,
  warn: 3,
  error: 4,
  fatal: 5
}, re = {
  trace: (...e) => {
  },
  debug: (...e) => {
  },
  info: (...e) => {
  },
  warn: (...e) => {
  },
  error: (...e) => {
  },
  fatal: (...e) => {
  }
}, n0 = function(e = "fatal") {
  let t = pr.fatal;
  typeof e == "string" ? (e = e.toLowerCase(), e in pr && (t = pr[e])) : typeof e == "number" && (t = e), re.trace = () => {
  }, re.debug = () => {
  }, re.info = () => {
  }, re.warn = () => {
  }, re.error = () => {
  }, re.fatal = () => {
  }, t <= pr.fatal && (re.fatal = console.error ? console.error.bind(console, Rt("FATAL"), "color: orange") : console.log.bind(console, "\x1B[35m", Rt("FATAL"))), t <= pr.error && (re.error = console.error ? console.error.bind(console, Rt("ERROR"), "color: orange") : console.log.bind(console, "\x1B[31m", Rt("ERROR"))), t <= pr.warn && (re.warn = console.warn ? console.warn.bind(console, Rt("WARN"), "color: orange") : console.log.bind(console, "\x1B[33m", Rt("WARN"))), t <= pr.info && (re.info = console.info ? console.info.bind(console, Rt("INFO"), "color: lightblue") : console.log.bind(console, "\x1B[34m", Rt("INFO"))), t <= pr.debug && (re.debug = console.debug ? console.debug.bind(console, Rt("DEBUG"), "color: lightgreen") : console.log.bind(console, "\x1B[32m", Rt("DEBUG"))), t <= pr.trace && (re.trace = console.debug ? console.debug.bind(console, Rt("TRACE"), "color: lightgreen") : console.log.bind(console, "\x1B[32m", Rt("TRACE")));
}, Rt = (e) => `%c${Tm().format("ss.SSS")} : ${e} : `, Ym = (e) => e ? Ku(e).replace(/\\n/g, "#br#").split("#br#") : [""], Xu = (e) => xa.sanitize(e), zl = (e, t) => {
  var r;
  if (((r = t.flowchart) == null ? void 0 : r.htmlLabels) !== !1) {
    const n = t.securityLevel;
    n === "antiscript" || n === "strict" ? e = Xu(e) : n !== "loose" && (e = Ku(e), e = e.replace(/</g, "&lt;").replace(/>/g, "&gt;"), e = e.replace(/=/g, "&equals;"), e = Zm(e));
  }
  return e;
}, ii = (e, t) => e && (t.dompurifyConfig ? e = xa.sanitize(zl(e, t), t.dompurifyConfig).toString() : e = xa.sanitize(zl(e, t), {
  FORBID_TAGS: ["style"]
}).toString(), e), Vm = (e, t) => typeof e == "string" ? ii(e, t) : e.flat().map((r) => ii(r, t)), Xa = /<br\s*\/?>/gi, Xm = (e) => Xa.test(e), Km = (e) => e.split(Xa), Zm = (e) => e.replace(/#br#/g, "<br/>"), Ku = (e) => e.replace(Xa, "#br#"), Jm = (e) => {
  let t = "";
  return e && (t = window.location.protocol + "//" + window.location.host + window.location.pathname + window.location.search, t = t.replaceAll(/\(/g, "\\("), t = t.replaceAll(/\)/g, "\\)")), t;
}, Zu = (e) => !(e === !1 || ["false", "null", "0"].includes(String(e).trim().toLowerCase())), Qm = function(e) {
  let t = e;
  if (e.split("~").length - 1 >= 2) {
    let r = t;
    do
      t = r, r = t.replace(/~([^\s,:;]+)~/, "<$1>");
    while (r != t);
    return Qm(r);
  } else
    return t;
}, i0 = {
  getRows: Ym,
  sanitizeText: ii,
  sanitizeTextOrArray: Vm,
  hasBreaks: Xm,
  splitBreaks: Km,
  lineBreakRegex: Xa,
  removeScript: Xu,
  getUrl: Jm,
  evaluate: Zu
}, ft = (e, t) => t ? O(e, { s: -40, l: 10 }) : O(e, { s: -40, l: -10 }), Ka = "#ffffff", Za = "#f2f2f2";
let eg = class {
  constructor() {
    this.background = "#f4f4f4", this.primaryColor = "#fff4dd", this.noteBkgColor = "#fff5ad", this.noteTextColor = "#333", this.THEME_COLOR_LIMIT = 12, this.fontFamily = '"trebuchet ms", verdana, arial, sans-serif', this.fontSize = "16px";
  }
  updateColors() {
    if (this.primaryTextColor = this.primaryTextColor || (this.darkMode ? "#eee" : "#333"), this.secondaryColor = this.secondaryColor || O(this.primaryColor, { h: -120 }), this.tertiaryColor = this.tertiaryColor || O(this.primaryColor, { h: 180, l: 5 }), this.primaryBorderColor = this.primaryBorderColor || ft(this.primaryColor, this.darkMode), this.secondaryBorderColor = this.secondaryBorderColor || ft(this.secondaryColor, this.darkMode), this.tertiaryBorderColor = this.tertiaryBorderColor || ft(this.tertiaryColor, this.darkMode), this.noteBorderColor = this.noteBorderColor || ft(this.noteBkgColor, this.darkMode), this.noteBkgColor = this.noteBkgColor || "#fff5ad", this.noteTextColor = this.noteTextColor || "#333", this.secondaryTextColor = this.secondaryTextColor || X(this.secondaryColor), this.tertiaryTextColor = this.tertiaryTextColor || X(this.tertiaryColor), this.lineColor = this.lineColor || X(this.background), this.textColor = this.textColor || this.primaryTextColor, this.nodeBkg = this.nodeBkg || this.primaryColor, this.mainBkg = this.mainBkg || this.primaryColor, this.nodeBorder = this.nodeBorder || this.primaryBorderColor, this.clusterBkg = this.clusterBkg || this.tertiaryColor, this.clusterBorder = this.clusterBorder || this.tertiaryBorderColor, this.defaultLinkColor = this.defaultLinkColor || this.lineColor, this.titleColor = this.titleColor || this.tertiaryTextColor, this.edgeLabelBackground = this.edgeLabelBackground || (this.darkMode ? be(this.secondaryColor, 30) : this.secondaryColor), this.nodeTextColor = this.nodeTextColor || this.primaryTextColor, this.actorBorder = this.actorBorder || this.primaryBorderColor, this.actorBkg = this.actorBkg || this.mainBkg, this.actorTextColor = this.actorTextColor || this.primaryTextColor, this.actorLineColor = this.actorLineColor || "grey", this.labelBoxBkgColor = this.labelBoxBkgColor || this.actorBkg, this.signalColor = this.signalColor || this.textColor, this.signalTextColor = this.signalTextColor || this.textColor, this.labelBoxBorderColor = this.labelBoxBorderColor || this.actorBorder, this.labelTextColor = this.labelTextColor || this.actorTextColor, this.loopTextColor = this.loopTextColor || this.actorTextColor, this.activationBorderColor = this.activationBorderColor || be(this.secondaryColor, 10), this.activationBkgColor = this.activationBkgColor || this.secondaryColor, this.sequenceNumberColor = this.sequenceNumberColor || X(this.lineColor), this.sectionBkgColor = this.sectionBkgColor || this.tertiaryColor, this.altSectionBkgColor = this.altSectionBkgColor || "white", this.sectionBkgColor = this.sectionBkgColor || this.secondaryColor, this.sectionBkgColor2 = this.sectionBkgColor2 || this.primaryColor, this.excludeBkgColor = this.excludeBkgColor || "#eeeeee", this.taskBorderColor = this.taskBorderColor || this.primaryBorderColor, this.taskBkgColor = this.taskBkgColor || this.primaryColor, this.activeTaskBorderColor = this.activeTaskBorderColor || this.primaryColor, this.activeTaskBkgColor = this.activeTaskBkgColor || pe(this.primaryColor, 23), this.gridColor = this.gridColor || "lightgrey", this.doneTaskBkgColor = this.doneTaskBkgColor || "lightgrey", this.doneTaskBorderColor = this.doneTaskBorderColor || "grey", this.critBorderColor = this.critBorderColor || "#ff8888", this.critBkgColor = this.critBkgColor || "red", this.todayLineColor = this.todayLineColor || "red", this.taskTextColor = this.taskTextColor || this.textColor, this.taskTextOutsideColor = this.taskTextOutsideColor || this.textColor, this.taskTextLightColor = this.taskTextLightColor || this.textColor, this.taskTextColor = this.taskTextColor || this.primaryTextColor, this.taskTextDarkColor = this.taskTextDarkColor || this.textColor, this.taskTextClickableColor = this.taskTextClickableColor || "#003163", this.personBorder = this.personBorder || this.primaryBorderColor, this.personBkg = this.personBkg || this.mainBkg, this.transitionColor = this.transitionColor || this.lineColor, this.transitionLabelColor = this.transitionLabelColor || this.textColor, this.stateLabelColor = this.stateLabelColor || this.stateBkg || this.primaryTextColor, this.stateBkg = this.stateBkg || this.mainBkg, this.labelBackgroundColor = this.labelBackgroundColor || this.stateBkg, this.compositeBackground = this.compositeBackground || this.background || this.tertiaryColor, this.altBackground = this.altBackground || this.tertiaryColor, this.compositeTitleBackground = this.compositeTitleBackground || this.mainBkg, this.compositeBorder = this.compositeBorder || this.nodeBorder, this.innerEndBackground = this.nodeBorder, this.errorBkgColor = this.errorBkgColor || this.tertiaryColor, this.errorTextColor = this.errorTextColor || this.tertiaryTextColor, this.transitionColor = this.transitionColor || this.lineColor, this.specialStateColor = this.lineColor, this.cScale0 = this.cScale0 || this.primaryColor, this.cScale1 = this.cScale1 || this.secondaryColor, this.cScale2 = this.cScale2 || this.tertiaryColor, this.cScale3 = this.cScale3 || O(this.primaryColor, { h: 30 }), this.cScale4 = this.cScale4 || O(this.primaryColor, { h: 60 }), this.cScale5 = this.cScale5 || O(this.primaryColor, { h: 90 }), this.cScale6 = this.cScale6 || O(this.primaryColor, { h: 120 }), this.cScale7 = this.cScale7 || O(this.primaryColor, { h: 150 }), this.cScale8 = this.cScale8 || O(this.primaryColor, { h: 210, l: 150 }), this.cScale9 = this.cScale9 || O(this.primaryColor, { h: 270 }), this.cScale10 = this.cScale10 || O(this.primaryColor, { h: 300 }), this.cScale11 = this.cScale11 || O(this.primaryColor, { h: 330 }), this.darkMode)
      for (let r = 0; r < this.THEME_COLOR_LIMIT; r++)
        this["cScale" + r] = be(this["cScale" + r], 75);
    else
      for (let r = 0; r < this.THEME_COLOR_LIMIT; r++)
        this["cScale" + r] = be(this["cScale" + r], 25);
    for (let r = 0; r < this.THEME_COLOR_LIMIT; r++)
      this["cScaleInv" + r] = this["cScaleInv" + r] || X(this["cScale" + r]);
    for (let r = 0; r < this.THEME_COLOR_LIMIT; r++)
      this.darkMode ? this["cScalePeer" + r] = this["cScalePeer" + r] || pe(this["cScale" + r], 10) : this["cScalePeer" + r] = this["cScalePeer" + r] || be(this["cScale" + r], 10);
    this.scaleLabelColor = this.scaleLabelColor || this.labelTextColor;
    for (let r = 0; r < this.THEME_COLOR_LIMIT; r++)
      this["cScaleLabel" + r] = this["cScaleLabel" + r] || this.scaleLabelColor;
    const t = this.darkMode ? -4 : -1;
    for (let r = 0; r < 5; r++)
      this["surface" + r] = this["surface" + r] || O(this.mainBkg, { h: 180, s: -15, l: t * (5 + r * 3) }), this["surfacePeer" + r] = this["surfacePeer" + r] || O(this.mainBkg, { h: 180, s: -15, l: t * (8 + r * 3) });
    this.classText = this.classText || this.textColor, this.fillType0 = this.fillType0 || this.primaryColor, this.fillType1 = this.fillType1 || this.secondaryColor, this.fillType2 = this.fillType2 || O(this.primaryColor, { h: 64 }), this.fillType3 = this.fillType3 || O(this.secondaryColor, { h: 64 }), this.fillType4 = this.fillType4 || O(this.primaryColor, { h: -64 }), this.fillType5 = this.fillType5 || O(this.secondaryColor, { h: -64 }), this.fillType6 = this.fillType6 || O(this.primaryColor, { h: 128 }), this.fillType7 = this.fillType7 || O(this.secondaryColor, { h: 128 }), this.pie1 = this.pie1 || this.primaryColor, this.pie2 = this.pie2 || this.secondaryColor, this.pie3 = this.pie3 || this.tertiaryColor, this.pie4 = this.pie4 || O(this.primaryColor, { l: -10 }), this.pie5 = this.pie5 || O(this.secondaryColor, { l: -10 }), this.pie6 = this.pie6 || O(this.tertiaryColor, { l: -10 }), this.pie7 = this.pie7 || O(this.primaryColor, { h: 60, l: -10 }), this.pie8 = this.pie8 || O(this.primaryColor, { h: -60, l: -10 }), this.pie9 = this.pie9 || O(this.primaryColor, { h: 120, l: 0 }), this.pie10 = this.pie10 || O(this.primaryColor, { h: 60, l: -20 }), this.pie11 = this.pie11 || O(this.primaryColor, { h: -60, l: -20 }), this.pie12 = this.pie12 || O(this.primaryColor, { h: 120, l: -10 }), this.pieTitleTextSize = this.pieTitleTextSize || "25px", this.pieTitleTextColor = this.pieTitleTextColor || this.taskTextDarkColor, this.pieSectionTextSize = this.pieSectionTextSize || "17px", this.pieSectionTextColor = this.pieSectionTextColor || this.textColor, this.pieLegendTextSize = this.pieLegendTextSize || "17px", this.pieLegendTextColor = this.pieLegendTextColor || this.taskTextDarkColor, this.pieStrokeColor = this.pieStrokeColor || "black", this.pieStrokeWidth = this.pieStrokeWidth || "2px", this.pieOuterStrokeWidth = this.pieOuterStrokeWidth || "2px", this.pieOuterStrokeColor = this.pieOuterStrokeColor || "black", this.pieOpacity = this.pieOpacity || "0.7", this.requirementBackground = this.requirementBackground || this.primaryColor, this.requirementBorderColor = this.requirementBorderColor || this.primaryBorderColor, this.requirementBorderSize = this.requirementBorderSize || this.primaryBorderColor, this.requirementTextColor = this.requirementTextColor || this.primaryTextColor, this.relationColor = this.relationColor || this.lineColor, this.relationLabelBackground = this.relationLabelBackground || (this.darkMode ? be(this.secondaryColor, 30) : this.secondaryColor), this.relationLabelColor = this.relationLabelColor || this.actorTextColor, this.git0 = this.git0 || this.primaryColor, this.git1 = this.git1 || this.secondaryColor, this.git2 = this.git2 || this.tertiaryColor, this.git3 = this.git3 || O(this.primaryColor, { h: -30 }), this.git4 = this.git4 || O(this.primaryColor, { h: -60 }), this.git5 = this.git5 || O(this.primaryColor, { h: -90 }), this.git6 = this.git6 || O(this.primaryColor, { h: 60 }), this.git7 = this.git7 || O(this.primaryColor, { h: 120 }), this.darkMode ? (this.git0 = pe(this.git0, 25), this.git1 = pe(this.git1, 25), this.git2 = pe(this.git2, 25), this.git3 = pe(this.git3, 25), this.git4 = pe(this.git4, 25), this.git5 = pe(this.git5, 25), this.git6 = pe(this.git6, 25), this.git7 = pe(this.git7, 25)) : (this.git0 = be(this.git0, 25), this.git1 = be(this.git1, 25), this.git2 = be(this.git2, 25), this.git3 = be(this.git3, 25), this.git4 = be(this.git4, 25), this.git5 = be(this.git5, 25), this.git6 = be(this.git6, 25), this.git7 = be(this.git7, 25)), this.gitInv0 = this.gitInv0 || X(this.git0), this.gitInv1 = this.gitInv1 || X(this.git1), this.gitInv2 = this.gitInv2 || X(this.git2), this.gitInv3 = this.gitInv3 || X(this.git3), this.gitInv4 = this.gitInv4 || X(this.git4), this.gitInv5 = this.gitInv5 || X(this.git5), this.gitInv6 = this.gitInv6 || X(this.git6), this.gitInv7 = this.gitInv7 || X(this.git7), this.branchLabelColor = this.branchLabelColor || (this.darkMode ? "black" : this.labelTextColor), this.gitBranchLabel0 = this.gitBranchLabel0 || this.branchLabelColor, this.gitBranchLabel1 = this.gitBranchLabel1 || this.branchLabelColor, this.gitBranchLabel2 = this.gitBranchLabel2 || this.branchLabelColor, this.gitBranchLabel3 = this.gitBranchLabel3 || this.branchLabelColor, this.gitBranchLabel4 = this.gitBranchLabel4 || this.branchLabelColor, this.gitBranchLabel5 = this.gitBranchLabel5 || this.branchLabelColor, this.gitBranchLabel6 = this.gitBranchLabel6 || this.branchLabelColor, this.gitBranchLabel7 = this.gitBranchLabel7 || this.branchLabelColor, this.tagLabelColor = this.tagLabelColor || this.primaryTextColor, this.tagLabelBackground = this.tagLabelBackground || this.primaryColor, this.tagLabelBorder = this.tagBorder || this.primaryBorderColor, this.tagLabelFontSize = this.tagLabelFontSize || "10px", this.commitLabelColor = this.commitLabelColor || this.secondaryTextColor, this.commitLabelBackground = this.commitLabelBackground || this.secondaryColor, this.commitLabelFontSize = this.commitLabelFontSize || "10px", this.attributeBackgroundColorOdd = this.attributeBackgroundColorOdd || Ka, this.attributeBackgroundColorEven = this.attributeBackgroundColorEven || Za;
  }
  calculate(t) {
    if (typeof t != "object") {
      this.updateColors();
      return;
    }
    const r = Object.keys(t);
    r.forEach((n) => {
      this[n] = t[n];
    }), this.updateColors(), r.forEach((n) => {
      this[n] = t[n];
    });
  }
};
const tg = (e) => {
  const t = new eg();
  return t.calculate(e), t;
};
let rg = class {
  constructor() {
    this.background = "#333", this.primaryColor = "#1f2020", this.secondaryColor = pe(this.primaryColor, 16), this.tertiaryColor = O(this.primaryColor, { h: -160 }), this.primaryBorderColor = X(this.background), this.secondaryBorderColor = ft(this.secondaryColor, this.darkMode), this.tertiaryBorderColor = ft(this.tertiaryColor, this.darkMode), this.primaryTextColor = X(this.primaryColor), this.secondaryTextColor = X(this.secondaryColor), this.tertiaryTextColor = X(this.tertiaryColor), this.lineColor = X(this.background), this.textColor = X(this.background), this.mainBkg = "#1f2020", this.secondBkg = "calculated", this.mainContrastColor = "lightgrey", this.darkTextColor = pe(X("#323D47"), 10), this.lineColor = "calculated", this.border1 = "#81B1DB", this.border2 = Jn(255, 255, 255, 0.25), this.arrowheadColor = "calculated", this.fontFamily = '"trebuchet ms", verdana, arial, sans-serif', this.fontSize = "16px", this.labelBackground = "#181818", this.textColor = "#ccc", this.THEME_COLOR_LIMIT = 12, this.nodeBkg = "calculated", this.nodeBorder = "calculated", this.clusterBkg = "calculated", this.clusterBorder = "calculated", this.defaultLinkColor = "calculated", this.titleColor = "#F9FFFE", this.edgeLabelBackground = "calculated", this.actorBorder = "calculated", this.actorBkg = "calculated", this.actorTextColor = "calculated", this.actorLineColor = "calculated", this.signalColor = "calculated", this.signalTextColor = "calculated", this.labelBoxBkgColor = "calculated", this.labelBoxBorderColor = "calculated", this.labelTextColor = "calculated", this.loopTextColor = "calculated", this.noteBorderColor = "calculated", this.noteBkgColor = "#fff5ad", this.noteTextColor = "calculated", this.activationBorderColor = "calculated", this.activationBkgColor = "calculated", this.sequenceNumberColor = "black", this.sectionBkgColor = be("#EAE8D9", 30), this.altSectionBkgColor = "calculated", this.sectionBkgColor2 = "#EAE8D9", this.taskBorderColor = Jn(255, 255, 255, 70), this.taskBkgColor = "calculated", this.taskTextColor = "calculated", this.taskTextLightColor = "calculated", this.taskTextOutsideColor = "calculated", this.taskTextClickableColor = "#003163", this.activeTaskBorderColor = Jn(255, 255, 255, 50), this.activeTaskBkgColor = "#81B1DB", this.gridColor = "calculated", this.doneTaskBkgColor = "calculated", this.doneTaskBorderColor = "grey", this.critBorderColor = "#E83737", this.critBkgColor = "#E83737", this.taskTextDarkColor = "calculated", this.todayLineColor = "#DB5757", this.personBorder = "calculated", this.personBkg = "calculated", this.labelColor = "calculated", this.errorBkgColor = "#a44141", this.errorTextColor = "#ddd";
  }
  updateColors() {
    this.secondBkg = pe(this.mainBkg, 16), this.lineColor = this.mainContrastColor, this.arrowheadColor = this.mainContrastColor, this.nodeBkg = this.mainBkg, this.nodeBorder = this.border1, this.clusterBkg = this.secondBkg, this.clusterBorder = this.border2, this.defaultLinkColor = this.lineColor, this.edgeLabelBackground = pe(this.labelBackground, 25), this.actorBorder = this.border1, this.actorBkg = this.mainBkg, this.actorTextColor = this.mainContrastColor, this.actorLineColor = this.mainContrastColor, this.signalColor = this.mainContrastColor, this.signalTextColor = this.mainContrastColor, this.labelBoxBkgColor = this.actorBkg, this.labelBoxBorderColor = this.actorBorder, this.labelTextColor = this.mainContrastColor, this.loopTextColor = this.mainContrastColor, this.noteBorderColor = this.secondaryBorderColor, this.noteBkgColor = this.secondBkg, this.noteTextColor = this.secondaryTextColor, this.activationBorderColor = this.border1, this.activationBkgColor = this.secondBkg, this.altSectionBkgColor = this.background, this.taskBkgColor = pe(this.mainBkg, 23), this.taskTextColor = this.darkTextColor, this.taskTextLightColor = this.mainContrastColor, this.taskTextOutsideColor = this.taskTextLightColor, this.gridColor = this.mainContrastColor, this.doneTaskBkgColor = this.mainContrastColor, this.taskTextDarkColor = this.darkTextColor, this.transitionColor = this.transitionColor || this.lineColor, this.transitionLabelColor = this.transitionLabelColor || this.textColor, this.stateLabelColor = this.stateLabelColor || this.stateBkg || this.primaryTextColor, this.stateBkg = this.stateBkg || this.mainBkg, this.labelBackgroundColor = this.labelBackgroundColor || this.stateBkg, this.compositeBackground = this.compositeBackground || this.background || this.tertiaryColor, this.altBackground = this.altBackground || "#555", this.compositeTitleBackground = this.compositeTitleBackground || this.mainBkg, this.compositeBorder = this.compositeBorder || this.nodeBorder, this.innerEndBackground = this.primaryBorderColor, this.specialStateColor = "#f4f4f4", this.errorBkgColor = this.errorBkgColor || this.tertiaryColor, this.errorTextColor = this.errorTextColor || this.tertiaryTextColor, this.fillType0 = this.primaryColor, this.fillType1 = this.secondaryColor, this.fillType2 = O(this.primaryColor, { h: 64 }), this.fillType3 = O(this.secondaryColor, { h: 64 }), this.fillType4 = O(this.primaryColor, { h: -64 }), this.fillType5 = O(this.secondaryColor, { h: -64 }), this.fillType6 = O(this.primaryColor, { h: 128 }), this.fillType7 = O(this.secondaryColor, { h: 128 }), this.cScale1 = this.cScale1 || "#0b0000", this.cScale2 = this.cScale2 || "#4d1037", this.cScale3 = this.cScale3 || "#3f5258", this.cScale4 = this.cScale4 || "#4f2f1b", this.cScale5 = this.cScale5 || "#6e0a0a", this.cScale6 = this.cScale6 || "#3b0048", this.cScale7 = this.cScale7 || "#995a01", this.cScale8 = this.cScale8 || "#154706", this.cScale9 = this.cScale9 || "#161722", this.cScale10 = this.cScale10 || "#00296f", this.cScale11 = this.cScale11 || "#01629c", this.cScale12 = this.cScale12 || "#010029", this.cScale0 = this.cScale0 || this.primaryColor, this.cScale1 = this.cScale1 || this.secondaryColor, this.cScale2 = this.cScale2 || this.tertiaryColor, this.cScale3 = this.cScale3 || O(this.primaryColor, { h: 30 }), this.cScale4 = this.cScale4 || O(this.primaryColor, { h: 60 }), this.cScale5 = this.cScale5 || O(this.primaryColor, { h: 90 }), this.cScale6 = this.cScale6 || O(this.primaryColor, { h: 120 }), this.cScale7 = this.cScale7 || O(this.primaryColor, { h: 150 }), this.cScale8 = this.cScale8 || O(this.primaryColor, { h: 210 }), this.cScale9 = this.cScale9 || O(this.primaryColor, { h: 270 }), this.cScale10 = this.cScale10 || O(this.primaryColor, { h: 300 }), this.cScale11 = this.cScale11 || O(this.primaryColor, { h: 330 });
    for (let t = 0; t < this.THEME_COLOR_LIMIT; t++)
      this["cScaleInv" + t] = this["cScaleInv" + t] || X(this["cScale" + t]);
    for (let t = 0; t < this.THEME_COLOR_LIMIT; t++)
      this["cScalePeer" + t] = this["cScalePeer" + t] || pe(this["cScale" + t], 10);
    for (let t = 0; t < 5; t++)
      this["surface" + t] = this["surface" + t] || O(this.mainBkg, { h: 30, s: -30, l: -(-10 + t * 4) }), this["surfacePeer" + t] = this["surfacePeer" + t] || O(this.mainBkg, { h: 30, s: -30, l: -(-7 + t * 4) });
    this.scaleLabelColor = this.scaleLabelColor || (this.darkMode ? "black" : this.labelTextColor);
    for (let t = 0; t < this.THEME_COLOR_LIMIT; t++)
      this["cScaleLabel" + t] = this["cScaleLabel" + t] || this.scaleLabelColor;
    for (let t = 0; t < this.THEME_COLOR_LIMIT; t++)
      this["pie" + t] = this["cScale" + t];
    this.pieTitleTextSize = this.pieTitleTextSize || "25px", this.pieTitleTextColor = this.pieTitleTextColor || this.taskTextDarkColor, this.pieSectionTextSize = this.pieSectionTextSize || "17px", this.pieSectionTextColor = this.pieSectionTextColor || this.textColor, this.pieLegendTextSize = this.pieLegendTextSize || "17px", this.pieLegendTextColor = this.pieLegendTextColor || this.taskTextDarkColor, this.pieStrokeColor = this.pieStrokeColor || "black", this.pieStrokeWidth = this.pieStrokeWidth || "2px", this.pieOuterStrokeWidth = this.pieOuterStrokeWidth || "2px", this.pieOuterStrokeColor = this.pieOuterStrokeColor || "black", this.pieOpacity = this.pieOpacity || "0.7", this.classText = this.primaryTextColor, this.requirementBackground = this.requirementBackground || this.primaryColor, this.requirementBorderColor = this.requirementBorderColor || this.primaryBorderColor, this.requirementBorderSize = this.requirementBorderSize || this.primaryBorderColor, this.requirementTextColor = this.requirementTextColor || this.primaryTextColor, this.relationColor = this.relationColor || this.lineColor, this.relationLabelBackground = this.relationLabelBackground || (this.darkMode ? be(this.secondaryColor, 30) : this.secondaryColor), this.relationLabelColor = this.relationLabelColor || this.actorTextColor, this.git0 = pe(this.secondaryColor, 20), this.git1 = pe(this.pie2 || this.secondaryColor, 20), this.git2 = pe(this.pie3 || this.tertiaryColor, 20), this.git3 = pe(this.pie4 || O(this.primaryColor, { h: -30 }), 20), this.git4 = pe(this.pie5 || O(this.primaryColor, { h: -60 }), 20), this.git5 = pe(this.pie6 || O(this.primaryColor, { h: -90 }), 10), this.git6 = pe(this.pie7 || O(this.primaryColor, { h: 60 }), 10), this.git7 = pe(this.pie8 || O(this.primaryColor, { h: 120 }), 20), this.gitInv0 = this.gitInv0 || X(this.git0), this.gitInv1 = this.gitInv1 || X(this.git1), this.gitInv2 = this.gitInv2 || X(this.git2), this.gitInv3 = this.gitInv3 || X(this.git3), this.gitInv4 = this.gitInv4 || X(this.git4), this.gitInv5 = this.gitInv5 || X(this.git5), this.gitInv6 = this.gitInv6 || X(this.git6), this.gitInv7 = this.gitInv7 || X(this.git7), this.tagLabelColor = this.tagLabelColor || this.primaryTextColor, this.tagLabelBackground = this.tagLabelBackground || this.primaryColor, this.tagLabelBorder = this.tagBorder || this.primaryBorderColor, this.tagLabelFontSize = this.tagLabelFontSize || "10px", this.commitLabelColor = this.commitLabelColor || this.secondaryTextColor, this.commitLabelBackground = this.commitLabelBackground || this.secondaryColor, this.commitLabelFontSize = this.commitLabelFontSize || "10px", this.attributeBackgroundColorOdd = this.attributeBackgroundColorOdd || pe(this.background, 12), this.attributeBackgroundColorEven = this.attributeBackgroundColorEven || pe(this.background, 2);
  }
  calculate(t) {
    if (typeof t != "object") {
      this.updateColors();
      return;
    }
    const r = Object.keys(t);
    r.forEach((n) => {
      this[n] = t[n];
    }), this.updateColors(), r.forEach((n) => {
      this[n] = t[n];
    });
  }
};
const ng = (e) => {
  const t = new rg();
  return t.calculate(e), t;
};
let ig = class {
  constructor() {
    this.background = "#f4f4f4", this.primaryColor = "#ECECFF", this.secondaryColor = O(this.primaryColor, { h: 120 }), this.secondaryColor = "#ffffde", this.tertiaryColor = O(this.primaryColor, { h: -160 }), this.primaryBorderColor = ft(this.primaryColor, this.darkMode), this.secondaryBorderColor = ft(this.secondaryColor, this.darkMode), this.tertiaryBorderColor = ft(this.tertiaryColor, this.darkMode), this.primaryTextColor = X(this.primaryColor), this.secondaryTextColor = X(this.secondaryColor), this.tertiaryTextColor = X(this.tertiaryColor), this.lineColor = X(this.background), this.textColor = X(this.background), this.background = "white", this.mainBkg = "#ECECFF", this.secondBkg = "#ffffde", this.lineColor = "#333333", this.border1 = "#9370DB", this.border2 = "#aaaa33", this.arrowheadColor = "#333333", this.fontFamily = '"trebuchet ms", verdana, arial, sans-serif', this.fontSize = "16px", this.labelBackground = "#e8e8e8", this.textColor = "#333", this.THEME_COLOR_LIMIT = 12, this.nodeBkg = "calculated", this.nodeBorder = "calculated", this.clusterBkg = "calculated", this.clusterBorder = "calculated", this.defaultLinkColor = "calculated", this.titleColor = "calculated", this.edgeLabelBackground = "calculated", this.actorBorder = "calculated", this.actorBkg = "calculated", this.actorTextColor = "black", this.actorLineColor = "grey", this.signalColor = "calculated", this.signalTextColor = "calculated", this.labelBoxBkgColor = "calculated", this.labelBoxBorderColor = "calculated", this.labelTextColor = "calculated", this.loopTextColor = "calculated", this.noteBorderColor = "calculated", this.noteBkgColor = "#fff5ad", this.noteTextColor = "calculated", this.activationBorderColor = "#666", this.activationBkgColor = "#f4f4f4", this.sequenceNumberColor = "white", this.sectionBkgColor = "calculated", this.altSectionBkgColor = "calculated", this.sectionBkgColor2 = "calculated", this.excludeBkgColor = "#eeeeee", this.taskBorderColor = "calculated", this.taskBkgColor = "calculated", this.taskTextLightColor = "calculated", this.taskTextColor = this.taskTextLightColor, this.taskTextDarkColor = "calculated", this.taskTextOutsideColor = this.taskTextDarkColor, this.taskTextClickableColor = "calculated", this.activeTaskBorderColor = "calculated", this.activeTaskBkgColor = "calculated", this.gridColor = "calculated", this.doneTaskBkgColor = "calculated", this.doneTaskBorderColor = "calculated", this.critBorderColor = "calculated", this.critBkgColor = "calculated", this.todayLineColor = "calculated", this.sectionBkgColor = Jn(102, 102, 255, 0.49), this.altSectionBkgColor = "white", this.sectionBkgColor2 = "#fff400", this.taskBorderColor = "#534fbc", this.taskBkgColor = "#8a90dd", this.taskTextLightColor = "white", this.taskTextColor = "calculated", this.taskTextDarkColor = "black", this.taskTextOutsideColor = "calculated", this.taskTextClickableColor = "#003163", this.activeTaskBorderColor = "#534fbc", this.activeTaskBkgColor = "#bfc7ff", this.gridColor = "lightgrey", this.doneTaskBkgColor = "lightgrey", this.doneTaskBorderColor = "grey", this.critBorderColor = "#ff8888", this.critBkgColor = "red", this.todayLineColor = "red", this.personBorder = "calculated", this.personBkg = "calculated", this.labelColor = "black", this.errorBkgColor = "#552222", this.errorTextColor = "#552222", this.updateColors();
  }
  updateColors() {
    this.cScale0 = this.cScale0 || this.primaryColor, this.cScale1 = this.cScale1 || this.secondaryColor, this.cScale2 = this.cScale2 || this.tertiaryColor, this.cScale3 = this.cScale3 || O(this.primaryColor, { h: 30 }), this.cScale4 = this.cScale4 || O(this.primaryColor, { h: 60 }), this.cScale5 = this.cScale5 || O(this.primaryColor, { h: 90 }), this.cScale6 = this.cScale6 || O(this.primaryColor, { h: 120 }), this.cScale7 = this.cScale7 || O(this.primaryColor, { h: 150 }), this.cScale8 = this.cScale8 || O(this.primaryColor, { h: 210 }), this.cScale9 = this.cScale9 || O(this.primaryColor, { h: 270 }), this.cScale10 = this.cScale10 || O(this.primaryColor, { h: 300 }), this.cScale11 = this.cScale11 || O(this.primaryColor, { h: 330 }), this["cScalePeer1"] = this["cScalePeer1"] || be(this.secondaryColor, 45), this["cScalePeer2"] = this["cScalePeer2"] || be(this.tertiaryColor, 40);
    for (let t = 0; t < this.THEME_COLOR_LIMIT; t++)
      this["cScale" + t] = be(this["cScale" + t], 10), this["cScalePeer" + t] = this["cScalePeer" + t] || be(this["cScale" + t], 25);
    for (let t = 0; t < this.THEME_COLOR_LIMIT; t++)
      this["cScaleInv" + t] = this["cScaleInv" + t] || O(this["cScale" + t], { h: 180 });
    for (let t = 0; t < 5; t++)
      this["surface" + t] = this["surface" + t] || O(this.mainBkg, { h: 30, l: -(5 + t * 5) }), this["surfacePeer" + t] = this["surfacePeer" + t] || O(this.mainBkg, { h: 30, l: -(7 + t * 5) });
    if (this.scaleLabelColor = this.scaleLabelColor !== "calculated" && this.scaleLabelColor ? this.scaleLabelColor : this.labelTextColor, this.labelTextColor !== "calculated") {
      this.cScaleLabel0 = this.cScaleLabel0 || X(this.labelTextColor), this.cScaleLabel3 = this.cScaleLabel3 || X(this.labelTextColor);
      for (let t = 0; t < this.THEME_COLOR_LIMIT; t++)
        this["cScaleLabel" + t] = this["cScaleLabel" + t] || this.labelTextColor;
    }
    this.nodeBkg = this.mainBkg, this.nodeBorder = this.border1, this.clusterBkg = this.secondBkg, this.clusterBorder = this.border2, this.defaultLinkColor = this.lineColor, this.titleColor = this.textColor, this.edgeLabelBackground = this.labelBackground, this.actorBorder = pe(this.border1, 23), this.actorBkg = this.mainBkg, this.labelBoxBkgColor = this.actorBkg, this.signalColor = this.textColor, this.signalTextColor = this.textColor, this.labelBoxBorderColor = this.actorBorder, this.labelTextColor = this.actorTextColor, this.loopTextColor = this.actorTextColor, this.noteBorderColor = this.border2, this.noteTextColor = this.actorTextColor, this.taskTextColor = this.taskTextLightColor, this.taskTextOutsideColor = this.taskTextDarkColor, this.transitionColor = this.transitionColor || this.lineColor, this.transitionLabelColor = this.transitionLabelColor || this.textColor, this.stateLabelColor = this.stateLabelColor || this.stateBkg || this.primaryTextColor, this.stateBkg = this.stateBkg || this.mainBkg, this.labelBackgroundColor = this.labelBackgroundColor || this.stateBkg, this.compositeBackground = this.compositeBackground || this.background || this.tertiaryColor, this.altBackground = this.altBackground || "#f0f0f0", this.compositeTitleBackground = this.compositeTitleBackground || this.mainBkg, this.compositeBorder = this.compositeBorder || this.nodeBorder, this.innerEndBackground = this.nodeBorder, this.specialStateColor = this.lineColor, this.errorBkgColor = this.errorBkgColor || this.tertiaryColor, this.errorTextColor = this.errorTextColor || this.tertiaryTextColor, this.transitionColor = this.transitionColor || this.lineColor, this.classText = this.primaryTextColor, this.fillType0 = this.primaryColor, this.fillType1 = this.secondaryColor, this.fillType2 = O(this.primaryColor, { h: 64 }), this.fillType3 = O(this.secondaryColor, { h: 64 }), this.fillType4 = O(this.primaryColor, { h: -64 }), this.fillType5 = O(this.secondaryColor, { h: -64 }), this.fillType6 = O(this.primaryColor, { h: 128 }), this.fillType7 = O(this.secondaryColor, { h: 128 }), this.pie1 = this.pie1 || this.primaryColor, this.pie2 = this.pie2 || this.secondaryColor, this.pie3 = this.pie3 || O(this.tertiaryColor, { l: -40 }), this.pie4 = this.pie4 || O(this.primaryColor, { l: -10 }), this.pie5 = this.pie5 || O(this.secondaryColor, { l: -30 }), this.pie6 = this.pie6 || O(this.tertiaryColor, { l: -20 }), this.pie7 = this.pie7 || O(this.primaryColor, { h: 60, l: -20 }), this.pie8 = this.pie8 || O(this.primaryColor, { h: -60, l: -40 }), this.pie9 = this.pie9 || O(this.primaryColor, { h: 120, l: -40 }), this.pie10 = this.pie10 || O(this.primaryColor, { h: 60, l: -40 }), this.pie11 = this.pie11 || O(this.primaryColor, { h: -90, l: -40 }), this.pie12 = this.pie12 || O(this.primaryColor, { h: 120, l: -30 }), this.pieTitleTextSize = this.pieTitleTextSize || "25px", this.pieTitleTextColor = this.pieTitleTextColor || this.taskTextDarkColor, this.pieSectionTextSize = this.pieSectionTextSize || "17px", this.pieSectionTextColor = this.pieSectionTextColor || this.textColor, this.pieLegendTextSize = this.pieLegendTextSize || "17px", this.pieLegendTextColor = this.pieLegendTextColor || this.taskTextDarkColor, this.pieStrokeColor = this.pieStrokeColor || "black", this.pieStrokeWidth = this.pieStrokeWidth || "2px", this.pieOuterStrokeWidth = this.pieOuterStrokeWidth || "2px", this.pieOuterStrokeColor = this.pieOuterStrokeColor || "black", this.pieOpacity = this.pieOpacity || "0.7", this.requirementBackground = this.requirementBackground || this.primaryColor, this.requirementBorderColor = this.requirementBorderColor || this.primaryBorderColor, this.requirementBorderSize = this.requirementBorderSize || this.primaryBorderColor, this.requirementTextColor = this.requirementTextColor || this.primaryTextColor, this.relationColor = this.relationColor || this.lineColor, this.relationLabelBackground = this.relationLabelBackground || this.labelBackground, this.relationLabelColor = this.relationLabelColor || this.actorTextColor, this.git0 = this.git0 || this.primaryColor, this.git1 = this.git1 || this.secondaryColor, this.git2 = this.git2 || this.tertiaryColor, this.git3 = this.git3 || O(this.primaryColor, { h: -30 }), this.git4 = this.git4 || O(this.primaryColor, { h: -60 }), this.git5 = this.git5 || O(this.primaryColor, { h: -90 }), this.git6 = this.git6 || O(this.primaryColor, { h: 60 }), this.git7 = this.git7 || O(this.primaryColor, { h: 120 }), this.darkMode ? (this.git0 = pe(this.git0, 25), this.git1 = pe(this.git1, 25), this.git2 = pe(this.git2, 25), this.git3 = pe(this.git3, 25), this.git4 = pe(this.git4, 25), this.git5 = pe(this.git5, 25), this.git6 = pe(this.git6, 25), this.git7 = pe(this.git7, 25)) : (this.git0 = be(this.git0, 25), this.git1 = be(this.git1, 25), this.git2 = be(this.git2, 25), this.git3 = be(this.git3, 25), this.git4 = be(this.git4, 25), this.git5 = be(this.git5, 25), this.git6 = be(this.git6, 25), this.git7 = be(this.git7, 25)), this.gitInv0 = this.gitInv0 || be(X(this.git0), 25), this.gitInv1 = this.gitInv1 || X(this.git1), this.gitInv2 = this.gitInv2 || X(this.git2), this.gitInv3 = this.gitInv3 || X(this.git3), this.gitInv4 = this.gitInv4 || X(this.git4), this.gitInv5 = this.gitInv5 || X(this.git5), this.gitInv6 = this.gitInv6 || X(this.git6), this.gitInv7 = this.gitInv7 || X(this.git7), this.gitBranchLabel0 = this.gitBranchLabel0 || X(this.labelTextColor), this.gitBranchLabel1 = this.gitBranchLabel1 || this.labelTextColor, this.gitBranchLabel2 = this.gitBranchLabel2 || this.labelTextColor, this.gitBranchLabel3 = this.gitBranchLabel3 || X(this.labelTextColor), this.gitBranchLabel4 = this.gitBranchLabel4 || this.labelTextColor, this.gitBranchLabel5 = this.gitBranchLabel5 || this.labelTextColor, this.gitBranchLabel6 = this.gitBranchLabel6 || this.labelTextColor, this.gitBranchLabel7 = this.gitBranchLabel7 || this.labelTextColor, this.tagLabelColor = this.tagLabelColor || this.primaryTextColor, this.tagLabelBackground = this.tagLabelBackground || this.primaryColor, this.tagLabelBorder = this.tagBorder || this.primaryBorderColor, this.tagLabelFontSize = this.tagLabelFontSize || "10px", this.commitLabelColor = this.commitLabelColor || this.secondaryTextColor, this.commitLabelBackground = this.commitLabelBackground || this.secondaryColor, this.commitLabelFontSize = this.commitLabelFontSize || "10px", this.attributeBackgroundColorOdd = this.attributeBackgroundColorOdd || Ka, this.attributeBackgroundColorEven = this.attributeBackgroundColorEven || Za;
  }
  calculate(t) {
    if (typeof t != "object") {
      this.updateColors();
      return;
    }
    const r = Object.keys(t);
    r.forEach((n) => {
      this[n] = t[n];
    }), this.updateColors(), r.forEach((n) => {
      this[n] = t[n];
    });
  }
};
const ag = (e) => {
  const t = new ig();
  return t.calculate(e), t;
};
let sg = class {
  constructor() {
    this.background = "#f4f4f4", this.primaryColor = "#cde498", this.secondaryColor = "#cdffb2", this.background = "white", this.mainBkg = "#cde498", this.secondBkg = "#cdffb2", this.lineColor = "green", this.border1 = "#13540c", this.border2 = "#6eaa49", this.arrowheadColor = "green", this.fontFamily = '"trebuchet ms", verdana, arial, sans-serif', this.fontSize = "16px", this.tertiaryColor = pe("#cde498", 10), this.primaryBorderColor = ft(this.primaryColor, this.darkMode), this.secondaryBorderColor = ft(this.secondaryColor, this.darkMode), this.tertiaryBorderColor = ft(this.tertiaryColor, this.darkMode), this.primaryTextColor = X(this.primaryColor), this.secondaryTextColor = X(this.secondaryColor), this.tertiaryTextColor = X(this.primaryColor), this.lineColor = X(this.background), this.textColor = X(this.background), this.THEME_COLOR_LIMIT = 12, this.nodeBkg = "calculated", this.nodeBorder = "calculated", this.clusterBkg = "calculated", this.clusterBorder = "calculated", this.defaultLinkColor = "calculated", this.titleColor = "#333", this.edgeLabelBackground = "#e8e8e8", this.actorBorder = "calculated", this.actorBkg = "calculated", this.actorTextColor = "black", this.actorLineColor = "grey", this.signalColor = "#333", this.signalTextColor = "#333", this.labelBoxBkgColor = "calculated", this.labelBoxBorderColor = "#326932", this.labelTextColor = "calculated", this.loopTextColor = "calculated", this.noteBorderColor = "calculated", this.noteBkgColor = "#fff5ad", this.noteTextColor = "calculated", this.activationBorderColor = "#666", this.activationBkgColor = "#f4f4f4", this.sequenceNumberColor = "white", this.sectionBkgColor = "#6eaa49", this.altSectionBkgColor = "white", this.sectionBkgColor2 = "#6eaa49", this.excludeBkgColor = "#eeeeee", this.taskBorderColor = "calculated", this.taskBkgColor = "#487e3a", this.taskTextLightColor = "white", this.taskTextColor = "calculated", this.taskTextDarkColor = "black", this.taskTextOutsideColor = "calculated", this.taskTextClickableColor = "#003163", this.activeTaskBorderColor = "calculated", this.activeTaskBkgColor = "calculated", this.gridColor = "lightgrey", this.doneTaskBkgColor = "lightgrey", this.doneTaskBorderColor = "grey", this.critBorderColor = "#ff8888", this.critBkgColor = "red", this.todayLineColor = "red", this.personBorder = "calculated", this.personBkg = "calculated", this.labelColor = "black", this.errorBkgColor = "#552222", this.errorTextColor = "#552222";
  }
  updateColors() {
    this.cScale0 = this.cScale0 || this.primaryColor, this.cScale1 = this.cScale1 || this.secondaryColor, this.cScale2 = this.cScale2 || this.tertiaryColor, this.cScale3 = this.cScale3 || O(this.primaryColor, { h: 30 }), this.cScale4 = this.cScale4 || O(this.primaryColor, { h: 60 }), this.cScale5 = this.cScale5 || O(this.primaryColor, { h: 90 }), this.cScale6 = this.cScale6 || O(this.primaryColor, { h: 120 }), this.cScale7 = this.cScale7 || O(this.primaryColor, { h: 150 }), this.cScale8 = this.cScale8 || O(this.primaryColor, { h: 210 }), this.cScale9 = this.cScale9 || O(this.primaryColor, { h: 270 }), this.cScale10 = this.cScale10 || O(this.primaryColor, { h: 300 }), this.cScale11 = this.cScale11 || O(this.primaryColor, { h: 330 }), this["cScalePeer1"] = this["cScalePeer1"] || be(this.secondaryColor, 45), this["cScalePeer2"] = this["cScalePeer2"] || be(this.tertiaryColor, 40);
    for (let t = 0; t < this.THEME_COLOR_LIMIT; t++)
      this["cScale" + t] = be(this["cScale" + t], 10), this["cScalePeer" + t] = this["cScalePeer" + t] || be(this["cScale" + t], 25);
    for (let t = 0; t < this.THEME_COLOR_LIMIT; t++)
      this["cScaleInv" + t] = this["cScaleInv" + t] || O(this["cScale" + t], { h: 180 });
    this.scaleLabelColor = this.scaleLabelColor !== "calculated" && this.scaleLabelColor ? this.scaleLabelColor : this.labelTextColor;
    for (let t = 0; t < this.THEME_COLOR_LIMIT; t++)
      this["cScaleLabel" + t] = this["cScaleLabel" + t] || this.scaleLabelColor;
    for (let t = 0; t < 5; t++)
      this["surface" + t] = this["surface" + t] || O(this.mainBkg, { h: 30, s: -30, l: -(5 + t * 5) }), this["surfacePeer" + t] = this["surfacePeer" + t] || O(this.mainBkg, { h: 30, s: -30, l: -(8 + t * 5) });
    this.nodeBkg = this.mainBkg, this.nodeBorder = this.border1, this.clusterBkg = this.secondBkg, this.clusterBorder = this.border2, this.defaultLinkColor = this.lineColor, this.actorBorder = be(this.mainBkg, 20), this.actorBkg = this.mainBkg, this.labelBoxBkgColor = this.actorBkg, this.labelTextColor = this.actorTextColor, this.loopTextColor = this.actorTextColor, this.noteBorderColor = this.border2, this.noteTextColor = this.actorTextColor, this.taskBorderColor = this.border1, this.taskTextColor = this.taskTextLightColor, this.taskTextOutsideColor = this.taskTextDarkColor, this.activeTaskBorderColor = this.taskBorderColor, this.activeTaskBkgColor = this.mainBkg, this.transitionColor = this.transitionColor || this.lineColor, this.transitionLabelColor = this.transitionLabelColor || this.textColor, this.stateLabelColor = this.stateLabelColor || this.stateBkg || this.primaryTextColor, this.stateBkg = this.stateBkg || this.mainBkg, this.labelBackgroundColor = this.labelBackgroundColor || this.stateBkg, this.compositeBackground = this.compositeBackground || this.background || this.tertiaryColor, this.altBackground = this.altBackground || "#f0f0f0", this.compositeTitleBackground = this.compositeTitleBackground || this.mainBkg, this.compositeBorder = this.compositeBorder || this.nodeBorder, this.innerEndBackground = this.primaryBorderColor, this.specialStateColor = this.lineColor, this.errorBkgColor = this.errorBkgColor || this.tertiaryColor, this.errorTextColor = this.errorTextColor || this.tertiaryTextColor, this.transitionColor = this.transitionColor || this.lineColor, this.classText = this.primaryTextColor, this.fillType0 = this.primaryColor, this.fillType1 = this.secondaryColor, this.fillType2 = O(this.primaryColor, { h: 64 }), this.fillType3 = O(this.secondaryColor, { h: 64 }), this.fillType4 = O(this.primaryColor, { h: -64 }), this.fillType5 = O(this.secondaryColor, { h: -64 }), this.fillType6 = O(this.primaryColor, { h: 128 }), this.fillType7 = O(this.secondaryColor, { h: 128 }), this.pie1 = this.pie1 || this.primaryColor, this.pie2 = this.pie2 || this.secondaryColor, this.pie3 = this.pie3 || this.tertiaryColor, this.pie4 = this.pie4 || O(this.primaryColor, { l: -30 }), this.pie5 = this.pie5 || O(this.secondaryColor, { l: -30 }), this.pie6 = this.pie6 || O(this.tertiaryColor, { h: 40, l: -40 }), this.pie7 = this.pie7 || O(this.primaryColor, { h: 60, l: -10 }), this.pie8 = this.pie8 || O(this.primaryColor, { h: -60, l: -10 }), this.pie9 = this.pie9 || O(this.primaryColor, { h: 120, l: 0 }), this.pie10 = this.pie10 || O(this.primaryColor, { h: 60, l: -50 }), this.pie11 = this.pie11 || O(this.primaryColor, { h: -60, l: -50 }), this.pie12 = this.pie12 || O(this.primaryColor, { h: 120, l: -50 }), this.pieTitleTextSize = this.pieTitleTextSize || "25px", this.pieTitleTextColor = this.pieTitleTextColor || this.taskTextDarkColor, this.pieSectionTextSize = this.pieSectionTextSize || "17px", this.pieSectionTextColor = this.pieSectionTextColor || this.textColor, this.pieLegendTextSize = this.pieLegendTextSize || "17px", this.pieLegendTextColor = this.pieLegendTextColor || this.taskTextDarkColor, this.pieStrokeColor = this.pieStrokeColor || "black", this.pieStrokeWidth = this.pieStrokeWidth || "2px", this.pieOuterStrokeWidth = this.pieOuterStrokeWidth || "2px", this.pieOuterStrokeColor = this.pieOuterStrokeColor || "black", this.pieOpacity = this.pieOpacity || "0.7", this.requirementBackground = this.requirementBackground || this.primaryColor, this.requirementBorderColor = this.requirementBorderColor || this.primaryBorderColor, this.requirementBorderSize = this.requirementBorderSize || this.primaryBorderColor, this.requirementTextColor = this.requirementTextColor || this.primaryTextColor, this.relationColor = this.relationColor || this.lineColor, this.relationLabelBackground = this.relationLabelBackground || this.edgeLabelBackground, this.relationLabelColor = this.relationLabelColor || this.actorTextColor, this.git0 = this.git0 || this.primaryColor, this.git1 = this.git1 || this.secondaryColor, this.git2 = this.git2 || this.tertiaryColor, this.git3 = this.git3 || O(this.primaryColor, { h: -30 }), this.git4 = this.git4 || O(this.primaryColor, { h: -60 }), this.git5 = this.git5 || O(this.primaryColor, { h: -90 }), this.git6 = this.git6 || O(this.primaryColor, { h: 60 }), this.git7 = this.git7 || O(this.primaryColor, { h: 120 }), this.darkMode ? (this.git0 = pe(this.git0, 25), this.git1 = pe(this.git1, 25), this.git2 = pe(this.git2, 25), this.git3 = pe(this.git3, 25), this.git4 = pe(this.git4, 25), this.git5 = pe(this.git5, 25), this.git6 = pe(this.git6, 25), this.git7 = pe(this.git7, 25)) : (this.git0 = be(this.git0, 25), this.git1 = be(this.git1, 25), this.git2 = be(this.git2, 25), this.git3 = be(this.git3, 25), this.git4 = be(this.git4, 25), this.git5 = be(this.git5, 25), this.git6 = be(this.git6, 25), this.git7 = be(this.git7, 25)), this.gitInv0 = this.gitInv0 || X(this.git0), this.gitInv1 = this.gitInv1 || X(this.git1), this.gitInv2 = this.gitInv2 || X(this.git2), this.gitInv3 = this.gitInv3 || X(this.git3), this.gitInv4 = this.gitInv4 || X(this.git4), this.gitInv5 = this.gitInv5 || X(this.git5), this.gitInv6 = this.gitInv6 || X(this.git6), this.gitInv7 = this.gitInv7 || X(this.git7), this.tagLabelColor = this.tagLabelColor || this.primaryTextColor, this.tagLabelBackground = this.tagLabelBackground || this.primaryColor, this.tagLabelBorder = this.tagBorder || this.primaryBorderColor, this.tagLabelFontSize = this.tagLabelFontSize || "10px", this.commitLabelColor = this.commitLabelColor || this.secondaryTextColor, this.commitLabelBackground = this.commitLabelBackground || this.secondaryColor, this.commitLabelFontSize = this.commitLabelFontSize || "10px", this.attributeBackgroundColorOdd = this.attributeBackgroundColorOdd || Ka, this.attributeBackgroundColorEven = this.attributeBackgroundColorEven || Za;
  }
  calculate(t) {
    if (typeof t != "object") {
      this.updateColors();
      return;
    }
    const r = Object.keys(t);
    r.forEach((n) => {
      this[n] = t[n];
    }), this.updateColors(), r.forEach((n) => {
      this[n] = t[n];
    });
  }
};
const og = (e) => {
  const t = new sg();
  return t.calculate(e), t;
};
class lg {
  constructor() {
    this.primaryColor = "#eee", this.contrast = "#707070", this.secondaryColor = pe(this.contrast, 55), this.background = "#ffffff", this.tertiaryColor = O(this.primaryColor, { h: -160 }), this.primaryBorderColor = ft(this.primaryColor, this.darkMode), this.secondaryBorderColor = ft(this.secondaryColor, this.darkMode), this.tertiaryBorderColor = ft(this.tertiaryColor, this.darkMode), this.primaryTextColor = X(this.primaryColor), this.secondaryTextColor = X(this.secondaryColor), this.tertiaryTextColor = X(this.tertiaryColor), this.lineColor = X(this.background), this.textColor = X(this.background), this.mainBkg = "#eee", this.secondBkg = "calculated", this.lineColor = "#666", this.border1 = "#999", this.border2 = "calculated", this.note = "#ffa", this.text = "#333", this.critical = "#d42", this.done = "#bbb", this.arrowheadColor = "#333333", this.fontFamily = '"trebuchet ms", verdana, arial, sans-serif', this.fontSize = "16px", this.THEME_COLOR_LIMIT = 12, this.nodeBkg = "calculated", this.nodeBorder = "calculated", this.clusterBkg = "calculated", this.clusterBorder = "calculated", this.defaultLinkColor = "calculated", this.titleColor = "calculated", this.edgeLabelBackground = "white", this.actorBorder = "calculated", this.actorBkg = "calculated", this.actorTextColor = "calculated", this.actorLineColor = "calculated", this.signalColor = "calculated", this.signalTextColor = "calculated", this.labelBoxBkgColor = "calculated", this.labelBoxBorderColor = "calculated", this.labelTextColor = "calculated", this.loopTextColor = "calculated", this.noteBorderColor = "calculated", this.noteBkgColor = "calculated", this.noteTextColor = "calculated", this.activationBorderColor = "#666", this.activationBkgColor = "#f4f4f4", this.sequenceNumberColor = "white", this.sectionBkgColor = "calculated", this.altSectionBkgColor = "white", this.sectionBkgColor2 = "calculated", this.excludeBkgColor = "#eeeeee", this.taskBorderColor = "calculated", this.taskBkgColor = "calculated", this.taskTextLightColor = "white", this.taskTextColor = "calculated", this.taskTextDarkColor = "calculated", this.taskTextOutsideColor = "calculated", this.taskTextClickableColor = "#003163", this.activeTaskBorderColor = "calculated", this.activeTaskBkgColor = "calculated", this.gridColor = "calculated", this.doneTaskBkgColor = "calculated", this.doneTaskBorderColor = "calculated", this.critBkgColor = "calculated", this.critBorderColor = "calculated", this.todayLineColor = "calculated", this.personBorder = "calculated", this.personBkg = "calculated", this.labelColor = "black", this.errorBkgColor = "#552222", this.errorTextColor = "#552222";
  }
  updateColors() {
    this.secondBkg = pe(this.contrast, 55), this.border2 = this.contrast, this.cScale0 = this.cScale0 || "#555", this.cScale1 = this.cScale1 || "#F4F4F4", this.cScale2 = this.cScale2 || "#555", this.cScale3 = this.cScale3 || "#BBB", this.cScale4 = this.cScale4 || "#777", this.cScale5 = this.cScale5 || "#999", this.cScale6 = this.cScale6 || "#DDD", this.cScale7 = this.cScale7 || "#FFF", this.cScale8 = this.cScale8 || "#DDD", this.cScale9 = this.cScale9 || "#BBB", this.cScale10 = this.cScale10 || "#999", this.cScale11 = this.cScale11 || "#777";
    for (let t = 0; t < this.THEME_COLOR_LIMIT; t++)
      this["cScaleInv" + t] = this["cScaleInv" + t] || X(this["cScale" + t]);
    for (let t = 0; t < this.THEME_COLOR_LIMIT; t++)
      this.darkMode ? this["cScalePeer" + t] = this["cScalePeer" + t] || pe(this["cScale" + t], 10) : this["cScalePeer" + t] = this["cScalePeer" + t] || be(this["cScale" + t], 10);
    this.scaleLabelColor = this.scaleLabelColor || (this.darkMode ? "black" : this.labelTextColor), this.cScaleLabel0 = this.cScaleLabel0 || this.cScale1, this.cScaleLabel2 = this.cScaleLabel2 || this.cScale1;
    for (let t = 0; t < this.THEME_COLOR_LIMIT; t++)
      this["cScaleLabel" + t] = this["cScaleLabel" + t] || this.scaleLabelColor;
    for (let t = 0; t < 5; t++)
      this["surface" + t] = this["surface" + t] || O(this.mainBkg, { l: -(5 + t * 5) }), this["surfacePeer" + t] = this["surfacePeer" + t] || O(this.mainBkg, { l: -(8 + t * 5) });
    this.nodeBkg = this.mainBkg, this.nodeBorder = this.border1, this.clusterBkg = this.secondBkg, this.clusterBorder = this.border2, this.defaultLinkColor = this.lineColor, this.titleColor = this.text, this.actorBorder = pe(this.border1, 23), this.actorBkg = this.mainBkg, this.actorTextColor = this.text, this.actorLineColor = this.lineColor, this.signalColor = this.text, this.signalTextColor = this.text, this.labelBoxBkgColor = this.actorBkg, this.labelBoxBorderColor = this.actorBorder, this.labelTextColor = this.text, this.loopTextColor = this.text, this.noteBorderColor = "#999", this.noteBkgColor = "#666", this.noteTextColor = "#fff", this.sectionBkgColor = pe(this.contrast, 30), this.sectionBkgColor2 = pe(this.contrast, 30), this.taskBorderColor = be(this.contrast, 10), this.taskBkgColor = this.contrast, this.taskTextColor = this.taskTextLightColor, this.taskTextDarkColor = this.text, this.taskTextOutsideColor = this.taskTextDarkColor, this.activeTaskBorderColor = this.taskBorderColor, this.activeTaskBkgColor = this.mainBkg, this.gridColor = pe(this.border1, 30), this.doneTaskBkgColor = this.done, this.doneTaskBorderColor = this.lineColor, this.critBkgColor = this.critical, this.critBorderColor = be(this.critBkgColor, 10), this.todayLineColor = this.critBkgColor, this.transitionColor = this.transitionColor || "#000", this.transitionLabelColor = this.transitionLabelColor || this.textColor, this.stateLabelColor = this.stateLabelColor || this.stateBkg || this.primaryTextColor, this.stateBkg = this.stateBkg || this.mainBkg, this.labelBackgroundColor = this.labelBackgroundColor || this.stateBkg, this.compositeBackground = this.compositeBackground || this.background || this.tertiaryColor, this.altBackground = this.altBackground || "#f4f4f4", this.compositeTitleBackground = this.compositeTitleBackground || this.mainBkg, this.stateBorder = this.stateBorder || "#000", this.innerEndBackground = this.primaryBorderColor, this.specialStateColor = "#222", this.errorBkgColor = this.errorBkgColor || this.tertiaryColor, this.errorTextColor = this.errorTextColor || this.tertiaryTextColor, this.classText = this.primaryTextColor, this.fillType0 = this.primaryColor, this.fillType1 = this.secondaryColor, this.fillType2 = O(this.primaryColor, { h: 64 }), this.fillType3 = O(this.secondaryColor, { h: 64 }), this.fillType4 = O(this.primaryColor, { h: -64 }), this.fillType5 = O(this.secondaryColor, { h: -64 }), this.fillType6 = O(this.primaryColor, { h: 128 }), this.fillType7 = O(this.secondaryColor, { h: 128 });
    for (let t = 0; t < this.THEME_COLOR_LIMIT; t++)
      this["pie" + t] = this["cScale" + t];
    this.pie12 = this.pie0, this.pieTitleTextSize = this.pieTitleTextSize || "25px", this.pieTitleTextColor = this.pieTitleTextColor || this.taskTextDarkColor, this.pieSectionTextSize = this.pieSectionTextSize || "17px", this.pieSectionTextColor = this.pieSectionTextColor || this.textColor, this.pieLegendTextSize = this.pieLegendTextSize || "17px", this.pieLegendTextColor = this.pieLegendTextColor || this.taskTextDarkColor, this.pieStrokeColor = this.pieStrokeColor || "black", this.pieStrokeWidth = this.pieStrokeWidth || "2px", this.pieOuterStrokeWidth = this.pieOuterStrokeWidth || "2px", this.pieOuterStrokeColor = this.pieOuterStrokeColor || "black", this.pieOpacity = this.pieOpacity || "0.7", this.requirementBackground = this.requirementBackground || this.primaryColor, this.requirementBorderColor = this.requirementBorderColor || this.primaryBorderColor, this.requirementBorderSize = this.requirementBorderSize || this.primaryBorderColor, this.requirementTextColor = this.requirementTextColor || this.primaryTextColor, this.relationColor = this.relationColor || this.lineColor, this.relationLabelBackground = this.relationLabelBackground || this.edgeLabelBackground, this.relationLabelColor = this.relationLabelColor || this.actorTextColor, this.git0 = be(this.pie1, 25) || this.primaryColor, this.git1 = this.pie2 || this.secondaryColor, this.git2 = this.pie3 || this.tertiaryColor, this.git3 = this.pie4 || O(this.primaryColor, { h: -30 }), this.git4 = this.pie5 || O(this.primaryColor, { h: -60 }), this.git5 = this.pie6 || O(this.primaryColor, { h: -90 }), this.git6 = this.pie7 || O(this.primaryColor, { h: 60 }), this.git7 = this.pie8 || O(this.primaryColor, { h: 120 }), this.gitInv0 = this.gitInv0 || X(this.git0), this.gitInv1 = this.gitInv1 || X(this.git1), this.gitInv2 = this.gitInv2 || X(this.git2), this.gitInv3 = this.gitInv3 || X(this.git3), this.gitInv4 = this.gitInv4 || X(this.git4), this.gitInv5 = this.gitInv5 || X(this.git5), this.gitInv6 = this.gitInv6 || X(this.git6), this.gitInv7 = this.gitInv7 || X(this.git7), this.branchLabelColor = this.branchLabelColor || this.labelTextColor, this.gitBranchLabel0 = this.branchLabelColor, this.gitBranchLabel1 = "white", this.gitBranchLabel2 = this.branchLabelColor, this.gitBranchLabel3 = "white", this.gitBranchLabel4 = this.branchLabelColor, this.gitBranchLabel5 = this.branchLabelColor, this.gitBranchLabel6 = this.branchLabelColor, this.gitBranchLabel7 = this.branchLabelColor, this.tagLabelColor = this.tagLabelColor || this.primaryTextColor, this.tagLabelBackground = this.tagLabelBackground || this.primaryColor, this.tagLabelBorder = this.tagBorder || this.primaryBorderColor, this.tagLabelFontSize = this.tagLabelFontSize || "10px", this.commitLabelColor = this.commitLabelColor || this.secondaryTextColor, this.commitLabelBackground = this.commitLabelBackground || this.secondaryColor, this.commitLabelFontSize = this.commitLabelFontSize || "10px", this.attributeBackgroundColorOdd = this.attributeBackgroundColorOdd || Ka, this.attributeBackgroundColorEven = this.attributeBackgroundColorEven || Za;
  }
  calculate(t) {
    if (typeof t != "object") {
      this.updateColors();
      return;
    }
    const r = Object.keys(t);
    r.forEach((n) => {
      this[n] = t[n];
    }), this.updateColors(), r.forEach((n) => {
      this[n] = t[n];
    });
  }
}
const cg = (e) => {
  const t = new lg();
  return t.calculate(e), t;
}, xr = {
  base: {
    getThemeVariables: tg
  },
  dark: {
    getThemeVariables: ng
  },
  default: {
    getThemeVariables: ag
  },
  forest: {
    getThemeVariables: og
  },
  neutral: {
    getThemeVariables: cg
  }
}, Fr = {
  /**
   * Theme , the CSS style sheet
   *
   * | Parameter | Description     | Type   | Required | Values                                         |
   * | --------- | --------------- | ------ | -------- | ---------------------------------------------- |
   * | theme     | Built in Themes | string | Optional | 'default', 'forest', 'dark', 'neutral', 'null' |
   *
   * **Notes:** To disable any pre-defined mermaid theme, use "null".
   *
   * @example
   *
   * ```js
   * {
   *   "theme": "forest",
   *   "themeCSS": ".node rect { fill: red; }"
   * }
   * ```
   */
  theme: "default",
  themeVariables: xr.default.getThemeVariables(),
  themeCSS: void 0,
  /* **maxTextSize** - The maximum allowed size of the users text diagram */
  maxTextSize: 5e4,
  darkMode: !1,
  /**
   * | Parameter  | Description                                            | Type   | Required | Values                      |
   * | ---------- | ------------------------------------------------------ | ------ | -------- | --------------------------- |
   * | fontFamily | specifies the font to be used in the rendered diagrams | string | Required | Any Possible CSS FontFamily |
   *
   * **Notes:** Default value: '"trebuchet ms", verdana, arial, sans-serif;'.
   */
  fontFamily: '"trebuchet ms", verdana, arial, sans-serif;',
  /**
   * | Parameter | Description                                           | Type             | Required | Values                                        |
   * | --------- | ----------------------------------------------------- | ---------------- | -------- | --------------------------------------------- |
   * | logLevel  | This option decides the amount of logging to be used. | string \| number | Required | 'trace','debug','info','warn','error','fatal' |
   *
   * **Notes:**
   *
   * - Trace: 0
   * - Debug: 1
   * - Info: 2
   * - Warn: 3
   * - Error: 4
   * - Fatal: 5 (default)
   */
  logLevel: 5,
  /**
   * | Parameter     | Description                       | Type   | Required | Values                                     |
   * | ------------- | --------------------------------- | ------ | -------- | ------------------------------------------ |
   * | securityLevel | Level of trust for parsed diagram | string | Required | 'sandbox', 'strict', 'loose', 'antiscript' |
   *
   * **Notes**:
   *
   * - **strict**: (**default**) tags in text are encoded, click functionality is disabled
   * - **loose**: tags in text are allowed, click functionality is enabled
   * - **antiscript**: html tags in text are allowed, (only script element is removed), click
   *   functionality is enabled
   * - **sandbox**: With this security level all rendering takes place in a sandboxed iframe. This
   *   prevent any JavaScript from running in the context. This may hinder interactive functionality
   *   of the diagram like scripts, popups in sequence diagram or links to other tabs/targets etc.
   */
  securityLevel: "strict",
  /**
   * | Parameter   | Description                                  | Type    | Required | Values      |
   * | ----------- | -------------------------------------------- | ------- | -------- | ----------- |
   * | startOnLoad | Dictates whether mermaid starts on Page load | boolean | Required | true, false |
   *
   * **Notes:** Default value: true
   */
  startOnLoad: !0,
  /**
   * | Parameter           | Description                                                                  | Type    | Required | Values      |
   * | ------------------- | ---------------------------------------------------------------------------- | ------- | -------- | ----------- |
   * | arrowMarkerAbsolute | Controls whether or arrow markers in html code are absolute paths or anchors | boolean | Required | true, false |
   *
   * **Notes**:
   *
   * This matters if you are using base tag settings.
   *
   * Default value: false
   */
  arrowMarkerAbsolute: !1,
  /**
   * This option controls which currentConfig keys are considered _secure_ and can only be changed
   * via call to mermaidAPI.initialize. Calls to mermaidAPI.reinitialize cannot make changes to the
   * `secure` keys in the current currentConfig. This prevents malicious graph directives from
   * overriding a site's default security.
   *
   * **Notes**:
   *
   * Default value: ['secure', 'securityLevel', 'startOnLoad', 'maxTextSize']
   */
  secure: ["secure", "securityLevel", "startOnLoad", "maxTextSize"],
  /**
   * This option controls if the generated ids of nodes in the SVG are generated randomly or based
   * on a seed. If set to false, the IDs are generated based on the current date and thus are not
   * deterministic. This is the default behavior.
   *
   * **Notes**:
   *
   * This matters if your files are checked into source control e.g. git and should not change unless
   * content is changed.
   *
   * Default value: false
   */
  deterministicIds: !1,
  /**
   * This option is the optional seed for deterministic ids. if set to undefined but
   * deterministicIds is true, a simple number iterator is used. You can set this attribute to base
   * the seed on a static string.
   */
  deterministicIDSeed: void 0,
  /** The object containing configurations specific for flowcharts */
  flowchart: {
    /**
     * ### titleTopMargin
     *
     * | Parameter      | Description                                    | Type    | Required | Values             |
     * | -------------- | ---------------------------------------------- | ------- | -------- | ------------------ |
     * | titleTopMargin | Margin top for the text over the flowchart     | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 25
     */
    titleTopMargin: 25,
    /**
     * | Parameter      | Description                                     | Type    | Required | Values             |
     * | -------------- | ----------------------------------------------- | ------- | -------- | ------------------ |
     * | diagramPadding | Amount of padding around the diagram as a whole | Integer | Required | Any Positive Value |
     *
     * **Notes:**
     *
     * The amount of padding around the diagram as a whole so that embedded diagrams have margins,
     * expressed in pixels
     *
     * Default value: 8
     */
    diagramPadding: 8,
    /**
     * | Parameter  | Description                                                                                  | Type    | Required | Values      |
     * | ---------- | -------------------------------------------------------------------------------------------- | ------- | -------- | ----------- |
     * | htmlLabels | Flag for setting whether or not a html tag should be used for rendering labels on the edges. | boolean | Required | true, false |
     *
     * **Notes:** Default value: true.
     */
    htmlLabels: !0,
    /**
     * | Parameter   | Description                                         | Type    | Required | Values              |
     * | ----------- | --------------------------------------------------- | ------- | -------- | ------------------- |
     * | nodeSpacing | Defines the spacing between nodes on the same level | Integer | Required | Any positive Number |
     *
     * **Notes:**
     *
     * Pertains to horizontal spacing for TB (top to bottom) or BT (bottom to top) graphs, and the
     * vertical spacing for LR as well as RL graphs.**
     *
     * Default value: 50
     */
    nodeSpacing: 50,
    /**
     * | Parameter   | Description                                           | Type    | Required | Values              |
     * | ----------- | ----------------------------------------------------- | ------- | -------- | ------------------- |
     * | rankSpacing | Defines the spacing between nodes on different levels | Integer | Required | Any Positive Number |
     *
     * **Notes**:
     *
     * Pertains to vertical spacing for TB (top to bottom) or BT (bottom to top), and the horizontal
     * spacing for LR as well as RL graphs.
     *
     * Default value 50
     */
    rankSpacing: 50,
    /**
     * | Parameter | Description                                        | Type   | Required | Values                        |
     * | --------- | -------------------------------------------------- | ------ | -------- | ----------------------------- |
     * | curve     | Defines how mermaid renders curves for flowcharts. | string | Required | 'basis', 'linear', 'cardinal' |
     *
     * **Notes:**
     *
     * Default Value: 'basis'
     */
    curve: "basis",
    // Only used in new experimental rendering
    // represents the padding between the labels and the shape
    padding: 15,
    /**
     * | Parameter   | Description | Type    | Required | Values      |
     * | ----------- | ----------- | ------- | -------- | ----------- |
     * | useMaxWidth | See notes   | boolean | 4        | true, false |
     *
     * **Notes:**
     *
     * When this flag is set the height and width is set to 100% and is then scaling with the
     * available space if not the absolute space required is used.
     *
     * Default value: true
     */
    useMaxWidth: !0,
    /**
     * | Parameter       | Description | Type    | Required | Values                  |
     * | --------------- | ----------- | ------- | -------- | ----------------------- |
     * | defaultRenderer | See notes   | boolean | 4        | dagre-d3, dagre-wrapper, elk |
     *
     * **Notes:**
     *
     * Decides which rendering engine that is to be used for the rendering. Legal values are:
     * dagre-d3 dagre-wrapper - wrapper for dagre implemented in mermaid, elk for layout using
     * elkjs
     *
     * Default value: 'dagre-wrapper'
     */
    defaultRenderer: "dagre-wrapper",
    /**
     * | Parameter       | Description | Type    | Required | Values                  |
     * | --------------- | ----------- | ------- | -------- | ----------------------- |
     * | wrappingWidth   | See notes   | number  | 4        | width of nodes where text is wrapped |
     *
     * **Notes:**
     *
     * When using markdown strings the text ius wrapped automatically, this
     * value sets the max width of a text before it continues on a new line.
     * Default value: 'dagre-wrapper'
     */
    wrappingWidth: 200
  },
  /** The object containing configurations specific for sequence diagrams */
  sequence: {
    hideUnusedParticipants: !1,
    /**
     * | Parameter       | Description                  | Type    | Required | Values             |
     * | --------------- | ---------------------------- | ------- | -------- | ------------------ |
     * | activationWidth | Width of the activation rect | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value :10
     */
    activationWidth: 10,
    /**
     * | Parameter      | Description                                          | Type    | Required | Values             |
     * | -------------- | ---------------------------------------------------- | ------- | -------- | ------------------ |
     * | diagramMarginX | Margin to the right and left of the sequence diagram | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 50
     */
    diagramMarginX: 50,
    /**
     * | Parameter      | Description                                       | Type    | Required | Values             |
     * | -------------- | ------------------------------------------------- | ------- | -------- | ------------------ |
     * | diagramMarginY | Margin to the over and under the sequence diagram | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 10
     */
    diagramMarginY: 10,
    /**
     * | Parameter   | Description           | Type    | Required | Values             |
     * | ----------- | --------------------- | ------- | -------- | ------------------ |
     * | actorMargin | Margin between actors | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 50
     */
    actorMargin: 50,
    /**
     * | Parameter | Description          | Type    | Required | Values             |
     * | --------- | -------------------- | ------- | -------- | ------------------ |
     * | width     | Width of actor boxes | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 150
     */
    width: 150,
    /**
     * | Parameter | Description           | Type    | Required | Values             |
     * | --------- | --------------------- | ------- | -------- | ------------------ |
     * | height    | Height of actor boxes | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 65
     */
    height: 65,
    /**
     * | Parameter | Description              | Type    | Required | Values             |
     * | --------- | ------------------------ | ------- | -------- | ------------------ |
     * | boxMargin | Margin around loop boxes | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 10
     */
    boxMargin: 10,
    /**
     * | Parameter     | Description                                  | Type    | Required | Values             |
     * | ------------- | -------------------------------------------- | ------- | -------- | ------------------ |
     * | boxTextMargin | Margin around the text in loop/alt/opt boxes | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 5
     */
    boxTextMargin: 5,
    /**
     * | Parameter  | Description         | Type    | Required | Values             |
     * | ---------- | ------------------- | ------- | -------- | ------------------ |
     * | noteMargin | margin around notes | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 10
     */
    noteMargin: 10,
    /**
     * | Parameter     | Description            | Type    | Required | Values             |
     * | ------------- | ---------------------- | ------- | -------- | ------------------ |
     * | messageMargin | Space between messages | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 35
     */
    messageMargin: 35,
    /**
     * | Parameter    | Description                 | Type   | Required | Values                    |
     * | ------------ | --------------------------- | ------ | -------- | ------------------------- |
     * | messageAlign | Multiline message alignment | string | Required | 'left', 'center', 'right' |
     *
     * **Notes:** Default value: 'center'
     */
    messageAlign: "center",
    /**
     * | Parameter    | Description                 | Type    | Required | Values      |
     * | ------------ | --------------------------- | ------- | -------- | ----------- |
     * | mirrorActors | Mirror actors under diagram | boolean | Required | true, false |
     *
     * **Notes:** Default value: true
     */
    mirrorActors: !0,
    /**
     * | Parameter  | Description                                                             | Type    | Required | Values      |
     * | ---------- | ----------------------------------------------------------------------- | ------- | -------- | ----------- |
     * | forceMenus | forces actor popup menus to always be visible (to support E2E testing). | Boolean | Required | True, False |
     *
     * **Notes:**
     *
     * Default value: false.
     */
    forceMenus: !1,
    /**
     * | Parameter       | Description                                | Type    | Required | Values             |
     * | --------------- | ------------------------------------------ | ------- | -------- | ------------------ |
     * | bottomMarginAdj | Prolongs the edge of the diagram downwards | Integer | Required | Any Positive Value |
     *
     * **Notes:**
     *
     * Depending on css styling this might need adjustment.
     *
     * Default value: 1
     */
    bottomMarginAdj: 1,
    /**
     * | Parameter   | Description | Type    | Required | Values      |
     * | ----------- | ----------- | ------- | -------- | ----------- |
     * | useMaxWidth | See Notes   | boolean | Required | true, false |
     *
     * **Notes:** When this flag is set to true, the height and width is set to 100% and is then
     * scaling with the available space. If set to false, the absolute space required is used.
     *
     * Default value: true
     */
    useMaxWidth: !0,
    /**
     * | Parameter   | Description                          | Type    | Required | Values      |
     * | ----------- | ------------------------------------ | ------- | -------- | ----------- |
     * | rightAngles | display curve arrows as right angles | boolean | Required | true, false |
     *
     * **Notes:**
     *
     * This will display arrows that start and begin at the same node as right angles, rather than a
     * curve
     *
     * Default value: false
     */
    rightAngles: !1,
    /**
     * | Parameter           | Description                     | Type    | Required | Values      |
     * | ------------------- | ------------------------------- | ------- | -------- | ----------- |
     * | showSequenceNumbers | This will show the node numbers | boolean | Required | true, false |
     *
     * **Notes:** Default value: false
     */
    showSequenceNumbers: !1,
    /**
     * | Parameter     | Description                                        | Type    | Required | Values             |
     * | ------------- | -------------------------------------------------- | ------- | -------- | ------------------ |
     * | actorFontSize | This sets the font size of the actor's description | Integer | Require  | Any Positive Value |
     *
     * **Notes:** **Default value 14**..
     */
    actorFontSize: 14,
    /**
     * | Parameter       | Description                                          | Type   | Required | Values                      |
     * | --------------- | ---------------------------------------------------- | ------ | -------- | --------------------------- |
     * | actorFontFamily | This sets the font family of the actor's description | string | Required | Any Possible CSS FontFamily |
     *
     * **Notes:** Default value: "'Open Sans", sans-serif'
     */
    actorFontFamily: '"Open Sans", sans-serif',
    /**
     * This sets the font weight of the actor's description
     *
     * **Notes:** Default value: 400.
     */
    actorFontWeight: 400,
    /**
     * | Parameter    | Description                                     | Type    | Required | Values             |
     * | ------------ | ----------------------------------------------- | ------- | -------- | ------------------ |
     * | noteFontSize | This sets the font size of actor-attached notes | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 14
     */
    noteFontSize: 14,
    /**
     * | Parameter      | Description                                        | Type   | Required | Values                      |
     * | -------------- | -------------------------------------------------- | ------ | -------- | --------------------------- |
     * | noteFontFamily | This sets the font family of actor-attached notes. | string | Required | Any Possible CSS FontFamily |
     *
     * **Notes:** Default value: ''"trebuchet ms", verdana, arial, sans-serif'
     */
    noteFontFamily: '"trebuchet ms", verdana, arial, sans-serif',
    /**
     * This sets the font weight of the note's description
     *
     * **Notes:** Default value: 400
     */
    noteFontWeight: 400,
    /**
     * | Parameter | Description                                          | Type   | Required | Values                    |
     * | --------- | ---------------------------------------------------- | ------ | -------- | ------------------------- |
     * | noteAlign | This sets the text alignment of actor-attached notes | string | required | 'left', 'center', 'right' |
     *
     * **Notes:** Default value: 'center'
     */
    noteAlign: "center",
    /**
     * | Parameter       | Description                               | Type    | Required | Values              |
     * | --------------- | ----------------------------------------- | ------- | -------- | ------------------- |
     * | messageFontSize | This sets the font size of actor messages | Integer | Required | Any Positive Number |
     *
     * **Notes:** Default value: 16
     */
    messageFontSize: 16,
    /**
     * | Parameter         | Description                                 | Type   | Required | Values                      |
     * | ----------------- | ------------------------------------------- | ------ | -------- | --------------------------- |
     * | messageFontFamily | This sets the font family of actor messages | string | Required | Any Possible CSS FontFamily |
     *
     * **Notes:** Default value: '"trebuchet ms", verdana, arial, sans-serif'
     */
    messageFontFamily: '"trebuchet ms", verdana, arial, sans-serif',
    /**
     * This sets the font weight of the message's description
     *
     * **Notes:** Default value: 400.
     */
    messageFontWeight: 400,
    /**
     * This sets the auto-wrap state for the diagram
     *
     * **Notes:** Default value: false.
     */
    wrap: !1,
    /**
     * This sets the auto-wrap padding for the diagram (sides only)
     *
     * **Notes:** Default value: 0.
     */
    wrapPadding: 10,
    /**
     * This sets the width of the loop-box (loop, alt, opt, par)
     *
     * **Notes:** Default value: 50.
     */
    labelBoxWidth: 50,
    /**
     * This sets the height of the loop-box (loop, alt, opt, par)
     *
     * **Notes:** Default value: 20.
     */
    labelBoxHeight: 20,
    messageFont: function() {
      return {
        fontFamily: this.messageFontFamily,
        fontSize: this.messageFontSize,
        fontWeight: this.messageFontWeight
      };
    },
    noteFont: function() {
      return {
        fontFamily: this.noteFontFamily,
        fontSize: this.noteFontSize,
        fontWeight: this.noteFontWeight
      };
    },
    actorFont: function() {
      return {
        fontFamily: this.actorFontFamily,
        fontSize: this.actorFontSize,
        fontWeight: this.actorFontWeight
      };
    }
  },
  /** The object containing configurations specific for gantt diagrams */
  gantt: {
    /**
     * ### titleTopMargin
     *
     * | Parameter      | Description                                    | Type    | Required | Values             |
     * | -------------- | ---------------------------------------------- | ------- | -------- | ------------------ |
     * | titleTopMargin | Margin top for the text over the gantt diagram | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 25
     */
    titleTopMargin: 25,
    /**
     * | Parameter | Description                         | Type    | Required | Values             |
     * | --------- | ----------------------------------- | ------- | -------- | ------------------ |
     * | barHeight | The height of the bars in the graph | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 20
     */
    barHeight: 20,
    /**
     * | Parameter | Description                                                      | Type    | Required | Values             |
     * | --------- | ---------------------------------------------------------------- | ------- | -------- | ------------------ |
     * | barGap    | The margin between the different activities in the gantt diagram | Integer | Optional | Any Positive Value |
     *
     * **Notes:** Default value: 4
     */
    barGap: 4,
    /**
     * | Parameter  | Description                                                                | Type    | Required | Values             |
     * | ---------- | -------------------------------------------------------------------------- | ------- | -------- | ------------------ |
     * | topPadding | Margin between title and gantt diagram and between axis and gantt diagram. | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 50
     */
    topPadding: 50,
    /**
     * | Parameter    | Description                                                             | Type    | Required | Values             |
     * | ------------ | ----------------------------------------------------------------------- | ------- | -------- | ------------------ |
     * | rightPadding | The space allocated for the section name to the right of the activities | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 75
     */
    rightPadding: 75,
    /**
     * | Parameter   | Description                                                            | Type    | Required | Values             |
     * | ----------- | ---------------------------------------------------------------------- | ------- | -------- | ------------------ |
     * | leftPadding | The space allocated for the section name to the left of the activities | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 75
     */
    leftPadding: 75,
    /**
     * | Parameter            | Description                                  | Type    | Required | Values             |
     * | -------------------- | -------------------------------------------- | ------- | -------- | ------------------ |
     * | gridLineStartPadding | Vertical starting position of the grid lines | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 35
     */
    gridLineStartPadding: 35,
    /**
     * | Parameter | Description | Type    | Required | Values             |
     * | --------- | ----------- | ------- | -------- | ------------------ |
     * | fontSize  | Font size   | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 11
     */
    fontSize: 11,
    /**
     * | Parameter       | Description            | Type    | Required | Values             |
     * | --------------- | ---------------------- | ------- | -------- | ------------------ |
     * | sectionFontSize | Font size for sections | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 11
     */
    sectionFontSize: 11,
    /**
     * | Parameter           | Description                              | Type    | Required | Values             |
     * | ------------------- | ---------------------------------------- | ------- | -------- | ------------------ |
     * | numberSectionStyles | The number of alternating section styles | Integer | 4        | Any Positive Value |
     *
     * **Notes:** Default value: 4
     */
    numberSectionStyles: 4,
    /**
     * | Parameter   | Description               | Type   | Required | Values    |
     * | ----------- | ------------------------- | ------ | -------- | --------- |
     * | displayMode | Controls the display mode | string | 4        | 'compact' |
     *
     * **Notes**:
     *
     * - **compact**: Enables displaying multiple tasks on the same row.
     */
    displayMode: "",
    /**
     * | Parameter  | Description                  | Type | Required | Values           |
     * | ---------- | ---------------------------- | ---- | -------- | ---------------- |
     * | axisFormat | Date/time format of the axis | 3    | Required | Date in yy-mm-dd |
     *
     * **Notes:**
     *
     * This might need adjustment to match your locale and preferences
     *
     * Default value: '%Y-%m-%d'.
     */
    axisFormat: "%Y-%m-%d",
    /**
     * | Parameter    | Description | Type   | Required | Values  |
     * | ------------ | ------------| ------ | -------- | ------- |
     * | tickInterval | axis ticks  | string | Optional | string  |
     *
     * **Notes:**
     *
     * Pattern is /^([1-9][0-9]*)(minute|hour|day|week|month)$/
     *
     * Default value: undefined
     */
    tickInterval: void 0,
    /**
     * | Parameter   | Description | Type    | Required | Values      |
     * | ----------- | ----------- | ------- | -------- | ----------- |
     * | useMaxWidth | See notes   | boolean | 4        | true, false |
     *
     * **Notes:**
     *
     * When this flag is set the height and width is set to 100% and is then scaling with the
     * available space if not the absolute space required is used.
     *
     * Default value: true
     */
    useMaxWidth: !0,
    /**
     * | Parameter | Description | Type    | Required | Values      |
     * | --------- | ----------- | ------- | -------- | ----------- |
     * | topAxis   | See notes   | Boolean | 4        | True, False |
     *
     * **Notes:** when this flag is set date labels will be added to the top of the chart
     *
     * **Default value false**.
     */
    topAxis: !1,
    useWidth: void 0
  },
  /** The object containing configurations specific for journey diagrams */
  journey: {
    /**
     * | Parameter      | Description                                          | Type    | Required | Values             |
     * | -------------- | ---------------------------------------------------- | ------- | -------- | ------------------ |
     * | diagramMarginX | Margin to the right and left of the sequence diagram | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 50
     */
    diagramMarginX: 50,
    /**
     * | Parameter      | Description                                        | Type    | Required | Values             |
     * | -------------- | -------------------------------------------------- | ------- | -------- | ------------------ |
     * | diagramMarginY | Margin to the over and under the sequence diagram. | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 10
     */
    diagramMarginY: 10,
    /**
     * | Parameter   | Description           | Type    | Required | Values             |
     * | ----------- | --------------------- | ------- | -------- | ------------------ |
     * | actorMargin | Margin between actors | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 50
     */
    leftMargin: 150,
    /**
     * | Parameter | Description          | Type    | Required | Values             |
     * | --------- | -------------------- | ------- | -------- | ------------------ |
     * | width     | Width of actor boxes | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 150
     */
    width: 150,
    /**
     * | Parameter | Description           | Type    | Required | Values             |
     * | --------- | --------------------- | ------- | -------- | ------------------ |
     * | height    | Height of actor boxes | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 65
     */
    height: 50,
    /**
     * | Parameter | Description              | Type    | Required | Values             |
     * | --------- | ------------------------ | ------- | -------- | ------------------ |
     * | boxMargin | Margin around loop boxes | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 10
     */
    boxMargin: 10,
    /**
     * | Parameter     | Description                                  | Type    | Required | Values             |
     * | ------------- | -------------------------------------------- | ------- | -------- | ------------------ |
     * | boxTextMargin | Margin around the text in loop/alt/opt boxes | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 5
     */
    boxTextMargin: 5,
    /**
     * | Parameter  | Description         | Type    | Required | Values             |
     * | ---------- | ------------------- | ------- | -------- | ------------------ |
     * | noteMargin | Margin around notes | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 10
     */
    noteMargin: 10,
    /**
     * | Parameter     | Description             | Type    | Required | Values             |
     * | ------------- | ----------------------- | ------- | -------- | ------------------ |
     * | messageMargin | Space between messages. | Integer | Required | Any Positive Value |
     *
     * **Notes:**
     *
     * Space between messages.
     *
     * Default value: 35
     */
    messageMargin: 35,
    /**
     * | Parameter    | Description                 | Type | Required | Values                    |
     * | ------------ | --------------------------- | ---- | -------- | ------------------------- |
     * | messageAlign | Multiline message alignment | 3    | 4        | 'left', 'center', 'right' |
     *
     * **Notes:** Default value: 'center'
     */
    messageAlign: "center",
    /**
     * | Parameter       | Description                                | Type    | Required | Values             |
     * | --------------- | ------------------------------------------ | ------- | -------- | ------------------ |
     * | bottomMarginAdj | Prolongs the edge of the diagram downwards | Integer | 4        | Any Positive Value |
     *
     * **Notes:**
     *
     * Depending on css styling this might need adjustment.
     *
     * Default value: 1
     */
    bottomMarginAdj: 1,
    /**
     * | Parameter   | Description | Type    | Required | Values      |
     * | ----------- | ----------- | ------- | -------- | ----------- |
     * | useMaxWidth | See notes   | boolean | 4        | true, false |
     *
     * **Notes:**
     *
     * When this flag is set the height and width is set to 100% and is then scaling with the
     * available space if not the absolute space required is used.
     *
     * Default value: true
     */
    useMaxWidth: !0,
    /**
     * | Parameter   | Description                       | Type | Required | Values      |
     * | ----------- | --------------------------------- | ---- | -------- | ----------- |
     * | rightAngles | Curved Arrows become Right Angles | 3    | 4        | true, false |
     *
     * **Notes:**
     *
     * This will display arrows that start and begin at the same node as right angles, rather than a
     * curves
     *
     * Default value: false
     */
    rightAngles: !1,
    taskFontSize: 14,
    taskFontFamily: '"Open Sans", sans-serif',
    taskMargin: 50,
    // width of activation box
    activationWidth: 10,
    // text placement as: tspan | fo | old only text as before
    textPlacement: "fo",
    actorColours: ["#8FBC8F", "#7CFC00", "#00FFFF", "#20B2AA", "#B0E0E6", "#FFFFE0"],
    sectionFills: ["#191970", "#8B008B", "#4B0082", "#2F4F4F", "#800000", "#8B4513", "#00008B"],
    sectionColours: ["#fff"]
  },
  /** The object containing configurations specific for timeline diagrams */
  timeline: {
    /**
     * | Parameter      | Description                                          | Type    | Required | Values             |
     * | -------------- | ---------------------------------------------------- | ------- | -------- | ------------------ |
     * | diagramMarginX | Margin to the right and left of the sequence diagram | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 50
     */
    diagramMarginX: 50,
    /**
     * | Parameter      | Description                                        | Type    | Required | Values             |
     * | -------------- | -------------------------------------------------- | ------- | -------- | ------------------ |
     * | diagramMarginY | Margin to the over and under the sequence diagram. | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 10
     */
    diagramMarginY: 10,
    /**
     * | Parameter   | Description           | Type    | Required | Values             |
     * | ----------- | --------------------- | ------- | -------- | ------------------ |
     * | actorMargin | Margin between actors | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 50
     */
    leftMargin: 150,
    /**
     * | Parameter | Description          | Type    | Required | Values             |
     * | --------- | -------------------- | ------- | -------- | ------------------ |
     * | width     | Width of actor boxes | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 150
     */
    width: 150,
    /**
     * | Parameter | Description           | Type    | Required | Values             |
     * | --------- | --------------------- | ------- | -------- | ------------------ |
     * | height    | Height of actor boxes | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 65
     */
    height: 50,
    /**
     * | Parameter | Description              | Type    | Required | Values             |
     * | --------- | ------------------------ | ------- | -------- | ------------------ |
     * | boxMargin | Margin around loop boxes | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 10
     */
    boxMargin: 10,
    /**
     * | Parameter     | Description                                  | Type    | Required | Values             |
     * | ------------- | -------------------------------------------- | ------- | -------- | ------------------ |
     * | boxTextMargin | Margin around the text in loop/alt/opt boxes | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 5
     */
    boxTextMargin: 5,
    /**
     * | Parameter  | Description         | Type    | Required | Values             |
     * | ---------- | ------------------- | ------- | -------- | ------------------ |
     * | noteMargin | Margin around notes | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 10
     */
    noteMargin: 10,
    /**
     * | Parameter     | Description             | Type    | Required | Values             |
     * | ------------- | ----------------------- | ------- | -------- | ------------------ |
     * | messageMargin | Space between messages. | Integer | Required | Any Positive Value |
     *
     * **Notes:**
     *
     * Space between messages.
     *
     * Default value: 35
     */
    messageMargin: 35,
    /**
     * | Parameter    | Description                 | Type | Required | Values                    |
     * | ------------ | --------------------------- | ---- | -------- | ------------------------- |
     * | messageAlign | Multiline message alignment | 3    | 4        | 'left', 'center', 'right' |
     *
     * **Notes:** Default value: 'center'
     */
    messageAlign: "center",
    /**
     * | Parameter       | Description                                | Type    | Required | Values             |
     * | --------------- | ------------------------------------------ | ------- | -------- | ------------------ |
     * | bottomMarginAdj | Prolongs the edge of the diagram downwards | Integer | 4        | Any Positive Value |
     *
     * **Notes:**
     *
     * Depending on css styling this might need adjustment.
     *
     * Default value: 1
     */
    bottomMarginAdj: 1,
    /**
     * | Parameter   | Description | Type    | Required | Values      |
     * | ----------- | ----------- | ------- | -------- | ----------- |
     * | useMaxWidth | See notes   | boolean | 4        | true, false |
     *
     * **Notes:**
     *
     * When this flag is set the height and width is set to 100% and is then scaling with the
     * available space if not the absolute space required is used.
     *
     * Default value: true
     */
    useMaxWidth: !0,
    /**
     * | Parameter   | Description                       | Type | Required | Values      |
     * | ----------- | --------------------------------- | ---- | -------- | ----------- |
     * | rightAngles | Curved Arrows become Right Angles | 3    | 4        | true, false |
     *
     * **Notes:**
     *
     * This will display arrows that start and begin at the same node as right angles, rather than a
     * curves
     *
     * Default value: false
     */
    rightAngles: !1,
    taskFontSize: 14,
    taskFontFamily: '"Open Sans", sans-serif',
    taskMargin: 50,
    // width of activation box
    activationWidth: 10,
    // text placement as: tspan | fo | old only text as before
    textPlacement: "fo",
    actorColours: ["#8FBC8F", "#7CFC00", "#00FFFF", "#20B2AA", "#B0E0E6", "#FFFFE0"],
    sectionFills: ["#191970", "#8B008B", "#4B0082", "#2F4F4F", "#800000", "#8B4513", "#00008B"],
    sectionColours: ["#fff"],
    disableMulticolor: !1
  },
  class: {
    /**
     * ### titleTopMargin
     *
     * | Parameter      | Description                                    | Type    | Required | Values             |
     * | -------------- | ---------------------------------------------- | ------- | -------- | ------------------ |
     * | titleTopMargin | Margin top for the text over the class diagram | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 25
     */
    titleTopMargin: 25,
    arrowMarkerAbsolute: !1,
    dividerMargin: 10,
    padding: 5,
    textHeight: 10,
    /**
     * | Parameter   | Description | Type    | Required | Values      |
     * | ----------- | ----------- | ------- | -------- | ----------- |
     * | useMaxWidth | See notes   | boolean | 4        | true, false |
     *
     * **Notes:**
     *
     * When this flag is set the height and width is set to 100% and is then scaling with the
     * available space if not the absolute space required is used.
     *
     * Default value: true
     */
    useMaxWidth: !0,
    /**
     * | Parameter       | Description | Type    | Required | Values                  |
     * | --------------- | ----------- | ------- | -------- | ----------------------- |
     * | defaultRenderer | See notes   | boolean | 4        | dagre-d3, dagre-wrapper |
     *
     * **Notes**:
     *
     * Decides which rendering engine that is to be used for the rendering. Legal values are:
     * dagre-d3 dagre-wrapper - wrapper for dagre implemented in mermaid
     *
     * Default value: 'dagre-d3'
     */
    defaultRenderer: "dagre-wrapper"
  },
  state: {
    /**
     * ### titleTopMargin
     *
     * | Parameter      | Description                                    | Type    | Required | Values             |
     * | -------------- | ---------------------------------------------- | ------- | -------- | ------------------ |
     * | titleTopMargin | Margin top for the text over the state diagram | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 25
     */
    titleTopMargin: 25,
    dividerMargin: 10,
    sizeUnit: 5,
    padding: 8,
    textHeight: 10,
    titleShift: -15,
    noteMargin: 10,
    forkWidth: 70,
    forkHeight: 7,
    // Used
    miniPadding: 2,
    // Font size factor, this is used to guess the width of the edges labels before rendering by dagre
    // layout. This might need updating if/when switching font
    fontSizeFactor: 5.02,
    fontSize: 24,
    labelHeight: 16,
    edgeLengthFactor: "20",
    compositTitleSize: 35,
    radius: 5,
    /**
     * | Parameter   | Description | Type    | Required | Values      |
     * | ----------- | ----------- | ------- | -------- | ----------- |
     * | useMaxWidth | See notes   | boolean | 4        | true, false |
     *
     * **Notes:**
     *
     * When this flag is set the height and width is set to 100% and is then scaling with the
     * available space if not the absolute space required is used.
     *
     * Default value: true
     */
    useMaxWidth: !0,
    /**
     * | Parameter       | Description | Type    | Required | Values                  |
     * | --------------- | ----------- | ------- | -------- | ----------------------- |
     * | defaultRenderer | See notes   | boolean | 4        | dagre-d3, dagre-wrapper |
     *
     * **Notes:**
     *
     * Decides which rendering engine that is to be used for the rendering. Legal values are:
     * dagre-d3 dagre-wrapper - wrapper for dagre implemented in mermaid
     *
     * Default value: 'dagre-d3'
     */
    defaultRenderer: "dagre-wrapper"
  },
  /** The object containing configurations specific for entity relationship diagrams */
  er: {
    /**
     * ### titleTopMargin
     *
     * | Parameter      | Description                                    | Type    | Required | Values             |
     * | -------------- | ---------------------------------------------- | ------- | -------- | ------------------ |
     * | titleTopMargin | Margin top for the text over the diagram       | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 25
     */
    titleTopMargin: 25,
    /**
     * | Parameter      | Description                                     | Type    | Required | Values             |
     * | -------------- | ----------------------------------------------- | ------- | -------- | ------------------ |
     * | diagramPadding | Amount of padding around the diagram as a whole | Integer | Required | Any Positive Value |
     *
     * **Notes:**
     *
     * The amount of padding around the diagram as a whole so that embedded diagrams have margins,
     * expressed in pixels
     *
     * Default value: 20
     */
    diagramPadding: 20,
    /**
     * | Parameter       | Description                              | Type   | Required | Values                 |
     * | --------------- | ---------------------------------------- | ------ | -------- | ---------------------- |
     * | layoutDirection | Directional bias for layout of entities. | string | Required | "TB", "BT", "LR", "RL" |
     *
     * **Notes:**
     *
     * 'TB' for Top-Bottom, 'BT'for Bottom-Top, 'LR' for Left-Right, or 'RL' for Right to Left.
     *
     * T = top, B = bottom, L = left, and R = right.
     *
     * Default value: 'TB'
     */
    layoutDirection: "TB",
    /**
     * | Parameter      | Description                        | Type    | Required | Values             |
     * | -------------- | ---------------------------------- | ------- | -------- | ------------------ |
     * | minEntityWidth | The minimum width of an entity box | Integer | Required | Any Positive Value |
     *
     * **Notes:** Expressed in pixels. Default value: 100
     */
    minEntityWidth: 100,
    /**
     * | Parameter       | Description                         | Type    | Required | Values             |
     * | --------------- | ----------------------------------- | ------- | -------- | ------------------ |
     * | minEntityHeight | The minimum height of an entity box | Integer | 4        | Any Positive Value |
     *
     * **Notes:** Expressed in pixels Default value: 75
     */
    minEntityHeight: 75,
    /**
     * | Parameter     | Description                                                  | Type    | Required | Values             |
     * | ------------- | ------------------------------------------------------------ | ------- | -------- | ------------------ |
     * | entityPadding | Minimum internal padding between text in box and box borders | Integer | 4        | Any Positive Value |
     *
     * **Notes:**
     *
     * The minimum internal padding between text in an entity box and the enclosing box borders,
     * expressed in pixels.
     *
     * Default value: 15
     */
    entityPadding: 15,
    /**
     * | Parameter | Description                         | Type   | Required | Values               |
     * | --------- | ----------------------------------- | ------ | -------- | -------------------- |
     * | stroke    | Stroke color of box edges and lines | string | 4        | Any recognized color |
     *
     * **Notes:** Default value: 'gray'
     */
    stroke: "gray",
    /**
     * | Parameter | Description                | Type   | Required | Values               |
     * | --------- | -------------------------- | ------ | -------- | -------------------- |
     * | fill      | Fill color of entity boxes | string | 4        | Any recognized color |
     *
     * **Notes:** Default value: 'honeydew'
     */
    fill: "honeydew",
    /**
     * | Parameter | Description         | Type    | Required | Values             |
     * | --------- | ------------------- | ------- | -------- | ------------------ |
     * | fontSize  | Font Size in pixels | Integer |          | Any Positive Value |
     *
     * **Notes:**
     *
     * Font size (expressed as an integer representing a number of pixels) Default value: 12
     */
    fontSize: 12,
    /**
     * | Parameter   | Description | Type    | Required | Values      |
     * | ----------- | ----------- | ------- | -------- | ----------- |
     * | useMaxWidth | See Notes   | boolean | Required | true, false |
     *
     * **Notes:**
     *
     * When this flag is set to true, the diagram width is locked to 100% and scaled based on
     * available space. If set to false, the diagram reserves its absolute width.
     *
     * Default value: true
     */
    useMaxWidth: !0
  },
  /** The object containing configurations specific for pie diagrams */
  pie: {
    useWidth: void 0,
    /**
     * | Parameter   | Description | Type    | Required | Values      |
     * | ----------- | ----------- | ------- | -------- | ----------- |
     * | useMaxWidth | See Notes   | boolean | Required | true, false |
     *
     * **Notes:**
     *
     * When this flag is set to true, the diagram width is locked to 100% and scaled based on
     * available space. If set to false, the diagram reserves its absolute width.
     *
     * Default value: true
     */
    useMaxWidth: !0,
    /**
     * | Parameter    | Description                                                                      | Type    | Required | Values              |
     * | ------------ | -------------------------------------------------------------------------------- | ------- | -------- | ------------------- |
     * | textPosition | Axial position of slice's label from zero at the center to 1 at the outside edge | Number  | Optional | Decimal from 0 to 1 |
     *
     * **Notes:** Default value: 0.75
     */
    textPosition: 0.75
  },
  /** The object containing configurations specific for req diagrams */
  requirement: {
    useWidth: void 0,
    /**
     * | Parameter   | Description | Type    | Required | Values      |
     * | ----------- | ----------- | ------- | -------- | ----------- |
     * | useMaxWidth | See Notes   | boolean | Required | true, false |
     *
     * **Notes:**
     *
     * When this flag is set to true, the diagram width is locked to 100% and scaled based on
     * available space. If set to false, the diagram reserves its absolute width.
     *
     * Default value: true
     */
    useMaxWidth: !0,
    rect_fill: "#f9f9f9",
    text_color: "#333",
    rect_border_size: "0.5px",
    rect_border_color: "#bbb",
    rect_min_width: 200,
    rect_min_height: 200,
    fontSize: 14,
    rect_padding: 10,
    line_height: 20
  },
  gitGraph: {
    /**
     * ### titleTopMargin
     *
     * | Parameter      | Description                                    | Type    | Required | Values             |
     * | -------------- | ---------------------------------------------- | ------- | -------- | ------------------ |
     * | titleTopMargin | Margin top for the text over the Git diagram   | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 25
     */
    titleTopMargin: 25,
    diagramPadding: 8,
    nodeLabel: {
      width: 75,
      height: 100,
      x: -25,
      y: 0
    },
    mainBranchName: "main",
    mainBranchOrder: 0,
    showCommitLabel: !0,
    showBranches: !0,
    rotateCommitLabel: !0
  },
  /** The object containing configurations specific for c4 diagrams */
  c4: {
    useWidth: void 0,
    /**
     * | Parameter      | Description                                    | Type    | Required | Values             |
     * | -------------- | ---------------------------------------------- | ------- | -------- | ------------------ |
     * | diagramMarginX | Margin to the right and left of the c4 diagram | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 50
     */
    diagramMarginX: 50,
    /**
     * | Parameter      | Description                                 | Type    | Required | Values             |
     * | -------------- | ------------------------------------------- | ------- | -------- | ------------------ |
     * | diagramMarginY | Margin to the over and under the c4 diagram | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 10
     */
    diagramMarginY: 10,
    /**
     * | Parameter     | Description           | Type    | Required | Values             |
     * | ------------- | --------------------- | ------- | -------- | ------------------ |
     * | c4ShapeMargin | Margin between shapes | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 50
     */
    c4ShapeMargin: 50,
    /**
     * | Parameter      | Description            | Type    | Required | Values             |
     * | -------------- | ---------------------- | ------- | -------- | ------------------ |
     * | c4ShapePadding | Padding between shapes | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 20
     */
    c4ShapePadding: 20,
    /**
     * | Parameter | Description           | Type    | Required | Values             |
     * | --------- | --------------------- | ------- | -------- | ------------------ |
     * | width     | Width of person boxes | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 216
     */
    width: 216,
    /**
     * | Parameter | Description            | Type    | Required | Values             |
     * | --------- | ---------------------- | ------- | -------- | ------------------ |
     * | height    | Height of person boxes | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 60
     */
    height: 60,
    /**
     * | Parameter | Description         | Type    | Required | Values             |
     * | --------- | ------------------- | ------- | -------- | ------------------ |
     * | boxMargin | Margin around boxes | Integer | Required | Any Positive Value |
     *
     * **Notes:** Default value: 10
     */
    boxMargin: 10,
    /**
     * | Parameter   | Description | Type    | Required | Values      |
     * | ----------- | ----------- | ------- | -------- | ----------- |
     * | useMaxWidth | See Notes   | boolean | Required | true, false |
     *
     * **Notes:** When this flag is set to true, the height and width is set to 100% and is then
     * scaling with the available space. If set to false, the absolute space required is used.
     *
     * Default value: true
     */
    useMaxWidth: !0,
    /**
     * | Parameter    | Description | Type    | Required | Values             |
     * | ------------ | ----------- | ------- | -------- | ------------------ |
     * | c4ShapeInRow | See Notes   | Integer | Required | Any Positive Value |
     *
     * **Notes:** How many shapes to place in each row.
     *
     * Default value: 4
     */
    c4ShapeInRow: 4,
    nextLinePaddingX: 0,
    /**
     * | Parameter       | Description | Type    | Required | Values             |
     * | --------------- | ----------- | ------- | -------- | ------------------ |
     * | c4BoundaryInRow | See Notes   | Integer | Required | Any Positive Value |
     *
     * **Notes:** How many boundaries to place in each row.
     *
     * Default value: 2
     */
    c4BoundaryInRow: 2,
    /**
     * This sets the font size of Person shape for the diagram
     *
     * **Notes:** Default value: 14.
     */
    personFontSize: 14,
    /**
     * This sets the font family of Person shape for the diagram
     *
     * **Notes:** Default value: "Open Sans", sans-serif.
     */
    personFontFamily: '"Open Sans", sans-serif',
    /**
     * This sets the font weight of Person shape for the diagram
     *
     * **Notes:** Default value: normal.
     */
    personFontWeight: "normal",
    /**
     * This sets the font size of External Person shape for the diagram
     *
     * **Notes:** Default value: 14.
     */
    external_personFontSize: 14,
    /**
     * This sets the font family of External Person shape for the diagram
     *
     * **Notes:** Default value: "Open Sans", sans-serif.
     */
    external_personFontFamily: '"Open Sans", sans-serif',
    /**
     * This sets the font weight of External Person shape for the diagram
     *
     * **Notes:** Default value: normal.
     */
    external_personFontWeight: "normal",
    /**
     * This sets the font size of System shape for the diagram
     *
     * **Notes:** Default value: 14.
     */
    systemFontSize: 14,
    /**
     * This sets the font family of System shape for the diagram
     *
     * **Notes:** Default value: "Open Sans", sans-serif.
     */
    systemFontFamily: '"Open Sans", sans-serif',
    /**
     * This sets the font weight of System shape for the diagram
     *
     * **Notes:** Default value: normal.
     */
    systemFontWeight: "normal",
    /**
     * This sets the font size of External System shape for the diagram
     *
     * **Notes:** Default value: 14.
     */
    external_systemFontSize: 14,
    /**
     * This sets the font family of External System shape for the diagram
     *
     * **Notes:** Default value: "Open Sans", sans-serif.
     */
    external_systemFontFamily: '"Open Sans", sans-serif',
    /**
     * This sets the font weight of External System shape for the diagram
     *
     * **Notes:** Default value: normal.
     */
    external_systemFontWeight: "normal",
    /**
     * This sets the font size of System DB shape for the diagram
     *
     * **Notes:** Default value: 14.
     */
    system_dbFontSize: 14,
    /**
     * This sets the font family of System DB shape for the diagram
     *
     * **Notes:** Default value: "Open Sans", sans-serif.
     */
    system_dbFontFamily: '"Open Sans", sans-serif',
    /**
     * This sets the font weight of System DB shape for the diagram
     *
     * **Notes:** Default value: normal.
     */
    system_dbFontWeight: "normal",
    /**
     * This sets the font size of External System DB shape for the diagram
     *
     * **Notes:** Default value: 14.
     */
    external_system_dbFontSize: 14,
    /**
     * This sets the font family of External System DB shape for the diagram
     *
     * **Notes:** Default value: "Open Sans", sans-serif.
     */
    external_system_dbFontFamily: '"Open Sans", sans-serif',
    /**
     * This sets the font weight of External System DB shape for the diagram
     *
     * **Notes:** Default value: normal.
     */
    external_system_dbFontWeight: "normal",
    /**
     * This sets the font size of System Queue shape for the diagram
     *
     * **Notes:** Default value: 14.
     */
    system_queueFontSize: 14,
    /**
     * This sets the font family of System Queue shape for the diagram
     *
     * **Notes:** Default value: "Open Sans", sans-serif.
     */
    system_queueFontFamily: '"Open Sans", sans-serif',
    /**
     * This sets the font weight of System Queue shape for the diagram
     *
     * **Notes:** Default value: normal.
     */
    system_queueFontWeight: "normal",
    /**
     * This sets the font size of External System Queue shape for the diagram
     *
     * **Notes:** Default value: 14.
     */
    external_system_queueFontSize: 14,
    /**
     * This sets the font family of External System Queue shape for the diagram
     *
     * **Notes:** Default value: "Open Sans", sans-serif.
     */
    external_system_queueFontFamily: '"Open Sans", sans-serif',
    /**
     * This sets the font weight of External System Queue shape for the diagram
     *
     * **Notes:** Default value: normal.
     */
    external_system_queueFontWeight: "normal",
    /**
     * This sets the font size of Boundary shape for the diagram
     *
     * **Notes:** Default value: 14.
     */
    boundaryFontSize: 14,
    /**
     * This sets the font family of Boundary shape for the diagram
     *
     * **Notes:** Default value: "Open Sans", sans-serif.
     */
    boundaryFontFamily: '"Open Sans", sans-serif',
    /**
     * This sets the font weight of Boundary shape for the diagram
     *
     * **Notes:** Default value: normal.
     */
    boundaryFontWeight: "normal",
    /**
     * This sets the font size of Message shape for the diagram
     *
     * **Notes:** Default value: 12.
     */
    messageFontSize: 12,
    /**
     * This sets the font family of Message shape for the diagram
     *
     * **Notes:** Default value: "Open Sans", sans-serif.
     */
    messageFontFamily: '"Open Sans", sans-serif',
    /**
     * This sets the font weight of Message shape for the diagram
     *
     * **Notes:** Default value: normal.
     */
    messageFontWeight: "normal",
    /**
     * This sets the font size of Container shape for the diagram
     *
     * **Notes:** Default value: 14.
     */
    containerFontSize: 14,
    /**
     * This sets the font family of Container shape for the diagram
     *
     * **Notes:** Default value: "Open Sans", sans-serif.
     */
    containerFontFamily: '"Open Sans", sans-serif',
    /**
     * This sets the font weight of Container shape for the diagram
     *
     * **Notes:** Default value: normal.
     */
    containerFontWeight: "normal",
    /**
     * This sets the font size of External Container shape for the diagram
     *
     * **Notes:** Default value: 14.
     */
    external_containerFontSize: 14,
    /**
     * This sets the font family of External Container shape for the diagram
     *
     * **Notes:** Default value: "Open Sans", sans-serif.
     */
    external_containerFontFamily: '"Open Sans", sans-serif',
    /**
     * This sets the font weight of External Container shape for the diagram
     *
     * **Notes:** Default value: normal.
     */
    external_containerFontWeight: "normal",
    /**
     * This sets the font size of Container DB shape for the diagram
     *
     * **Notes:** Default value: 14.
     */
    container_dbFontSize: 14,
    /**
     * This sets the font family of Container DB shape for the diagram
     *
     * **Notes:** Default value: "Open Sans", sans-serif.
     */
    container_dbFontFamily: '"Open Sans", sans-serif',
    /**
     * This sets the font weight of Container DB shape for the diagram
     *
     * **Notes:** Default value: normal.
     */
    container_dbFontWeight: "normal",
    /**
     * This sets the font size of External Container DB shape for the diagram
     *
     * **Notes:** Default value: 14.
     */
    external_container_dbFontSize: 14,
    /**
     * This sets the font family of External Container DB shape for the diagram
     *
     * **Notes:** Default value: "Open Sans", sans-serif.
     */
    external_container_dbFontFamily: '"Open Sans", sans-serif',
    /**
     * This sets the font weight of External Container DB shape for the diagram
     *
     * **Notes:** Default value: normal.
     */
    external_container_dbFontWeight: "normal",
    /**
     * This sets the font size of Container Queue shape for the diagram
     *
     * **Notes:** Default value: 14.
     */
    container_queueFontSize: 14,
    /**
     * This sets the font family of Container Queue shape for the diagram
     *
     * **Notes:** Default value: "Open Sans", sans-serif.
     */
    container_queueFontFamily: '"Open Sans", sans-serif',
    /**
     * This sets the font weight of Container Queue shape for the diagram
     *
     * **Notes:** Default value: normal.
     */
    container_queueFontWeight: "normal",
    /**
     * This sets the font size of External Container Queue shape for the diagram
     *
     * **Notes:** Default value: 14.
     */
    external_container_queueFontSize: 14,
    /**
     * This sets the font family of External Container Queue shape for the diagram
     *
     * **Notes:** Default value: "Open Sans", sans-serif.
     */
    external_container_queueFontFamily: '"Open Sans", sans-serif',
    /**
     * This sets the font weight of External Container Queue shape for the diagram
     *
     * **Notes:** Default value: normal.
     */
    external_container_queueFontWeight: "normal",
    /**
     * This sets the font size of Component shape for the diagram
     *
     * **Notes:** Default value: 14.
     */
    componentFontSize: 14,
    /**
     * This sets the font family of Component shape for the diagram
     *
     * **Notes:** Default value: "Open Sans", sans-serif.
     */
    componentFontFamily: '"Open Sans", sans-serif',
    /**
     * This sets the font weight of Component shape for the diagram
     *
     * **Notes:** Default value: normal.
     */
    componentFontWeight: "normal",
    /**
     * This sets the font size of External Component shape for the diagram
     *
     * **Notes:** Default value: 14.
     */
    external_componentFontSize: 14,
    /**
     * This sets the font family of External Component shape for the diagram
     *
     * **Notes:** Default value: "Open Sans", sans-serif.
     */
    external_componentFontFamily: '"Open Sans", sans-serif',
    /**
     * This sets the font weight of External Component shape for the diagram
     *
     * **Notes:** Default value: normal.
     */
    external_componentFontWeight: "normal",
    /**
     * This sets the font size of Component DB shape for the diagram
     *
     * **Notes:** Default value: 14.
     */
    component_dbFontSize: 14,
    /**
     * This sets the font family of Component DB shape for the diagram
     *
     * **Notes:** Default value: "Open Sans", sans-serif.
     */
    component_dbFontFamily: '"Open Sans", sans-serif',
    /**
     * This sets the font weight of Component DB shape for the diagram
     *
     * **Notes:** Default value: normal.
     */
    component_dbFontWeight: "normal",
    /**
     * This sets the font size of External Component DB shape for the diagram
     *
     * **Notes:** Default value: 14.
     */
    external_component_dbFontSize: 14,
    /**
     * This sets the font family of External Component DB shape for the diagram
     *
     * **Notes:** Default value: "Open Sans", sans-serif.
     */
    external_component_dbFontFamily: '"Open Sans", sans-serif',
    /**
     * This sets the font weight of External Component DB shape for the diagram
     *
     * **Notes:** Default value: normal.
     */
    external_component_dbFontWeight: "normal",
    /**
     * This sets the font size of Component Queue shape for the diagram
     *
     * **Notes:** Default value: 14.
     */
    component_queueFontSize: 14,
    /**
     * This sets the font family of Component Queue shape for the diagram
     *
     * **Notes:** Default value: "Open Sans", sans-serif.
     */
    component_queueFontFamily: '"Open Sans", sans-serif',
    /**
     * This sets the font weight of Component Queue shape for the diagram
     *
     * **Notes:** Default value: normal.
     */
    component_queueFontWeight: "normal",
    /**
     * This sets the font size of External Component Queue shape for the diagram
     *
     * **Notes:** Default value: 14.
     */
    external_component_queueFontSize: 14,
    /**
     * This sets the font family of External Component Queue shape for the diagram
     *
     * **Notes:** Default value: "Open Sans", sans-serif.
     */
    external_component_queueFontFamily: '"Open Sans", sans-serif',
    /**
     * This sets the font weight of External Component Queue shape for the diagram
     *
     * **Notes:** Default value: normal.
     */
    external_component_queueFontWeight: "normal",
    /**
     * This sets the auto-wrap state for the diagram
     *
     * **Notes:** Default value: true.
     */
    wrap: !0,
    /**
     * This sets the auto-wrap padding for the diagram (sides only)
     *
     * **Notes:** Default value: 0.
     */
    wrapPadding: 10,
    personFont: function() {
      return {
        fontFamily: this.personFontFamily,
        fontSize: this.personFontSize,
        fontWeight: this.personFontWeight
      };
    },
    external_personFont: function() {
      return {
        fontFamily: this.external_personFontFamily,
        fontSize: this.external_personFontSize,
        fontWeight: this.external_personFontWeight
      };
    },
    systemFont: function() {
      return {
        fontFamily: this.systemFontFamily,
        fontSize: this.systemFontSize,
        fontWeight: this.systemFontWeight
      };
    },
    external_systemFont: function() {
      return {
        fontFamily: this.external_systemFontFamily,
        fontSize: this.external_systemFontSize,
        fontWeight: this.external_systemFontWeight
      };
    },
    system_dbFont: function() {
      return {
        fontFamily: this.system_dbFontFamily,
        fontSize: this.system_dbFontSize,
        fontWeight: this.system_dbFontWeight
      };
    },
    external_system_dbFont: function() {
      return {
        fontFamily: this.external_system_dbFontFamily,
        fontSize: this.external_system_dbFontSize,
        fontWeight: this.external_system_dbFontWeight
      };
    },
    system_queueFont: function() {
      return {
        fontFamily: this.system_queueFontFamily,
        fontSize: this.system_queueFontSize,
        fontWeight: this.system_queueFontWeight
      };
    },
    external_system_queueFont: function() {
      return {
        fontFamily: this.external_system_queueFontFamily,
        fontSize: this.external_system_queueFontSize,
        fontWeight: this.external_system_queueFontWeight
      };
    },
    containerFont: function() {
      return {
        fontFamily: this.containerFontFamily,
        fontSize: this.containerFontSize,
        fontWeight: this.containerFontWeight
      };
    },
    external_containerFont: function() {
      return {
        fontFamily: this.external_containerFontFamily,
        fontSize: this.external_containerFontSize,
        fontWeight: this.external_containerFontWeight
      };
    },
    container_dbFont: function() {
      return {
        fontFamily: this.container_dbFontFamily,
        fontSize: this.container_dbFontSize,
        fontWeight: this.container_dbFontWeight
      };
    },
    external_container_dbFont: function() {
      return {
        fontFamily: this.external_container_dbFontFamily,
        fontSize: this.external_container_dbFontSize,
        fontWeight: this.external_container_dbFontWeight
      };
    },
    container_queueFont: function() {
      return {
        fontFamily: this.container_queueFontFamily,
        fontSize: this.container_queueFontSize,
        fontWeight: this.container_queueFontWeight
      };
    },
    external_container_queueFont: function() {
      return {
        fontFamily: this.external_container_queueFontFamily,
        fontSize: this.external_container_queueFontSize,
        fontWeight: this.external_container_queueFontWeight
      };
    },
    componentFont: function() {
      return {
        fontFamily: this.componentFontFamily,
        fontSize: this.componentFontSize,
        fontWeight: this.componentFontWeight
      };
    },
    external_componentFont: function() {
      return {
        fontFamily: this.external_componentFontFamily,
        fontSize: this.external_componentFontSize,
        fontWeight: this.external_componentFontWeight
      };
    },
    component_dbFont: function() {
      return {
        fontFamily: this.component_dbFontFamily,
        fontSize: this.component_dbFontSize,
        fontWeight: this.component_dbFontWeight
      };
    },
    external_component_dbFont: function() {
      return {
        fontFamily: this.external_component_dbFontFamily,
        fontSize: this.external_component_dbFontSize,
        fontWeight: this.external_component_dbFontWeight
      };
    },
    component_queueFont: function() {
      return {
        fontFamily: this.component_queueFontFamily,
        fontSize: this.component_queueFontSize,
        fontWeight: this.component_queueFontWeight
      };
    },
    external_component_queueFont: function() {
      return {
        fontFamily: this.external_component_queueFontFamily,
        fontSize: this.external_component_queueFontSize,
        fontWeight: this.external_component_queueFontWeight
      };
    },
    boundaryFont: function() {
      return {
        fontFamily: this.boundaryFontFamily,
        fontSize: this.boundaryFontSize,
        fontWeight: this.boundaryFontWeight
      };
    },
    messageFont: function() {
      return {
        fontFamily: this.messageFontFamily,
        fontSize: this.messageFontSize,
        fontWeight: this.messageFontWeight
      };
    },
    // ' Colors
    // ' ##################################
    person_bg_color: "#08427B",
    person_border_color: "#073B6F",
    external_person_bg_color: "#686868",
    external_person_border_color: "#8A8A8A",
    system_bg_color: "#1168BD",
    system_border_color: "#3C7FC0",
    system_db_bg_color: "#1168BD",
    system_db_border_color: "#3C7FC0",
    system_queue_bg_color: "#1168BD",
    system_queue_border_color: "#3C7FC0",
    external_system_bg_color: "#999999",
    external_system_border_color: "#8A8A8A",
    external_system_db_bg_color: "#999999",
    external_system_db_border_color: "#8A8A8A",
    external_system_queue_bg_color: "#999999",
    external_system_queue_border_color: "#8A8A8A",
    container_bg_color: "#438DD5",
    container_border_color: "#3C7FC0",
    container_db_bg_color: "#438DD5",
    container_db_border_color: "#3C7FC0",
    container_queue_bg_color: "#438DD5",
    container_queue_border_color: "#3C7FC0",
    external_container_bg_color: "#B3B3B3",
    external_container_border_color: "#A6A6A6",
    external_container_db_bg_color: "#B3B3B3",
    external_container_db_border_color: "#A6A6A6",
    external_container_queue_bg_color: "#B3B3B3",
    external_container_queue_border_color: "#A6A6A6",
    component_bg_color: "#85BBF0",
    component_border_color: "#78A8D8",
    component_db_bg_color: "#85BBF0",
    component_db_border_color: "#78A8D8",
    component_queue_bg_color: "#85BBF0",
    component_queue_border_color: "#78A8D8",
    external_component_bg_color: "#CCCCCC",
    external_component_border_color: "#BFBFBF",
    external_component_db_bg_color: "#CCCCCC",
    external_component_db_border_color: "#BFBFBF",
    external_component_queue_bg_color: "#CCCCCC",
    external_component_queue_border_color: "#BFBFBF"
  },
  mindmap: {
    useMaxWidth: !0,
    padding: 10,
    maxNodeWidth: 200
  },
  fontSize: 16
};
Fr.class && (Fr.class.arrowMarkerAbsolute = Fr.arrowMarkerAbsolute);
Fr.gitGraph && (Fr.gitGraph.arrowMarkerAbsolute = Fr.arrowMarkerAbsolute);
const Ju = (e, t = "") => Object.keys(e).reduce((r, n) => Array.isArray(e[n]) ? r : typeof e[n] == "object" && e[n] !== null ? [...r, t + n, ...Ju(e[n], "")] : [...r, t + n], []), ug = Ju(Fr, ""), hg = Fr, vo = function(e, t, r) {
  const { depth: n, clobber: i } = Object.assign({ depth: 2, clobber: !1 }, r);
  return Array.isArray(t) && !Array.isArray(e) ? (t.forEach((a) => vo(e, a, r)), e) : Array.isArray(t) && Array.isArray(e) ? (t.forEach((a) => {
    e.includes(a) || e.push(a);
  }), e) : e === void 0 || n <= 0 ? e != null && typeof e == "object" && typeof t == "object" ? Object.assign(e, t) : t : (t !== void 0 && typeof e == "object" && typeof t == "object" && Object.keys(t).forEach((a) => {
    typeof t[a] == "object" && (e[a] === void 0 || typeof e[a] == "object") ? (e[a] === void 0 && (e[a] = Array.isArray(t[a]) ? [] : {}), e[a] = vo(e[a], t[a], { depth: n - 1, clobber: i })) : (i || typeof e[a] != "object" && typeof t[a] != "object") && (e[a] = t[a]);
  }), e);
}, lt = vo, ai = Object.freeze(hg);
let _t = lt({}, ai), Qu, Cn = [], Qn = lt({}, ai);
const Ja = (e, t) => {
  let r = lt({}, e), n = {};
  for (const i of t)
    th(i), n = lt(n, i);
  if (r = lt(r, n), n.theme && n.theme in xr) {
    const i = lt({}, Qu), a = lt(
      i.themeVariables || {},
      n.themeVariables
    );
    r.theme && r.theme in xr && (r.themeVariables = xr[r.theme].getThemeVariables(a));
  }
  return Qn = r, ih(Qn), Qn;
}, dg = (e) => (_t = lt({}, ai), _t = lt(_t, e), e.theme && xr[e.theme] && (_t.themeVariables = xr[e.theme].getThemeVariables(e.themeVariables)), Ja(_t, Cn), _t), pg = (e) => {
  Qu = lt({}, e);
}, fg = (e) => (_t = lt(_t, e), Ja(_t, Cn), _t), eh = () => lt({}, _t), mg = (e) => (ih(e), lt(Qn, e), Er()), Er = () => lt({}, Qn), th = (e) => {
  ["secure", ..._t.secure ?? []].forEach((t) => {
    e[t] !== void 0 && (re.debug(`Denied attempt to modify a secure key ${t}`, e[t]), delete e[t]);
  }), Object.keys(e).forEach((t) => {
    t.indexOf("__") === 0 && delete e[t];
  }), Object.keys(e).forEach((t) => {
    typeof e[t] == "string" && (e[t].includes("<") || e[t].includes(">") || e[t].includes("url(data:")) && delete e[t], typeof e[t] == "object" && th(e[t]);
  });
}, rh = (e) => {
  e.fontFamily && (e.themeVariables ? e.themeVariables.fontFamily || (e.themeVariables = { fontFamily: e.fontFamily }) : e.themeVariables = { fontFamily: e.fontFamily }), Cn.push(e), Ja(_t, Cn);
}, _a = (e = _t) => {
  Cn = [], Ja(e, Cn);
};
var nh = /* @__PURE__ */ ((e) => (e.LAZY_LOAD_DEPRECATED = "The configuration options lazyLoadedDiagrams and loadExternalDiagramsAtStartup are deprecated. Please use registerExternalDiagrams instead.", e))(nh || {});
const Pl = {}, gg = (e) => {
  Pl[e] || (re.warn(nh[e]), Pl[e] = !0);
}, ih = (e) => {
  e && (e.lazyLoadedDiagrams || e.loadExternalDiagramsAtStartup) && gg("LAZY_LOAD_DEPRECATED");
};
let a0 = "", Qa = "", s0 = "";
const o0 = (e) => ii(e, Er()), ah = function() {
  a0 = "", s0 = "", Qa = "";
}, sh = function(e) {
  a0 = o0(e).replace(/^\s+/g, "");
}, oh = function() {
  return a0 || Qa;
}, lh = function(e) {
  s0 = o0(e).replace(/\n\s+/g, `
`);
}, ch = function() {
  return s0;
}, uh = function(e) {
  Qa = o0(e);
}, hh = function() {
  return Qa;
}, bg = {
  getAccTitle: oh,
  setAccTitle: sh,
  getDiagramTitle: hh,
  setDiagramTitle: uh,
  getAccDescription: ch,
  setAccDescription: lh,
  clear: ah
}, vg = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  clear: ah,
  default: bg,
  getAccDescription: ch,
  getAccTitle: oh,
  getDiagramTitle: hh,
  setAccDescription: lh,
  setAccTitle: sh,
  setDiagramTitle: uh
}, Symbol.toStringTag, { value: "Module" }));
var l0 = {};
Object.defineProperty(l0, "__esModule", { value: !0 });
var dh = l0.sanitizeUrl = void 0, yg = /^([^\w]*)(javascript|data|vbscript)/im, xg = /&#(\w+)(^\w|;)?/g, _g = /&(newline|tab);/gi, wg = /[\u0000-\u001F\u007F-\u009F\u2000-\u200D\uFEFF]/gim, Sg = /^.+(:|&colon;)/gim, kg = [".", "/"];
function Tg(e) {
  return kg.indexOf(e[0]) > -1;
}
function Cg(e) {
  return e.replace(xg, function(t, r) {
    return String.fromCharCode(r);
  });
}
function Eg(e) {
  var t = Cg(e || "").replace(_g, "").replace(wg, "").trim();
  if (!t)
    return "about:blank";
  if (Tg(t))
    return t;
  var r = t.match(Sg);
  if (!r)
    return t;
  var n = r[0];
  return yg.test(n) ? "about:blank" : t;
}
dh = l0.sanitizeUrl = Eg;
var Ag = { value: () => {
} };
function ph() {
  for (var e = 0, t = arguments.length, r = {}, n; e < t; ++e) {
    if (!(n = arguments[e] + "") || n in r || /[\s.]/.test(n))
      throw new Error("illegal type: " + n);
    r[n] = [];
  }
  return new ra(r);
}
function ra(e) {
  this._ = e;
}
function Ig(e, t) {
  return e.trim().split(/^|\s+/).map(function(r) {
    var n = "", i = r.indexOf(".");
    if (i >= 0 && (n = r.slice(i + 1), r = r.slice(0, i)), r && !t.hasOwnProperty(r))
      throw new Error("unknown type: " + r);
    return { type: r, name: n };
  });
}
ra.prototype = ph.prototype = {
  constructor: ra,
  on: function(e, t) {
    var r = this._, n = Ig(e + "", r), i, a = -1, s = n.length;
    if (arguments.length < 2) {
      for (; ++a < s; )
        if ((i = (e = n[a]).type) && (i = Rg(r[i], e.name)))
          return i;
      return;
    }
    if (t != null && typeof t != "function")
      throw new Error("invalid callback: " + t);
    for (; ++a < s; )
      if (i = (e = n[a]).type)
        r[i] = Ul(r[i], e.name, t);
      else if (t == null)
        for (i in r)
          r[i] = Ul(r[i], e.name, null);
    return this;
  },
  copy: function() {
    var e = {}, t = this._;
    for (var r in t)
      e[r] = t[r].slice();
    return new ra(e);
  },
  call: function(e, t) {
    if ((i = arguments.length - 2) > 0)
      for (var r = new Array(i), n = 0, i, a; n < i; ++n)
        r[n] = arguments[n + 2];
    if (!this._.hasOwnProperty(e))
      throw new Error("unknown type: " + e);
    for (a = this._[e], n = 0, i = a.length; n < i; ++n)
      a[n].value.apply(t, r);
  },
  apply: function(e, t, r) {
    if (!this._.hasOwnProperty(e))
      throw new Error("unknown type: " + e);
    for (var n = this._[e], i = 0, a = n.length; i < a; ++i)
      n[i].value.apply(t, r);
  }
};
function Rg(e, t) {
  for (var r = 0, n = e.length, i; r < n; ++r)
    if ((i = e[r]).name === t)
      return i.value;
}
function Ul(e, t, r) {
  for (var n = 0, i = e.length; n < i; ++n)
    if (e[n].name === t) {
      e[n] = Ag, e = e.slice(0, n).concat(e.slice(n + 1));
      break;
    }
  return r != null && e.push({ name: t, value: r }), e;
}
var yo = "http://www.w3.org/1999/xhtml";
const Hl = {
  svg: "http://www.w3.org/2000/svg",
  xhtml: yo,
  xlink: "http://www.w3.org/1999/xlink",
  xml: "http://www.w3.org/XML/1998/namespace",
  xmlns: "http://www.w3.org/2000/xmlns/"
};
function es(e) {
  var t = e += "", r = t.indexOf(":");
  return r >= 0 && (t = e.slice(0, r)) !== "xmlns" && (e = e.slice(r + 1)), Hl.hasOwnProperty(t) ? { space: Hl[t], local: e } : e;
}
function Lg(e) {
  return function() {
    var t = this.ownerDocument, r = this.namespaceURI;
    return r === yo && t.documentElement.namespaceURI === yo ? t.createElement(e) : t.createElementNS(r, e);
  };
}
function Og(e) {
  return function() {
    return this.ownerDocument.createElementNS(e.space, e.local);
  };
}
function fh(e) {
  var t = es(e);
  return (t.local ? Og : Lg)(t);
}
function Ng() {
}
function c0(e) {
  return e == null ? Ng : function() {
    return this.querySelector(e);
  };
}
function Mg(e) {
  typeof e != "function" && (e = c0(e));
  for (var t = this._groups, r = t.length, n = new Array(r), i = 0; i < r; ++i)
    for (var a = t[i], s = a.length, o = n[i] = new Array(s), l, u, d = 0; d < s; ++d)
      (l = a[d]) && (u = e.call(l, l.__data__, d, a)) && ("__data__" in l && (u.__data__ = l.__data__), o[d] = u);
  return new Et(n, this._parents);
}
function Bg(e) {
  return e == null ? [] : Array.isArray(e) ? e : Array.from(e);
}
function Dg() {
  return [];
}
function mh(e) {
  return e == null ? Dg : function() {
    return this.querySelectorAll(e);
  };
}
function Fg(e) {
  return function() {
    return Bg(e.apply(this, arguments));
  };
}
function $g(e) {
  typeof e == "function" ? e = Fg(e) : e = mh(e);
  for (var t = this._groups, r = t.length, n = [], i = [], a = 0; a < r; ++a)
    for (var s = t[a], o = s.length, l, u = 0; u < o; ++u)
      (l = s[u]) && (n.push(e.call(l, l.__data__, u, s)), i.push(l));
  return new Et(n, i);
}
function gh(e) {
  return function() {
    return this.matches(e);
  };
}
function bh(e) {
  return function(t) {
    return t.matches(e);
  };
}
var zg = Array.prototype.find;
function Pg(e) {
  return function() {
    return zg.call(this.children, e);
  };
}
function Ug() {
  return this.firstElementChild;
}
function Hg(e) {
  return this.select(e == null ? Ug : Pg(typeof e == "function" ? e : bh(e)));
}
var qg = Array.prototype.filter;
function Gg() {
  return Array.from(this.children);
}
function Wg(e) {
  return function() {
    return qg.call(this.children, e);
  };
}
function jg(e) {
  return this.selectAll(e == null ? Gg : Wg(typeof e == "function" ? e : bh(e)));
}
function Yg(e) {
  typeof e != "function" && (e = gh(e));
  for (var t = this._groups, r = t.length, n = new Array(r), i = 0; i < r; ++i)
    for (var a = t[i], s = a.length, o = n[i] = [], l, u = 0; u < s; ++u)
      (l = a[u]) && e.call(l, l.__data__, u, a) && o.push(l);
  return new Et(n, this._parents);
}
function vh(e) {
  return new Array(e.length);
}
function Vg() {
  return new Et(this._enter || this._groups.map(vh), this._parents);
}
function wa(e, t) {
  this.ownerDocument = e.ownerDocument, this.namespaceURI = e.namespaceURI, this._next = null, this._parent = e, this.__data__ = t;
}
wa.prototype = {
  constructor: wa,
  appendChild: function(e) {
    return this._parent.insertBefore(e, this._next);
  },
  insertBefore: function(e, t) {
    return this._parent.insertBefore(e, t);
  },
  querySelector: function(e) {
    return this._parent.querySelector(e);
  },
  querySelectorAll: function(e) {
    return this._parent.querySelectorAll(e);
  }
};
function Xg(e) {
  return function() {
    return e;
  };
}
function Kg(e, t, r, n, i, a) {
  for (var s = 0, o, l = t.length, u = a.length; s < u; ++s)
    (o = t[s]) ? (o.__data__ = a[s], n[s] = o) : r[s] = new wa(e, a[s]);
  for (; s < l; ++s)
    (o = t[s]) && (i[s] = o);
}
function Zg(e, t, r, n, i, a, s) {
  var o, l, u = /* @__PURE__ */ new Map(), d = t.length, p = a.length, b = new Array(d), m;
  for (o = 0; o < d; ++o)
    (l = t[o]) && (b[o] = m = s.call(l, l.__data__, o, t) + "", u.has(m) ? i[o] = l : u.set(m, l));
  for (o = 0; o < p; ++o)
    m = s.call(e, a[o], o, a) + "", (l = u.get(m)) ? (n[o] = l, l.__data__ = a[o], u.delete(m)) : r[o] = new wa(e, a[o]);
  for (o = 0; o < d; ++o)
    (l = t[o]) && u.get(b[o]) === l && (i[o] = l);
}
function Jg(e) {
  return e.__data__;
}
function Qg(e, t) {
  if (!arguments.length)
    return Array.from(this, Jg);
  var r = t ? Zg : Kg, n = this._parents, i = this._groups;
  typeof e != "function" && (e = Xg(e));
  for (var a = i.length, s = new Array(a), o = new Array(a), l = new Array(a), u = 0; u < a; ++u) {
    var d = n[u], p = i[u], b = p.length, m = e4(e.call(d, d && d.__data__, u, n)), _ = m.length, k = o[u] = new Array(_), L = s[u] = new Array(_), A = l[u] = new Array(b);
    r(d, p, k, L, A, m, t);
    for (var v = 0, S = 0, C, I; v < _; ++v)
      if (C = k[v]) {
        for (v >= S && (S = v + 1); !(I = L[S]) && ++S < _; )
          ;
        C._next = I || null;
      }
  }
  return s = new Et(s, n), s._enter = o, s._exit = l, s;
}
function e4(e) {
  return typeof e == "object" && "length" in e ? e : Array.from(e);
}
function t4() {
  return new Et(this._exit || this._groups.map(vh), this._parents);
}
function r4(e, t, r) {
  var n = this.enter(), i = this, a = this.exit();
  return typeof e == "function" ? (n = e(n), n && (n = n.selection())) : n = n.append(e + ""), t != null && (i = t(i), i && (i = i.selection())), r == null ? a.remove() : r(a), n && i ? n.merge(i).order() : i;
}
function n4(e) {
  for (var t = e.selection ? e.selection() : e, r = this._groups, n = t._groups, i = r.length, a = n.length, s = Math.min(i, a), o = new Array(i), l = 0; l < s; ++l)
    for (var u = r[l], d = n[l], p = u.length, b = o[l] = new Array(p), m, _ = 0; _ < p; ++_)
      (m = u[_] || d[_]) && (b[_] = m);
  for (; l < i; ++l)
    o[l] = r[l];
  return new Et(o, this._parents);
}
function i4() {
  for (var e = this._groups, t = -1, r = e.length; ++t < r; )
    for (var n = e[t], i = n.length - 1, a = n[i], s; --i >= 0; )
      (s = n[i]) && (a && s.compareDocumentPosition(a) ^ 4 && a.parentNode.insertBefore(s, a), a = s);
  return this;
}
function a4(e) {
  e || (e = s4);
  function t(p, b) {
    return p && b ? e(p.__data__, b.__data__) : !p - !b;
  }
  for (var r = this._groups, n = r.length, i = new Array(n), a = 0; a < n; ++a) {
    for (var s = r[a], o = s.length, l = i[a] = new Array(o), u, d = 0; d < o; ++d)
      (u = s[d]) && (l[d] = u);
    l.sort(t);
  }
  return new Et(i, this._parents).order();
}
function s4(e, t) {
  return e < t ? -1 : e > t ? 1 : e >= t ? 0 : NaN;
}
function o4() {
  var e = arguments[0];
  return arguments[0] = this, e.apply(null, arguments), this;
}
function l4() {
  return Array.from(this);
}
function c4() {
  for (var e = this._groups, t = 0, r = e.length; t < r; ++t)
    for (var n = e[t], i = 0, a = n.length; i < a; ++i) {
      var s = n[i];
      if (s)
        return s;
    }
  return null;
}
function u4() {
  let e = 0;
  for (const t of this)
    ++e;
  return e;
}
function h4() {
  return !this.node();
}
function d4(e) {
  for (var t = this._groups, r = 0, n = t.length; r < n; ++r)
    for (var i = t[r], a = 0, s = i.length, o; a < s; ++a)
      (o = i[a]) && e.call(o, o.__data__, a, i);
  return this;
}
function p4(e) {
  return function() {
    this.removeAttribute(e);
  };
}
function f4(e) {
  return function() {
    this.removeAttributeNS(e.space, e.local);
  };
}
function m4(e, t) {
  return function() {
    this.setAttribute(e, t);
  };
}
function g4(e, t) {
  return function() {
    this.setAttributeNS(e.space, e.local, t);
  };
}
function b4(e, t) {
  return function() {
    var r = t.apply(this, arguments);
    r == null ? this.removeAttribute(e) : this.setAttribute(e, r);
  };
}
function v4(e, t) {
  return function() {
    var r = t.apply(this, arguments);
    r == null ? this.removeAttributeNS(e.space, e.local) : this.setAttributeNS(e.space, e.local, r);
  };
}
function y4(e, t) {
  var r = es(e);
  if (arguments.length < 2) {
    var n = this.node();
    return r.local ? n.getAttributeNS(r.space, r.local) : n.getAttribute(r);
  }
  return this.each((t == null ? r.local ? f4 : p4 : typeof t == "function" ? r.local ? v4 : b4 : r.local ? g4 : m4)(r, t));
}
function yh(e) {
  return e.ownerDocument && e.ownerDocument.defaultView || e.document && e || e.defaultView;
}
function x4(e) {
  return function() {
    this.style.removeProperty(e);
  };
}
function _4(e, t, r) {
  return function() {
    this.style.setProperty(e, t, r);
  };
}
function w4(e, t, r) {
  return function() {
    var n = t.apply(this, arguments);
    n == null ? this.style.removeProperty(e) : this.style.setProperty(e, n, r);
  };
}
function S4(e, t, r) {
  return arguments.length > 1 ? this.each((t == null ? x4 : typeof t == "function" ? w4 : _4)(e, t, r ?? "")) : En(this.node(), e);
}
function En(e, t) {
  return e.style.getPropertyValue(t) || yh(e).getComputedStyle(e, null).getPropertyValue(t);
}
function k4(e) {
  return function() {
    delete this[e];
  };
}
function T4(e, t) {
  return function() {
    this[e] = t;
  };
}
function C4(e, t) {
  return function() {
    var r = t.apply(this, arguments);
    r == null ? delete this[e] : this[e] = r;
  };
}
function E4(e, t) {
  return arguments.length > 1 ? this.each((t == null ? k4 : typeof t == "function" ? C4 : T4)(e, t)) : this.node()[e];
}
function xh(e) {
  return e.trim().split(/^|\s+/);
}
function u0(e) {
  return e.classList || new _h(e);
}
function _h(e) {
  this._node = e, this._names = xh(e.getAttribute("class") || "");
}
_h.prototype = {
  add: function(e) {
    var t = this._names.indexOf(e);
    t < 0 && (this._names.push(e), this._node.setAttribute("class", this._names.join(" ")));
  },
  remove: function(e) {
    var t = this._names.indexOf(e);
    t >= 0 && (this._names.splice(t, 1), this._node.setAttribute("class", this._names.join(" ")));
  },
  contains: function(e) {
    return this._names.indexOf(e) >= 0;
  }
};
function wh(e, t) {
  for (var r = u0(e), n = -1, i = t.length; ++n < i; )
    r.add(t[n]);
}
function Sh(e, t) {
  for (var r = u0(e), n = -1, i = t.length; ++n < i; )
    r.remove(t[n]);
}
function A4(e) {
  return function() {
    wh(this, e);
  };
}
function I4(e) {
  return function() {
    Sh(this, e);
  };
}
function R4(e, t) {
  return function() {
    (t.apply(this, arguments) ? wh : Sh)(this, e);
  };
}
function L4(e, t) {
  var r = xh(e + "");
  if (arguments.length < 2) {
    for (var n = u0(this.node()), i = -1, a = r.length; ++i < a; )
      if (!n.contains(r[i]))
        return !1;
    return !0;
  }
  return this.each((typeof t == "function" ? R4 : t ? A4 : I4)(r, t));
}
function O4() {
  this.textContent = "";
}
function N4(e) {
  return function() {
    this.textContent = e;
  };
}
function M4(e) {
  return function() {
    var t = e.apply(this, arguments);
    this.textContent = t ?? "";
  };
}
function B4(e) {
  return arguments.length ? this.each(e == null ? O4 : (typeof e == "function" ? M4 : N4)(e)) : this.node().textContent;
}
function D4() {
  this.innerHTML = "";
}
function F4(e) {
  return function() {
    this.innerHTML = e;
  };
}
function $4(e) {
  return function() {
    var t = e.apply(this, arguments);
    this.innerHTML = t ?? "";
  };
}
function z4(e) {
  return arguments.length ? this.each(e == null ? D4 : (typeof e == "function" ? $4 : F4)(e)) : this.node().innerHTML;
}
function P4() {
  this.nextSibling && this.parentNode.appendChild(this);
}
function U4() {
  return this.each(P4);
}
function H4() {
  this.previousSibling && this.parentNode.insertBefore(this, this.parentNode.firstChild);
}
function q4() {
  return this.each(H4);
}
function G4(e) {
  var t = typeof e == "function" ? e : fh(e);
  return this.select(function() {
    return this.appendChild(t.apply(this, arguments));
  });
}
function W4() {
  return null;
}
function j4(e, t) {
  var r = typeof e == "function" ? e : fh(e), n = t == null ? W4 : typeof t == "function" ? t : c0(t);
  return this.select(function() {
    return this.insertBefore(r.apply(this, arguments), n.apply(this, arguments) || null);
  });
}
function Y4() {
  var e = this.parentNode;
  e && e.removeChild(this);
}
function V4() {
  return this.each(Y4);
}
function X4() {
  var e = this.cloneNode(!1), t = this.parentNode;
  return t ? t.insertBefore(e, this.nextSibling) : e;
}
function K4() {
  var e = this.cloneNode(!0), t = this.parentNode;
  return t ? t.insertBefore(e, this.nextSibling) : e;
}
function Z4(e) {
  return this.select(e ? K4 : X4);
}
function J4(e) {
  return arguments.length ? this.property("__data__", e) : this.node().__data__;
}
function Q4(e) {
  return function(t) {
    e.call(this, t, this.__data__);
  };
}
function e2(e) {
  return e.trim().split(/^|\s+/).map(function(t) {
    var r = "", n = t.indexOf(".");
    return n >= 0 && (r = t.slice(n + 1), t = t.slice(0, n)), { type: t, name: r };
  });
}
function t2(e) {
  return function() {
    var t = this.__on;
    if (t) {
      for (var r = 0, n = -1, i = t.length, a; r < i; ++r)
        a = t[r], (!e.type || a.type === e.type) && a.name === e.name ? this.removeEventListener(a.type, a.listener, a.options) : t[++n] = a;
      ++n ? t.length = n : delete this.__on;
    }
  };
}
function r2(e, t, r) {
  return function() {
    var n = this.__on, i, a = Q4(t);
    if (n) {
      for (var s = 0, o = n.length; s < o; ++s)
        if ((i = n[s]).type === e.type && i.name === e.name) {
          this.removeEventListener(i.type, i.listener, i.options), this.addEventListener(i.type, i.listener = a, i.options = r), i.value = t;
          return;
        }
    }
    this.addEventListener(e.type, a, r), i = { type: e.type, name: e.name, value: t, listener: a, options: r }, n ? n.push(i) : this.__on = [i];
  };
}
function n2(e, t, r) {
  var n = e2(e + ""), i, a = n.length, s;
  if (arguments.length < 2) {
    var o = this.node().__on;
    if (o) {
      for (var l = 0, u = o.length, d; l < u; ++l)
        for (i = 0, d = o[l]; i < a; ++i)
          if ((s = n[i]).type === d.type && s.name === d.name)
            return d.value;
    }
    return;
  }
  for (o = t ? r2 : t2, i = 0; i < a; ++i)
    this.each(o(n[i], t, r));
  return this;
}
function kh(e, t, r) {
  var n = yh(e), i = n.CustomEvent;
  typeof i == "function" ? i = new i(t, r) : (i = n.document.createEvent("Event"), r ? (i.initEvent(t, r.bubbles, r.cancelable), i.detail = r.detail) : i.initEvent(t, !1, !1)), e.dispatchEvent(i);
}
function i2(e, t) {
  return function() {
    return kh(this, e, t);
  };
}
function a2(e, t) {
  return function() {
    return kh(this, e, t.apply(this, arguments));
  };
}
function s2(e, t) {
  return this.each((typeof t == "function" ? a2 : i2)(e, t));
}
function* o2() {
  for (var e = this._groups, t = 0, r = e.length; t < r; ++t)
    for (var n = e[t], i = 0, a = n.length, s; i < a; ++i)
      (s = n[i]) && (yield s);
}
var Th = [null];
function Et(e, t) {
  this._groups = e, this._parents = t;
}
function bi() {
  return new Et([[document.documentElement]], Th);
}
function l2() {
  return this;
}
Et.prototype = bi.prototype = {
  constructor: Et,
  select: Mg,
  selectAll: $g,
  selectChild: Hg,
  selectChildren: jg,
  filter: Yg,
  data: Qg,
  enter: Vg,
  exit: t4,
  join: r4,
  merge: n4,
  selection: l2,
  order: i4,
  sort: a4,
  call: o4,
  nodes: l4,
  node: c4,
  size: u4,
  empty: h4,
  each: d4,
  attr: y4,
  style: S4,
  property: E4,
  classed: L4,
  text: B4,
  html: z4,
  raise: U4,
  lower: q4,
  append: G4,
  insert: j4,
  remove: V4,
  clone: Z4,
  datum: J4,
  on: n2,
  dispatch: s2,
  [Symbol.iterator]: o2
};
function Zt(e) {
  return typeof e == "string" ? new Et([[document.querySelector(e)]], [document.documentElement]) : new Et([[e]], Th);
}
function h0(e, t, r) {
  e.prototype = t.prototype = r, r.constructor = e;
}
function Ch(e, t) {
  var r = Object.create(e.prototype);
  for (var n in t)
    r[n] = t[n];
  return r;
}
function vi() {
}
var si = 0.7, Sa = 1 / si, Sn = "\\s*([+-]?\\d+)\\s*", oi = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*", er = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*", c2 = /^#([0-9a-f]{3,8})$/, u2 = new RegExp(`^rgb\\(${Sn},${Sn},${Sn}\\)$`), h2 = new RegExp(`^rgb\\(${er},${er},${er}\\)$`), d2 = new RegExp(`^rgba\\(${Sn},${Sn},${Sn},${oi}\\)$`), p2 = new RegExp(`^rgba\\(${er},${er},${er},${oi}\\)$`), f2 = new RegExp(`^hsl\\(${oi},${er},${er}\\)$`), m2 = new RegExp(`^hsla\\(${oi},${er},${er},${oi}\\)$`), ql = {
  aliceblue: 15792383,
  antiquewhite: 16444375,
  aqua: 65535,
  aquamarine: 8388564,
  azure: 15794175,
  beige: 16119260,
  bisque: 16770244,
  black: 0,
  blanchedalmond: 16772045,
  blue: 255,
  blueviolet: 9055202,
  brown: 10824234,
  burlywood: 14596231,
  cadetblue: 6266528,
  chartreuse: 8388352,
  chocolate: 13789470,
  coral: 16744272,
  cornflowerblue: 6591981,
  cornsilk: 16775388,
  crimson: 14423100,
  cyan: 65535,
  darkblue: 139,
  darkcyan: 35723,
  darkgoldenrod: 12092939,
  darkgray: 11119017,
  darkgreen: 25600,
  darkgrey: 11119017,
  darkkhaki: 12433259,
  darkmagenta: 9109643,
  darkolivegreen: 5597999,
  darkorange: 16747520,
  darkorchid: 10040012,
  darkred: 9109504,
  darksalmon: 15308410,
  darkseagreen: 9419919,
  darkslateblue: 4734347,
  darkslategray: 3100495,
  darkslategrey: 3100495,
  darkturquoise: 52945,
  darkviolet: 9699539,
  deeppink: 16716947,
  deepskyblue: 49151,
  dimgray: 6908265,
  dimgrey: 6908265,
  dodgerblue: 2003199,
  firebrick: 11674146,
  floralwhite: 16775920,
  forestgreen: 2263842,
  fuchsia: 16711935,
  gainsboro: 14474460,
  ghostwhite: 16316671,
  gold: 16766720,
  goldenrod: 14329120,
  gray: 8421504,
  green: 32768,
  greenyellow: 11403055,
  grey: 8421504,
  honeydew: 15794160,
  hotpink: 16738740,
  indianred: 13458524,
  indigo: 4915330,
  ivory: 16777200,
  khaki: 15787660,
  lavender: 15132410,
  lavenderblush: 16773365,
  lawngreen: 8190976,
  lemonchiffon: 16775885,
  lightblue: 11393254,
  lightcoral: 15761536,
  lightcyan: 14745599,
  lightgoldenrodyellow: 16448210,
  lightgray: 13882323,
  lightgreen: 9498256,
  lightgrey: 13882323,
  lightpink: 16758465,
  lightsalmon: 16752762,
  lightseagreen: 2142890,
  lightskyblue: 8900346,
  lightslategray: 7833753,
  lightslategrey: 7833753,
  lightsteelblue: 11584734,
  lightyellow: 16777184,
  lime: 65280,
  limegreen: 3329330,
  linen: 16445670,
  magenta: 16711935,
  maroon: 8388608,
  mediumaquamarine: 6737322,
  mediumblue: 205,
  mediumorchid: 12211667,
  mediumpurple: 9662683,
  mediumseagreen: 3978097,
  mediumslateblue: 8087790,
  mediumspringgreen: 64154,
  mediumturquoise: 4772300,
  mediumvioletred: 13047173,
  midnightblue: 1644912,
  mintcream: 16121850,
  mistyrose: 16770273,
  moccasin: 16770229,
  navajowhite: 16768685,
  navy: 128,
  oldlace: 16643558,
  olive: 8421376,
  olivedrab: 7048739,
  orange: 16753920,
  orangered: 16729344,
  orchid: 14315734,
  palegoldenrod: 15657130,
  palegreen: 10025880,
  paleturquoise: 11529966,
  palevioletred: 14381203,
  papayawhip: 16773077,
  peachpuff: 16767673,
  peru: 13468991,
  pink: 16761035,
  plum: 14524637,
  powderblue: 11591910,
  purple: 8388736,
  rebeccapurple: 6697881,
  red: 16711680,
  rosybrown: 12357519,
  royalblue: 4286945,
  saddlebrown: 9127187,
  salmon: 16416882,
  sandybrown: 16032864,
  seagreen: 3050327,
  seashell: 16774638,
  sienna: 10506797,
  silver: 12632256,
  skyblue: 8900331,
  slateblue: 6970061,
  slategray: 7372944,
  slategrey: 7372944,
  snow: 16775930,
  springgreen: 65407,
  steelblue: 4620980,
  tan: 13808780,
  teal: 32896,
  thistle: 14204888,
  tomato: 16737095,
  turquoise: 4251856,
  violet: 15631086,
  wheat: 16113331,
  white: 16777215,
  whitesmoke: 16119285,
  yellow: 16776960,
  yellowgreen: 10145074
};
h0(vi, li, {
  copy(e) {
    return Object.assign(new this.constructor(), this, e);
  },
  displayable() {
    return this.rgb().displayable();
  },
  hex: Gl,
  // Deprecated! Use color.formatHex.
  formatHex: Gl,
  formatHex8: g2,
  formatHsl: b2,
  formatRgb: Wl,
  toString: Wl
});
function Gl() {
  return this.rgb().formatHex();
}
function g2() {
  return this.rgb().formatHex8();
}
function b2() {
  return Eh(this).formatHsl();
}
function Wl() {
  return this.rgb().formatRgb();
}
function li(e) {
  var t, r;
  return e = (e + "").trim().toLowerCase(), (t = c2.exec(e)) ? (r = t[1].length, t = parseInt(t[1], 16), r === 6 ? jl(t) : r === 3 ? new wt(t >> 8 & 15 | t >> 4 & 240, t >> 4 & 15 | t & 240, (t & 15) << 4 | t & 15, 1) : r === 8 ? Ui(t >> 24 & 255, t >> 16 & 255, t >> 8 & 255, (t & 255) / 255) : r === 4 ? Ui(t >> 12 & 15 | t >> 8 & 240, t >> 8 & 15 | t >> 4 & 240, t >> 4 & 15 | t & 240, ((t & 15) << 4 | t & 15) / 255) : null) : (t = u2.exec(e)) ? new wt(t[1], t[2], t[3], 1) : (t = h2.exec(e)) ? new wt(t[1] * 255 / 100, t[2] * 255 / 100, t[3] * 255 / 100, 1) : (t = d2.exec(e)) ? Ui(t[1], t[2], t[3], t[4]) : (t = p2.exec(e)) ? Ui(t[1] * 255 / 100, t[2] * 255 / 100, t[3] * 255 / 100, t[4]) : (t = f2.exec(e)) ? Xl(t[1], t[2] / 100, t[3] / 100, 1) : (t = m2.exec(e)) ? Xl(t[1], t[2] / 100, t[3] / 100, t[4]) : ql.hasOwnProperty(e) ? jl(ql[e]) : e === "transparent" ? new wt(NaN, NaN, NaN, 0) : null;
}
function jl(e) {
  return new wt(e >> 16 & 255, e >> 8 & 255, e & 255, 1);
}
function Ui(e, t, r, n) {
  return n <= 0 && (e = t = r = NaN), new wt(e, t, r, n);
}
function v2(e) {
  return e instanceof vi || (e = li(e)), e ? (e = e.rgb(), new wt(e.r, e.g, e.b, e.opacity)) : new wt();
}
function xo(e, t, r, n) {
  return arguments.length === 1 ? v2(e) : new wt(e, t, r, n ?? 1);
}
function wt(e, t, r, n) {
  this.r = +e, this.g = +t, this.b = +r, this.opacity = +n;
}
h0(wt, xo, Ch(vi, {
  brighter(e) {
    return e = e == null ? Sa : Math.pow(Sa, e), new wt(this.r * e, this.g * e, this.b * e, this.opacity);
  },
  darker(e) {
    return e = e == null ? si : Math.pow(si, e), new wt(this.r * e, this.g * e, this.b * e, this.opacity);
  },
  rgb() {
    return this;
  },
  clamp() {
    return new wt(nn(this.r), nn(this.g), nn(this.b), ka(this.opacity));
  },
  displayable() {
    return -0.5 <= this.r && this.r < 255.5 && -0.5 <= this.g && this.g < 255.5 && -0.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1;
  },
  hex: Yl,
  // Deprecated! Use color.formatHex.
  formatHex: Yl,
  formatHex8: y2,
  formatRgb: Vl,
  toString: Vl
}));
function Yl() {
  return `#${tn(this.r)}${tn(this.g)}${tn(this.b)}`;
}
function y2() {
  return `#${tn(this.r)}${tn(this.g)}${tn(this.b)}${tn((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;
}
function Vl() {
  const e = ka(this.opacity);
  return `${e === 1 ? "rgb(" : "rgba("}${nn(this.r)}, ${nn(this.g)}, ${nn(this.b)}${e === 1 ? ")" : `, ${e})`}`;
}
function ka(e) {
  return isNaN(e) ? 1 : Math.max(0, Math.min(1, e));
}
function nn(e) {
  return Math.max(0, Math.min(255, Math.round(e) || 0));
}
function tn(e) {
  return e = nn(e), (e < 16 ? "0" : "") + e.toString(16);
}
function Xl(e, t, r, n) {
  return n <= 0 ? e = t = r = NaN : r <= 0 || r >= 1 ? e = t = NaN : t <= 0 && (e = NaN), new Wt(e, t, r, n);
}
function Eh(e) {
  if (e instanceof Wt)
    return new Wt(e.h, e.s, e.l, e.opacity);
  if (e instanceof vi || (e = li(e)), !e)
    return new Wt();
  if (e instanceof Wt)
    return e;
  e = e.rgb();
  var t = e.r / 255, r = e.g / 255, n = e.b / 255, i = Math.min(t, r, n), a = Math.max(t, r, n), s = NaN, o = a - i, l = (a + i) / 2;
  return o ? (t === a ? s = (r - n) / o + (r < n) * 6 : r === a ? s = (n - t) / o + 2 : s = (t - r) / o + 4, o /= l < 0.5 ? a + i : 2 - a - i, s *= 60) : o = l > 0 && l < 1 ? 0 : s, new Wt(s, o, l, e.opacity);
}
function x2(e, t, r, n) {
  return arguments.length === 1 ? Eh(e) : new Wt(e, t, r, n ?? 1);
}
function Wt(e, t, r, n) {
  this.h = +e, this.s = +t, this.l = +r, this.opacity = +n;
}
h0(Wt, x2, Ch(vi, {
  brighter(e) {
    return e = e == null ? Sa : Math.pow(Sa, e), new Wt(this.h, this.s, this.l * e, this.opacity);
  },
  darker(e) {
    return e = e == null ? si : Math.pow(si, e), new Wt(this.h, this.s, this.l * e, this.opacity);
  },
  rgb() {
    var e = this.h % 360 + (this.h < 0) * 360, t = isNaN(e) || isNaN(this.s) ? 0 : this.s, r = this.l, n = r + (r < 0.5 ? r : 1 - r) * t, i = 2 * r - n;
    return new wt(
      qs(e >= 240 ? e - 240 : e + 120, i, n),
      qs(e, i, n),
      qs(e < 120 ? e + 240 : e - 120, i, n),
      this.opacity
    );
  },
  clamp() {
    return new Wt(Kl(this.h), Hi(this.s), Hi(this.l), ka(this.opacity));
  },
  displayable() {
    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;
  },
  formatHsl() {
    const e = ka(this.opacity);
    return `${e === 1 ? "hsl(" : "hsla("}${Kl(this.h)}, ${Hi(this.s) * 100}%, ${Hi(this.l) * 100}%${e === 1 ? ")" : `, ${e})`}`;
  }
}));
function Kl(e) {
  return e = (e || 0) % 360, e < 0 ? e + 360 : e;
}
function Hi(e) {
  return Math.max(0, Math.min(1, e || 0));
}
function qs(e, t, r) {
  return (e < 60 ? t + (r - t) * e / 60 : e < 180 ? r : e < 240 ? t + (r - t) * (240 - e) / 60 : t) * 255;
}
const d0 = (e) => () => e;
function Ah(e, t) {
  return function(r) {
    return e + r * t;
  };
}
function _2(e, t, r) {
  return e = Math.pow(e, r), t = Math.pow(t, r) - e, r = 1 / r, function(n) {
    return Math.pow(e + n * t, r);
  };
}
function ex(e, t) {
  var r = t - e;
  return r ? Ah(e, r > 180 || r < -180 ? r - 360 * Math.round(r / 360) : r) : d0(isNaN(e) ? t : e);
}
function w2(e) {
  return (e = +e) == 1 ? Ih : function(t, r) {
    return r - t ? _2(t, r, e) : d0(isNaN(t) ? r : t);
  };
}
function Ih(e, t) {
  var r = t - e;
  return r ? Ah(e, r) : d0(isNaN(e) ? t : e);
}
const Zl = function e(t) {
  var r = w2(t);
  function n(i, a) {
    var s = r((i = xo(i)).r, (a = xo(a)).r), o = r(i.g, a.g), l = r(i.b, a.b), u = Ih(i.opacity, a.opacity);
    return function(d) {
      return i.r = s(d), i.g = o(d), i.b = l(d), i.opacity = u(d), i + "";
    };
  }
  return n.gamma = e, n;
}(1);
function Nr(e, t) {
  return e = +e, t = +t, function(r) {
    return e * (1 - r) + t * r;
  };
}
var _o = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g, Gs = new RegExp(_o.source, "g");
function S2(e) {
  return function() {
    return e;
  };
}
function k2(e) {
  return function(t) {
    return e(t) + "";
  };
}
function T2(e, t) {
  var r = _o.lastIndex = Gs.lastIndex = 0, n, i, a, s = -1, o = [], l = [];
  for (e = e + "", t = t + ""; (n = _o.exec(e)) && (i = Gs.exec(t)); )
    (a = i.index) > r && (a = t.slice(r, a), o[s] ? o[s] += a : o[++s] = a), (n = n[0]) === (i = i[0]) ? o[s] ? o[s] += i : o[++s] = i : (o[++s] = null, l.push({ i: s, x: Nr(n, i) })), r = Gs.lastIndex;
  return r < t.length && (a = t.slice(r), o[s] ? o[s] += a : o[++s] = a), o.length < 2 ? l[0] ? k2(l[0].x) : S2(t) : (t = l.length, function(u) {
    for (var d = 0, p; d < t; ++d)
      o[(p = l[d]).i] = p.x(u);
    return o.join("");
  });
}
var Jl = 180 / Math.PI, wo = {
  translateX: 0,
  translateY: 0,
  rotate: 0,
  skewX: 0,
  scaleX: 1,
  scaleY: 1
};
function Rh(e, t, r, n, i, a) {
  var s, o, l;
  return (s = Math.sqrt(e * e + t * t)) && (e /= s, t /= s), (l = e * r + t * n) && (r -= e * l, n -= t * l), (o = Math.sqrt(r * r + n * n)) && (r /= o, n /= o, l /= o), e * n < t * r && (e = -e, t = -t, l = -l, s = -s), {
    translateX: i,
    translateY: a,
    rotate: Math.atan2(t, e) * Jl,
    skewX: Math.atan(l) * Jl,
    scaleX: s,
    scaleY: o
  };
}
var qi;
function C2(e) {
  const t = new (typeof DOMMatrix == "function" ? DOMMatrix : WebKitCSSMatrix)(e + "");
  return t.isIdentity ? wo : Rh(t.a, t.b, t.c, t.d, t.e, t.f);
}
function E2(e) {
  return e == null || (qi || (qi = document.createElementNS("http://www.w3.org/2000/svg", "g")), qi.setAttribute("transform", e), !(e = qi.transform.baseVal.consolidate())) ? wo : (e = e.matrix, Rh(e.a, e.b, e.c, e.d, e.e, e.f));
}
function Lh(e, t, r, n) {
  function i(u) {
    return u.length ? u.pop() + " " : "";
  }
  function a(u, d, p, b, m, _) {
    if (u !== p || d !== b) {
      var k = m.push("translate(", null, t, null, r);
      _.push({ i: k - 4, x: Nr(u, p) }, { i: k - 2, x: Nr(d, b) });
    } else
      (p || b) && m.push("translate(" + p + t + b + r);
  }
  function s(u, d, p, b) {
    u !== d ? (u - d > 180 ? d += 360 : d - u > 180 && (u += 360), b.push({ i: p.push(i(p) + "rotate(", null, n) - 2, x: Nr(u, d) })) : d && p.push(i(p) + "rotate(" + d + n);
  }
  function o(u, d, p, b) {
    u !== d ? b.push({ i: p.push(i(p) + "skewX(", null, n) - 2, x: Nr(u, d) }) : d && p.push(i(p) + "skewX(" + d + n);
  }
  function l(u, d, p, b, m, _) {
    if (u !== p || d !== b) {
      var k = m.push(i(m) + "scale(", null, ",", null, ")");
      _.push({ i: k - 4, x: Nr(u, p) }, { i: k - 2, x: Nr(d, b) });
    } else
      (p !== 1 || b !== 1) && m.push(i(m) + "scale(" + p + "," + b + ")");
  }
  return function(u, d) {
    var p = [], b = [];
    return u = e(u), d = e(d), a(u.translateX, u.translateY, d.translateX, d.translateY, p, b), s(u.rotate, d.rotate, p, b), o(u.skewX, d.skewX, p, b), l(u.scaleX, u.scaleY, d.scaleX, d.scaleY, p, b), u = d = null, function(m) {
      for (var _ = -1, k = b.length, L; ++_ < k; )
        p[(L = b[_]).i] = L.x(m);
      return p.join("");
    };
  };
}
var A2 = Lh(C2, "px, ", "px)", "deg)"), I2 = Lh(E2, ", ", ")", ")"), An = 0, jn = 0, qn = 0, Oh = 1e3, Ta, Yn, Ca = 0, on = 0, ts = 0, ci = typeof performance == "object" && performance.now ? performance : Date, Nh = typeof window == "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(e) {
  setTimeout(e, 17);
};
function p0() {
  return on || (Nh(R2), on = ci.now() + ts);
}
function R2() {
  on = 0;
}
function Ea() {
  this._call = this._time = this._next = null;
}
Ea.prototype = Mh.prototype = {
  constructor: Ea,
  restart: function(e, t, r) {
    if (typeof e != "function")
      throw new TypeError("callback is not a function");
    r = (r == null ? p0() : +r) + (t == null ? 0 : +t), !this._next && Yn !== this && (Yn ? Yn._next = this : Ta = this, Yn = this), this._call = e, this._time = r, So();
  },
  stop: function() {
    this._call && (this._call = null, this._time = 1 / 0, So());
  }
};
function Mh(e, t, r) {
  var n = new Ea();
  return n.restart(e, t, r), n;
}
function L2() {
  p0(), ++An;
  for (var e = Ta, t; e; )
    (t = on - e._time) >= 0 && e._call.call(void 0, t), e = e._next;
  --An;
}
function Ql() {
  on = (Ca = ci.now()) + ts, An = jn = 0;
  try {
    L2();
  } finally {
    An = 0, N2(), on = 0;
  }
}
function O2() {
  var e = ci.now(), t = e - Ca;
  t > Oh && (ts -= t, Ca = e);
}
function N2() {
  for (var e, t = Ta, r, n = 1 / 0; t; )
    t._call ? (n > t._time && (n = t._time), e = t, t = t._next) : (r = t._next, t._next = null, t = e ? e._next = r : Ta = r);
  Yn = e, So(n);
}
function So(e) {
  if (!An) {
    jn && (jn = clearTimeout(jn));
    var t = e - on;
    t > 24 ? (e < 1 / 0 && (jn = setTimeout(Ql, e - ci.now() - ts)), qn && (qn = clearInterval(qn))) : (qn || (Ca = ci.now(), qn = setInterval(O2, Oh)), An = 1, Nh(Ql));
  }
}
function ec(e, t, r) {
  var n = new Ea();
  return t = t == null ? 0 : +t, n.restart((i) => {
    n.stop(), e(i + t);
  }, t, r), n;
}
var M2 = ph("start", "end", "cancel", "interrupt"), B2 = [], Bh = 0, tc = 1, ko = 2, na = 3, rc = 4, To = 5, ia = 6;
function rs(e, t, r, n, i, a) {
  var s = e.__transition;
  if (!s)
    e.__transition = {};
  else if (r in s)
    return;
  D2(e, r, {
    name: t,
    index: n,
    // For context during callback.
    group: i,
    // For context during callback.
    on: M2,
    tween: B2,
    time: a.time,
    delay: a.delay,
    duration: a.duration,
    ease: a.ease,
    timer: null,
    state: Bh
  });
}
function f0(e, t) {
  var r = Xt(e, t);
  if (r.state > Bh)
    throw new Error("too late; already scheduled");
  return r;
}
function ar(e, t) {
  var r = Xt(e, t);
  if (r.state > na)
    throw new Error("too late; already running");
  return r;
}
function Xt(e, t) {
  var r = e.__transition;
  if (!r || !(r = r[t]))
    throw new Error("transition not found");
  return r;
}
function D2(e, t, r) {
  var n = e.__transition, i;
  n[t] = r, r.timer = Mh(a, 0, r.time);
  function a(u) {
    r.state = tc, r.timer.restart(s, r.delay, r.time), r.delay <= u && s(u - r.delay);
  }
  function s(u) {
    var d, p, b, m;
    if (r.state !== tc)
      return l();
    for (d in n)
      if (m = n[d], m.name === r.name) {
        if (m.state === na)
          return ec(s);
        m.state === rc ? (m.state = ia, m.timer.stop(), m.on.call("interrupt", e, e.__data__, m.index, m.group), delete n[d]) : +d < t && (m.state = ia, m.timer.stop(), m.on.call("cancel", e, e.__data__, m.index, m.group), delete n[d]);
      }
    if (ec(function() {
      r.state === na && (r.state = rc, r.timer.restart(o, r.delay, r.time), o(u));
    }), r.state = ko, r.on.call("start", e, e.__data__, r.index, r.group), r.state === ko) {
      for (r.state = na, i = new Array(b = r.tween.length), d = 0, p = -1; d < b; ++d)
        (m = r.tween[d].value.call(e, e.__data__, r.index, r.group)) && (i[++p] = m);
      i.length = p + 1;
    }
  }
  function o(u) {
    for (var d = u < r.duration ? r.ease.call(null, u / r.duration) : (r.timer.restart(l), r.state = To, 1), p = -1, b = i.length; ++p < b; )
      i[p].call(e, d);
    r.state === To && (r.on.call("end", e, e.__data__, r.index, r.group), l());
  }
  function l() {
    r.state = ia, r.timer.stop(), delete n[t];
    for (var u in n)
      return;
    delete e.__transition;
  }
}
function F2(e, t) {
  var r = e.__transition, n, i, a = !0, s;
  if (r) {
    t = t == null ? null : t + "";
    for (s in r) {
      if ((n = r[s]).name !== t) {
        a = !1;
        continue;
      }
      i = n.state > ko && n.state < To, n.state = ia, n.timer.stop(), n.on.call(i ? "interrupt" : "cancel", e, e.__data__, n.index, n.group), delete r[s];
    }
    a && delete e.__transition;
  }
}
function $2(e) {
  return this.each(function() {
    F2(this, e);
  });
}
function z2(e, t) {
  var r, n;
  return function() {
    var i = ar(this, e), a = i.tween;
    if (a !== r) {
      n = r = a;
      for (var s = 0, o = n.length; s < o; ++s)
        if (n[s].name === t) {
          n = n.slice(), n.splice(s, 1);
          break;
        }
    }
    i.tween = n;
  };
}
function P2(e, t, r) {
  var n, i;
  if (typeof r != "function")
    throw new Error();
  return function() {
    var a = ar(this, e), s = a.tween;
    if (s !== n) {
      i = (n = s).slice();
      for (var o = { name: t, value: r }, l = 0, u = i.length; l < u; ++l)
        if (i[l].name === t) {
          i[l] = o;
          break;
        }
      l === u && i.push(o);
    }
    a.tween = i;
  };
}
function U2(e, t) {
  var r = this._id;
  if (e += "", arguments.length < 2) {
    for (var n = Xt(this.node(), r).tween, i = 0, a = n.length, s; i < a; ++i)
      if ((s = n[i]).name === e)
        return s.value;
    return null;
  }
  return this.each((t == null ? z2 : P2)(r, e, t));
}
function m0(e, t, r) {
  var n = e._id;
  return e.each(function() {
    var i = ar(this, n);
    (i.value || (i.value = {}))[t] = r.apply(this, arguments);
  }), function(i) {
    return Xt(i, n).value[t];
  };
}
function Dh(e, t) {
  var r;
  return (typeof t == "number" ? Nr : t instanceof li ? Zl : (r = li(t)) ? (t = r, Zl) : T2)(e, t);
}
function H2(e) {
  return function() {
    this.removeAttribute(e);
  };
}
function q2(e) {
  return function() {
    this.removeAttributeNS(e.space, e.local);
  };
}
function G2(e, t, r) {
  var n, i = r + "", a;
  return function() {
    var s = this.getAttribute(e);
    return s === i ? null : s === n ? a : a = t(n = s, r);
  };
}
function W2(e, t, r) {
  var n, i = r + "", a;
  return function() {
    var s = this.getAttributeNS(e.space, e.local);
    return s === i ? null : s === n ? a : a = t(n = s, r);
  };
}
function j2(e, t, r) {
  var n, i, a;
  return function() {
    var s, o = r(this), l;
    return o == null ? void this.removeAttribute(e) : (s = this.getAttribute(e), l = o + "", s === l ? null : s === n && l === i ? a : (i = l, a = t(n = s, o)));
  };
}
function Y2(e, t, r) {
  var n, i, a;
  return function() {
    var s, o = r(this), l;
    return o == null ? void this.removeAttributeNS(e.space, e.local) : (s = this.getAttributeNS(e.space, e.local), l = o + "", s === l ? null : s === n && l === i ? a : (i = l, a = t(n = s, o)));
  };
}
function V2(e, t) {
  var r = es(e), n = r === "transform" ? I2 : Dh;
  return this.attrTween(e, typeof t == "function" ? (r.local ? Y2 : j2)(r, n, m0(this, "attr." + e, t)) : t == null ? (r.local ? q2 : H2)(r) : (r.local ? W2 : G2)(r, n, t));
}
function X2(e, t) {
  return function(r) {
    this.setAttribute(e, t.call(this, r));
  };
}
function K2(e, t) {
  return function(r) {
    this.setAttributeNS(e.space, e.local, t.call(this, r));
  };
}
function Z2(e, t) {
  var r, n;
  function i() {
    var a = t.apply(this, arguments);
    return a !== n && (r = (n = a) && K2(e, a)), r;
  }
  return i._value = t, i;
}
function J2(e, t) {
  var r, n;
  function i() {
    var a = t.apply(this, arguments);
    return a !== n && (r = (n = a) && X2(e, a)), r;
  }
  return i._value = t, i;
}
function Q2(e, t) {
  var r = "attr." + e;
  if (arguments.length < 2)
    return (r = this.tween(r)) && r._value;
  if (t == null)
    return this.tween(r, null);
  if (typeof t != "function")
    throw new Error();
  var n = es(e);
  return this.tween(r, (n.local ? Z2 : J2)(n, t));
}
function e5(e, t) {
  return function() {
    f0(this, e).delay = +t.apply(this, arguments);
  };
}
function t5(e, t) {
  return t = +t, function() {
    f0(this, e).delay = t;
  };
}
function r5(e) {
  var t = this._id;
  return arguments.length ? this.each((typeof e == "function" ? e5 : t5)(t, e)) : Xt(this.node(), t).delay;
}
function n5(e, t) {
  return function() {
    ar(this, e).duration = +t.apply(this, arguments);
  };
}
function i5(e, t) {
  return t = +t, function() {
    ar(this, e).duration = t;
  };
}
function a5(e) {
  var t = this._id;
  return arguments.length ? this.each((typeof e == "function" ? n5 : i5)(t, e)) : Xt(this.node(), t).duration;
}
function s5(e, t) {
  if (typeof t != "function")
    throw new Error();
  return function() {
    ar(this, e).ease = t;
  };
}
function o5(e) {
  var t = this._id;
  return arguments.length ? this.each(s5(t, e)) : Xt(this.node(), t).ease;
}
function l5(e, t) {
  return function() {
    var r = t.apply(this, arguments);
    if (typeof r != "function")
      throw new Error();
    ar(this, e).ease = r;
  };
}
function c5(e) {
  if (typeof e != "function")
    throw new Error();
  return this.each(l5(this._id, e));
}
function u5(e) {
  typeof e != "function" && (e = gh(e));
  for (var t = this._groups, r = t.length, n = new Array(r), i = 0; i < r; ++i)
    for (var a = t[i], s = a.length, o = n[i] = [], l, u = 0; u < s; ++u)
      (l = a[u]) && e.call(l, l.__data__, u, a) && o.push(l);
  return new Tr(n, this._parents, this._name, this._id);
}
function h5(e) {
  if (e._id !== this._id)
    throw new Error();
  for (var t = this._groups, r = e._groups, n = t.length, i = r.length, a = Math.min(n, i), s = new Array(n), o = 0; o < a; ++o)
    for (var l = t[o], u = r[o], d = l.length, p = s[o] = new Array(d), b, m = 0; m < d; ++m)
      (b = l[m] || u[m]) && (p[m] = b);
  for (; o < n; ++o)
    s[o] = t[o];
  return new Tr(s, this._parents, this._name, this._id);
}
function d5(e) {
  return (e + "").trim().split(/^|\s+/).every(function(t) {
    var r = t.indexOf(".");
    return r >= 0 && (t = t.slice(0, r)), !t || t === "start";
  });
}
function p5(e, t, r) {
  var n, i, a = d5(t) ? f0 : ar;
  return function() {
    var s = a(this, e), o = s.on;
    o !== n && (i = (n = o).copy()).on(t, r), s.on = i;
  };
}
function f5(e, t) {
  var r = this._id;
  return arguments.length < 2 ? Xt(this.node(), r).on.on(e) : this.each(p5(r, e, t));
}
function m5(e) {
  return function() {
    var t = this.parentNode;
    for (var r in this.__transition)
      if (+r !== e)
        return;
    t && t.removeChild(this);
  };
}
function g5() {
  return this.on("end.remove", m5(this._id));
}
function b5(e) {
  var t = this._name, r = this._id;
  typeof e != "function" && (e = c0(e));
  for (var n = this._groups, i = n.length, a = new Array(i), s = 0; s < i; ++s)
    for (var o = n[s], l = o.length, u = a[s] = new Array(l), d, p, b = 0; b < l; ++b)
      (d = o[b]) && (p = e.call(d, d.__data__, b, o)) && ("__data__" in d && (p.__data__ = d.__data__), u[b] = p, rs(u[b], t, r, b, u, Xt(d, r)));
  return new Tr(a, this._parents, t, r);
}
function v5(e) {
  var t = this._name, r = this._id;
  typeof e != "function" && (e = mh(e));
  for (var n = this._groups, i = n.length, a = [], s = [], o = 0; o < i; ++o)
    for (var l = n[o], u = l.length, d, p = 0; p < u; ++p)
      if (d = l[p]) {
        for (var b = e.call(d, d.__data__, p, l), m, _ = Xt(d, r), k = 0, L = b.length; k < L; ++k)
          (m = b[k]) && rs(m, t, r, k, b, _);
        a.push(b), s.push(d);
      }
  return new Tr(a, s, t, r);
}
var y5 = bi.prototype.constructor;
function x5() {
  return new y5(this._groups, this._parents);
}
function _5(e, t) {
  var r, n, i;
  return function() {
    var a = En(this, e), s = (this.style.removeProperty(e), En(this, e));
    return a === s ? null : a === r && s === n ? i : i = t(r = a, n = s);
  };
}
function Fh(e) {
  return function() {
    this.style.removeProperty(e);
  };
}
function w5(e, t, r) {
  var n, i = r + "", a;
  return function() {
    var s = En(this, e);
    return s === i ? null : s === n ? a : a = t(n = s, r);
  };
}
function S5(e, t, r) {
  var n, i, a;
  return function() {
    var s = En(this, e), o = r(this), l = o + "";
    return o == null && (l = o = (this.style.removeProperty(e), En(this, e))), s === l ? null : s === n && l === i ? a : (i = l, a = t(n = s, o));
  };
}
function k5(e, t) {
  var r, n, i, a = "style." + t, s = "end." + a, o;
  return function() {
    var l = ar(this, e), u = l.on, d = l.value[a] == null ? o || (o = Fh(t)) : void 0;
    (u !== r || i !== d) && (n = (r = u).copy()).on(s, i = d), l.on = n;
  };
}
function T5(e, t, r) {
  var n = (e += "") == "transform" ? A2 : Dh;
  return t == null ? this.styleTween(e, _5(e, n)).on("end.style." + e, Fh(e)) : typeof t == "function" ? this.styleTween(e, S5(e, n, m0(this, "style." + e, t))).each(k5(this._id, e)) : this.styleTween(e, w5(e, n, t), r).on("end.style." + e, null);
}
function C5(e, t, r) {
  return function(n) {
    this.style.setProperty(e, t.call(this, n), r);
  };
}
function E5(e, t, r) {
  var n, i;
  function a() {
    var s = t.apply(this, arguments);
    return s !== i && (n = (i = s) && C5(e, s, r)), n;
  }
  return a._value = t, a;
}
function A5(e, t, r) {
  var n = "style." + (e += "");
  if (arguments.length < 2)
    return (n = this.tween(n)) && n._value;
  if (t == null)
    return this.tween(n, null);
  if (typeof t != "function")
    throw new Error();
  return this.tween(n, E5(e, t, r ?? ""));
}
function I5(e) {
  return function() {
    this.textContent = e;
  };
}
function R5(e) {
  return function() {
    var t = e(this);
    this.textContent = t ?? "";
  };
}
function L5(e) {
  return this.tween("text", typeof e == "function" ? R5(m0(this, "text", e)) : I5(e == null ? "" : e + ""));
}
function O5(e) {
  return function(t) {
    this.textContent = e.call(this, t);
  };
}
function N5(e) {
  var t, r;
  function n() {
    var i = e.apply(this, arguments);
    return i !== r && (t = (r = i) && O5(i)), t;
  }
  return n._value = e, n;
}
function M5(e) {
  var t = "text";
  if (arguments.length < 1)
    return (t = this.tween(t)) && t._value;
  if (e == null)
    return this.tween(t, null);
  if (typeof e != "function")
    throw new Error();
  return this.tween(t, N5(e));
}
function B5() {
  for (var e = this._name, t = this._id, r = $h(), n = this._groups, i = n.length, a = 0; a < i; ++a)
    for (var s = n[a], o = s.length, l, u = 0; u < o; ++u)
      if (l = s[u]) {
        var d = Xt(l, t);
        rs(l, e, r, u, s, {
          time: d.time + d.delay + d.duration,
          delay: 0,
          duration: d.duration,
          ease: d.ease
        });
      }
  return new Tr(n, this._parents, e, r);
}
function D5() {
  var e, t, r = this, n = r._id, i = r.size();
  return new Promise(function(a, s) {
    var o = { value: s }, l = { value: function() {
      --i === 0 && a();
    } };
    r.each(function() {
      var u = ar(this, n), d = u.on;
      d !== e && (t = (e = d).copy(), t._.cancel.push(o), t._.interrupt.push(o), t._.end.push(l)), u.on = t;
    }), i === 0 && a();
  });
}
var F5 = 0;
function Tr(e, t, r, n) {
  this._groups = e, this._parents = t, this._name = r, this._id = n;
}
function $h() {
  return ++F5;
}
var fr = bi.prototype;
Tr.prototype = {
  constructor: Tr,
  select: b5,
  selectAll: v5,
  selectChild: fr.selectChild,
  selectChildren: fr.selectChildren,
  filter: u5,
  merge: h5,
  selection: x5,
  transition: B5,
  call: fr.call,
  nodes: fr.nodes,
  node: fr.node,
  size: fr.size,
  empty: fr.empty,
  each: fr.each,
  on: f5,
  attr: V2,
  attrTween: Q2,
  style: T5,
  styleTween: A5,
  text: L5,
  textTween: M5,
  remove: g5,
  tween: U2,
  delay: r5,
  duration: a5,
  ease: o5,
  easeVarying: c5,
  end: D5,
  [Symbol.iterator]: fr[Symbol.iterator]
};
function $5(e) {
  return ((e *= 2) <= 1 ? e * e * e : (e -= 2) * e * e + 2) / 2;
}
var z5 = {
  time: null,
  // Set on use.
  delay: 0,
  duration: 250,
  ease: $5
};
function P5(e, t) {
  for (var r; !(r = e.__transition) || !(r = r[t]); )
    if (!(e = e.parentNode))
      throw new Error(`transition ${t} not found`);
  return r;
}
function U5(e) {
  var t, r;
  e instanceof Tr ? (t = e._id, e = e._name) : (t = $h(), (r = z5).time = p0(), e = e == null ? null : e + "");
  for (var n = this._groups, i = n.length, a = 0; a < i; ++a)
    for (var s = n[a], o = s.length, l, u = 0; u < o; ++u)
      (l = s[u]) && rs(l, e, t, u, s, r || P5(l, t));
  return new Tr(n, this._parents, e, t);
}
bi.prototype.interrupt = $2;
bi.prototype.transition = U5;
const tx = Math.abs, rx = Math.atan2, nx = Math.cos, ix = Math.max, ax = Math.min, sx = Math.sin, ox = Math.sqrt, nc = 1e-12, g0 = Math.PI, ic = g0 / 2, lx = 2 * g0;
function cx(e) {
  return e > 1 ? 0 : e < -1 ? g0 : Math.acos(e);
}
function ux(e) {
  return e >= 1 ? ic : e <= -1 ? -ic : Math.asin(e);
}
function zh(e) {
  this._context = e;
}
zh.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    (this._line || this._line !== 0 && this._point === 1) && this._context.closePath(), this._line = 1 - this._line;
  },
  point: function(e, t) {
    switch (e = +e, t = +t, this._point) {
      case 0:
        this._point = 1, this._line ? this._context.lineTo(e, t) : this._context.moveTo(e, t);
        break;
      case 1:
        this._point = 2;
      default:
        this._context.lineTo(e, t);
        break;
    }
  }
};
function H5(e) {
  return new zh(e);
}
class Ph {
  constructor(t, r) {
    this._context = t, this._x = r;
  }
  areaStart() {
    this._line = 0;
  }
  areaEnd() {
    this._line = NaN;
  }
  lineStart() {
    this._point = 0;
  }
  lineEnd() {
    (this._line || this._line !== 0 && this._point === 1) && this._context.closePath(), this._line = 1 - this._line;
  }
  point(t, r) {
    switch (t = +t, r = +r, this._point) {
      case 0: {
        this._point = 1, this._line ? this._context.lineTo(t, r) : this._context.moveTo(t, r);
        break;
      }
      case 1:
        this._point = 2;
      default: {
        this._x ? this._context.bezierCurveTo(this._x0 = (this._x0 + t) / 2, this._y0, this._x0, r, t, r) : this._context.bezierCurveTo(this._x0, this._y0 = (this._y0 + r) / 2, t, this._y0, t, r);
        break;
      }
    }
    this._x0 = t, this._y0 = r;
  }
}
function q5(e) {
  return new Ph(e, !0);
}
function G5(e) {
  return new Ph(e, !1);
}
function Hr() {
}
function Aa(e, t, r) {
  e._context.bezierCurveTo(
    (2 * e._x0 + e._x1) / 3,
    (2 * e._y0 + e._y1) / 3,
    (e._x0 + 2 * e._x1) / 3,
    (e._y0 + 2 * e._y1) / 3,
    (e._x0 + 4 * e._x1 + t) / 6,
    (e._y0 + 4 * e._y1 + r) / 6
  );
}
function ns(e) {
  this._context = e;
}
ns.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN, this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 3:
        Aa(this, this._x1, this._y1);
      case 2:
        this._context.lineTo(this._x1, this._y1);
        break;
    }
    (this._line || this._line !== 0 && this._point === 1) && this._context.closePath(), this._line = 1 - this._line;
  },
  point: function(e, t) {
    switch (e = +e, t = +t, this._point) {
      case 0:
        this._point = 1, this._line ? this._context.lineTo(e, t) : this._context.moveTo(e, t);
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3, this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6);
      default:
        Aa(this, e, t);
        break;
    }
    this._x0 = this._x1, this._x1 = e, this._y0 = this._y1, this._y1 = t;
  }
};
function W5(e) {
  return new ns(e);
}
function Uh(e) {
  this._context = e;
}
Uh.prototype = {
  areaStart: Hr,
  areaEnd: Hr,
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN, this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x2, this._y2), this._context.closePath();
        break;
      }
      case 2: {
        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3), this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3), this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x2, this._y2), this.point(this._x3, this._y3), this.point(this._x4, this._y4);
        break;
      }
    }
  },
  point: function(e, t) {
    switch (e = +e, t = +t, this._point) {
      case 0:
        this._point = 1, this._x2 = e, this._y2 = t;
        break;
      case 1:
        this._point = 2, this._x3 = e, this._y3 = t;
        break;
      case 2:
        this._point = 3, this._x4 = e, this._y4 = t, this._context.moveTo((this._x0 + 4 * this._x1 + e) / 6, (this._y0 + 4 * this._y1 + t) / 6);
        break;
      default:
        Aa(this, e, t);
        break;
    }
    this._x0 = this._x1, this._x1 = e, this._y0 = this._y1, this._y1 = t;
  }
};
function j5(e) {
  return new Uh(e);
}
function Hh(e) {
  this._context = e;
}
Hh.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN, this._point = 0;
  },
  lineEnd: function() {
    (this._line || this._line !== 0 && this._point === 3) && this._context.closePath(), this._line = 1 - this._line;
  },
  point: function(e, t) {
    switch (e = +e, t = +t, this._point) {
      case 0:
        this._point = 1;
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        var r = (this._x0 + 4 * this._x1 + e) / 6, n = (this._y0 + 4 * this._y1 + t) / 6;
        this._line ? this._context.lineTo(r, n) : this._context.moveTo(r, n);
        break;
      case 3:
        this._point = 4;
      default:
        Aa(this, e, t);
        break;
    }
    this._x0 = this._x1, this._x1 = e, this._y0 = this._y1, this._y1 = t;
  }
};
function Y5(e) {
  return new Hh(e);
}
function qh(e, t) {
  this._basis = new ns(e), this._beta = t;
}
qh.prototype = {
  lineStart: function() {
    this._x = [], this._y = [], this._basis.lineStart();
  },
  lineEnd: function() {
    var e = this._x, t = this._y, r = e.length - 1;
    if (r > 0)
      for (var n = e[0], i = t[0], a = e[r] - n, s = t[r] - i, o = -1, l; ++o <= r; )
        l = o / r, this._basis.point(
          this._beta * e[o] + (1 - this._beta) * (n + l * a),
          this._beta * t[o] + (1 - this._beta) * (i + l * s)
        );
    this._x = this._y = null, this._basis.lineEnd();
  },
  point: function(e, t) {
    this._x.push(+e), this._y.push(+t);
  }
};
const V5 = function e(t) {
  function r(n) {
    return t === 1 ? new ns(n) : new qh(n, t);
  }
  return r.beta = function(n) {
    return e(+n);
  }, r;
}(0.85);
function Ia(e, t, r) {
  e._context.bezierCurveTo(
    e._x1 + e._k * (e._x2 - e._x0),
    e._y1 + e._k * (e._y2 - e._y0),
    e._x2 + e._k * (e._x1 - t),
    e._y2 + e._k * (e._y1 - r),
    e._x2,
    e._y2
  );
}
function b0(e, t) {
  this._context = e, this._k = (1 - t) / 6;
}
b0.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN, this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x2, this._y2);
        break;
      case 3:
        Ia(this, this._x1, this._y1);
        break;
    }
    (this._line || this._line !== 0 && this._point === 1) && this._context.closePath(), this._line = 1 - this._line;
  },
  point: function(e, t) {
    switch (e = +e, t = +t, this._point) {
      case 0:
        this._point = 1, this._line ? this._context.lineTo(e, t) : this._context.moveTo(e, t);
        break;
      case 1:
        this._point = 2, this._x1 = e, this._y1 = t;
        break;
      case 2:
        this._point = 3;
      default:
        Ia(this, e, t);
        break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = e, this._y0 = this._y1, this._y1 = this._y2, this._y2 = t;
  }
};
const X5 = function e(t) {
  function r(n) {
    return new b0(n, t);
  }
  return r.tension = function(n) {
    return e(+n);
  }, r;
}(0);
function v0(e, t) {
  this._context = e, this._k = (1 - t) / 6;
}
v0.prototype = {
  areaStart: Hr,
  areaEnd: Hr,
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN, this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x3, this._y3), this._context.closePath();
        break;
      }
      case 2: {
        this._context.lineTo(this._x3, this._y3), this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x3, this._y3), this.point(this._x4, this._y4), this.point(this._x5, this._y5);
        break;
      }
    }
  },
  point: function(e, t) {
    switch (e = +e, t = +t, this._point) {
      case 0:
        this._point = 1, this._x3 = e, this._y3 = t;
        break;
      case 1:
        this._point = 2, this._context.moveTo(this._x4 = e, this._y4 = t);
        break;
      case 2:
        this._point = 3, this._x5 = e, this._y5 = t;
        break;
      default:
        Ia(this, e, t);
        break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = e, this._y0 = this._y1, this._y1 = this._y2, this._y2 = t;
  }
};
const K5 = function e(t) {
  function r(n) {
    return new v0(n, t);
  }
  return r.tension = function(n) {
    return e(+n);
  }, r;
}(0);
function y0(e, t) {
  this._context = e, this._k = (1 - t) / 6;
}
y0.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN, this._point = 0;
  },
  lineEnd: function() {
    (this._line || this._line !== 0 && this._point === 3) && this._context.closePath(), this._line = 1 - this._line;
  },
  point: function(e, t) {
    switch (e = +e, t = +t, this._point) {
      case 0:
        this._point = 1;
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3, this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
        break;
      case 3:
        this._point = 4;
      default:
        Ia(this, e, t);
        break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = e, this._y0 = this._y1, this._y1 = this._y2, this._y2 = t;
  }
};
const Z5 = function e(t) {
  function r(n) {
    return new y0(n, t);
  }
  return r.tension = function(n) {
    return e(+n);
  }, r;
}(0);
function x0(e, t, r) {
  var n = e._x1, i = e._y1, a = e._x2, s = e._y2;
  if (e._l01_a > nc) {
    var o = 2 * e._l01_2a + 3 * e._l01_a * e._l12_a + e._l12_2a, l = 3 * e._l01_a * (e._l01_a + e._l12_a);
    n = (n * o - e._x0 * e._l12_2a + e._x2 * e._l01_2a) / l, i = (i * o - e._y0 * e._l12_2a + e._y2 * e._l01_2a) / l;
  }
  if (e._l23_a > nc) {
    var u = 2 * e._l23_2a + 3 * e._l23_a * e._l12_a + e._l12_2a, d = 3 * e._l23_a * (e._l23_a + e._l12_a);
    a = (a * u + e._x1 * e._l23_2a - t * e._l12_2a) / d, s = (s * u + e._y1 * e._l23_2a - r * e._l12_2a) / d;
  }
  e._context.bezierCurveTo(n, i, a, s, e._x2, e._y2);
}
function Gh(e, t) {
  this._context = e, this._alpha = t;
}
Gh.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN, this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x2, this._y2);
        break;
      case 3:
        this.point(this._x2, this._y2);
        break;
    }
    (this._line || this._line !== 0 && this._point === 1) && this._context.closePath(), this._line = 1 - this._line;
  },
  point: function(e, t) {
    if (e = +e, t = +t, this._point) {
      var r = this._x2 - e, n = this._y2 - t;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(r * r + n * n, this._alpha));
    }
    switch (this._point) {
      case 0:
        this._point = 1, this._line ? this._context.lineTo(e, t) : this._context.moveTo(e, t);
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
      default:
        x0(this, e, t);
        break;
    }
    this._l01_a = this._l12_a, this._l12_a = this._l23_a, this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a, this._x0 = this._x1, this._x1 = this._x2, this._x2 = e, this._y0 = this._y1, this._y1 = this._y2, this._y2 = t;
  }
};
const J5 = function e(t) {
  function r(n) {
    return t ? new Gh(n, t) : new b0(n, 0);
  }
  return r.alpha = function(n) {
    return e(+n);
  }, r;
}(0.5);
function Wh(e, t) {
  this._context = e, this._alpha = t;
}
Wh.prototype = {
  areaStart: Hr,
  areaEnd: Hr,
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN, this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x3, this._y3), this._context.closePath();
        break;
      }
      case 2: {
        this._context.lineTo(this._x3, this._y3), this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x3, this._y3), this.point(this._x4, this._y4), this.point(this._x5, this._y5);
        break;
      }
    }
  },
  point: function(e, t) {
    if (e = +e, t = +t, this._point) {
      var r = this._x2 - e, n = this._y2 - t;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(r * r + n * n, this._alpha));
    }
    switch (this._point) {
      case 0:
        this._point = 1, this._x3 = e, this._y3 = t;
        break;
      case 1:
        this._point = 2, this._context.moveTo(this._x4 = e, this._y4 = t);
        break;
      case 2:
        this._point = 3, this._x5 = e, this._y5 = t;
        break;
      default:
        x0(this, e, t);
        break;
    }
    this._l01_a = this._l12_a, this._l12_a = this._l23_a, this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a, this._x0 = this._x1, this._x1 = this._x2, this._x2 = e, this._y0 = this._y1, this._y1 = this._y2, this._y2 = t;
  }
};
const Q5 = function e(t) {
  function r(n) {
    return t ? new Wh(n, t) : new v0(n, 0);
  }
  return r.alpha = function(n) {
    return e(+n);
  }, r;
}(0.5);
function jh(e, t) {
  this._context = e, this._alpha = t;
}
jh.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN, this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function() {
    (this._line || this._line !== 0 && this._point === 3) && this._context.closePath(), this._line = 1 - this._line;
  },
  point: function(e, t) {
    if (e = +e, t = +t, this._point) {
      var r = this._x2 - e, n = this._y2 - t;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(r * r + n * n, this._alpha));
    }
    switch (this._point) {
      case 0:
        this._point = 1;
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3, this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
        break;
      case 3:
        this._point = 4;
      default:
        x0(this, e, t);
        break;
    }
    this._l01_a = this._l12_a, this._l12_a = this._l23_a, this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a, this._x0 = this._x1, this._x1 = this._x2, this._x2 = e, this._y0 = this._y1, this._y1 = this._y2, this._y2 = t;
  }
};
const e3 = function e(t) {
  function r(n) {
    return t ? new jh(n, t) : new y0(n, 0);
  }
  return r.alpha = function(n) {
    return e(+n);
  }, r;
}(0.5);
function Yh(e) {
  this._context = e;
}
Yh.prototype = {
  areaStart: Hr,
  areaEnd: Hr,
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    this._point && this._context.closePath();
  },
  point: function(e, t) {
    e = +e, t = +t, this._point ? this._context.lineTo(e, t) : (this._point = 1, this._context.moveTo(e, t));
  }
};
function t3(e) {
  return new Yh(e);
}
function ac(e) {
  return e < 0 ? -1 : 1;
}
function sc(e, t, r) {
  var n = e._x1 - e._x0, i = t - e._x1, a = (e._y1 - e._y0) / (n || i < 0 && -0), s = (r - e._y1) / (i || n < 0 && -0), o = (a * i + s * n) / (n + i);
  return (ac(a) + ac(s)) * Math.min(Math.abs(a), Math.abs(s), 0.5 * Math.abs(o)) || 0;
}
function oc(e, t) {
  var r = e._x1 - e._x0;
  return r ? (3 * (e._y1 - e._y0) / r - t) / 2 : t;
}
function Ws(e, t, r) {
  var n = e._x0, i = e._y0, a = e._x1, s = e._y1, o = (a - n) / 3;
  e._context.bezierCurveTo(n + o, i + o * t, a - o, s - o * r, a, s);
}
function Ra(e) {
  this._context = e;
}
Ra.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN, this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x1, this._y1);
        break;
      case 3:
        Ws(this, this._t0, oc(this, this._t0));
        break;
    }
    (this._line || this._line !== 0 && this._point === 1) && this._context.closePath(), this._line = 1 - this._line;
  },
  point: function(e, t) {
    var r = NaN;
    if (e = +e, t = +t, !(e === this._x1 && t === this._y1)) {
      switch (this._point) {
        case 0:
          this._point = 1, this._line ? this._context.lineTo(e, t) : this._context.moveTo(e, t);
          break;
        case 1:
          this._point = 2;
          break;
        case 2:
          this._point = 3, Ws(this, oc(this, r = sc(this, e, t)), r);
          break;
        default:
          Ws(this, this._t0, r = sc(this, e, t));
          break;
      }
      this._x0 = this._x1, this._x1 = e, this._y0 = this._y1, this._y1 = t, this._t0 = r;
    }
  }
};
function Vh(e) {
  this._context = new Xh(e);
}
(Vh.prototype = Object.create(Ra.prototype)).point = function(e, t) {
  Ra.prototype.point.call(this, t, e);
};
function Xh(e) {
  this._context = e;
}
Xh.prototype = {
  moveTo: function(e, t) {
    this._context.moveTo(t, e);
  },
  closePath: function() {
    this._context.closePath();
  },
  lineTo: function(e, t) {
    this._context.lineTo(t, e);
  },
  bezierCurveTo: function(e, t, r, n, i, a) {
    this._context.bezierCurveTo(t, e, n, r, a, i);
  }
};
function r3(e) {
  return new Ra(e);
}
function n3(e) {
  return new Vh(e);
}
function Kh(e) {
  this._context = e;
}
Kh.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x = [], this._y = [];
  },
  lineEnd: function() {
    var e = this._x, t = this._y, r = e.length;
    if (r)
      if (this._line ? this._context.lineTo(e[0], t[0]) : this._context.moveTo(e[0], t[0]), r === 2)
        this._context.lineTo(e[1], t[1]);
      else
        for (var n = lc(e), i = lc(t), a = 0, s = 1; s < r; ++a, ++s)
          this._context.bezierCurveTo(n[0][a], i[0][a], n[1][a], i[1][a], e[s], t[s]);
    (this._line || this._line !== 0 && r === 1) && this._context.closePath(), this._line = 1 - this._line, this._x = this._y = null;
  },
  point: function(e, t) {
    this._x.push(+e), this._y.push(+t);
  }
};
function lc(e) {
  var t, r = e.length - 1, n, i = new Array(r), a = new Array(r), s = new Array(r);
  for (i[0] = 0, a[0] = 2, s[0] = e[0] + 2 * e[1], t = 1; t < r - 1; ++t)
    i[t] = 1, a[t] = 4, s[t] = 4 * e[t] + 2 * e[t + 1];
  for (i[r - 1] = 2, a[r - 1] = 7, s[r - 1] = 8 * e[r - 1] + e[r], t = 1; t < r; ++t)
    n = i[t] / a[t - 1], a[t] -= n, s[t] -= n * s[t - 1];
  for (i[r - 1] = s[r - 1] / a[r - 1], t = r - 2; t >= 0; --t)
    i[t] = (s[t] - i[t + 1]) / a[t];
  for (a[r - 1] = (e[r] + i[r - 1]) / 2, t = 0; t < r - 1; ++t)
    a[t] = 2 * e[t + 1] - i[t + 1];
  return [i, a];
}
function i3(e) {
  return new Kh(e);
}
function is(e, t) {
  this._context = e, this._t = t;
}
is.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x = this._y = NaN, this._point = 0;
  },
  lineEnd: function() {
    0 < this._t && this._t < 1 && this._point === 2 && this._context.lineTo(this._x, this._y), (this._line || this._line !== 0 && this._point === 1) && this._context.closePath(), this._line >= 0 && (this._t = 1 - this._t, this._line = 1 - this._line);
  },
  point: function(e, t) {
    switch (e = +e, t = +t, this._point) {
      case 0:
        this._point = 1, this._line ? this._context.lineTo(e, t) : this._context.moveTo(e, t);
        break;
      case 1:
        this._point = 2;
      default: {
        if (this._t <= 0)
          this._context.lineTo(this._x, t), this._context.lineTo(e, t);
        else {
          var r = this._x * (1 - this._t) + e * this._t;
          this._context.lineTo(r, this._y), this._context.lineTo(r, t);
        }
        break;
      }
    }
    this._x = e, this._y = t;
  }
};
function a3(e) {
  return new is(e, 0.5);
}
function s3(e) {
  return new is(e, 0);
}
function o3(e) {
  return new is(e, 1);
}
function Vn(e, t, r) {
  this.k = e, this.x = t, this.y = r;
}
Vn.prototype = {
  constructor: Vn,
  scale: function(e) {
    return e === 1 ? this : new Vn(this.k * e, this.x, this.y);
  },
  translate: function(e, t) {
    return e === 0 & t === 0 ? this : new Vn(this.k, this.x + this.k * e, this.y + this.k * t);
  },
  apply: function(e) {
    return [e[0] * this.k + this.x, e[1] * this.k + this.y];
  },
  applyX: function(e) {
    return e * this.k + this.x;
  },
  applyY: function(e) {
    return e * this.k + this.y;
  },
  invert: function(e) {
    return [(e[0] - this.x) / this.k, (e[1] - this.y) / this.k];
  },
  invertX: function(e) {
    return (e - this.x) / this.k;
  },
  invertY: function(e) {
    return (e - this.y) / this.k;
  },
  rescaleX: function(e) {
    return e.copy().domain(e.range().map(this.invertX, this).map(e.invert, e));
  },
  rescaleY: function(e) {
    return e.copy().domain(e.range().map(this.invertY, this).map(e.invert, e));
  },
  toString: function() {
    return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")";
  }
};
Vn.prototype;
var l3 = typeof global == "object" && global && global.Object === Object && global;
const Zh = l3;
var c3 = typeof self == "object" && self && self.Object === Object && self, u3 = Zh || c3 || Function("return this")();
const Wr = u3;
var h3 = Wr.Symbol;
const La = h3;
var Jh = Object.prototype, d3 = Jh.hasOwnProperty, p3 = Jh.toString, Gn = La ? La.toStringTag : void 0;
function f3(e) {
  var t = d3.call(e, Gn), r = e[Gn];
  try {
    e[Gn] = void 0;
    var n = !0;
  } catch {
  }
  var i = p3.call(e);
  return n && (t ? e[Gn] = r : delete e[Gn]), i;
}
var m3 = Object.prototype, g3 = m3.toString;
function b3(e) {
  return g3.call(e);
}
var v3 = "[object Null]", y3 = "[object Undefined]", cc = La ? La.toStringTag : void 0;
function yi(e) {
  return e == null ? e === void 0 ? y3 : v3 : cc && cc in Object(e) ? f3(e) : b3(e);
}
function Qh(e) {
  var t = typeof e;
  return e != null && (t == "object" || t == "function");
}
var x3 = "[object AsyncFunction]", _3 = "[object Function]", w3 = "[object GeneratorFunction]", S3 = "[object Proxy]";
function ed(e) {
  if (!Qh(e))
    return !1;
  var t = yi(e);
  return t == _3 || t == w3 || t == x3 || t == S3;
}
var k3 = Wr["__core-js_shared__"];
const js = k3;
var uc = function() {
  var e = /[^.]+$/.exec(js && js.keys && js.keys.IE_PROTO || "");
  return e ? "Symbol(src)_1." + e : "";
}();
function T3(e) {
  return !!uc && uc in e;
}
var C3 = Function.prototype, E3 = C3.toString;
function hn(e) {
  if (e != null) {
    try {
      return E3.call(e);
    } catch {
    }
    try {
      return e + "";
    } catch {
    }
  }
  return "";
}
var A3 = /[\\^$.*+?()[\]{}|]/g, I3 = /^\[object .+?Constructor\]$/, R3 = Function.prototype, L3 = Object.prototype, O3 = R3.toString, N3 = L3.hasOwnProperty, M3 = RegExp(
  "^" + O3.call(N3).replace(A3, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
);
function B3(e) {
  if (!Qh(e) || T3(e))
    return !1;
  var t = ed(e) ? M3 : I3;
  return t.test(hn(e));
}
function D3(e, t) {
  return e == null ? void 0 : e[t];
}
function Dn(e, t) {
  var r = D3(e, t);
  return B3(r) ? r : void 0;
}
var F3 = Dn(Object, "create");
const ui = F3;
function $3() {
  this.__data__ = ui ? ui(null) : {}, this.size = 0;
}
function z3(e) {
  var t = this.has(e) && delete this.__data__[e];
  return this.size -= t ? 1 : 0, t;
}
var P3 = "__lodash_hash_undefined__", U3 = Object.prototype, H3 = U3.hasOwnProperty;
function q3(e) {
  var t = this.__data__;
  if (ui) {
    var r = t[e];
    return r === P3 ? void 0 : r;
  }
  return H3.call(t, e) ? t[e] : void 0;
}
var G3 = Object.prototype, W3 = G3.hasOwnProperty;
function j3(e) {
  var t = this.__data__;
  return ui ? t[e] !== void 0 : W3.call(t, e);
}
var Y3 = "__lodash_hash_undefined__";
function V3(e, t) {
  var r = this.__data__;
  return this.size += this.has(e) ? 0 : 1, r[e] = ui && t === void 0 ? Y3 : t, this;
}
function ln(e) {
  var t = -1, r = e == null ? 0 : e.length;
  for (this.clear(); ++t < r; ) {
    var n = e[t];
    this.set(n[0], n[1]);
  }
}
ln.prototype.clear = $3;
ln.prototype.delete = z3;
ln.prototype.get = q3;
ln.prototype.has = j3;
ln.prototype.set = V3;
function X3() {
  this.__data__ = [], this.size = 0;
}
function K3(e, t) {
  return e === t || e !== e && t !== t;
}
function as(e, t) {
  for (var r = e.length; r--; )
    if (K3(e[r][0], t))
      return r;
  return -1;
}
var Z3 = Array.prototype, J3 = Z3.splice;
function Q3(e) {
  var t = this.__data__, r = as(t, e);
  if (r < 0)
    return !1;
  var n = t.length - 1;
  return r == n ? t.pop() : J3.call(t, r, 1), --this.size, !0;
}
function e6(e) {
  var t = this.__data__, r = as(t, e);
  return r < 0 ? void 0 : t[r][1];
}
function t6(e) {
  return as(this.__data__, e) > -1;
}
function r6(e, t) {
  var r = this.__data__, n = as(r, e);
  return n < 0 ? (++this.size, r.push([e, t])) : r[n][1] = t, this;
}
function Fn(e) {
  var t = -1, r = e == null ? 0 : e.length;
  for (this.clear(); ++t < r; ) {
    var n = e[t];
    this.set(n[0], n[1]);
  }
}
Fn.prototype.clear = X3;
Fn.prototype.delete = Q3;
Fn.prototype.get = e6;
Fn.prototype.has = t6;
Fn.prototype.set = r6;
var n6 = Dn(Wr, "Map");
const Oa = n6;
function i6() {
  this.size = 0, this.__data__ = {
    hash: new ln(),
    map: new (Oa || Fn)(),
    string: new ln()
  };
}
function a6(e) {
  var t = typeof e;
  return t == "string" || t == "number" || t == "symbol" || t == "boolean" ? e !== "__proto__" : e === null;
}
function ss(e, t) {
  var r = e.__data__;
  return a6(t) ? r[typeof t == "string" ? "string" : "hash"] : r.map;
}
function s6(e) {
  var t = ss(this, e).delete(e);
  return this.size -= t ? 1 : 0, t;
}
function o6(e) {
  return ss(this, e).get(e);
}
function l6(e) {
  return ss(this, e).has(e);
}
function c6(e, t) {
  var r = ss(this, e), n = r.size;
  return r.set(e, t), this.size += r.size == n ? 0 : 1, this;
}
function dn(e) {
  var t = -1, r = e == null ? 0 : e.length;
  for (this.clear(); ++t < r; ) {
    var n = e[t];
    this.set(n[0], n[1]);
  }
}
dn.prototype.clear = i6;
dn.prototype.delete = s6;
dn.prototype.get = o6;
dn.prototype.has = l6;
dn.prototype.set = c6;
var u6 = "Expected a function";
function xi(e, t) {
  if (typeof e != "function" || t != null && typeof t != "function")
    throw new TypeError(u6);
  var r = function() {
    var n = arguments, i = t ? t.apply(this, n) : n[0], a = r.cache;
    if (a.has(i))
      return a.get(i);
    var s = e.apply(this, n);
    return r.cache = a.set(i, s) || a, s;
  };
  return r.cache = new (xi.Cache || dn)(), r;
}
xi.Cache = dn;
/*! js-yaml 4.1.0 https://github.com/nodeca/js-yaml @license MIT */
function td(e) {
  return typeof e > "u" || e === null;
}
function h6(e) {
  return typeof e == "object" && e !== null;
}
function d6(e) {
  return Array.isArray(e) ? e : td(e) ? [] : [e];
}
function p6(e, t) {
  var r, n, i, a;
  if (t)
    for (a = Object.keys(t), r = 0, n = a.length; r < n; r += 1)
      i = a[r], e[i] = t[i];
  return e;
}
function f6(e, t) {
  var r = "", n;
  for (n = 0; n < t; n += 1)
    r += e;
  return r;
}
function m6(e) {
  return e === 0 && Number.NEGATIVE_INFINITY === 1 / e;
}
var g6 = td, b6 = h6, v6 = d6, y6 = f6, x6 = m6, _6 = p6, dt = {
  isNothing: g6,
  isObject: b6,
  toArray: v6,
  repeat: y6,
  isNegativeZero: x6,
  extend: _6
};
function rd(e, t) {
  var r = "", n = e.reason || "(unknown reason)";
  return e.mark ? (e.mark.name && (r += 'in "' + e.mark.name + '" '), r += "(" + (e.mark.line + 1) + ":" + (e.mark.column + 1) + ")", !t && e.mark.snippet && (r += `

` + e.mark.snippet), n + " " + r) : n;
}
function hi(e, t) {
  Error.call(this), this.name = "YAMLException", this.reason = e, this.mark = t, this.message = rd(this, !1), Error.captureStackTrace ? Error.captureStackTrace(this, this.constructor) : this.stack = new Error().stack || "";
}
hi.prototype = Object.create(Error.prototype);
hi.prototype.constructor = hi;
hi.prototype.toString = function(t) {
  return this.name + ": " + rd(this, t);
};
var br = hi;
function Ys(e, t, r, n, i) {
  var a = "", s = "", o = Math.floor(i / 2) - 1;
  return n - t > o && (a = " ... ", t = n - o + a.length), r - n > o && (s = " ...", r = n + o - s.length), {
    str: a + e.slice(t, r).replace(/\t/g, "→") + s,
    pos: n - t + a.length
    // relative position
  };
}
function Vs(e, t) {
  return dt.repeat(" ", t - e.length) + e;
}
function w6(e, t) {
  if (t = Object.create(t || null), !e.buffer)
    return null;
  t.maxLength || (t.maxLength = 79), typeof t.indent != "number" && (t.indent = 1), typeof t.linesBefore != "number" && (t.linesBefore = 3), typeof t.linesAfter != "number" && (t.linesAfter = 2);
  for (var r = /\r?\n|\r|\0/g, n = [0], i = [], a, s = -1; a = r.exec(e.buffer); )
    i.push(a.index), n.push(a.index + a[0].length), e.position <= a.index && s < 0 && (s = n.length - 2);
  s < 0 && (s = n.length - 1);
  var o = "", l, u, d = Math.min(e.line + t.linesAfter, i.length).toString().length, p = t.maxLength - (t.indent + d + 3);
  for (l = 1; l <= t.linesBefore && !(s - l < 0); l++)
    u = Ys(
      e.buffer,
      n[s - l],
      i[s - l],
      e.position - (n[s] - n[s - l]),
      p
    ), o = dt.repeat(" ", t.indent) + Vs((e.line - l + 1).toString(), d) + " | " + u.str + `
` + o;
  for (u = Ys(e.buffer, n[s], i[s], e.position, p), o += dt.repeat(" ", t.indent) + Vs((e.line + 1).toString(), d) + " | " + u.str + `
`, o += dt.repeat("-", t.indent + d + 3 + u.pos) + `^
`, l = 1; l <= t.linesAfter && !(s + l >= i.length); l++)
    u = Ys(
      e.buffer,
      n[s + l],
      i[s + l],
      e.position - (n[s] - n[s + l]),
      p
    ), o += dt.repeat(" ", t.indent) + Vs((e.line + l + 1).toString(), d) + " | " + u.str + `
`;
  return o.replace(/\n$/, "");
}
var S6 = w6, k6 = [
  "kind",
  "multi",
  "resolve",
  "construct",
  "instanceOf",
  "predicate",
  "represent",
  "representName",
  "defaultStyle",
  "styleAliases"
], T6 = [
  "scalar",
  "sequence",
  "mapping"
];
function C6(e) {
  var t = {};
  return e !== null && Object.keys(e).forEach(function(r) {
    e[r].forEach(function(n) {
      t[String(n)] = r;
    });
  }), t;
}
function E6(e, t) {
  if (t = t || {}, Object.keys(t).forEach(function(r) {
    if (k6.indexOf(r) === -1)
      throw new br('Unknown option "' + r + '" is met in definition of "' + e + '" YAML type.');
  }), this.options = t, this.tag = e, this.kind = t.kind || null, this.resolve = t.resolve || function() {
    return !0;
  }, this.construct = t.construct || function(r) {
    return r;
  }, this.instanceOf = t.instanceOf || null, this.predicate = t.predicate || null, this.represent = t.represent || null, this.representName = t.representName || null, this.defaultStyle = t.defaultStyle || null, this.multi = t.multi || !1, this.styleAliases = C6(t.styleAliases || null), T6.indexOf(this.kind) === -1)
    throw new br('Unknown kind "' + this.kind + '" is specified for "' + e + '" YAML type.');
}
var ct = E6;
function hc(e, t) {
  var r = [];
  return e[t].forEach(function(n) {
    var i = r.length;
    r.forEach(function(a, s) {
      a.tag === n.tag && a.kind === n.kind && a.multi === n.multi && (i = s);
    }), r[i] = n;
  }), r;
}
function A6() {
  var e = {
    scalar: {},
    sequence: {},
    mapping: {},
    fallback: {},
    multi: {
      scalar: [],
      sequence: [],
      mapping: [],
      fallback: []
    }
  }, t, r;
  function n(i) {
    i.multi ? (e.multi[i.kind].push(i), e.multi.fallback.push(i)) : e[i.kind][i.tag] = e.fallback[i.tag] = i;
  }
  for (t = 0, r = arguments.length; t < r; t += 1)
    arguments[t].forEach(n);
  return e;
}
function Co(e) {
  return this.extend(e);
}
Co.prototype.extend = function(t) {
  var r = [], n = [];
  if (t instanceof ct)
    n.push(t);
  else if (Array.isArray(t))
    n = n.concat(t);
  else if (t && (Array.isArray(t.implicit) || Array.isArray(t.explicit)))
    t.implicit && (r = r.concat(t.implicit)), t.explicit && (n = n.concat(t.explicit));
  else
    throw new br("Schema.extend argument should be a Type, [ Type ], or a schema definition ({ implicit: [...], explicit: [...] })");
  r.forEach(function(a) {
    if (!(a instanceof ct))
      throw new br("Specified list of YAML types (or a single Type object) contains a non-Type object.");
    if (a.loadKind && a.loadKind !== "scalar")
      throw new br("There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.");
    if (a.multi)
      throw new br("There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.");
  }), n.forEach(function(a) {
    if (!(a instanceof ct))
      throw new br("Specified list of YAML types (or a single Type object) contains a non-Type object.");
  });
  var i = Object.create(Co.prototype);
  return i.implicit = (this.implicit || []).concat(r), i.explicit = (this.explicit || []).concat(n), i.compiledImplicit = hc(i, "implicit"), i.compiledExplicit = hc(i, "explicit"), i.compiledTypeMap = A6(i.compiledImplicit, i.compiledExplicit), i;
};
var I6 = Co, R6 = new ct("tag:yaml.org,2002:str", {
  kind: "scalar",
  construct: function(e) {
    return e !== null ? e : "";
  }
}), L6 = new ct("tag:yaml.org,2002:seq", {
  kind: "sequence",
  construct: function(e) {
    return e !== null ? e : [];
  }
}), O6 = new ct("tag:yaml.org,2002:map", {
  kind: "mapping",
  construct: function(e) {
    return e !== null ? e : {};
  }
}), nd = new I6({
  explicit: [
    R6,
    L6,
    O6
  ]
});
function N6(e) {
  if (e === null)
    return !0;
  var t = e.length;
  return t === 1 && e === "~" || t === 4 && (e === "null" || e === "Null" || e === "NULL");
}
function M6() {
  return null;
}
function B6(e) {
  return e === null;
}
var D6 = new ct("tag:yaml.org,2002:null", {
  kind: "scalar",
  resolve: N6,
  construct: M6,
  predicate: B6,
  represent: {
    canonical: function() {
      return "~";
    },
    lowercase: function() {
      return "null";
    },
    uppercase: function() {
      return "NULL";
    },
    camelcase: function() {
      return "Null";
    },
    empty: function() {
      return "";
    }
  },
  defaultStyle: "lowercase"
});
function F6(e) {
  if (e === null)
    return !1;
  var t = e.length;
  return t === 4 && (e === "true" || e === "True" || e === "TRUE") || t === 5 && (e === "false" || e === "False" || e === "FALSE");
}
function $6(e) {
  return e === "true" || e === "True" || e === "TRUE";
}
function z6(e) {
  return Object.prototype.toString.call(e) === "[object Boolean]";
}
var P6 = new ct("tag:yaml.org,2002:bool", {
  kind: "scalar",
  resolve: F6,
  construct: $6,
  predicate: z6,
  represent: {
    lowercase: function(e) {
      return e ? "true" : "false";
    },
    uppercase: function(e) {
      return e ? "TRUE" : "FALSE";
    },
    camelcase: function(e) {
      return e ? "True" : "False";
    }
  },
  defaultStyle: "lowercase"
});
function U6(e) {
  return 48 <= e && e <= 57 || 65 <= e && e <= 70 || 97 <= e && e <= 102;
}
function H6(e) {
  return 48 <= e && e <= 55;
}
function q6(e) {
  return 48 <= e && e <= 57;
}
function G6(e) {
  if (e === null)
    return !1;
  var t = e.length, r = 0, n = !1, i;
  if (!t)
    return !1;
  if (i = e[r], (i === "-" || i === "+") && (i = e[++r]), i === "0") {
    if (r + 1 === t)
      return !0;
    if (i = e[++r], i === "b") {
      for (r++; r < t; r++)
        if (i = e[r], i !== "_") {
          if (i !== "0" && i !== "1")
            return !1;
          n = !0;
        }
      return n && i !== "_";
    }
    if (i === "x") {
      for (r++; r < t; r++)
        if (i = e[r], i !== "_") {
          if (!U6(e.charCodeAt(r)))
            return !1;
          n = !0;
        }
      return n && i !== "_";
    }
    if (i === "o") {
      for (r++; r < t; r++)
        if (i = e[r], i !== "_") {
          if (!H6(e.charCodeAt(r)))
            return !1;
          n = !0;
        }
      return n && i !== "_";
    }
  }
  if (i === "_")
    return !1;
  for (; r < t; r++)
    if (i = e[r], i !== "_") {
      if (!q6(e.charCodeAt(r)))
        return !1;
      n = !0;
    }
  return !(!n || i === "_");
}
function W6(e) {
  var t = e, r = 1, n;
  if (t.indexOf("_") !== -1 && (t = t.replace(/_/g, "")), n = t[0], (n === "-" || n === "+") && (n === "-" && (r = -1), t = t.slice(1), n = t[0]), t === "0")
    return 0;
  if (n === "0") {
    if (t[1] === "b")
      return r * parseInt(t.slice(2), 2);
    if (t[1] === "x")
      return r * parseInt(t.slice(2), 16);
    if (t[1] === "o")
      return r * parseInt(t.slice(2), 8);
  }
  return r * parseInt(t, 10);
}
function j6(e) {
  return Object.prototype.toString.call(e) === "[object Number]" && e % 1 === 0 && !dt.isNegativeZero(e);
}
var Y6 = new ct("tag:yaml.org,2002:int", {
  kind: "scalar",
  resolve: G6,
  construct: W6,
  predicate: j6,
  represent: {
    binary: function(e) {
      return e >= 0 ? "0b" + e.toString(2) : "-0b" + e.toString(2).slice(1);
    },
    octal: function(e) {
      return e >= 0 ? "0o" + e.toString(8) : "-0o" + e.toString(8).slice(1);
    },
    decimal: function(e) {
      return e.toString(10);
    },
    /* eslint-disable max-len */
    hexadecimal: function(e) {
      return e >= 0 ? "0x" + e.toString(16).toUpperCase() : "-0x" + e.toString(16).toUpperCase().slice(1);
    }
  },
  defaultStyle: "decimal",
  styleAliases: {
    binary: [2, "bin"],
    octal: [8, "oct"],
    decimal: [10, "dec"],
    hexadecimal: [16, "hex"]
  }
}), V6 = new RegExp(
  // 2.5e4, 2.5 and integers
  "^(?:[-+]?(?:[0-9][0-9_]*)(?:\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?|\\.[0-9_]+(?:[eE][-+]?[0-9]+)?|[-+]?\\.(?:inf|Inf|INF)|\\.(?:nan|NaN|NAN))$"
);
function X6(e) {
  return !(e === null || !V6.test(e) || // Quick hack to not allow integers end with `_`
  // Probably should update regexp & check speed
  e[e.length - 1] === "_");
}
function K6(e) {
  var t, r;
  return t = e.replace(/_/g, "").toLowerCase(), r = t[0] === "-" ? -1 : 1, "+-".indexOf(t[0]) >= 0 && (t = t.slice(1)), t === ".inf" ? r === 1 ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY : t === ".nan" ? NaN : r * parseFloat(t, 10);
}
var Z6 = /^[-+]?[0-9]+e/;
function J6(e, t) {
  var r;
  if (isNaN(e))
    switch (t) {
      case "lowercase":
        return ".nan";
      case "uppercase":
        return ".NAN";
      case "camelcase":
        return ".NaN";
    }
  else if (Number.POSITIVE_INFINITY === e)
    switch (t) {
      case "lowercase":
        return ".inf";
      case "uppercase":
        return ".INF";
      case "camelcase":
        return ".Inf";
    }
  else if (Number.NEGATIVE_INFINITY === e)
    switch (t) {
      case "lowercase":
        return "-.inf";
      case "uppercase":
        return "-.INF";
      case "camelcase":
        return "-.Inf";
    }
  else if (dt.isNegativeZero(e))
    return "-0.0";
  return r = e.toString(10), Z6.test(r) ? r.replace("e", ".e") : r;
}
function Q6(e) {
  return Object.prototype.toString.call(e) === "[object Number]" && (e % 1 !== 0 || dt.isNegativeZero(e));
}
var eb = new ct("tag:yaml.org,2002:float", {
  kind: "scalar",
  resolve: X6,
  construct: K6,
  predicate: Q6,
  represent: J6,
  defaultStyle: "lowercase"
}), tb = nd.extend({
  implicit: [
    D6,
    P6,
    Y6,
    eb
  ]
}), rb = tb, id = new RegExp(
  "^([0-9][0-9][0-9][0-9])-([0-9][0-9])-([0-9][0-9])$"
), ad = new RegExp(
  "^([0-9][0-9][0-9][0-9])-([0-9][0-9]?)-([0-9][0-9]?)(?:[Tt]|[ \\t]+)([0-9][0-9]?):([0-9][0-9]):([0-9][0-9])(?:\\.([0-9]*))?(?:[ \\t]*(Z|([-+])([0-9][0-9]?)(?::([0-9][0-9]))?))?$"
);
function nb(e) {
  return e === null ? !1 : id.exec(e) !== null || ad.exec(e) !== null;
}
function ib(e) {
  var t, r, n, i, a, s, o, l = 0, u = null, d, p, b;
  if (t = id.exec(e), t === null && (t = ad.exec(e)), t === null)
    throw new Error("Date resolve error");
  if (r = +t[1], n = +t[2] - 1, i = +t[3], !t[4])
    return new Date(Date.UTC(r, n, i));
  if (a = +t[4], s = +t[5], o = +t[6], t[7]) {
    for (l = t[7].slice(0, 3); l.length < 3; )
      l += "0";
    l = +l;
  }
  return t[9] && (d = +t[10], p = +(t[11] || 0), u = (d * 60 + p) * 6e4, t[9] === "-" && (u = -u)), b = new Date(Date.UTC(r, n, i, a, s, o, l)), u && b.setTime(b.getTime() - u), b;
}
function ab(e) {
  return e.toISOString();
}
var sb = new ct("tag:yaml.org,2002:timestamp", {
  kind: "scalar",
  resolve: nb,
  construct: ib,
  instanceOf: Date,
  represent: ab
});
function ob(e) {
  return e === "<<" || e === null;
}
var lb = new ct("tag:yaml.org,2002:merge", {
  kind: "scalar",
  resolve: ob
}), _0 = `ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=
\r`;
function cb(e) {
  if (e === null)
    return !1;
  var t, r, n = 0, i = e.length, a = _0;
  for (r = 0; r < i; r++)
    if (t = a.indexOf(e.charAt(r)), !(t > 64)) {
      if (t < 0)
        return !1;
      n += 6;
    }
  return n % 8 === 0;
}
function ub(e) {
  var t, r, n = e.replace(/[\r\n=]/g, ""), i = n.length, a = _0, s = 0, o = [];
  for (t = 0; t < i; t++)
    t % 4 === 0 && t && (o.push(s >> 16 & 255), o.push(s >> 8 & 255), o.push(s & 255)), s = s << 6 | a.indexOf(n.charAt(t));
  return r = i % 4 * 6, r === 0 ? (o.push(s >> 16 & 255), o.push(s >> 8 & 255), o.push(s & 255)) : r === 18 ? (o.push(s >> 10 & 255), o.push(s >> 2 & 255)) : r === 12 && o.push(s >> 4 & 255), new Uint8Array(o);
}
function hb(e) {
  var t = "", r = 0, n, i, a = e.length, s = _0;
  for (n = 0; n < a; n++)
    n % 3 === 0 && n && (t += s[r >> 18 & 63], t += s[r >> 12 & 63], t += s[r >> 6 & 63], t += s[r & 63]), r = (r << 8) + e[n];
  return i = a % 3, i === 0 ? (t += s[r >> 18 & 63], t += s[r >> 12 & 63], t += s[r >> 6 & 63], t += s[r & 63]) : i === 2 ? (t += s[r >> 10 & 63], t += s[r >> 4 & 63], t += s[r << 2 & 63], t += s[64]) : i === 1 && (t += s[r >> 2 & 63], t += s[r << 4 & 63], t += s[64], t += s[64]), t;
}
function db(e) {
  return Object.prototype.toString.call(e) === "[object Uint8Array]";
}
var pb = new ct("tag:yaml.org,2002:binary", {
  kind: "scalar",
  resolve: cb,
  construct: ub,
  predicate: db,
  represent: hb
}), fb = Object.prototype.hasOwnProperty, mb = Object.prototype.toString;
function gb(e) {
  if (e === null)
    return !0;
  var t = [], r, n, i, a, s, o = e;
  for (r = 0, n = o.length; r < n; r += 1) {
    if (i = o[r], s = !1, mb.call(i) !== "[object Object]")
      return !1;
    for (a in i)
      if (fb.call(i, a))
        if (!s)
          s = !0;
        else
          return !1;
    if (!s)
      return !1;
    if (t.indexOf(a) === -1)
      t.push(a);
    else
      return !1;
  }
  return !0;
}
function bb(e) {
  return e !== null ? e : [];
}
var vb = new ct("tag:yaml.org,2002:omap", {
  kind: "sequence",
  resolve: gb,
  construct: bb
}), yb = Object.prototype.toString;
function xb(e) {
  if (e === null)
    return !0;
  var t, r, n, i, a, s = e;
  for (a = new Array(s.length), t = 0, r = s.length; t < r; t += 1) {
    if (n = s[t], yb.call(n) !== "[object Object]" || (i = Object.keys(n), i.length !== 1))
      return !1;
    a[t] = [i[0], n[i[0]]];
  }
  return !0;
}
function _b(e) {
  if (e === null)
    return [];
  var t, r, n, i, a, s = e;
  for (a = new Array(s.length), t = 0, r = s.length; t < r; t += 1)
    n = s[t], i = Object.keys(n), a[t] = [i[0], n[i[0]]];
  return a;
}
var wb = new ct("tag:yaml.org,2002:pairs", {
  kind: "sequence",
  resolve: xb,
  construct: _b
}), Sb = Object.prototype.hasOwnProperty;
function kb(e) {
  if (e === null)
    return !0;
  var t, r = e;
  for (t in r)
    if (Sb.call(r, t) && r[t] !== null)
      return !1;
  return !0;
}
function Tb(e) {
  return e !== null ? e : {};
}
var Cb = new ct("tag:yaml.org,2002:set", {
  kind: "mapping",
  resolve: kb,
  construct: Tb
}), Eb = rb.extend({
  implicit: [
    sb,
    lb
  ],
  explicit: [
    pb,
    vb,
    wb,
    Cb
  ]
}), qr = Object.prototype.hasOwnProperty, Na = 1, sd = 2, od = 3, Ma = 4, Xs = 1, Ab = 2, dc = 3, Ib = /[\x00-\x08\x0B\x0C\x0E-\x1F\x7F-\x84\x86-\x9F\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/, Rb = /[\x85\u2028\u2029]/, Lb = /[,\[\]\{\}]/, ld = /^(?:!|!!|![a-z\-]+!)$/i, cd = /^(?:!|[^,\[\]\{\}])(?:%[0-9a-f]{2}|[0-9a-z\-#;\/\?:@&=\+\$,_\.!~\*'\(\)\[\]])*$/i;
function pc(e) {
  return Object.prototype.toString.call(e);
}
function tr(e) {
  return e === 10 || e === 13;
}
function an(e) {
  return e === 9 || e === 32;
}
function St(e) {
  return e === 9 || e === 32 || e === 10 || e === 13;
}
function xn(e) {
  return e === 44 || e === 91 || e === 93 || e === 123 || e === 125;
}
function Ob(e) {
  var t;
  return 48 <= e && e <= 57 ? e - 48 : (t = e | 32, 97 <= t && t <= 102 ? t - 97 + 10 : -1);
}
function Nb(e) {
  return e === 120 ? 2 : e === 117 ? 4 : e === 85 ? 8 : 0;
}
function Mb(e) {
  return 48 <= e && e <= 57 ? e - 48 : -1;
}
function fc(e) {
  return e === 48 ? "\0" : e === 97 ? "\x07" : e === 98 ? "\b" : e === 116 || e === 9 ? "	" : e === 110 ? `
` : e === 118 ? "\v" : e === 102 ? "\f" : e === 114 ? "\r" : e === 101 ? "\x1B" : e === 32 ? " " : e === 34 ? '"' : e === 47 ? "/" : e === 92 ? "\\" : e === 78 ? "" : e === 95 ? " " : e === 76 ? "\u2028" : e === 80 ? "\u2029" : "";
}
function Bb(e) {
  return e <= 65535 ? String.fromCharCode(e) : String.fromCharCode(
    (e - 65536 >> 10) + 55296,
    (e - 65536 & 1023) + 56320
  );
}
var ud = new Array(256), hd = new Array(256);
for (var gn = 0; gn < 256; gn++)
  ud[gn] = fc(gn) ? 1 : 0, hd[gn] = fc(gn);
function Db(e, t) {
  this.input = e, this.filename = t.filename || null, this.schema = t.schema || Eb, this.onWarning = t.onWarning || null, this.legacy = t.legacy || !1, this.json = t.json || !1, this.listener = t.listener || null, this.implicitTypes = this.schema.compiledImplicit, this.typeMap = this.schema.compiledTypeMap, this.length = e.length, this.position = 0, this.line = 0, this.lineStart = 0, this.lineIndent = 0, this.firstTabInLine = -1, this.documents = [];
}
function dd(e, t) {
  var r = {
    name: e.filename,
    buffer: e.input.slice(0, -1),
    // omit trailing \0
    position: e.position,
    line: e.line,
    column: e.position - e.lineStart
  };
  return r.snippet = S6(r), new br(t, r);
}
function le(e, t) {
  throw dd(e, t);
}
function Ba(e, t) {
  e.onWarning && e.onWarning.call(null, dd(e, t));
}
var mc = {
  YAML: function(t, r, n) {
    var i, a, s;
    t.version !== null && le(t, "duplication of %YAML directive"), n.length !== 1 && le(t, "YAML directive accepts exactly one argument"), i = /^([0-9]+)\.([0-9]+)$/.exec(n[0]), i === null && le(t, "ill-formed argument of the YAML directive"), a = parseInt(i[1], 10), s = parseInt(i[2], 10), a !== 1 && le(t, "unacceptable YAML version of the document"), t.version = n[0], t.checkLineBreaks = s < 2, s !== 1 && s !== 2 && Ba(t, "unsupported YAML version of the document");
  },
  TAG: function(t, r, n) {
    var i, a;
    n.length !== 2 && le(t, "TAG directive accepts exactly two arguments"), i = n[0], a = n[1], ld.test(i) || le(t, "ill-formed tag handle (first argument) of the TAG directive"), qr.call(t.tagMap, i) && le(t, 'there is a previously declared suffix for "' + i + '" tag handle'), cd.test(a) || le(t, "ill-formed tag prefix (second argument) of the TAG directive");
    try {
      a = decodeURIComponent(a);
    } catch {
      le(t, "tag prefix is malformed: " + a);
    }
    t.tagMap[i] = a;
  }
};
function $r(e, t, r, n) {
  var i, a, s, o;
  if (t < r) {
    if (o = e.input.slice(t, r), n)
      for (i = 0, a = o.length; i < a; i += 1)
        s = o.charCodeAt(i), s === 9 || 32 <= s && s <= 1114111 || le(e, "expected valid JSON character");
    else
      Ib.test(o) && le(e, "the stream contains non-printable characters");
    e.result += o;
  }
}
function gc(e, t, r, n) {
  var i, a, s, o;
  for (dt.isObject(r) || le(e, "cannot merge mappings; the provided source object is unacceptable"), i = Object.keys(r), s = 0, o = i.length; s < o; s += 1)
    a = i[s], qr.call(t, a) || (t[a] = r[a], n[a] = !0);
}
function _n(e, t, r, n, i, a, s, o, l) {
  var u, d;
  if (Array.isArray(i))
    for (i = Array.prototype.slice.call(i), u = 0, d = i.length; u < d; u += 1)
      Array.isArray(i[u]) && le(e, "nested arrays are not supported inside keys"), typeof i == "object" && pc(i[u]) === "[object Object]" && (i[u] = "[object Object]");
  if (typeof i == "object" && pc(i) === "[object Object]" && (i = "[object Object]"), i = String(i), t === null && (t = {}), n === "tag:yaml.org,2002:merge")
    if (Array.isArray(a))
      for (u = 0, d = a.length; u < d; u += 1)
        gc(e, t, a[u], r);
    else
      gc(e, t, a, r);
  else
    !e.json && !qr.call(r, i) && qr.call(t, i) && (e.line = s || e.line, e.lineStart = o || e.lineStart, e.position = l || e.position, le(e, "duplicated mapping key")), i === "__proto__" ? Object.defineProperty(t, i, {
      configurable: !0,
      enumerable: !0,
      writable: !0,
      value: a
    }) : t[i] = a, delete r[i];
  return t;
}
function w0(e) {
  var t;
  t = e.input.charCodeAt(e.position), t === 10 ? e.position++ : t === 13 ? (e.position++, e.input.charCodeAt(e.position) === 10 && e.position++) : le(e, "a line break is expected"), e.line += 1, e.lineStart = e.position, e.firstTabInLine = -1;
}
function Ze(e, t, r) {
  for (var n = 0, i = e.input.charCodeAt(e.position); i !== 0; ) {
    for (; an(i); )
      i === 9 && e.firstTabInLine === -1 && (e.firstTabInLine = e.position), i = e.input.charCodeAt(++e.position);
    if (t && i === 35)
      do
        i = e.input.charCodeAt(++e.position);
      while (i !== 10 && i !== 13 && i !== 0);
    if (tr(i))
      for (w0(e), i = e.input.charCodeAt(e.position), n++, e.lineIndent = 0; i === 32; )
        e.lineIndent++, i = e.input.charCodeAt(++e.position);
    else
      break;
  }
  return r !== -1 && n !== 0 && e.lineIndent < r && Ba(e, "deficient indentation"), n;
}
function os(e) {
  var t = e.position, r;
  return r = e.input.charCodeAt(t), !!((r === 45 || r === 46) && r === e.input.charCodeAt(t + 1) && r === e.input.charCodeAt(t + 2) && (t += 3, r = e.input.charCodeAt(t), r === 0 || St(r)));
}
function S0(e, t) {
  t === 1 ? e.result += " " : t > 1 && (e.result += dt.repeat(`
`, t - 1));
}
function Fb(e, t, r) {
  var n, i, a, s, o, l, u, d, p = e.kind, b = e.result, m;
  if (m = e.input.charCodeAt(e.position), St(m) || xn(m) || m === 35 || m === 38 || m === 42 || m === 33 || m === 124 || m === 62 || m === 39 || m === 34 || m === 37 || m === 64 || m === 96 || (m === 63 || m === 45) && (i = e.input.charCodeAt(e.position + 1), St(i) || r && xn(i)))
    return !1;
  for (e.kind = "scalar", e.result = "", a = s = e.position, o = !1; m !== 0; ) {
    if (m === 58) {
      if (i = e.input.charCodeAt(e.position + 1), St(i) || r && xn(i))
        break;
    } else if (m === 35) {
      if (n = e.input.charCodeAt(e.position - 1), St(n))
        break;
    } else {
      if (e.position === e.lineStart && os(e) || r && xn(m))
        break;
      if (tr(m))
        if (l = e.line, u = e.lineStart, d = e.lineIndent, Ze(e, !1, -1), e.lineIndent >= t) {
          o = !0, m = e.input.charCodeAt(e.position);
          continue;
        } else {
          e.position = s, e.line = l, e.lineStart = u, e.lineIndent = d;
          break;
        }
    }
    o && ($r(e, a, s, !1), S0(e, e.line - l), a = s = e.position, o = !1), an(m) || (s = e.position + 1), m = e.input.charCodeAt(++e.position);
  }
  return $r(e, a, s, !1), e.result ? !0 : (e.kind = p, e.result = b, !1);
}
function $b(e, t) {
  var r, n, i;
  if (r = e.input.charCodeAt(e.position), r !== 39)
    return !1;
  for (e.kind = "scalar", e.result = "", e.position++, n = i = e.position; (r = e.input.charCodeAt(e.position)) !== 0; )
    if (r === 39)
      if ($r(e, n, e.position, !0), r = e.input.charCodeAt(++e.position), r === 39)
        n = e.position, e.position++, i = e.position;
      else
        return !0;
    else
      tr(r) ? ($r(e, n, i, !0), S0(e, Ze(e, !1, t)), n = i = e.position) : e.position === e.lineStart && os(e) ? le(e, "unexpected end of the document within a single quoted scalar") : (e.position++, i = e.position);
  le(e, "unexpected end of the stream within a single quoted scalar");
}
function zb(e, t) {
  var r, n, i, a, s, o;
  if (o = e.input.charCodeAt(e.position), o !== 34)
    return !1;
  for (e.kind = "scalar", e.result = "", e.position++, r = n = e.position; (o = e.input.charCodeAt(e.position)) !== 0; ) {
    if (o === 34)
      return $r(e, r, e.position, !0), e.position++, !0;
    if (o === 92) {
      if ($r(e, r, e.position, !0), o = e.input.charCodeAt(++e.position), tr(o))
        Ze(e, !1, t);
      else if (o < 256 && ud[o])
        e.result += hd[o], e.position++;
      else if ((s = Nb(o)) > 0) {
        for (i = s, a = 0; i > 0; i--)
          o = e.input.charCodeAt(++e.position), (s = Ob(o)) >= 0 ? a = (a << 4) + s : le(e, "expected hexadecimal character");
        e.result += Bb(a), e.position++;
      } else
        le(e, "unknown escape sequence");
      r = n = e.position;
    } else
      tr(o) ? ($r(e, r, n, !0), S0(e, Ze(e, !1, t)), r = n = e.position) : e.position === e.lineStart && os(e) ? le(e, "unexpected end of the document within a double quoted scalar") : (e.position++, n = e.position);
  }
  le(e, "unexpected end of the stream within a double quoted scalar");
}
function Pb(e, t) {
  var r = !0, n, i, a, s = e.tag, o, l = e.anchor, u, d, p, b, m, _ = /* @__PURE__ */ Object.create(null), k, L, A, v;
  if (v = e.input.charCodeAt(e.position), v === 91)
    d = 93, m = !1, o = [];
  else if (v === 123)
    d = 125, m = !0, o = {};
  else
    return !1;
  for (e.anchor !== null && (e.anchorMap[e.anchor] = o), v = e.input.charCodeAt(++e.position); v !== 0; ) {
    if (Ze(e, !0, t), v = e.input.charCodeAt(e.position), v === d)
      return e.position++, e.tag = s, e.anchor = l, e.kind = m ? "mapping" : "sequence", e.result = o, !0;
    r ? v === 44 && le(e, "expected the node content, but found ','") : le(e, "missed comma between flow collection entries"), L = k = A = null, p = b = !1, v === 63 && (u = e.input.charCodeAt(e.position + 1), St(u) && (p = b = !0, e.position++, Ze(e, !0, t))), n = e.line, i = e.lineStart, a = e.position, In(e, t, Na, !1, !0), L = e.tag, k = e.result, Ze(e, !0, t), v = e.input.charCodeAt(e.position), (b || e.line === n) && v === 58 && (p = !0, v = e.input.charCodeAt(++e.position), Ze(e, !0, t), In(e, t, Na, !1, !0), A = e.result), m ? _n(e, o, _, L, k, A, n, i, a) : p ? o.push(_n(e, null, _, L, k, A, n, i, a)) : o.push(k), Ze(e, !0, t), v = e.input.charCodeAt(e.position), v === 44 ? (r = !0, v = e.input.charCodeAt(++e.position)) : r = !1;
  }
  le(e, "unexpected end of the stream within a flow collection");
}
function Ub(e, t) {
  var r, n, i = Xs, a = !1, s = !1, o = t, l = 0, u = !1, d, p;
  if (p = e.input.charCodeAt(e.position), p === 124)
    n = !1;
  else if (p === 62)
    n = !0;
  else
    return !1;
  for (e.kind = "scalar", e.result = ""; p !== 0; )
    if (p = e.input.charCodeAt(++e.position), p === 43 || p === 45)
      Xs === i ? i = p === 43 ? dc : Ab : le(e, "repeat of a chomping mode identifier");
    else if ((d = Mb(p)) >= 0)
      d === 0 ? le(e, "bad explicit indentation width of a block scalar; it cannot be less than one") : s ? le(e, "repeat of an indentation width identifier") : (o = t + d - 1, s = !0);
    else
      break;
  if (an(p)) {
    do
      p = e.input.charCodeAt(++e.position);
    while (an(p));
    if (p === 35)
      do
        p = e.input.charCodeAt(++e.position);
      while (!tr(p) && p !== 0);
  }
  for (; p !== 0; ) {
    for (w0(e), e.lineIndent = 0, p = e.input.charCodeAt(e.position); (!s || e.lineIndent < o) && p === 32; )
      e.lineIndent++, p = e.input.charCodeAt(++e.position);
    if (!s && e.lineIndent > o && (o = e.lineIndent), tr(p)) {
      l++;
      continue;
    }
    if (e.lineIndent < o) {
      i === dc ? e.result += dt.repeat(`
`, a ? 1 + l : l) : i === Xs && a && (e.result += `
`);
      break;
    }
    for (n ? an(p) ? (u = !0, e.result += dt.repeat(`
`, a ? 1 + l : l)) : u ? (u = !1, e.result += dt.repeat(`
`, l + 1)) : l === 0 ? a && (e.result += " ") : e.result += dt.repeat(`
`, l) : e.result += dt.repeat(`
`, a ? 1 + l : l), a = !0, s = !0, l = 0, r = e.position; !tr(p) && p !== 0; )
      p = e.input.charCodeAt(++e.position);
    $r(e, r, e.position, !1);
  }
  return !0;
}
function bc(e, t) {
  var r, n = e.tag, i = e.anchor, a = [], s, o = !1, l;
  if (e.firstTabInLine !== -1)
    return !1;
  for (e.anchor !== null && (e.anchorMap[e.anchor] = a), l = e.input.charCodeAt(e.position); l !== 0 && (e.firstTabInLine !== -1 && (e.position = e.firstTabInLine, le(e, "tab characters must not be used in indentation")), !(l !== 45 || (s = e.input.charCodeAt(e.position + 1), !St(s)))); ) {
    if (o = !0, e.position++, Ze(e, !0, -1) && e.lineIndent <= t) {
      a.push(null), l = e.input.charCodeAt(e.position);
      continue;
    }
    if (r = e.line, In(e, t, od, !1, !0), a.push(e.result), Ze(e, !0, -1), l = e.input.charCodeAt(e.position), (e.line === r || e.lineIndent > t) && l !== 0)
      le(e, "bad indentation of a sequence entry");
    else if (e.lineIndent < t)
      break;
  }
  return o ? (e.tag = n, e.anchor = i, e.kind = "sequence", e.result = a, !0) : !1;
}
function Hb(e, t, r) {
  var n, i, a, s, o, l, u = e.tag, d = e.anchor, p = {}, b = /* @__PURE__ */ Object.create(null), m = null, _ = null, k = null, L = !1, A = !1, v;
  if (e.firstTabInLine !== -1)
    return !1;
  for (e.anchor !== null && (e.anchorMap[e.anchor] = p), v = e.input.charCodeAt(e.position); v !== 0; ) {
    if (!L && e.firstTabInLine !== -1 && (e.position = e.firstTabInLine, le(e, "tab characters must not be used in indentation")), n = e.input.charCodeAt(e.position + 1), a = e.line, (v === 63 || v === 58) && St(n))
      v === 63 ? (L && (_n(e, p, b, m, _, null, s, o, l), m = _ = k = null), A = !0, L = !0, i = !0) : L ? (L = !1, i = !0) : le(e, "incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line"), e.position += 1, v = n;
    else {
      if (s = e.line, o = e.lineStart, l = e.position, !In(e, r, sd, !1, !0))
        break;
      if (e.line === a) {
        for (v = e.input.charCodeAt(e.position); an(v); )
          v = e.input.charCodeAt(++e.position);
        if (v === 58)
          v = e.input.charCodeAt(++e.position), St(v) || le(e, "a whitespace character is expected after the key-value separator within a block mapping"), L && (_n(e, p, b, m, _, null, s, o, l), m = _ = k = null), A = !0, L = !1, i = !1, m = e.tag, _ = e.result;
        else if (A)
          le(e, "can not read an implicit mapping pair; a colon is missed");
        else
          return e.tag = u, e.anchor = d, !0;
      } else if (A)
        le(e, "can not read a block mapping entry; a multiline key may not be an implicit key");
      else
        return e.tag = u, e.anchor = d, !0;
    }
    if ((e.line === a || e.lineIndent > t) && (L && (s = e.line, o = e.lineStart, l = e.position), In(e, t, Ma, !0, i) && (L ? _ = e.result : k = e.result), L || (_n(e, p, b, m, _, k, s, o, l), m = _ = k = null), Ze(e, !0, -1), v = e.input.charCodeAt(e.position)), (e.line === a || e.lineIndent > t) && v !== 0)
      le(e, "bad indentation of a mapping entry");
    else if (e.lineIndent < t)
      break;
  }
  return L && _n(e, p, b, m, _, null, s, o, l), A && (e.tag = u, e.anchor = d, e.kind = "mapping", e.result = p), A;
}
function qb(e) {
  var t, r = !1, n = !1, i, a, s;
  if (s = e.input.charCodeAt(e.position), s !== 33)
    return !1;
  if (e.tag !== null && le(e, "duplication of a tag property"), s = e.input.charCodeAt(++e.position), s === 60 ? (r = !0, s = e.input.charCodeAt(++e.position)) : s === 33 ? (n = !0, i = "!!", s = e.input.charCodeAt(++e.position)) : i = "!", t = e.position, r) {
    do
      s = e.input.charCodeAt(++e.position);
    while (s !== 0 && s !== 62);
    e.position < e.length ? (a = e.input.slice(t, e.position), s = e.input.charCodeAt(++e.position)) : le(e, "unexpected end of the stream within a verbatim tag");
  } else {
    for (; s !== 0 && !St(s); )
      s === 33 && (n ? le(e, "tag suffix cannot contain exclamation marks") : (i = e.input.slice(t - 1, e.position + 1), ld.test(i) || le(e, "named tag handle cannot contain such characters"), n = !0, t = e.position + 1)), s = e.input.charCodeAt(++e.position);
    a = e.input.slice(t, e.position), Lb.test(a) && le(e, "tag suffix cannot contain flow indicator characters");
  }
  a && !cd.test(a) && le(e, "tag name cannot contain such characters: " + a);
  try {
    a = decodeURIComponent(a);
  } catch {
    le(e, "tag name is malformed: " + a);
  }
  return r ? e.tag = a : qr.call(e.tagMap, i) ? e.tag = e.tagMap[i] + a : i === "!" ? e.tag = "!" + a : i === "!!" ? e.tag = "tag:yaml.org,2002:" + a : le(e, 'undeclared tag handle "' + i + '"'), !0;
}
function Gb(e) {
  var t, r;
  if (r = e.input.charCodeAt(e.position), r !== 38)
    return !1;
  for (e.anchor !== null && le(e, "duplication of an anchor property"), r = e.input.charCodeAt(++e.position), t = e.position; r !== 0 && !St(r) && !xn(r); )
    r = e.input.charCodeAt(++e.position);
  return e.position === t && le(e, "name of an anchor node must contain at least one character"), e.anchor = e.input.slice(t, e.position), !0;
}
function Wb(e) {
  var t, r, n;
  if (n = e.input.charCodeAt(e.position), n !== 42)
    return !1;
  for (n = e.input.charCodeAt(++e.position), t = e.position; n !== 0 && !St(n) && !xn(n); )
    n = e.input.charCodeAt(++e.position);
  return e.position === t && le(e, "name of an alias node must contain at least one character"), r = e.input.slice(t, e.position), qr.call(e.anchorMap, r) || le(e, 'unidentified alias "' + r + '"'), e.result = e.anchorMap[r], Ze(e, !0, -1), !0;
}
function In(e, t, r, n, i) {
  var a, s, o, l = 1, u = !1, d = !1, p, b, m, _, k, L;
  if (e.listener !== null && e.listener("open", e), e.tag = null, e.anchor = null, e.kind = null, e.result = null, a = s = o = Ma === r || od === r, n && Ze(e, !0, -1) && (u = !0, e.lineIndent > t ? l = 1 : e.lineIndent === t ? l = 0 : e.lineIndent < t && (l = -1)), l === 1)
    for (; qb(e) || Gb(e); )
      Ze(e, !0, -1) ? (u = !0, o = a, e.lineIndent > t ? l = 1 : e.lineIndent === t ? l = 0 : e.lineIndent < t && (l = -1)) : o = !1;
  if (o && (o = u || i), (l === 1 || Ma === r) && (Na === r || sd === r ? k = t : k = t + 1, L = e.position - e.lineStart, l === 1 ? o && (bc(e, L) || Hb(e, L, k)) || Pb(e, k) ? d = !0 : (s && Ub(e, k) || $b(e, k) || zb(e, k) ? d = !0 : Wb(e) ? (d = !0, (e.tag !== null || e.anchor !== null) && le(e, "alias node should not have any properties")) : Fb(e, k, Na === r) && (d = !0, e.tag === null && (e.tag = "?")), e.anchor !== null && (e.anchorMap[e.anchor] = e.result)) : l === 0 && (d = o && bc(e, L))), e.tag === null)
    e.anchor !== null && (e.anchorMap[e.anchor] = e.result);
  else if (e.tag === "?") {
    for (e.result !== null && e.kind !== "scalar" && le(e, 'unacceptable node kind for !<?> tag; it should be "scalar", not "' + e.kind + '"'), p = 0, b = e.implicitTypes.length; p < b; p += 1)
      if (_ = e.implicitTypes[p], _.resolve(e.result)) {
        e.result = _.construct(e.result), e.tag = _.tag, e.anchor !== null && (e.anchorMap[e.anchor] = e.result);
        break;
      }
  } else if (e.tag !== "!") {
    if (qr.call(e.typeMap[e.kind || "fallback"], e.tag))
      _ = e.typeMap[e.kind || "fallback"][e.tag];
    else
      for (_ = null, m = e.typeMap.multi[e.kind || "fallback"], p = 0, b = m.length; p < b; p += 1)
        if (e.tag.slice(0, m[p].tag.length) === m[p].tag) {
          _ = m[p];
          break;
        }
    _ || le(e, "unknown tag !<" + e.tag + ">"), e.result !== null && _.kind !== e.kind && le(e, "unacceptable node kind for !<" + e.tag + '> tag; it should be "' + _.kind + '", not "' + e.kind + '"'), _.resolve(e.result, e.tag) ? (e.result = _.construct(e.result, e.tag), e.anchor !== null && (e.anchorMap[e.anchor] = e.result)) : le(e, "cannot resolve a node with !<" + e.tag + "> explicit tag");
  }
  return e.listener !== null && e.listener("close", e), e.tag !== null || e.anchor !== null || d;
}
function jb(e) {
  var t = e.position, r, n, i, a = !1, s;
  for (e.version = null, e.checkLineBreaks = e.legacy, e.tagMap = /* @__PURE__ */ Object.create(null), e.anchorMap = /* @__PURE__ */ Object.create(null); (s = e.input.charCodeAt(e.position)) !== 0 && (Ze(e, !0, -1), s = e.input.charCodeAt(e.position), !(e.lineIndent > 0 || s !== 37)); ) {
    for (a = !0, s = e.input.charCodeAt(++e.position), r = e.position; s !== 0 && !St(s); )
      s = e.input.charCodeAt(++e.position);
    for (n = e.input.slice(r, e.position), i = [], n.length < 1 && le(e, "directive name must not be less than one character in length"); s !== 0; ) {
      for (; an(s); )
        s = e.input.charCodeAt(++e.position);
      if (s === 35) {
        do
          s = e.input.charCodeAt(++e.position);
        while (s !== 0 && !tr(s));
        break;
      }
      if (tr(s))
        break;
      for (r = e.position; s !== 0 && !St(s); )
        s = e.input.charCodeAt(++e.position);
      i.push(e.input.slice(r, e.position));
    }
    s !== 0 && w0(e), qr.call(mc, n) ? mc[n](e, n, i) : Ba(e, 'unknown document directive "' + n + '"');
  }
  if (Ze(e, !0, -1), e.lineIndent === 0 && e.input.charCodeAt(e.position) === 45 && e.input.charCodeAt(e.position + 1) === 45 && e.input.charCodeAt(e.position + 2) === 45 ? (e.position += 3, Ze(e, !0, -1)) : a && le(e, "directives end mark is expected"), In(e, e.lineIndent - 1, Ma, !1, !0), Ze(e, !0, -1), e.checkLineBreaks && Rb.test(e.input.slice(t, e.position)) && Ba(e, "non-ASCII line breaks are interpreted as content"), e.documents.push(e.result), e.position === e.lineStart && os(e)) {
    e.input.charCodeAt(e.position) === 46 && (e.position += 3, Ze(e, !0, -1));
    return;
  }
  if (e.position < e.length - 1)
    le(e, "end of the stream or a document separator is expected");
  else
    return;
}
function pd(e, t) {
  e = String(e), t = t || {}, e.length !== 0 && (e.charCodeAt(e.length - 1) !== 10 && e.charCodeAt(e.length - 1) !== 13 && (e += `
`), e.charCodeAt(0) === 65279 && (e = e.slice(1)));
  var r = new Db(e, t), n = e.indexOf("\0");
  for (n !== -1 && (r.position = n, le(r, "null byte is not allowed in input")), r.input += "\0"; r.input.charCodeAt(r.position) === 32; )
    r.lineIndent += 1, r.position += 1;
  for (; r.position < r.length - 1; )
    jb(r);
  return r.documents;
}
function Yb(e, t, r) {
  t !== null && typeof t == "object" && typeof r > "u" && (r = t, t = null);
  var n = pd(e, r);
  if (typeof t != "function")
    return n;
  for (var i = 0, a = n.length; i < a; i += 1)
    t(n[i]);
}
function Vb(e, t) {
  var r = pd(e, t);
  if (r.length !== 0) {
    if (r.length === 1)
      return r[0];
    throw new br("expected a single document in the stream, but found more");
  }
}
var Xb = Yb, Kb = Vb, Zb = {
  loadAll: Xb,
  load: Kb
}, Jb = nd, Qb = Zb.load;
const fd = /^-{3}\s*[\n\r](.*?)[\n\r]-{3}\s*[\n\r]+/s;
function ev(e, t) {
  var r, n;
  const i = e.match(fd);
  if (i) {
    const a = Qb(i[1], {
      // To keep things simple, only allow strings, arrays, and plain objects.
      // https://www.yaml.org/spec/1.2/spec.html#id2802346
      schema: Jb
    });
    return a != null && a.title && ((r = t.setDiagramTitle) == null || r.call(t, a.title)), a != null && a.displayMode && ((n = t.setDisplayMode) == null || n.call(t, a.displayMode)), e.slice(i[0].length);
  } else
    return e;
}
const tv = function(e, t) {
  for (let r of t)
    e.attr(r[0], r[1]);
}, rv = function(e, t, r) {
  let n = /* @__PURE__ */ new Map();
  return r ? (n.set("width", "100%"), n.set("style", `max-width: ${t}px;`)) : (n.set("height", e), n.set("width", t)), n;
}, nv = function(e, t, r, n) {
  const i = rv(t, r, n);
  tv(e, i);
}, iv = function(e, t, r, n) {
  const i = t.node().getBBox(), a = i.width, s = i.height;
  re.info(`SVG bounds: ${a}x${s}`, i);
  let o = 0, l = 0;
  re.info(`Graph bounds: ${o}x${l}`, e), o = a + r * 2, l = s + r * 2, re.info(`Calculated bounds: ${o}x${l}`), nv(t, l, o, n);
  const u = `${i.x - r} ${i.y - r} ${i.width + 2 * r} ${i.height + 2 * r}`;
  t.attr("viewBox", u);
}, aa = {}, av = (e, t, r) => {
  let n = "";
  return e in aa && aa[e] ? n = aa[e](r) : re.warn(`No theme found for ${e}`), ` & {
    font-family: ${r.fontFamily};
    font-size: ${r.fontSize};
    fill: ${r.textColor}
  }

  /* Classes common for multiple diagrams */

  & .error-icon {
    fill: ${r.errorBkgColor};
  }
  & .error-text {
    fill: ${r.errorTextColor};
    stroke: ${r.errorTextColor};
  }

  & .edge-thickness-normal {
    stroke-width: 2px;
  }
  & .edge-thickness-thick {
    stroke-width: 3.5px
  }
  & .edge-pattern-solid {
    stroke-dasharray: 0;
  }

  & .edge-pattern-dashed{
    stroke-dasharray: 3;
  }
  .edge-pattern-dotted {
    stroke-dasharray: 2;
  }

  & .marker {
    fill: ${r.lineColor};
    stroke: ${r.lineColor};
  }
  & .marker.cross {
    stroke: ${r.lineColor};
  }

  & svg {
    font-family: ${r.fontFamily};
    font-size: ${r.fontSize};
  }

  ${n}

  ${t}
`;
}, sv = (e, t) => {
  aa[e] = t;
}, ov = av;
let Jr = {};
const md = function(e, t, r, n) {
  re.debug("parseDirective is being called", t, r, n);
  try {
    if (t !== void 0)
      switch (t = t.trim(), r) {
        case "open_directive":
          Jr = {};
          break;
        case "type_directive":
          if (!Jr)
            throw new Error("currentDirective is undefined");
          Jr.type = t.toLowerCase();
          break;
        case "arg_directive":
          if (!Jr)
            throw new Error("currentDirective is undefined");
          Jr.args = JSON.parse(t);
          break;
        case "close_directive":
          lv(e, Jr, n), Jr = void 0;
          break;
      }
  } catch (i) {
    re.error(
      `Error while rendering sequenceDiagram directive: ${t} jison context: ${r}`
    ), re.error(i.message);
  }
}, lv = function(e, t, r) {
  switch (re.info(`Directive type=${t.type} with args:`, t.args), t.type) {
    case "init":
    case "initialize": {
      ["config"].forEach((n) => {
        t.args[n] !== void 0 && (r === "flowchart-v2" && (r = "flowchart"), t.args[r] = t.args[n], delete t.args[n]);
      }), re.info("sanitize in handleDirective", t.args), Ln(t.args), re.info("sanitize in handleDirective (done)", t.args), rh(t.args);
      break;
    }
    case "wrap":
    case "nowrap":
      e && e.setWrap && e.setWrap(t.type === "wrap");
      break;
    case "themeCss":
      re.warn("themeCss encountered");
      break;
    default:
      re.warn(
        `Unhandled directive: source: '%%{${t.type}: ${JSON.stringify(
          t.args ? t.args : {}
        )}}%%`,
        t
      );
      break;
  }
}, cv = re, uv = n0, gd = Er, hv = (e) => ii(e, gd()), dv = iv, pv = () => vg, fv = (e, t, r, n) => md(e, t, r, n), Da = {}, Fa = (e, t, r) => {
  if (Da[e])
    throw new Error(`Diagram ${e} already registered.`);
  Da[e] = t, r && yd(e, r), sv(e, t.styles), t.injectUtils && t.injectUtils(
    cv,
    uv,
    gd,
    hv,
    dv,
    pv(),
    fv
  );
}, k0 = (e) => {
  if (e in Da)
    return Da[e];
  throw new Error(`Diagram ${e} not found.`);
};
class bd extends Error {
  constructor(t) {
    super(t), this.name = "UnknownDiagramError";
  }
}
const mv = /%{2}{\s*(?:(\w+)\s*:|(\w+))\s*(?:(\w+)|((?:(?!}%{2}).|\r?\n)*))?\s*(?:}%{2})?/gi, gv = /\s*%%.*\n/gm, Rn = {}, ls = function(e, t) {
  e = e.replace(fd, "").replace(mv, "").replace(gv, `
`);
  for (const [r, { detector: n }] of Object.entries(Rn))
    if (n(e, t))
      return r;
  throw new bd(
    `No diagram type detected matching given configuration for text: ${e}`
  );
}, vd = (...e) => {
  for (const { id: t, detector: r, loader: n } of e)
    yd(t, r, n);
}, bv = async () => {
  re.debug("Loading registered diagrams");
  const t = (await Promise.allSettled(
    Object.entries(Rn).map(async ([r, { detector: n, loader: i }]) => {
      if (i)
        try {
          k0(r);
        } catch {
          try {
            const { diagram: s, id: o } = await i();
            Fa(o, s, n);
          } catch (s) {
            throw re.error(`Failed to load external diagram with key ${r}. Removing from detectors.`), delete Rn[r], s;
          }
        }
    })
  )).filter((r) => r.status === "rejected");
  if (t.length > 0) {
    re.error(`Failed to load ${t.length} external diagrams`);
    for (const r of t)
      re.error(r);
    throw new Error(`Failed to load ${t.length} external diagrams`);
  }
}, yd = (e, t, r) => {
  Rn[e] ? re.error(`Detector with key ${e} already exists`) : Rn[e] = { detector: t, loader: r }, re.debug(`Detector with key ${e} added${r ? " with loader" : ""}`);
}, vv = (e) => Rn[e].loader, yv = {
  curveBasis: W5,
  curveBasisClosed: j5,
  curveBasisOpen: Y5,
  curveBumpX: q5,
  curveBumpY: G5,
  curveBundle: V5,
  curveCardinalClosed: K5,
  curveCardinalOpen: Z5,
  curveCardinal: X5,
  curveCatmullRomClosed: Q5,
  curveCatmullRomOpen: e3,
  curveCatmullRom: J5,
  curveLinear: H5,
  curveLinearClosed: t3,
  curveMonotoneX: r3,
  curveMonotoneY: n3,
  curveNatural: i3,
  curveStep: a3,
  curveStepAfter: o3,
  curveStepBefore: s3
}, Ks = /%{2}{\s*(?:(\w+)\s*:|(\w+))\s*(?:(\w+)|((?:(?!}%{2}).|\r?\n)*))?\s*(?:}%{2})?/gi, xv = /\s*(?:(\w+)(?=:):|(\w+))\s*(?:(\w+)|((?:(?!}%{2}).|\r?\n)*))?\s*(?:}%{2})?/gi, _v = function(e, t) {
  const r = xd(e, /(?:init\b)|(?:initialize\b)/);
  let n = {};
  if (Array.isArray(r)) {
    const i = r.map((a) => a.args);
    Ln(i), n = lt(n, [...i]);
  } else
    n = r.args;
  if (n) {
    let i = ls(e, t);
    ["config"].forEach((a) => {
      n[a] !== void 0 && (i === "flowchart-v2" && (i = "flowchart"), n[i] = n[a], delete n[a]);
    });
  }
  return n;
}, xd = function(e, t = null) {
  try {
    const r = new RegExp(
      `[%]{2}(?![{]${xv.source})(?=[}][%]{2}).*
`,
      "ig"
    );
    e = e.trim().replace(r, "").replace(/'/gm, '"'), re.debug(
      `Detecting diagram directive${t !== null ? " type:" + t : ""} based on the text:${e}`
    );
    let n;
    const i = [];
    for (; (n = Ks.exec(e)) !== null; )
      if (n.index === Ks.lastIndex && Ks.lastIndex++, n && !t || t && n[1] && n[1].match(t) || t && n[2] && n[2].match(t)) {
        const a = n[1] ? n[1] : n[2], s = n[3] ? n[3].trim() : n[4] ? JSON.parse(n[4].trim()) : null;
        i.push({ type: a, args: s });
      }
    return i.length === 0 && i.push({ type: e, args: null }), i.length === 1 ? i[0] : i;
  } catch (r) {
    return re.error(
      `ERROR: ${r.message} - Unable to parse directive
      ${t !== null ? " type:" + t : ""} based on the text:${e}`
    ), { type: null, args: null };
  }
}, wv = function(e, t) {
  for (const [r, n] of t.entries())
    if (n.match(e))
      return r;
  return -1;
};
function Sv(e, t) {
  if (!e)
    return t;
  const r = `curve${e.charAt(0).toUpperCase() + e.slice(1)}`;
  return yv[r] || t;
}
function kv(e, t) {
  const r = e.trim();
  if (r)
    return t.securityLevel !== "loose" ? dh(r) : r;
}
const Tv = (e, ...t) => {
  const r = e.split("."), n = r.length - 1, i = r[n];
  let a = window;
  for (let s = 0; s < n; s++)
    if (a = a[r[s]], !a)
      return;
  a[i](...t);
};
function $a(e, t) {
  return e && t ? Math.sqrt(Math.pow(t.x - e.x, 2) + Math.pow(t.y - e.y, 2)) : 0;
}
function Cv(e) {
  let t, r = 0;
  e.forEach((a) => {
    r += $a(a, t), t = a;
  });
  let n = r / 2, i;
  return t = void 0, e.forEach((a) => {
    if (t && !i) {
      const s = $a(a, t);
      if (s < n)
        n -= s;
      else {
        const o = n / s;
        o <= 0 && (i = t), o >= 1 && (i = { x: a.x, y: a.y }), o > 0 && o < 1 && (i = {
          x: (1 - o) * t.x + o * a.x,
          y: (1 - o) * t.y + o * a.y
        });
      }
    }
    t = a;
  }), i;
}
function Ev(e) {
  return e.length === 1 ? e[0] : Cv(e);
}
const Av = (e, t, r) => {
  let n;
  re.info(`our points ${JSON.stringify(t)}`), t[0] !== r && (t = t.reverse());
  let a = 25, s;
  n = void 0, t.forEach((d) => {
    if (n && !s) {
      const p = $a(d, n);
      if (p < a)
        a -= p;
      else {
        const b = a / p;
        b <= 0 && (s = n), b >= 1 && (s = { x: d.x, y: d.y }), b > 0 && b < 1 && (s = {
          x: (1 - b) * n.x + b * d.x,
          y: (1 - b) * n.y + b * d.y
        });
      }
    }
    n = d;
  });
  const o = e ? 10 : 5, l = Math.atan2(t[0].y - s.y, t[0].x - s.x), u = { x: 0, y: 0 };
  return u.x = Math.sin(l) * o + (t[0].x + s.x) / 2, u.y = -Math.cos(l) * o + (t[0].y + s.y) / 2, u;
};
function Iv(e, t, r) {
  let n = JSON.parse(JSON.stringify(r)), i;
  re.info("our points", n), t !== "start_left" && t !== "start_right" && (n = n.reverse()), n.forEach((p) => {
    i = p;
  });
  let s = 25 + e, o;
  i = void 0, n.forEach((p) => {
    if (i && !o) {
      const b = $a(p, i);
      if (b < s)
        s -= b;
      else {
        const m = s / b;
        m <= 0 && (o = i), m >= 1 && (o = { x: p.x, y: p.y }), m > 0 && m < 1 && (o = {
          x: (1 - m) * i.x + m * p.x,
          y: (1 - m) * i.y + m * p.y
        });
      }
    }
    i = p;
  });
  const l = 10 + e * 0.5, u = Math.atan2(n[0].y - o.y, n[0].x - o.x), d = { x: 0, y: 0 };
  return d.x = Math.sin(u) * l + (n[0].x + o.x) / 2, d.y = -Math.cos(u) * l + (n[0].y + o.y) / 2, t === "start_left" && (d.x = Math.sin(u + Math.PI) * l + (n[0].x + o.x) / 2, d.y = -Math.cos(u + Math.PI) * l + (n[0].y + o.y) / 2), t === "end_right" && (d.x = Math.sin(u - Math.PI) * l + (n[0].x + o.x) / 2 - 5, d.y = -Math.cos(u - Math.PI) * l + (n[0].y + o.y) / 2 - 5), t === "end_left" && (d.x = Math.sin(u) * l + (n[0].x + o.x) / 2 - 5, d.y = -Math.cos(u) * l + (n[0].y + o.y) / 2 - 5), d;
}
function Rv(e) {
  let t = "", r = "";
  for (const n of e)
    n !== void 0 && (n.startsWith("color:") || n.startsWith("text-align:") ? r = r + n + ";" : t = t + n + ";");
  return { style: t, labelStyle: r };
}
let vc = 0;
const Lv = () => (vc++, "id-" + Math.random().toString(36).substr(2, 12) + "-" + vc);
function Ov(e) {
  let t = "";
  const r = "0123456789abcdef", n = r.length;
  for (let i = 0; i < e; i++)
    t += r.charAt(Math.floor(Math.random() * n));
  return t;
}
const Nv = (e) => Ov(e.length), Mv = function() {
  return {
    x: 0,
    y: 0,
    fill: void 0,
    anchor: "start",
    style: "#666",
    width: 100,
    height: 100,
    textMargin: 0,
    rx: 0,
    ry: 0,
    valign: void 0
  };
}, Bv = function(e, t) {
  const r = t.text.replace(i0.lineBreakRegex, " "), [, n] = C0(t.fontSize), i = e.append("text");
  i.attr("x", t.x), i.attr("y", t.y), i.style("text-anchor", t.anchor), i.style("font-family", t.fontFamily), i.style("font-size", n), i.style("font-weight", t.fontWeight), i.attr("fill", t.fill), t.class !== void 0 && i.attr("class", t.class);
  const a = i.append("tspan");
  return a.attr("x", t.x + t.textMargin * 2), a.attr("fill", t.fill), a.text(r), i;
}, Dv = xi(
  (e, t, r) => {
    if (!e || (r = Object.assign(
      { fontSize: 12, fontWeight: 400, fontFamily: "Arial", joinWith: "<br/>" },
      r
    ), i0.lineBreakRegex.test(e)))
      return e;
    const n = e.split(" "), i = [];
    let a = "";
    return n.forEach((s, o) => {
      const l = za(`${s} `, r), u = za(a, r);
      if (l > t) {
        const { hyphenatedStrings: b, remainingWord: m } = Fv(s, t, "-", r);
        i.push(a, ...b), a = m;
      } else
        u + l >= t ? (i.push(a), a = s) : a = [a, s].filter(Boolean).join(" ");
      o + 1 === n.length && i.push(a);
    }), i.filter((s) => s !== "").join(r.joinWith);
  },
  (e, t, r) => `${e}${t}${r.fontSize}${r.fontWeight}${r.fontFamily}${r.joinWith}`
), Fv = xi(
  (e, t, r = "-", n) => {
    n = Object.assign(
      { fontSize: 12, fontWeight: 400, fontFamily: "Arial", margin: 0 },
      n
    );
    const i = [...e], a = [];
    let s = "";
    return i.forEach((o, l) => {
      const u = `${s}${o}`;
      if (za(u, n) >= t) {
        const p = l + 1, b = i.length === p, m = `${u}${r}`;
        a.push(b ? u : m), s = "";
      } else
        s = u;
    }), { hyphenatedStrings: a, remainingWord: s };
  },
  (e, t, r = "-", n) => `${e}${t}${r}${n.fontSize}${n.fontWeight}${n.fontFamily}`
);
function $v(e, t) {
  return t = Object.assign(
    { fontSize: 12, fontWeight: 400, fontFamily: "Arial", margin: 15 },
    t
  ), T0(e, t).height;
}
function za(e, t) {
  return t = Object.assign({ fontSize: 12, fontWeight: 400, fontFamily: "Arial" }, t), T0(e, t).width;
}
const T0 = xi(
  (e, t) => {
    t = Object.assign({ fontSize: 12, fontWeight: 400, fontFamily: "Arial" }, t);
    const { fontSize: r, fontFamily: n, fontWeight: i } = t;
    if (!e)
      return { width: 0, height: 0 };
    const [, a] = C0(r), s = ["sans-serif", n], o = e.split(i0.lineBreakRegex), l = [], u = Zt("body");
    if (!u.remove)
      return { width: 0, height: 0, lineHeight: 0 };
    const d = u.append("svg");
    for (const b of s) {
      let m = 0;
      const _ = { width: 0, height: 0, lineHeight: 0 };
      for (const k of o) {
        const L = Mv();
        L.text = k;
        const A = Bv(d, L).style("font-size", a).style("font-weight", i).style("font-family", b), v = (A._groups || A)[0][0].getBBox();
        if (v.width === 0 && v.height === 0)
          throw new Error("svg element not in render tree");
        _.width = Math.round(Math.max(_.width, v.width)), m = Math.round(v.height), _.height += m, _.lineHeight = Math.round(Math.max(_.lineHeight, m));
      }
      l.push(_);
    }
    d.remove();
    const p = isNaN(l[1].height) || isNaN(l[1].width) || isNaN(l[1].lineHeight) || l[0].height > l[1].height && l[0].width > l[1].width && l[0].lineHeight > l[1].lineHeight ? 0 : 1;
    return l[p];
  },
  (e, t) => `${e}${t.fontSize}${t.fontWeight}${t.fontFamily}`
), zv = class {
  constructor(t, r) {
    this.deterministic = t, this.seed = r, this.count = r ? r.length : 0;
  }
  next() {
    return this.deterministic ? this.count++ : Date.now();
  }
};
let Gi;
const Pv = function(e) {
  return Gi = Gi || document.createElement("div"), e = escape(e).replace(/%26/g, "&").replace(/%23/g, "#").replace(/%3B/g, ";"), Gi.innerHTML = e, unescape(Gi.textContent);
}, Ln = (e) => {
  if (re.debug("directiveSanitizer called with", e), typeof e == "object" && (e.length ? e.forEach((t) => Ln(t)) : Object.keys(e).forEach((t) => {
    re.debug("Checking key", t), t.startsWith("__") && (re.debug("sanitize deleting __ option", t), delete e[t]), t.includes("proto") && (re.debug("sanitize deleting proto option", t), delete e[t]), t.includes("constr") && (re.debug("sanitize deleting constr option", t), delete e[t]), t.includes("themeCSS") && (re.debug("sanitizing themeCss option"), e[t] = sa(e[t])), t.includes("fontFamily") && (re.debug("sanitizing fontFamily option"), e[t] = sa(e[t])), t.includes("altFontFamily") && (re.debug("sanitizing altFontFamily option"), e[t] = sa(e[t])), ug.includes(t) ? typeof e[t] == "object" && (re.debug("sanitize deleting object", t), Ln(e[t])) : (re.debug("sanitize deleting option", t), delete e[t]);
  })), e.themeVariables) {
    const t = Object.keys(e.themeVariables);
    for (const r of t) {
      const n = e.themeVariables[r];
      n && n.match && !n.match(/^[\d "#%(),.;A-Za-z]+$/) && (e.themeVariables[r] = "");
    }
  }
  re.debug("After sanitization", e);
}, sa = (e) => {
  let t = 0, r = 0;
  for (const n of e) {
    if (t < r)
      return "{ /* ERROR: Unbalanced CSS */ }";
    n === "{" ? t++ : n === "}" && r++;
  }
  return t !== r ? "{ /* ERROR: Unbalanced CSS */ }" : e;
};
function _d(e) {
  return "str" in e;
}
function Uv(e) {
  return e instanceof Error ? e.message : String(e);
}
const Hv = (e, t, r, n) => {
  if (!n)
    return;
  const i = e.node().getBBox();
  e.append("text").text(n).attr("x", i.x + i.width / 2).attr("y", -r).attr("class", t);
}, C0 = (e) => {
  if (typeof e == "number")
    return [e, e + "px"];
  const t = parseInt(e, 10);
  return Number.isNaN(t) ? [void 0, void 0] : e === String(t) ? [t, e + "px"] : [t, e];
}, oa = {
  assignWithDepth: lt,
  wrapLabel: Dv,
  calculateTextHeight: $v,
  calculateTextWidth: za,
  calculateTextDimensions: T0,
  detectInit: _v,
  detectDirective: xd,
  isSubstringInArray: wv,
  interpolateToCurve: Sv,
  calcLabelPosition: Ev,
  calcCardinalityPosition: Av,
  calcTerminalLabelPosition: Iv,
  formatUrl: kv,
  getStylesFromArray: Rv,
  generateId: Lv,
  random: Nv,
  runFunc: Tv,
  entityDecode: Pv,
  initIdGenerator: zv,
  directiveSanitizer: Ln,
  sanitizeCss: sa,
  insertTitle: Hv,
  parseFontSize: C0
};
var wd = "comm", Sd = "rule", kd = "decl", qv = "@import", Gv = "@keyframes", Wv = "@layer", jv = Math.abs, E0 = String.fromCharCode;
function Td(e) {
  return e.trim();
}
function la(e, t, r) {
  return e.replace(t, r);
}
function Yv(e, t) {
  return e.indexOf(t);
}
function di(e, t) {
  return e.charCodeAt(t) | 0;
}
function pi(e, t, r) {
  return e.slice(t, r);
}
function Mr(e) {
  return e.length;
}
function Cd(e) {
  return e.length;
}
function Wi(e, t) {
  return t.push(e), e;
}
var cs = 1, On = 1, Ed = 0, Ft = 0, Ke = 0, $n = "";
function A0(e, t, r, n, i, a, s) {
  return { value: e, root: t, parent: r, type: n, props: i, children: a, line: cs, column: On, length: s, return: "" };
}
function Vv() {
  return Ke;
}
function Xv() {
  return Ke = Ft > 0 ? di($n, --Ft) : 0, On--, Ke === 10 && (On = 1, cs--), Ke;
}
function jt() {
  return Ke = Ft < Ed ? di($n, Ft++) : 0, On++, Ke === 10 && (On = 1, cs++), Ke;
}
function sn() {
  return di($n, Ft);
}
function ca() {
  return Ft;
}
function us(e, t) {
  return pi($n, e, t);
}
function Eo(e) {
  switch (e) {
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    case 59:
    case 123:
    case 125:
      return 4;
    case 58:
      return 3;
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    case 41:
    case 93:
      return 1;
  }
  return 0;
}
function Kv(e) {
  return cs = On = 1, Ed = Mr($n = e), Ft = 0, [];
}
function Zv(e) {
  return $n = "", e;
}
function Zs(e) {
  return Td(us(Ft - 1, Ao(e === 91 ? e + 2 : e === 40 ? e + 1 : e)));
}
function Jv(e) {
  for (; (Ke = sn()) && Ke < 33; )
    jt();
  return Eo(e) > 2 || Eo(Ke) > 3 ? "" : " ";
}
function Qv(e, t) {
  for (; --t && jt() && !(Ke < 48 || Ke > 102 || Ke > 57 && Ke < 65 || Ke > 70 && Ke < 97); )
    ;
  return us(e, ca() + (t < 6 && sn() == 32 && jt() == 32));
}
function Ao(e) {
  for (; jt(); )
    switch (Ke) {
      case e:
        return Ft;
      case 34:
      case 39:
        e !== 34 && e !== 39 && Ao(Ke);
        break;
      case 40:
        e === 41 && Ao(e);
        break;
      case 92:
        jt();
        break;
    }
  return Ft;
}
function e7(e, t) {
  for (; jt() && e + Ke !== 47 + 10; )
    if (e + Ke === 42 + 42 && sn() === 47)
      break;
  return "/*" + us(t, Ft - 1) + "*" + E0(e === 47 ? e : jt());
}
function t7(e) {
  for (; !Eo(sn()); )
    jt();
  return us(e, Ft);
}
function r7(e) {
  return Zv(ua("", null, null, null, [""], e = Kv(e), 0, [0], e));
}
function ua(e, t, r, n, i, a, s, o, l) {
  for (var u = 0, d = 0, p = s, b = 0, m = 0, _ = 0, k = 1, L = 1, A = 1, v = 0, S = "", C = i, I = a, R = n, N = S; L; )
    switch (_ = v, v = jt()) {
      case 40:
        if (_ != 108 && di(N, p - 1) == 58) {
          Yv(N += la(Zs(v), "&", "&\f"), "&\f") != -1 && (A = -1);
          break;
        }
      case 34:
      case 39:
      case 91:
        N += Zs(v);
        break;
      case 9:
      case 10:
      case 13:
      case 32:
        N += Jv(_);
        break;
      case 92:
        N += Qv(ca() - 1, 7);
        continue;
      case 47:
        switch (sn()) {
          case 42:
          case 47:
            Wi(n7(e7(jt(), ca()), t, r), l);
            break;
          default:
            N += "/";
        }
        break;
      case 123 * k:
        o[u++] = Mr(N) * A;
      case 125 * k:
      case 59:
      case 0:
        switch (v) {
          case 0:
          case 125:
            L = 0;
          case 59 + d:
            A == -1 && (N = la(N, /\f/g, "")), m > 0 && Mr(N) - p && Wi(m > 32 ? xc(N + ";", n, r, p - 1) : xc(la(N, " ", "") + ";", n, r, p - 2), l);
            break;
          case 59:
            N += ";";
          default:
            if (Wi(R = yc(N, t, r, u, d, i, o, S, C = [], I = [], p), a), v === 123)
              if (d === 0)
                ua(N, t, R, R, C, a, p, o, I);
              else
                switch (b === 99 && di(N, 3) === 110 ? 100 : b) {
                  case 100:
                  case 108:
                  case 109:
                  case 115:
                    ua(e, R, R, n && Wi(yc(e, R, R, 0, 0, i, o, S, i, C = [], p), I), i, I, p, o, n ? C : I);
                    break;
                  default:
                    ua(N, R, R, R, [""], I, 0, o, I);
                }
        }
        u = d = m = 0, k = A = 1, S = N = "", p = s;
        break;
      case 58:
        p = 1 + Mr(N), m = _;
      default:
        if (k < 1) {
          if (v == 123)
            --k;
          else if (v == 125 && k++ == 0 && Xv() == 125)
            continue;
        }
        switch (N += E0(v), v * k) {
          case 38:
            A = d > 0 ? 1 : (N += "\f", -1);
            break;
          case 44:
            o[u++] = (Mr(N) - 1) * A, A = 1;
            break;
          case 64:
            sn() === 45 && (N += Zs(jt())), b = sn(), d = p = Mr(S = N += t7(ca())), v++;
            break;
          case 45:
            _ === 45 && Mr(N) == 2 && (k = 0);
        }
    }
  return a;
}
function yc(e, t, r, n, i, a, s, o, l, u, d) {
  for (var p = i - 1, b = i === 0 ? a : [""], m = Cd(b), _ = 0, k = 0, L = 0; _ < n; ++_)
    for (var A = 0, v = pi(e, p + 1, p = jv(k = s[_])), S = e; A < m; ++A)
      (S = Td(k > 0 ? b[A] + " " + v : la(v, /&\f/g, b[A]))) && (l[L++] = S);
  return A0(e, t, r, i === 0 ? Sd : o, l, u, d);
}
function n7(e, t, r) {
  return A0(e, t, r, wd, E0(Vv()), pi(e, 2, -2), 0);
}
function xc(e, t, r, n) {
  return A0(e, t, r, kd, pi(e, 0, n), pi(e, n + 1, -1), n);
}
function Io(e, t) {
  for (var r = "", n = Cd(e), i = 0; i < n; i++)
    r += t(e[i], i, e, t) || "";
  return r;
}
function i7(e, t, r, n) {
  switch (e.type) {
    case Wv:
      if (e.children.length)
        break;
    case qv:
    case kd:
      return e.return = e.return || e.value;
    case wd:
      return "";
    case Gv:
      return e.return = e.value + "{" + Io(e.children, n) + "}";
    case Sd:
      e.value = e.props.join(",");
  }
  return Mr(r = Io(e.children, n)) ? e.return = e.value + "{" + r + "}" : "";
}
var a7 = Object.prototype;
function Ad(e) {
  var t = e && e.constructor, r = typeof t == "function" && t.prototype || a7;
  return e === r;
}
function s7(e, t) {
  return function(r) {
    return e(t(r));
  };
}
var o7 = s7(Object.keys, Object);
const l7 = o7;
var c7 = Object.prototype, u7 = c7.hasOwnProperty;
function h7(e) {
  if (!Ad(e))
    return l7(e);
  var t = [];
  for (var r in Object(e))
    u7.call(e, r) && r != "constructor" && t.push(r);
  return t;
}
var d7 = Dn(Wr, "DataView");
const Ro = d7;
var p7 = Dn(Wr, "Promise");
const Lo = p7;
var f7 = Dn(Wr, "Set");
const Oo = f7;
var m7 = Dn(Wr, "WeakMap");
const No = m7;
var _c = "[object Map]", g7 = "[object Object]", wc = "[object Promise]", Sc = "[object Set]", kc = "[object WeakMap]", Tc = "[object DataView]", b7 = hn(Ro), v7 = hn(Oa), y7 = hn(Lo), x7 = hn(Oo), _7 = hn(No), en = yi;
(Ro && en(new Ro(new ArrayBuffer(1))) != Tc || Oa && en(new Oa()) != _c || Lo && en(Lo.resolve()) != wc || Oo && en(new Oo()) != Sc || No && en(new No()) != kc) && (en = function(e) {
  var t = yi(e), r = t == g7 ? e.constructor : void 0, n = r ? hn(r) : "";
  if (n)
    switch (n) {
      case b7:
        return Tc;
      case v7:
        return _c;
      case y7:
        return wc;
      case x7:
        return Sc;
      case _7:
        return kc;
    }
  return t;
});
const w7 = en;
function I0(e) {
  return e != null && typeof e == "object";
}
var S7 = "[object Arguments]";
function Cc(e) {
  return I0(e) && yi(e) == S7;
}
var Id = Object.prototype, k7 = Id.hasOwnProperty, T7 = Id.propertyIsEnumerable, C7 = Cc(function() {
  return arguments;
}()) ? Cc : function(e) {
  return I0(e) && k7.call(e, "callee") && !T7.call(e, "callee");
};
const E7 = C7;
var A7 = Array.isArray;
const I7 = A7;
var R7 = 9007199254740991;
function Rd(e) {
  return typeof e == "number" && e > -1 && e % 1 == 0 && e <= R7;
}
function L7(e) {
  return e != null && Rd(e.length) && !ed(e);
}
function O7() {
  return !1;
}
var Ld = typeof exports == "object" && exports && !exports.nodeType && exports, Ec = Ld && typeof module == "object" && module && !module.nodeType && module, N7 = Ec && Ec.exports === Ld, Ac = N7 ? Wr.Buffer : void 0, M7 = Ac ? Ac.isBuffer : void 0, B7 = M7 || O7;
const D7 = B7;
var F7 = "[object Arguments]", $7 = "[object Array]", z7 = "[object Boolean]", P7 = "[object Date]", U7 = "[object Error]", H7 = "[object Function]", q7 = "[object Map]", G7 = "[object Number]", W7 = "[object Object]", j7 = "[object RegExp]", Y7 = "[object Set]", V7 = "[object String]", X7 = "[object WeakMap]", K7 = "[object ArrayBuffer]", Z7 = "[object DataView]", J7 = "[object Float32Array]", Q7 = "[object Float64Array]", e8 = "[object Int8Array]", t8 = "[object Int16Array]", r8 = "[object Int32Array]", n8 = "[object Uint8Array]", i8 = "[object Uint8ClampedArray]", a8 = "[object Uint16Array]", s8 = "[object Uint32Array]", Pe = {};
Pe[J7] = Pe[Q7] = Pe[e8] = Pe[t8] = Pe[r8] = Pe[n8] = Pe[i8] = Pe[a8] = Pe[s8] = !0;
Pe[F7] = Pe[$7] = Pe[K7] = Pe[z7] = Pe[Z7] = Pe[P7] = Pe[U7] = Pe[H7] = Pe[q7] = Pe[G7] = Pe[W7] = Pe[j7] = Pe[Y7] = Pe[V7] = Pe[X7] = !1;
function o8(e) {
  return I0(e) && Rd(e.length) && !!Pe[yi(e)];
}
function l8(e) {
  return function(t) {
    return e(t);
  };
}
var Od = typeof exports == "object" && exports && !exports.nodeType && exports, ei = Od && typeof module == "object" && module && !module.nodeType && module, c8 = ei && ei.exports === Od, Js = c8 && Zh.process, u8 = function() {
  try {
    var e = ei && ei.require && ei.require("util").types;
    return e || Js && Js.binding && Js.binding("util");
  } catch {
  }
}();
const Ic = u8;
var Rc = Ic && Ic.isTypedArray, h8 = Rc ? l8(Rc) : o8;
const d8 = h8;
var p8 = "[object Map]", f8 = "[object Set]", m8 = Object.prototype, g8 = m8.hasOwnProperty;
function ha(e) {
  if (e == null)
    return !0;
  if (L7(e) && (I7(e) || typeof e == "string" || typeof e.splice == "function" || D7(e) || d8(e) || E7(e)))
    return !e.length;
  var t = w7(e);
  if (t == p8 || t == f8)
    return !e.size;
  if (Ad(e))
    return !h7(e).length;
  for (var r in e)
    if (g8.call(e, r))
      return !1;
  return !0;
}
const Lc = "10.1.0", Nd = "c4", b8 = (e) => e.match(/^\s*C4Context|C4Container|C4Component|C4Dynamic|C4Deployment/) !== null, v8 = async () => {
  const { diagram: e } = await import("./c4Diagram-44c43e89-6b9ae133.js");
  return { id: Nd, diagram: e };
}, y8 = {
  id: Nd,
  detector: b8,
  loader: v8
}, x8 = y8, Md = "flowchart", _8 = (e, t) => {
  var r, n;
  return ((r = t == null ? void 0 : t.flowchart) == null ? void 0 : r.defaultRenderer) === "dagre-wrapper" || ((n = t == null ? void 0 : t.flowchart) == null ? void 0 : n.defaultRenderer) === "elk" ? !1 : e.match(/^\s*graph/) !== null;
}, w8 = async () => {
  const { diagram: e } = await import("./flowDiagram-46a15f6f-3ceac88b.js");
  return { id: Md, diagram: e };
}, S8 = {
  id: Md,
  detector: _8,
  loader: w8
}, k8 = S8, Bd = "flowchart-v2", T8 = (e, t) => {
  var r, n, i;
  return ((r = t == null ? void 0 : t.flowchart) == null ? void 0 : r.defaultRenderer) === "dagre-d3" || ((n = t == null ? void 0 : t.flowchart) == null ? void 0 : n.defaultRenderer) === "elk" ? !1 : e.match(/^\s*graph/) !== null && ((i = t == null ? void 0 : t.flowchart) == null ? void 0 : i.defaultRenderer) === "dagre-wrapper" ? !0 : e.match(/^\s*flowchart/) !== null;
}, C8 = async () => {
  const { diagram: e } = await import("./flowDiagram-v2-8e52592d-8df087e3.js");
  return { id: Bd, diagram: e };
}, E8 = {
  id: Bd,
  detector: T8,
  loader: C8
}, A8 = E8, Dd = "er", I8 = (e) => e.match(/^\s*erDiagram/) !== null, R8 = async () => {
  const { diagram: e } = await import("./erDiagram-20cc9db4-fab6e8bd.js");
  return { id: Dd, diagram: e };
}, L8 = {
  id: Dd,
  detector: I8,
  loader: R8
}, O8 = L8, Fd = "gitGraph", N8 = (e) => e.match(/^\s*gitGraph/) !== null, M8 = async () => {
  const { diagram: e } = await import("./gitGraphDiagram-0a645df6-2a7725fd.js");
  return { id: Fd, diagram: e };
}, B8 = {
  id: Fd,
  detector: N8,
  loader: M8
}, D8 = B8, $d = "gantt", F8 = (e) => e.match(/^\s*gantt/) !== null, $8 = async () => {
  const { diagram: e } = await import("./ganttDiagram-04e74c0a-3039eeaf.js");
  return { id: $d, diagram: e };
}, z8 = {
  id: $d,
  detector: F8,
  loader: $8
}, P8 = z8, zd = "info", U8 = (e) => e.match(/^\s*info/) !== null, H8 = async () => {
  const { diagram: e } = await import("./infoDiagram-69ec1a58-615d5e11.js");
  return { id: zd, diagram: e };
}, q8 = {
  id: zd,
  detector: U8,
  loader: H8
}, G8 = q8, Pd = "pie", W8 = (e) => e.match(/^\s*pie/) !== null, j8 = async () => {
  const { diagram: e } = await import("./pieDiagram-db1a8a21-1d5c2a8c.js");
  return { id: Pd, diagram: e };
}, Y8 = {
  id: Pd,
  detector: W8,
  loader: j8
}, V8 = Y8, Ud = "requirement", X8 = (e) => e.match(/^\s*requirement(Diagram)?/) !== null, K8 = async () => {
  const { diagram: e } = await import("./requirementDiagram-b9649942-874f4bec.js");
  return { id: Ud, diagram: e };
}, Z8 = {
  id: Ud,
  detector: X8,
  loader: K8
}, J8 = Z8, Hd = "sequence", Q8 = (e) => e.match(/^\s*sequenceDiagram/) !== null, ey = async () => {
  const { diagram: e } = await import("./sequenceDiagram-446df3e4-451c1519.js");
  return { id: Hd, diagram: e };
}, ty = {
  id: Hd,
  detector: Q8,
  loader: ey
}, ry = ty, qd = "class", ny = (e, t) => {
  var r;
  return ((r = t == null ? void 0 : t.class) == null ? void 0 : r.defaultRenderer) === "dagre-wrapper" ? !1 : e.match(/^\s*classDiagram/) !== null;
}, iy = async () => {
  const { diagram: e } = await import("./classDiagram-634fc78b-04f03c77.js");
  return { id: qd, diagram: e };
}, ay = {
  id: qd,
  detector: ny,
  loader: iy
}, sy = ay, Gd = "classDiagram", oy = (e, t) => {
  var r;
  return e.match(/^\s*classDiagram/) !== null && ((r = t == null ? void 0 : t.class) == null ? void 0 : r.defaultRenderer) === "dagre-wrapper" ? !0 : e.match(/^\s*classDiagram-v2/) !== null;
}, ly = async () => {
  const { diagram: e } = await import("./classDiagram-v2-72bddc41-c47cce3b.js");
  return { id: Gd, diagram: e };
}, cy = {
  id: Gd,
  detector: oy,
  loader: ly
}, uy = cy, Wd = "state", hy = (e, t) => {
  var r;
  return ((r = t == null ? void 0 : t.state) == null ? void 0 : r.defaultRenderer) === "dagre-wrapper" ? !1 : e.match(/^\s*stateDiagram/) !== null;
}, dy = async () => {
  const { diagram: e } = await import("./stateDiagram-d53d2428-226ac4c3.js");
  return { id: Wd, diagram: e };
}, py = {
  id: Wd,
  detector: hy,
  loader: dy
}, fy = py, jd = "stateDiagram", my = (e, t) => {
  var r, n;
  return !!(e.match(/^\s*stateDiagram-v2/) !== null || e.match(/^\s*stateDiagram/) && ((r = t == null ? void 0 : t.state) == null ? void 0 : r.defaultRenderer) === "dagre-wrapper" || e.match(/^\s*stateDiagram/) && ((n = t == null ? void 0 : t.state) == null ? void 0 : n.defaultRenderer) === "dagre-wrapper");
}, gy = async () => {
  const { diagram: e } = await import("./stateDiagram-v2-9765461d-537e9b3c.js");
  return { id: jd, diagram: e };
}, by = {
  id: jd,
  detector: my,
  loader: gy
}, vy = by, Yd = "journey", yy = (e) => e.match(/^\s*journey/) !== null, xy = async () => {
  const { diagram: e } = await import("./journeyDiagram-d38aa57d-beeadddf.js");
  return { id: Yd, diagram: e };
}, _y = {
  id: Yd,
  detector: yy,
  loader: xy
}, wy = _y, Sy = () => "", ky = Sy, Ty = function() {
}, Cy = (e, t, r) => {
  try {
    re.debug(`Renering svg for syntax error
`);
    const n = Zt("#" + t), i = n.append("g");
    i.append("path").attr("class", "error-icon").attr(
      "d",
      "m411.313,123.313c6.25-6.25 6.25-16.375 0-22.625s-16.375-6.25-22.625,0l-32,32-9.375,9.375-20.688-20.688c-12.484-12.5-32.766-12.5-45.25,0l-16,16c-1.261,1.261-2.304,2.648-3.31,4.051-21.739-8.561-45.324-13.426-70.065-13.426-105.867,0-192,86.133-192,192s86.133,192 192,192 192-86.133 192-192c0-24.741-4.864-48.327-13.426-70.065 1.402-1.007 2.79-2.049 4.051-3.31l16-16c12.5-12.492 12.5-32.758 0-45.25l-20.688-20.688 9.375-9.375 32.001-31.999zm-219.313,100.687c-52.938,0-96,43.063-96,96 0,8.836-7.164,16-16,16s-16-7.164-16-16c0-70.578 57.422-128 128-128 8.836,0 16,7.164 16,16s-7.164,16-16,16z"
    ), i.append("path").attr("class", "error-icon").attr(
      "d",
      "m459.02,148.98c-6.25-6.25-16.375-6.25-22.625,0s-6.25,16.375 0,22.625l16,16c3.125,3.125 7.219,4.688 11.313,4.688 4.094,0 8.188-1.563 11.313-4.688 6.25-6.25 6.25-16.375 0-22.625l-16.001-16z"
    ), i.append("path").attr("class", "error-icon").attr(
      "d",
      "m340.395,75.605c3.125,3.125 7.219,4.688 11.313,4.688 4.094,0 8.188-1.563 11.313-4.688 6.25-6.25 6.25-16.375 0-22.625l-16-16c-6.25-6.25-16.375-6.25-22.625,0s-6.25,16.375 0,22.625l15.999,16z"
    ), i.append("path").attr("class", "error-icon").attr(
      "d",
      "m400,64c8.844,0 16-7.164 16-16v-32c0-8.836-7.156-16-16-16-8.844,0-16,7.164-16,16v32c0,8.836 7.156,16 16,16z"
    ), i.append("path").attr("class", "error-icon").attr(
      "d",
      "m496,96.586h-32c-8.844,0-16,7.164-16,16 0,8.836 7.156,16 16,16h32c8.844,0 16-7.164 16-16 0-8.836-7.156-16-16-16z"
    ), i.append("path").attr("class", "error-icon").attr(
      "d",
      "m436.98,75.605c3.125,3.125 7.219,4.688 11.313,4.688 4.094,0 8.188-1.563 11.313-4.688l32-32c6.25-6.25 6.25-16.375 0-22.625s-16.375-6.25-22.625,0l-32,32c-6.251,6.25-6.251,16.375-0.001,22.625z"
    ), i.append("text").attr("class", "error-text").attr("x", 1440).attr("y", 250).attr("font-size", "150px").style("text-anchor", "middle").text("Syntax error in text"), i.append("text").attr("class", "error-text").attr("x", 1250).attr("y", 400).attr("font-size", "100px").style("text-anchor", "middle").text("mermaid version " + r), n.attr("height", 100), n.attr("width", 500), n.attr("viewBox", "768 0 912 512");
  } catch (n) {
    re.error("Error while rendering info diagram"), re.error(Uv(n));
  }
}, Vd = {
  setConf: Ty,
  draw: Cy
}, Ey = {
  db: {
    clear: () => {
    }
  },
  styles: ky,
  renderer: Vd,
  parser: {
    parser: { yy: {} },
    parse: () => {
    }
  },
  init: () => {
  }
}, Ay = Ey, Xd = "flowchart-elk", Iy = (e, t) => {
  var r;
  return (
    // If diagram explicitly states flowchart-elk
    !!(e.match(/^\s*flowchart-elk/) || // If a flowchart/graph diagram has their default renderer set to elk
    e.match(/^\s*flowchart|graph/) && ((r = t == null ? void 0 : t.flowchart) == null ? void 0 : r.defaultRenderer) === "elk")
  );
}, Ry = async () => {
  const { diagram: e } = await import("./flowchart-elk-definition-a44a74cb-b9c31962.js");
  return { id: Xd, diagram: e };
}, Ly = {
  id: Xd,
  detector: Iy,
  loader: Ry
}, Oy = Ly, Kd = "timeline", Ny = (e) => e.match(/^\s*timeline/) !== null, My = async () => {
  const { diagram: e } = await import("./timeline-definition-de69aca6-c4dba624.js");
  return { id: Kd, diagram: e };
}, By = {
  id: Kd,
  detector: Ny,
  loader: My
}, Dy = By, Zd = "mindmap", Fy = (e) => e.match(/^\s*mindmap/) !== null, $y = async () => {
  const { diagram: e } = await import("./mindmap-definition-65b51176-603d170f.js");
  return { id: Zd, diagram: e };
}, zy = {
  id: Zd,
  detector: Fy,
  loader: $y
}, Py = zy;
let Oc = !1;
const R0 = () => {
  Oc || (Oc = !0, Fa("error", Ay, (e) => e.toLowerCase().trim() === "error"), Fa(
    "---",
    // --- diagram type may appear if YAML front-matter is not parsed correctly
    {
      db: {
        clear: () => {
        }
      },
      styles: {},
      // should never be used
      renderer: {},
      // should never be used
      parser: {
        parser: { yy: {} },
        parse: () => {
          throw new Error(
            "Diagrams beginning with --- are not valid. If you were trying to use a YAML front-matter, please ensure that you've correctly opened and closed the YAML front-matter with un-indented `---` blocks"
          );
        }
      },
      init: () => null
      // no op
    },
    (e) => e.toLowerCase().trimStart().startsWith("---")
  ), vd(
    x8,
    uy,
    sy,
    O8,
    P8,
    G8,
    V8,
    J8,
    ry,
    Oy,
    A8,
    k8,
    Py,
    Dy,
    D8,
    vy,
    fy,
    wy
  ));
}, Uy = (e) => e.trimStart().replace(/^\s*%%(?!{)[^\n]+\n?/gm, "");
class Jd {
  constructor(t) {
    var r, n;
    this.text = t, this.type = "graph", this.text += `
`;
    const i = Er();
    try {
      this.type = ls(t, i);
    } catch (o) {
      this.type = "error", this.detectError = o;
    }
    const a = k0(this.type);
    re.debug("Type " + this.type), this.db = a.db, (n = (r = this.db).clear) == null || n.call(r), this.renderer = a.renderer, this.parser = a.parser;
    const s = this.parser.parse.bind(this.parser);
    this.parser.parse = (o) => s(Uy(ev(o, this.db))), this.parser.parser.yy = this.db, a.init && (a.init(i), re.info("Initialized diagram " + this.type, i)), this.parse();
  }
  parse() {
    var t, r;
    if (this.detectError)
      throw this.detectError;
    (r = (t = this.db).clear) == null || r.call(t), this.parser.parse(this.text);
  }
  async render(t, r) {
    await this.renderer.draw(this.text, t, r, this);
  }
  getParser() {
    return this.parser;
  }
  getType() {
    return this.type;
  }
}
const L0 = async (e) => {
  const t = ls(e, Er());
  try {
    k0(t);
  } catch {
    const n = vv(t);
    if (!n)
      throw new bd(`Diagram ${t} not found.`);
    const { id: i, diagram: a } = await n();
    Fa(i, a);
  }
  return new Jd(e);
};
let Mo = [];
const dx = (e) => {
  Mo.push(e);
}, Hy = () => {
  Mo.forEach((e) => {
    e();
  }), Mo = [];
}, qy = "graphics-document document";
function Gy(e, t) {
  e.attr("role", qy), ha(t) || e.attr("aria-roledescription", t);
}
function Wy(e, t, r, n) {
  if (e.insert !== void 0)
    if (t || r) {
      if (r) {
        const i = "chart-desc-" + n;
        e.attr("aria-describedby", i), e.insert("desc", ":first-child").attr("id", i).text(r);
      }
      if (t) {
        const i = "chart-title-" + n;
        e.attr("aria-labelledby", i), e.insert("title", ":first-child").attr("id", i).text(t);
      }
    } else
      return;
}
const Qd = [
  "graph",
  "flowchart",
  "flowchart-v2",
  "flowchart-elk",
  "stateDiagram",
  "stateDiagram-v2"
], jy = 5e4, Yy = "graph TB;a[Maximum text size in diagram exceeded];style a fill:#faa", Vy = "sandbox", Xy = "loose", Ky = "http://www.w3.org/2000/svg", Zy = "http://www.w3.org/1999/xlink", Jy = "http://www.w3.org/1999/xhtml", Qy = "100%", e9 = "100%", t9 = "border:0;margin:0;", r9 = "margin:0", n9 = "allow-top-navigation-by-user-activation allow-popups", i9 = 'The "iframe" tag is not supported by your browser.', a9 = ["foreignobject"], s9 = ["dominant-baseline"];
async function o9(e, t) {
  R0();
  try {
    (await L0(e)).parse();
  } catch (r) {
    if (t != null && t.suppressErrors)
      return !1;
    throw r;
  }
  return !0;
}
const l9 = function(e) {
  let t = e;
  return t = t.replace(/style.*:\S*#.*;/g, function(r) {
    return r.substring(0, r.length - 1);
  }), t = t.replace(/classDef.*:\S*#.*;/g, function(r) {
    return r.substring(0, r.length - 1);
  }), t = t.replace(/#\w+;/g, function(r) {
    const n = r.substring(1, r.length - 1);
    return /^\+?\d+$/.test(n) ? "ﬂ°°" + n + "¶ß" : "ﬂ°" + n + "¶ß";
  }), t;
}, c9 = function(e) {
  let t = e;
  return t = t.replace(/ﬂ°°/g, "&#"), t = t.replace(/ﬂ°/g, "&"), t = t.replace(/¶ß/g, ";"), t;
}, Nc = (e, t, r = []) => `
.${e} ${t} { ${r.join(" !important; ")} !important; }`, u9 = (e, t, r = {}) => {
  var n;
  let i = "";
  if (e.themeCSS !== void 0 && (i += `
${e.themeCSS}`), e.fontFamily !== void 0 && (i += `
:root { --mermaid-font-family: ${e.fontFamily}}`), e.altFontFamily !== void 0 && (i += `
:root { --mermaid-alt-font-family: ${e.altFontFamily}}`), !ha(r) && Qd.includes(t)) {
    const l = e.htmlLabels || ((n = e.flowchart) == null ? void 0 : n.htmlLabels) ? ["> *", "span"] : ["rect", "polygon", "ellipse", "circle", "path"];
    for (const u in r) {
      const d = r[u];
      ha(d.styles) || l.forEach((p) => {
        i += Nc(d.id, p, d.styles);
      }), ha(d.textStyles) || (i += Nc(d.id, "tspan", d.textStyles));
    }
  }
  return i;
}, h9 = (e, t, r, n) => {
  const i = u9(e, t, r), a = ov(t, i, e.themeVariables);
  return Io(r7(`${n}{${a}}`), i7);
}, d9 = (e = "", t, r) => {
  let n = e;
  return !r && !t && (n = n.replace(/marker-end="url\(.*?#/g, 'marker-end="url(#')), n = c9(n), n = n.replace(/<br>/g, "<br/>"), n;
}, p9 = (e = "", t) => {
  const r = t ? t.viewBox.baseVal.height + "px" : e9, n = btoa('<body style="' + r9 + '">' + e + "</body>");
  return `<iframe style="width:${Qy};height:${r};${t9}" src="data:text/html;base64,${n}" sandbox="${n9}">
  ${i9}
</iframe>`;
}, Mc = (e, t, r, n, i) => {
  const a = e.append("div");
  a.attr("id", r), n && a.attr("style", n);
  const s = a.append("svg").attr("id", t).attr("width", "100%").attr("xmlns", Ky);
  return i && s.attr("xmlns:xlink", i), s.append("g"), e;
};
function Bc(e, t) {
  return e.append("iframe").attr("id", t).attr("style", "width: 100%; height: 100%;").attr("sandbox", "");
}
const f9 = (e, t, r, n) => {
  var i, a, s;
  (i = e.getElementById(t)) == null || i.remove(), (a = e.getElementById(r)) == null || a.remove(), (s = e.getElementById(n)) == null || s.remove();
}, m9 = async function(e, t, r) {
  var n, i, a, s;
  R0(), _a();
  const o = oa.detectInit(t);
  o && (Ln(o), rh(o));
  const l = Er();
  re.debug(l), t.length > ((l == null ? void 0 : l.maxTextSize) ?? jy) && (t = Yy), t = t.replace(/\r\n?/g, `
`);
  const u = "#" + e, d = "i" + e, p = "#" + d, b = "d" + e, m = "#" + b;
  let _ = Zt("body");
  const k = l.securityLevel === Vy, L = l.securityLevel === Xy, A = l.fontFamily;
  if (r !== void 0) {
    if (r && (r.innerHTML = ""), k) {
      const P = Bc(Zt(r), d);
      _ = Zt(P.nodes()[0].contentDocument.body), _.node().style.margin = 0;
    } else
      _ = Zt(r);
    Mc(_, e, b, `font-family: ${A}`, Zy);
  } else {
    if (f9(document, e, b, d), k) {
      const P = Bc(Zt("body"), d);
      _ = Zt(P.nodes()[0].contentDocument.body), _.node().style.margin = 0;
    } else
      _ = Zt("body");
    Mc(_, e, b);
  }
  t = l9(t);
  let v, S;
  try {
    v = await L0(t);
  } catch (P) {
    v = new Jd("error"), S = P;
  }
  const C = _.select(m).node(), I = v.type, R = C.firstChild, N = R.firstChild, K = Qd.includes(I) ? v.renderer.getClasses(t, v) : {}, B = h9(
    l,
    I,
    // @ts-ignore convert renderer to TS.
    K,
    u
  ), ie = document.createElement("style");
  ie.innerHTML = B, R.insertBefore(ie, N);
  try {
    await v.renderer.draw(t, e, Lc, v);
  } catch (P) {
    throw Vd.draw(t, e, Lc), P;
  }
  const ge = _.select(`${m} svg`), ce = (i = (n = v.db).getAccTitle) == null ? void 0 : i.call(n), V = (s = (a = v.db).getAccDescription) == null ? void 0 : s.call(a);
  b9(I, ge, ce, V), _.select(`[id="${e}"]`).selectAll("foreignobject > *").attr("xmlns", Jy);
  let F = _.select(m).node().innerHTML;
  if (re.debug("config.arrowMarkerAbsolute", l.arrowMarkerAbsolute), F = d9(F, k, Zu(l.arrowMarkerAbsolute)), k) {
    const P = _.select(m + " svg").node();
    F = p9(F, P);
  } else
    L || (F = xa.sanitize(F, {
      ADD_TAGS: a9,
      ADD_ATTR: s9
    }));
  if (Hy(), S)
    throw S;
  const te = Zt(k ? p : m).node();
  return te && "remove" in te && te.remove(), {
    svg: F,
    bindFunctions: v.db.bindFunctions
  };
};
function g9(e = {}) {
  var t;
  e != null && e.fontFamily && !((t = e.themeVariables) != null && t.fontFamily) && (e.themeVariables || (e.themeVariables = {}), e.themeVariables.fontFamily = e.fontFamily), pg(e), e != null && e.theme && e.theme in xr ? e.themeVariables = xr[e.theme].getThemeVariables(
    e.themeVariables
  ) : e && (e.themeVariables = xr.default.getThemeVariables(e.themeVariables));
  const r = typeof e == "object" ? dg(e) : eh();
  n0(r.logLevel), R0();
}
function b9(e, t, r, n) {
  Gy(t, e), Wy(t, r, n, t.attr("id"));
}
const cn = Object.freeze({
  render: m9,
  parse: o9,
  parseDirective: md,
  getDiagramFromText: L0,
  initialize: g9,
  getConfig: Er,
  setConfig: mg,
  getSiteConfig: eh,
  updateSiteConfig: fg,
  reset: () => {
    _a();
  },
  globalReset: () => {
    _a(ai);
  },
  defaultConfig: ai
});
n0(Er().logLevel);
_a(Er());
const v9 = (e, t, r) => {
  re.warn(e), _d(e) ? (r && r(e.str, e.hash), t.push({ ...e, message: e.str, error: e })) : (r && r(e), e instanceof Error && t.push({
    str: e.message,
    message: e.message,
    hash: e.name,
    error: e
  }));
}, e1 = async function(e = {
  querySelector: ".mermaid"
}) {
  try {
    await y9(e);
  } catch (t) {
    if (_d(t) && re.error(t.str), $t.parseError && $t.parseError(t), !e.suppressErrors)
      throw re.error("Use the suppressErrors option to suppress these errors"), t;
  }
}, y9 = async function({ postRenderCallback: e, querySelector: t, nodes: r } = {
  querySelector: ".mermaid"
}) {
  const n = cn.getConfig();
  re.debug(`${e ? "" : "No "}Callback function found`);
  let i;
  if (r)
    i = r;
  else if (t)
    i = document.querySelectorAll(t);
  else
    throw new Error("Nodes and querySelector are both undefined");
  re.debug(`Found ${i.length} diagrams`), (n == null ? void 0 : n.startOnLoad) !== void 0 && (re.debug("Start On Load: " + (n == null ? void 0 : n.startOnLoad)), cn.updateSiteConfig({ startOnLoad: n == null ? void 0 : n.startOnLoad }));
  const a = new oa.initIdGenerator(n.deterministicIds, n.deterministicIDSeed);
  let s;
  const o = [];
  for (const l of Array.from(i)) {
    re.info("Rendering diagram: " + l.id);
    /*! Check if previously processed */
    if (l.getAttribute("data-processed"))
      continue;
    l.setAttribute("data-processed", "true");
    const u = `mermaid-${a.next()}`;
    s = l.innerHTML, s = Xf(oa.entityDecode(s)).trim().replace(/<br\s*\/?>/gi, "<br/>");
    const d = oa.detectInit(s);
    d && re.debug("Detected early reinit: ", d);
    try {
      const { svg: p, bindFunctions: b } = await i1(u, s, l);
      l.innerHTML = p, e && await e(u), b && b(l);
    } catch (p) {
      v9(p, o, $t.parseError);
    }
  }
  if (o.length > 0)
    throw o[0];
}, t1 = function(e) {
  cn.initialize(e);
}, x9 = async function(e, t, r) {
  re.warn("mermaid.init is deprecated. Please use run instead."), e && t1(e);
  const n = { postRenderCallback: r, querySelector: ".mermaid" };
  typeof t == "string" ? n.querySelector = t : t && (t instanceof HTMLElement ? n.nodes = [t] : n.nodes = t), await e1(n);
}, _9 = async (e, {
  lazyLoad: t = !0
} = {}) => {
  vd(...e), t === !1 && await bv();
}, r1 = function() {
  if ($t.startOnLoad) {
    const { startOnLoad: e } = cn.getConfig();
    e && $t.run().catch((t) => re.error("Mermaid failed to initialize", t));
  }
};
if (typeof document < "u") {
  /*!
   * Wait for document loaded before starting the execution
   */
  window.addEventListener("load", r1, !1);
}
const w9 = function(e) {
  $t.parseError = e;
}, Pa = [];
let Qs = !1;
const n1 = async () => {
  if (!Qs) {
    for (Qs = !0; Pa.length > 0; ) {
      const e = Pa.shift();
      if (e)
        try {
          await e();
        } catch (t) {
          re.error("Error executing queue", t);
        }
    }
    Qs = !1;
  }
}, S9 = async (e, t) => new Promise((r, n) => {
  const i = () => new Promise((a, s) => {
    cn.parse(e, t).then(
      (o) => {
        a(o), r(o);
      },
      (o) => {
        var l;
        re.error("Error parsing", o), (l = $t.parseError) == null || l.call($t, o), s(o), n(o);
      }
    );
  });
  Pa.push(i), n1().catch(n);
}), i1 = (e, t, r) => new Promise((n, i) => {
  const a = () => new Promise((s, o) => {
    cn.render(e, t, r).then(
      (l) => {
        s(l), n(l);
      },
      (l) => {
        var u;
        re.error("Error parsing", l), (u = $t.parseError) == null || u.call($t, l), o(l), i(l);
      }
    );
  });
  Pa.push(a), n1().catch(i);
}), $t = {
  startOnLoad: !0,
  mermaidAPI: cn,
  parse: S9,
  render: i1,
  init: x9,
  run: e1,
  registerExternalDiagrams: _9,
  initialize: t1,
  parseError: void 0,
  contentLoaded: r1,
  setParseErrorHandler: w9,
  detectType: ls
};
const k9 = ["innerHTML"], T9 = {
  name: "MarkdownPreview"
}, a1 = /* @__PURE__ */ Bo({
  ...T9,
  props: {
    markdownText: {
      type: String,
      required: !0
    },
    codeTheme: {
      type: String,
      required: !1,
      default: "potmot-dark"
    },
    editorType: {
      type: Boolean,
      required: !1,
      default: !1
    }
  },
  setup(e) {
    const t = e;
    let r = Le();
    const n = new Ua();
    n.code = (u, d) => {
      if (d == "mermaid")
        return `<div class="mermaid">${u}</div>`;
      for (const p of Dc)
        if (p == d) {
          u = Ll.highlight(u, Ll.languages[d], d);
          break;
        }
      return `<pre class="${t.codeTheme}"><code>${jf(u)}</code><div class="code-copy-button" title="复制"></div><div class="code-language">${d}</div></pre>`;
    };
    const i = () => {
      if (r.value == null)
        return;
      const u = Array.from(r.value.querySelectorAll(".code-copy-button"));
      for (const d of u)
        d.addEventListener("click", Vf);
    };
    yn(() => {
      $t.initialize({
        theme: "default"
      });
    });
    const a = () => {
      if (r.value == null)
        return;
      const u = Array.from(r.value.querySelectorAll(".mermaid"));
      for (const d of u) {
        if (d.innerText.indexOf("<svg") != -1)
          continue;
        const p = Math.floor(Math.random() * 1e10);
        $t.render("mermaid" + p, d.innerHTML.replaceAll("&gt;", ">").replaceAll("&lt;", "<")).then((b) => {
          d.innerHTML = b.svg;
        }).catch((b) => {
          d.innerHTML = `<span style="color: red;">${b}</span>`;
        });
      }
    };
    let s = "";
    const o = setInterval(() => {
      s != t.markdownText && (s = t.markdownText, i(), a());
    }, 1e3);
    da(() => {
      clearInterval(o);
    }), ue.setOptions({
      breaks: !0,
      smartLists: !0
    }), ue.use({
      extensions: [Uf, Hf, qf, Gf]
    });
    const l = (u) => ue.parse(u, {
      renderer: n
    }).replaceAll("<a ", '<a target="_blank" ');
    return (u, d) => (qe(), Ge("div", {
      ref_key: "markdownCard",
      ref: r,
      class: "markdown-card",
      innerHTML: l(t.markdownText)
    }, null, 8, k9));
  }
}), s1 = (e) => (v1("data-v-ef5d7fe8"), e = e(), y1(), e), C9 = {
  class: "toolbar"
}, E9 = ["onMousedown", "title"], A9 = {
  class: "insert-text"
}, I9 = ["onMousedown", "title"], R9 = ["value", "onChange"], L9 = ["type", "value", "maxlength", "onInput"], O9 = /* @__PURE__ */ s1(() => /* @__PURE__ */ Ne("br", null, null, -1)), N9 = /* @__PURE__ */ s1(() => /* @__PURE__ */ Ne("br", null, null, -1)), M9 = {
  style: {
    display: "flex",
    "justify-content": "space-around"
  }
}, B9 = ["onMousedown"], D9 = ["onMousedown"], F9 = ["onMousedown"], $9 = ["onMousedown"], z9 = ["placeholder"], P9 = ["textContent"], U9 = {
  key: 0,
  class: "statistical-list"
}, H9 = {
  key: 0
}, q9 = {
  key: 0
}, G9 = {
  name: "MarkdownEditor"
}, W9 = /* @__PURE__ */ Bo({
  ...G9,
  props: {
    modelValue: {
      type: String,
      required: !0
    },
    placeholder: {
      type: String,
      required: !1,
      default: ""
    },
    startWithFullScreen: {
      type: Boolean,
      required: !1,
      default: !1
    },
    shortcutKeys: {
      type: Array,
      required: !1,
      default: []
    },
    insertUnits: {
      type: Array,
      required: !1,
      default: [..._1, ...w1]
    },
    debug: {
      type: Boolean,
      required: !1,
      default: !1
    }
  },
  emits: ["update:modelValue"],
  setup(e, {
    emit: t
  }) {
    const r = e, n = Le(), i = Le(), a = Le(), s = Le(), o = Le(), l = vn(() => C.value ? N.value ? "edit-preview" : "edit" : ""), u = Qr({
      text: ""
    });
    Ar(() => u.text, () => {
      t("update:modelValue", u.text);
    });
    const d = Qr({
      selectLength: 0,
      startPlace: {
        x: 1,
        y: 1
      },
      endPlace: {
        x: 1,
        y: 1
      }
    }), p = () => {
      n.value && (d.startPlace = zn(n.value.selectionStart, u.text), n.value.selectionStart == n.value.selectionEnd ? d.endPlace = d.startPlace : d.endPlace = zn(n.value.selectionEnd, u.text), d.selectLength = n.value.selectionEnd - n.value.selectionStart);
    };
    let b = 0, m = 0, _ = 0;
    const k = (M) => {
      m = M.pageX, _ = M.pageY;
    };
    yn(() => {
      p(), b = setInterval(p, 100), window.addEventListener("mousemove", k);
    }), da(() => {
      clearInterval(b), window.removeEventListener("mousemove", k);
    });
    const L = (M) => {
      C.value ? (M.style.top = "100px", M.style.left = "100px") : (M.style.top = _ + "px", M.style.left = m + "px");
    }, A = Qr([{
      name: "fullScreen",
      label: "全屏/收起全屏",
      icon: "icon-full-screen",
      active: !1,
      method: (M) => {
        M.active = !M.active;
      }
    }, {
      name: "insert",
      label: "快捷插入",
      icon: "icon-bulletpoint",
      active: !1,
      method: (M) => {
        M.active = !M.active, L(a.value);
      }
    }, {
      name: "replace",
      label: "文本查找与替换",
      icon: "icon-search-list",
      active: !1,
      method: (M) => {
        M.active = !M.active, L(s.value);
      }
    }, {
      name: "preview",
      label: "预览",
      icon: "icon-browse",
      active: !1,
      method: (M) => {
        M.active = !M.active;
      }
    }, {
      name: "outline",
      label: "大纲",
      icon: "icon-file-tree",
      active: !1,
      method: (M) => {
        M.active = !M.active, L(o.value);
      }
    }, {
      name: "undo",
      label: "撤销",
      icon: "icon-undo",
      active: !1,
      method: () => {
        Z();
      }
    }, {
      name: "redo",
      label: "重做",
      icon: "icon-redo",
      active: !1,
      method: () => {
        P();
      }
    }]), v = (M) => {
      for (const W of A)
        if (W.name == M)
          return W.active;
      return !1;
    }, S = (M, W) => {
      for (const q of A)
        if (q.name == M) {
          q.active = W;
          break;
        }
    }, C = vn({
      get() {
        return v("fullScreen");
      },
      set(M) {
        S("fullScreen", M);
      }
    });
    let I = 0;
    Ar(() => C.value, async (M) => {
      M ? (N.value = !Yi(), ce.value = "textarea", I = document.documentElement.scrollTop) : (N.value = !1, await Ut(() => {
        document.documentElement.scrollTop = I;
      }));
    });
    const R = vn({
      get() {
        return v("replace");
      },
      set(M) {
        S("replace", M);
      }
    }), N = vn({
      get() {
        return v("preview");
      },
      set(M) {
        S("preview", M);
      }
    }), K = Le(/* @__PURE__ */ new Map());
    K.value = x1(r.insertUnits);
    const B = (M, W) => {
      K.value.get(M).value = W.target.value;
    }, ie = (M, W) => {
      K.value.get(M).value = W.target.value;
    }, ge = (M) => {
      let W = n.value.selectionStart, q = n.value.selectionEnd, ye = u.text, ke;
      const {
        before: Fe,
        after: Tt
      } = M.insert(K.value, u.text, n.value);
      M.replace ? (ye = Vr(Fe, ye, W, q), ke = W + Fe.length) : (ye = Vr(Fe, ye, W), ke = q + Fe.length), Tt.length > 0 && (ye = Vr(Tt, ye, ke)), u.text = ye, se.value = "insert", Ut(() => {
        M.keepSelect && W != q ? (n.value.selectionStart = W, n.value.selectionEnd = ke + Tt.length) : (n.value.selectionStart = W + Fe.length, n.value.selectionEnd = W + Fe.length), G();
      });
    };
    yn(() => {
      u.text = r.modelValue, r.startWithFullScreen && (C.value = !0, N.value = !0);
    });
    let ce = Le("textarea");
    const V = (M, W) => {
      W.scrollTop = M.scrollTop * (W.scrollHeight - W.offsetHeight) / (M.scrollHeight - M.offsetHeight);
    };
    Ar(() => N.value, async (M) => {
      Yi() && (ce.value = M ? "preview" : "textarea");
    });
    let F = 0;
    yn(() => {
      F = setInterval(() => {
        !n.value || !i.value || n.value.scrollHeight <= n.value.clientHeight || i.value.scrollHeight <= n.value.clientHeight || (ce.value == "textarea" ? V(n.value, i.value) : ce.value == "preview" && V(i.value, n.value));
      }, 20);
    }), da(() => {
      clearInterval(F);
    });
    const $ = () => ({
      start: n.value ? n.value.selectionStart : 0,
      end: n.value ? n.value.selectionEnd : 0,
      text: u.text,
      scrollTop: n.value ? n.value.scrollTop : 0
    }), {
      historyData: te,
      redo: P,
      undo: Z,
      push: G,
      top: ae
    } = S1(400, (M) => {
      u.text = M.text, Ut(() => {
        n.value.selectionStart = M.start, n.value.selectionEnd = M.end, n.value.scrollTo(0, M.scrollTop);
      });
    }, () => {
    }, () => {
      alert("已是最后，无法继续撤销");
    }, () => {
      alert("已是最新，无法继续重做");
    }, $);
    let se = Le("jump");
    yn(() => {
      ae.value = $(), n.value.addEventListener("compositionend", () => {
        ae.value = $();
      });
    });
    const Y = (M) => {
      se.value != M ? (se.value = M, G()) : ae.value = $();
    }, Oe = Qr([{
      key: ["x", "X"],
      ctrl: !0,
      method: () => {
        se.value = "cut", setTimeout(G, 200);
      }
    }, {
      key: ["v", "V"],
      ctrl: !0,
      method: () => {
        se.value = "copy", setTimeout(G, 200);
      }
    }, {
      key: ["z", "Z"],
      ctrl: !0,
      method: (M) => {
        se.value = "symbol", M.key == "z" ? Z() : P();
      },
      prevent: !0,
      reject: !0
    }, {
      key: ["r", "f"],
      ctrl: !0,
      method: () => {
        se.value = "replace", Ee.replaceFrom = u.text.slice(n.value.selectionStart, n.value.selectionEnd), R.value = !0;
      },
      prevent: !0,
      reject: !0
    }, {
      key: "Enter",
      method: () => {
        se.value = "blank", ze();
      },
      prevent: !0,
      reject: !0
    }, {
      key: "Tab",
      method: (M) => {
        se.value = "tab", He(M, "	");
      },
      prevent: !0,
      reject: !0
    }, {
      key: "Escape",
      method: () => {
        C.value && (C.value = !1);
      }
    }]), _e = (M) => {
      ce.value = "textarea";
      for (const W of r.shortcutKeys)
        if (W.key && ws(W, M) && (W.prevent && M.preventDefault(), W.method(M), W.reject))
          return;
      for (const W of r.insertUnits)
        if (W.key && ws(W, M) && (W.prevent && M.preventDefault(), se.value = "symbol", ge(W), W.reject))
          return;
      for (const W of Oe)
        if (W.key && ws(W, M) && (W.prevent && M.preventDefault(), W.method(M), W.reject))
          return;
      M.key == "Backspace" || M.key == "Delete" ? setTimeout(() => {
        Y("back");
      }, 40) : M.key == "(" || M.key == "[" || M.key == "{" ? (M.preventDefault(), se.value = "symbol", Ce({
        before: M.key,
        after: M.key == "(" ? ")" : M.key == "{" ? "}" : "]"
      })) : n.value.selectionEnd != n.value.selectionStart && (M.key == '"' || M.key == "'") ? (M.preventDefault(), se.value = "symbol", Ce({
        before: M.key,
        after: M.key == '"' ? '"' : "'"
      })) : M.key.startsWith("Arrow") ? setTimeout(() => {
        Y("jump");
      }, 40) : M.key == " " ? setTimeout(() => {
        Y("blank");
      }, 40) : M.key != "Shift" && M.key != "Control" && M.key != "Alt" && !M.ctrlKey && !M.altKey && !M.shiftKey && setTimeout(() => {
        Y("input");
      }, 40);
    }, Me = () => {
      setTimeout(() => {
        Y("jump");
      }, 40);
    }, Ce = (M) => {
      let W = n.value.selectionStart, q = n.value.selectionEnd, ye = u.text, ke;
      const {
        before: Fe,
        after: Tt
      } = M;
      ye = Vr(Fe, ye, W), ke = q + Fe.length, Tt.length > 0 && (ye = Vr(Tt, ye, ke)), u.text = ye;
      const or = n.value.selectionStart != n.value.selectionEnd;
      Ut(() => {
        or ? (n.value.selectionStart = W, n.value.selectionEnd = ke + Tt.length) : (n.value.selectionStart = W + Fe.length, n.value.selectionEnd = W + Fe.length), G();
      });
    }, ze = () => {
      const M = n.value.selectionStart;
      let W = `
`, q = M;
      for (u.text[q] == `
` && q--; u.text[q] != `
` && q > 0; )
        q--;
      for (q != 0 && q++; q < u.text.length && q < M && (u.text[q] == " " || u.text[q] == "	"); q++)
        W += u.text[q];
      u.text = Vr(W, u.text, M), Ut(() => {
        n.value.selectionStart = M + W.length, n.value.selectionEnd = n.value.selectionStart, G();
      });
    }, He = (M, W) => {
      const q = n.value.selectionStart, ye = n.value.selectionEnd;
      if (M.shiftKey)
        if (n.value.selectionStart == n.value.selectionEnd) {
          let ke = 0;
          for (let or = n.value.selectionStart - 1; or >= 0; or--)
            if (u.text[or] == `
`) {
              ke = or + 1;
              break;
            }
          const Fe = u.text.slice(ke, q), Tt = Fe.replace(W, "");
          if (Fe.length == Tt.length)
            return;
          u.text = u.text.slice(0, q - Fe.length) + Tt + u.text.slice(ye), Ut(() => {
            G({
              start: q,
              end: q,
              scrollTop: n.value.scrollTop,
              text: u.text
            });
          });
        } else {
          const ke = u.text.slice(q, ye), Fe = ke.replace(W, "").replaceAll(`
` + W, `
`);
          if (ke.length == Fe.length)
            return;
          u.text = u.text.slice(0, q) + Fe + u.text.slice(q + ke.length), Ut(() => {
            n.value.selectionStart = q, n.value.selectionEnd = q + Fe.length, G({
              start: q,
              end: n.value.selectionEnd,
              scrollTop: n.value.scrollTop,
              text: u.text
            });
          });
        }
      else if (n.value.selectionStart == n.value.selectionEnd)
        u.text = Vr(W, u.text, n.value.selectionStart), Ut(() => {
          n.value.selectionStart = q + 1, n.value.selectionEnd = q + 1, G({
            start: q + 1,
            end: q + 1,
            scrollTop: n.value.scrollTop,
            text: u.text
          });
        });
      else {
        const ke = u.text.slice(q, n.value.selectionEnd), Fe = W + ke.replaceAll(`
`, `
` + W);
        if (ke.length == Fe.length)
          return;
        u.text = u.text.slice(0, q) + Fe + u.text.slice(q + ke.length), Ut(() => {
          n.value.selectionStart = q, n.value.selectionEnd = q + Fe.length, G({
            start: q,
            end: n.value.selectionEnd,
            scrollTop: n.value.scrollTop,
            text: u.text
          });
        });
      }
    };
    let Re = Le();
    const we = Qr({
      index: -1,
      indexes: []
    }), Ee = Qr({
      replaceFrom: "",
      replaceTo: ""
    });
    Ar(() => Ee.replaceFrom, () => {
      if (Ee.replaceFrom.length <= 0) {
        we.index = -1, we.indexes = [];
        return;
      }
      rt();
    }), Ar(() => u.text, () => {
      rt();
    }), Ar(() => R.value, () => {
      rt();
    }), Ar(() => N.value, () => {
      rt();
    }), Ar(() => C.value, () => {
      rt();
    });
    const rt = () => {
      if (we.index = -1, we.indexes = [], n.value == null || (Re.value.style.width = n.value.scrollWidth + "px", Ee.replaceFrom.length <= 0) || u.text.length <= 0)
        return;
      let M = u.text.indexOf(Ee.replaceFrom, 0), W = 0;
      for (; M >= 0; ) {
        let q = u.text.indexOf(Ee.replaceFrom, M);
        if (q < 0)
          break;
        n.value.selectionStart == q && n.value.selectionEnd - n.value.selectionStart == Ee.replaceFrom.length && (we.index = W), we.indexes.push(q), M = q + Ee.replaceFrom.length, W++;
      }
    }, ut = (M) => {
      n.value.scrollTop = M;
    };
    let bt = Le(""), sr = Le("");
    const Kt = (M = () => {
      n.value.focus();
    }) => {
      sr.value = u.text.substring(0, we.indexes[we.index]), bt.value = "width: " + n.value.clientWidth + "px;", Ut(() => {
        setTimeout(() => {
          ce.value = "textarea", Re.value.scrollHeight > n.value.clientHeight / 2.4 ? ut(Re.value.scrollHeight - n.value.clientHeight / 2.4) : ut(0), M(), n.value.selectionStart = we.indexes[we.index], n.value.selectionEnd = we.indexes[we.index] + Ee.replaceFrom.length;
        }, 50 + u.text.length / 5e3);
      });
    }, It = () => {
      n.value != null && (we.index > 0 && we.index--, Kt());
    }, zt = () => {
      n.value != null && (we.index < we.indexes.length - 1 && we.index++, Kt());
    }, Pt = () => {
      u.text.slice(n.value.selectionStart, n.value.selectionEnd) == Ee.replaceFrom && (u.text = u.text.slice(0, n.value.selectionStart) + Ee.replaceTo + u.text.slice(n.value.selectionEnd), G());
    }, _i = () => {
      Ee.replaceFrom.length <= 0 ? alert("替换文本不可为空") : (u.text = u.text.replaceAll(Ee.replaceFrom, Ee.replaceTo), Ut(() => {
        G();
      }));
    }, zn = (M, W) => {
      let q = 0, ye = 1;
      W[M] == `
` && (M--, q++);
      for (let ke = M; ke >= 0 && W[ke] != `
`; ke--)
        q++;
      for (let ke = M; ke >= 0; ke--)
        W[ke] == `
` && ye++;
      return {
        y: ye,
        x: q
      };
    };
    return (M, W) => (qe(), Ge(mr, null, [Ne("div", {
      class: vs([[it(C) ? "full" : "non-full", it(Yi)() ? "mobile" : "pc"], "editor"])
    }, [Ne("ul", C9, [(qe(!0), Ge(mr, null, bn(A, (q) => (qe(), Ge("li", null, [Ne("span", {
      onMousedown: hr((ye) => q.method(q), ["prevent", "stop"]),
      title: q.label,
      class: vs(["iconfont", [q.active ? "chosen" : "", q.icon]])
    }, null, 42, E9)]))), 256))]), Ir((qe(), Ge("div", {
      ref_key: "toolMenu",
      ref: a,
      class: "floating-card tool-menu"
    }, [Ne("span", {
      class: "iconfont icon-close",
      onMousedown: W[0] || (W[0] = hr((q) => S("insert", !1), ["prevent", "stop"]))
    }, null, 32), (qe(!0), Ge(mr, null, bn(r.insertUnits, (q) => (qe(), Ge(mr, null, [Ne("span", A9, [Ne("span", {
      class: "hover-color-blue",
      onMousedown: hr((ye) => ge(q), ["prevent", "stop"]),
      title: q.key ? (q.ctrl ? "Ctrl + " : "") + (q.shift ? "Shift + " : "") + (q.alt ? "Alt + " : "") + q.key : "无快捷键"
    }, Xe(q.label), 41, I9), (qe(!0), Ge(mr, null, bn(q.arguments, (ye) => (qe(), Ge(mr, null, [Ne("label", null, Xe(ye.label), 1), "options" in ye ? (qe(), Ge("select", {
      key: 0,
      value: K.value.get(ye.name).value,
      onChange: (ke) => {
        ie(ye.name, ke);
      }
    }, [(qe(!0), Ge(mr, null, bn(ye.options, (ke) => (qe(), Ge("option", null, Xe(ke), 1))), 256))], 40, R9)) : "type" in ye ? (qe(), Ge("input", {
      key: 1,
      type: ye.type,
      value: K.value.get(ye.name).value,
      maxlength: ye.inputLength ? ye.inputLength : 100,
      style: ji(ye.styleWidth ? "width: " + ye.styleWidth : ""),
      onInput: (ke) => {
        B(ye.name, ke);
      }
    }, null, 44, L9)) : Ci("", !0)], 64))), 256))]), O9], 64))), 256))])), [[Un, v("insert")], [it(_s)]]), Ir((qe(), Ge("div", {
      ref_key: "replaceBox",
      ref: s,
      class: "replace-box floating-card tool-menu"
    }, [Ne("span", {
      class: "iconfont icon-close",
      onMousedown: W[1] || (W[1] = hr((q) => S("replace", !1), ["prevent", "stop"]))
    }, null, 32), Ir(Ne("textarea", {
      "onUpdate:modelValue": W[2] || (W[2] = (q) => Ee.replaceFrom = q),
      placeholder: "查找文本",
      onChange: W[3] || (W[3] = () => {
        Ee.replaceFrom.length > 0 && Kt();
      })
    }, null, 544), [[ys, Ee.replaceFrom]]), N9, Ir(Ne("textarea", {
      "onUpdate:modelValue": W[4] || (W[4] = (q) => Ee.replaceTo = q),
      placeholder: "替换文本"
    }, null, 512), [[ys, Ee.replaceTo]]), Ne("div", M9, [Ne("span", {
      class: "hover-color-blue",
      onMousedown: hr(zt, ["prevent", "stop"]),
      style: {
        padding: "0.1em"
      }
    }, "↓", 40, B9), Ne("span", {
      class: "hover-color-blue",
      onMousedown: hr(It, ["prevent", "stop"]),
      style: {
        padding: "0.1em"
      }
    }, "↑", 40, D9), Ne("span", null, Xe(we.index + 1) + "/" + Xe(we.indexes.length), 1), Ne("span", {
      class: "hover-color-blue",
      onMousedown: hr(Pt, ["prevent", "stop"])
    }, "替换选中", 40, F9), Ne("span", {
      class: "hover-color-blue",
      onMousedown: hr(_i, ["prevent", "stop"])
    }, "替换全部", 40, $9)])])), [[Un, v("replace")], [it(_s)]]), Ir((qe(), Ge("div", {
      ref_key: "outlineBox",
      ref: o,
      class: "outline-box floating-card"
    }, [Ne("span", {
      class: "iconfont icon-close",
      onMousedown: W[5] || (W[5] = hr((q) => S("outline", !1), ["prevent", "stop"]))
    }, null, 32), q0(zc, {
      target: i.value,
      click: () => {
        xs(ce) ? ce.value = "preview" : ce = "preview";
      }
    }, null, 8, ["target", "click"])])), [[Un, v("outline")], [it(_s)]]), Ne("div", {
      class: vs(["container", it(l)])
    }, [Ir(Ne("textarea", {
      style: ji([!it(C) && it(N) ? "position: absolute; visibility: hidden;" : ""]),
      ref_key: "textarea",
      ref: n,
      "onUpdate:modelValue": W[6] || (W[6] = (q) => u.text = q),
      placeholder: r.placeholder,
      class: "edit-card",
      onKeydown: _e,
      onMouseup: Me,
      onMouseover: W[7] || (W[7] = () => {
        xs(ce) ? ce.value = "textarea" : ce = "textarea";
      })
    }, `\r
			`, 44, z9), [[ys, u.text]]), Ne("div", {
      ref_key: "previewCard",
      ref: i,
      class: "preview-card",
      onMouseover: W[8] || (W[8] = () => {
        xs(ce) ? ce.value = "preview" : ce = "preview";
      })
    }, [q0(a1, {
      "markdown-text": u.text
    }, null, 8, ["markdown-text"])], 544), Ne("div", {
      ref_key: "textareaCountLine",
      ref: Re,
      style: ji([{
        visibility: "hidden",
        "white-space": "pre-wrap",
        "overflow-wrap": "break-word",
        padding: "0.5em",
        border: "1px solid #eee"
      }, it(bt)]),
      textContent: Xe(it(sr))
    }, null, 12, P9)], 2), n.value !== void 0 ? (qe(), Ge("ul", U9, [Ne("li", null, "字数 " + Xe(u.text.length), 1), Ne("li", null, [b1(Xe(d.startPlace.y) + ":" + Xe(d.startPlace.x) + " ", 1), Ir(Ne("span", null, " 至 " + Xe(d.endPlace.y) + ":" + Xe(d.endPlace.x), 513), [[Un, d.selectLength > 0]])]), Ir(Ne("li", null, "选中 " + Xe(d.selectLength), 513), [[Un, d.selectLength > 0]])])) : Ci("", !0)], 2), r.debug ? (qe(), Ge("div", H9, [Ne("div", null, "当前类别：" + Xe(it(se)), 1), it(te).stack.length > 0 ? (qe(), Ge("div", q9, "当前栈顶：" + Xe(it(te).stackTop) + ' "' + Xe(it(ae).text) + '"', 1)) : Ci("", !0), (qe(!0), Ge(mr, null, bn(it(te).stack, (q, ye) => (qe(), Ge("ul", null, [Ne("li", null, Xe(ye) + ' "' + Xe(q.text) + '" start: ' + Xe(q.start) + " end: " + Xe(q.end), 1)]))), 256))])) : Ci("", !0)], 64));
  }
});
const j9 = /* @__PURE__ */ $c(W9, [["__scopeId", "data-v-ef5d7fe8"]]), o1 = [a1, j9, zc], l1 = function(e) {
  o1.forEach((t) => {
    e.component(t.name, t);
  });
};
typeof window < "u" && window.Vue && l1(window.Vue);
const px = {
  install: l1,
  ...o1
};
export {
  I0 as $,
  ah as A,
  W5 as B,
  Qm as C,
  gd as D,
  dv as E,
  Nv as F,
  h0 as G,
  Ch as H,
  vi as I,
  v2 as J,
  d0 as K,
  Nr as L,
  li as M,
  Zl as N,
  T2 as O,
  Ih as P,
  ex as Q,
  wt as R,
  ho as S,
  Tm as T,
  lx as U,
  C0 as V,
  dx as W,
  Et as X,
  Th as Y,
  Bg as Z,
  Lv as _,
  ch as a,
  yi as a0,
  La as a1,
  I7 as a2,
  Qh as a3,
  Dn as a4,
  K3 as a5,
  L7 as a6,
  E7 as a7,
  D7 as a8,
  d8 as a9,
  ox as aA,
  ax as aB,
  tx as aC,
  rx as aD,
  ux as aE,
  cx as aF,
  ix as aG,
  kr as aH,
  xe as aI,
  px as aJ,
  h7 as aa,
  Ad as ab,
  xi as ac,
  s7 as ad,
  Fn as ae,
  Oa as af,
  dn as ag,
  Wr as ah,
  w7 as ai,
  Ic as aj,
  l8 as ak,
  Rd as al,
  Oo as am,
  ha as an,
  X9 as ao,
  ai as ap,
  c9 as aq,
  vg as ar,
  md as as,
  pe as at,
  be as au,
  g0 as av,
  nx as aw,
  sx as ax,
  ic as ay,
  nc as az,
  lh as b,
  Er as c,
  ii as d,
  lt as e,
  za as f,
  oh as g,
  Zt as h,
  nv as i,
  dh as j,
  i0 as k,
  re as l,
  cn as m,
  $v as n,
  Rv as o,
  Zu as p,
  Sv as q,
  H5 as r,
  sh as s,
  iv as t,
  mg as u,
  ed as v,
  Dv as w,
  oa as x,
  uh as y,
  hh as z
};
